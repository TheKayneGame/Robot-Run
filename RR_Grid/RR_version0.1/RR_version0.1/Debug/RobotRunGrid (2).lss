
RobotRunGrid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000007b4  00000828  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000838  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000868  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000008a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b92  00000000  00000000  00000930  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000885  00000000  00000000  000014c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000433  00000000  00000000  00001d47  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000180  00000000  00000000  0000217c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000050d  00000000  00000000  000022fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000044b  00000000  00000000  00002809  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  00002c54  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 eb       	ldi	r30, 0xB4	; 180
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <main>
  8e:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <swapOne>:
	}
}
void followLine(){}                  //junkdef
void moveTurnRight(){}
void moveTurnLeft(){}
void moveForward(){}
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
  a2:	fb 01       	movw	r30, r22
  a4:	00 81       	ld	r16, Z
  a6:	11 81       	ldd	r17, Z+1	; 0x01
  a8:	22 81       	ldd	r18, Z+2	; 0x02
  aa:	33 81       	ldd	r19, Z+3	; 0x03
  ac:	fc 01       	movw	r30, r24
  ae:	c0 80       	ld	r12, Z
  b0:	d1 80       	ldd	r13, Z+1	; 0x01
  b2:	e2 80       	ldd	r14, Z+2	; 0x02
  b4:	f3 80       	ldd	r15, Z+3	; 0x03
  b6:	fb 01       	movw	r30, r22
  b8:	c0 82       	st	Z, r12
  ba:	d1 82       	std	Z+1, r13	; 0x01
  bc:	e2 82       	std	Z+2, r14	; 0x02
  be:	f3 82       	std	Z+3, r15	; 0x03
  c0:	fc 01       	movw	r30, r24
  c2:	00 83       	st	Z, r16
  c4:	11 83       	std	Z+1, r17	; 0x01
  c6:	22 83       	std	Z+2, r18	; 0x02
  c8:	33 83       	std	Z+3, r19	; 0x03
  ca:	1f 91       	pop	r17
  cc:	0f 91       	pop	r16
  ce:	ff 90       	pop	r15
  d0:	ef 90       	pop	r14
  d2:	df 90       	pop	r13
  d4:	cf 90       	pop	r12
  d6:	08 95       	ret

000000d8 <sortOrder>:
  d8:	2f 92       	push	r2
  da:	3f 92       	push	r3
  dc:	4f 92       	push	r4
  de:	5f 92       	push	r5
  e0:	6f 92       	push	r6
  e2:	7f 92       	push	r7
  e4:	8f 92       	push	r8
  e6:	9f 92       	push	r9
  e8:	af 92       	push	r10
  ea:	bf 92       	push	r11
  ec:	cf 92       	push	r12
  ee:	df 92       	push	r13
  f0:	ef 92       	push	r14
  f2:	ff 92       	push	r15
  f4:	0f 93       	push	r16
  f6:	1f 93       	push	r17
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
 100:	a5 97       	sbiw	r28, 0x25	; 37
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61
 10c:	9b a3       	std	Y+35, r25	; 0x23
 10e:	8a a3       	std	Y+34, r24	; 0x22
 110:	6c a3       	std	Y+36, r22	; 0x24
 112:	7d a3       	std	Y+37, r23	; 0x25
 114:	06 96       	adiw	r24, 0x06	; 6
 116:	98 a3       	std	Y+32, r25	; 0x20
 118:	8f 8f       	std	Y+31, r24	; 0x1f
 11a:	b6 c0       	rjmp	.+364    	; 0x288 <sortOrder+0x1b0>
 11c:	7e 8e       	std	Y+30, r7	; 0x1e
 11e:	6d 8e       	std	Y+29, r6	; 0x1d
 120:	f3 01       	movw	r30, r6
 122:	01 90       	ld	r0, Z+
 124:	f0 81       	ld	r31, Z
 126:	e0 2d       	mov	r30, r0
 128:	fa 8f       	std	Y+26, r31	; 0x1a
 12a:	e9 8f       	std	Y+25, r30	; 0x19
 12c:	bf 01       	movw	r22, r30
 12e:	ff 0f       	add	r31, r31
 130:	88 0b       	sbc	r24, r24
 132:	99 0b       	sbc	r25, r25
 134:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__floatsisf>
 138:	6b 01       	movw	r12, r22
 13a:	7c 01       	movw	r14, r24
 13c:	3c 8e       	std	Y+28, r3	; 0x1c
 13e:	2b 8e       	std	Y+27, r2	; 0x1b
 140:	f1 01       	movw	r30, r2
 142:	00 81       	ld	r16, Z
 144:	11 81       	ldd	r17, Z+1	; 0x01
 146:	b8 01       	movw	r22, r16
 148:	01 2e       	mov	r0, r17
 14a:	00 0c       	add	r0, r0
 14c:	88 0b       	sbc	r24, r24
 14e:	99 0b       	sbc	r25, r25
 150:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__floatsisf>
 154:	4b 01       	movw	r8, r22
 156:	5c 01       	movw	r10, r24
 158:	9b 01       	movw	r18, r22
 15a:	ac 01       	movw	r20, r24
 15c:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__mulsf3>
 160:	69 8b       	std	Y+17, r22	; 0x11
 162:	7a 8b       	std	Y+18, r23	; 0x12
 164:	8b 8b       	std	Y+19, r24	; 0x13
 166:	9c 8b       	std	Y+20, r25	; 0x14
 168:	a5 01       	movw	r20, r10
 16a:	94 01       	movw	r18, r8
 16c:	c5 01       	movw	r24, r10
 16e:	b4 01       	movw	r22, r8
 170:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__mulsf3>
 174:	4b 01       	movw	r8, r22
 176:	5c 01       	movw	r10, r24
 178:	a7 01       	movw	r20, r14
 17a:	96 01       	movw	r18, r12
 17c:	c7 01       	movw	r24, r14
 17e:	b6 01       	movw	r22, r12
 180:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <__mulsf3>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	c5 01       	movw	r24, r10
 18a:	b4 01       	movw	r22, r8
 18c:	0e 94 b7 01 	call	0x36e	; 0x36e <__addsf3>
 190:	0e 94 5f 03 	call	0x6be	; 0x6be <sqrt>
 194:	6b 01       	movw	r12, r22
 196:	7c 01       	movw	r14, r24
 198:	f2 01       	movw	r30, r4
 19a:	61 93       	st	Z+, r22
 19c:	71 93       	st	Z+, r23
 19e:	81 93       	st	Z+, r24
 1a0:	91 93       	st	Z+, r25
 1a2:	2f 01       	movw	r4, r30
 1a4:	e9 8b       	std	Y+17, r30	; 0x11
 1a6:	59 a2       	std	Y+33, r5	; 0x21
 1a8:	80 80       	ld	r8, Z
 1aa:	91 80       	ldd	r9, Z+1	; 0x01
 1ac:	a2 80       	ldd	r10, Z+2	; 0x02
 1ae:	b3 80       	ldd	r11, Z+3	; 0x03
 1b0:	a5 01       	movw	r20, r10
 1b2:	94 01       	movw	r18, r8
 1b4:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__gesf2>
 1b8:	18 16       	cp	r1, r24
 1ba:	d4 f4       	brge	.+52     	; 0x1f0 <sortOrder+0x118>
 1bc:	b2 01       	movw	r22, r4
 1be:	8d 89       	ldd	r24, Y+21	; 0x15
 1c0:	9e 89       	ldd	r25, Y+22	; 0x16
 1c2:	0e 94 4b 00 	call	0x96	; 0x96 <swapOne>
 1c6:	f3 01       	movw	r30, r6
 1c8:	82 81       	ldd	r24, Z+2	; 0x02
 1ca:	93 81       	ldd	r25, Z+3	; 0x03
 1cc:	20 81       	ld	r18, Z
 1ce:	31 81       	ldd	r19, Z+1	; 0x01
 1d0:	33 83       	std	Z+3, r19	; 0x03
 1d2:	22 83       	std	Z+2, r18	; 0x02
 1d4:	91 83       	std	Z+1, r25	; 0x01
 1d6:	80 83       	st	Z, r24
 1d8:	f1 01       	movw	r30, r2
 1da:	82 81       	ldd	r24, Z+2	; 0x02
 1dc:	93 81       	ldd	r25, Z+3	; 0x03
 1de:	20 81       	ld	r18, Z
 1e0:	31 81       	ldd	r19, Z+1	; 0x01
 1e2:	33 83       	std	Z+3, r19	; 0x03
 1e4:	22 83       	std	Z+2, r18	; 0x02
 1e6:	91 83       	std	Z+1, r25	; 0x01
 1e8:	80 83       	st	Z, r24
 1ea:	1f 8a       	std	Y+23, r1	; 0x17
 1ec:	18 8e       	std	Y+24, r1	; 0x18
 1ee:	36 c0       	rjmp	.+108    	; 0x25c <sortOrder+0x184>
 1f0:	c7 01       	movw	r24, r14
 1f2:	b6 01       	movw	r22, r12
 1f4:	0e 94 23 02 	call	0x446	; 0x446 <__fixsfsi>
 1f8:	7b 01       	movw	r14, r22
 1fa:	c5 01       	movw	r24, r10
 1fc:	b4 01       	movw	r22, r8
 1fe:	0e 94 23 02 	call	0x446	; 0x446 <__fixsfsi>
 202:	e6 16       	cp	r14, r22
 204:	f7 06       	cpc	r15, r23
 206:	51 f5       	brne	.+84     	; 0x25c <sortOrder+0x184>
 208:	eb 8d       	ldd	r30, Y+27	; 0x1b
 20a:	fc 8d       	ldd	r31, Y+28	; 0x1c
 20c:	82 81       	ldd	r24, Z+2	; 0x02
 20e:	93 81       	ldd	r25, Z+3	; 0x03
 210:	08 17       	cp	r16, r24
 212:	19 07       	cpc	r17, r25
 214:	19 f5       	brne	.+70     	; 0x25c <sortOrder+0x184>
 216:	ed 8d       	ldd	r30, Y+29	; 0x1d
 218:	fe 8d       	ldd	r31, Y+30	; 0x1e
 21a:	82 81       	ldd	r24, Z+2	; 0x02
 21c:	93 81       	ldd	r25, Z+3	; 0x03
 21e:	29 8d       	ldd	r18, Y+25	; 0x19
 220:	3a 8d       	ldd	r19, Y+26	; 0x1a
 222:	28 17       	cp	r18, r24
 224:	39 07       	cpc	r19, r25
 226:	d4 f4       	brge	.+52     	; 0x25c <sortOrder+0x184>
 228:	69 89       	ldd	r22, Y+17	; 0x11
 22a:	79 a1       	ldd	r23, Y+33	; 0x21
 22c:	8d 89       	ldd	r24, Y+21	; 0x15
 22e:	9e 89       	ldd	r25, Y+22	; 0x16
 230:	0e 94 4b 00 	call	0x96	; 0x96 <swapOne>
 234:	ed 8d       	ldd	r30, Y+29	; 0x1d
 236:	fe 8d       	ldd	r31, Y+30	; 0x1e
 238:	82 81       	ldd	r24, Z+2	; 0x02
 23a:	93 81       	ldd	r25, Z+3	; 0x03
 23c:	20 81       	ld	r18, Z
 23e:	31 81       	ldd	r19, Z+1	; 0x01
 240:	33 83       	std	Z+3, r19	; 0x03
 242:	22 83       	std	Z+2, r18	; 0x02
 244:	91 83       	std	Z+1, r25	; 0x01
 246:	80 83       	st	Z, r24
 248:	eb 8d       	ldd	r30, Y+27	; 0x1b
 24a:	fc 8d       	ldd	r31, Y+28	; 0x1c
 24c:	82 81       	ldd	r24, Z+2	; 0x02
 24e:	93 81       	ldd	r25, Z+3	; 0x03
 250:	20 81       	ld	r18, Z
 252:	31 81       	ldd	r19, Z+1	; 0x01
 254:	33 83       	std	Z+3, r19	; 0x03
 256:	22 83       	std	Z+2, r18	; 0x02
 258:	91 83       	std	Z+1, r25	; 0x01
 25a:	80 83       	st	Z, r24
 25c:	f2 e0       	ldi	r31, 0x02	; 2
 25e:	6f 0e       	add	r6, r31
 260:	71 1c       	adc	r7, r1
 262:	22 e0       	ldi	r18, 0x02	; 2
 264:	22 0e       	add	r2, r18
 266:	31 1c       	adc	r3, r1
 268:	8d 89       	ldd	r24, Y+21	; 0x15
 26a:	9e 89       	ldd	r25, Y+22	; 0x16
 26c:	04 96       	adiw	r24, 0x04	; 4
 26e:	9e 8b       	std	Y+22, r25	; 0x16
 270:	8d 8b       	std	Y+21, r24	; 0x15
 272:	ef 8d       	ldd	r30, Y+31	; 0x1f
 274:	f8 a1       	ldd	r31, Y+32	; 0x20
 276:	6e 16       	cp	r6, r30
 278:	7f 06       	cpc	r7, r31
 27a:	09 f0       	breq	.+2      	; 0x27e <sortOrder+0x1a6>
 27c:	4f cf       	rjmp	.-354    	; 0x11c <sortOrder+0x44>
 27e:	2f 89       	ldd	r18, Y+23	; 0x17
 280:	38 8d       	ldd	r19, Y+24	; 0x18
 282:	21 30       	cpi	r18, 0x01	; 1
 284:	31 05       	cpc	r19, r1
 286:	69 f0       	breq	.+26     	; 0x2a2 <sortOrder+0x1ca>
 288:	6a a0       	ldd	r6, Y+34	; 0x22
 28a:	7b a0       	ldd	r7, Y+35	; 0x23
 28c:	2c a0       	ldd	r2, Y+36	; 0x24
 28e:	3d a0       	ldd	r3, Y+37	; 0x25
 290:	ce 01       	movw	r24, r28
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	2c 01       	movw	r4, r24
 296:	9e 8b       	std	Y+22, r25	; 0x16
 298:	8d 8b       	std	Y+21, r24	; 0x15
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	9f 8b       	std	Y+23, r25	; 0x17
 29e:	18 8e       	std	Y+24, r1	; 0x18
 2a0:	3d cf       	rjmp	.-390    	; 0x11c <sortOrder+0x44>
 2a2:	a5 96       	adiw	r28, 0x25	; 37
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	1f 91       	pop	r17
 2b4:	0f 91       	pop	r16
 2b6:	ff 90       	pop	r15
 2b8:	ef 90       	pop	r14
 2ba:	df 90       	pop	r13
 2bc:	cf 90       	pop	r12
 2be:	bf 90       	pop	r11
 2c0:	af 90       	pop	r10
 2c2:	9f 90       	pop	r9
 2c4:	8f 90       	pop	r8
 2c6:	7f 90       	pop	r7
 2c8:	6f 90       	pop	r6
 2ca:	5f 90       	pop	r5
 2cc:	4f 90       	pop	r4
 2ce:	3f 90       	pop	r3
 2d0:	2f 90       	pop	r2
 2d2:	08 95       	ret

000002d4 <readGrid>:

int readGrid(int routes[4][20]){
	int i = 1, checkintersect = 0, grid = 0;
	int resultTemp;
	routes[1][0] = 5;
 2d4:	25 e0       	ldi	r18, 0x05	; 5
 2d6:	30 e0       	ldi	r19, 0x00	; 0
 2d8:	fc 01       	movw	r30, r24
 2da:	31 a7       	std	Z+41, r19	; 0x29
 2dc:	20 a7       	std	Z+40, r18	; 0x28
 2de:	ff cf       	rjmp	.-2      	; 0x2de <readGrid+0xa>

000002e0 <driveRoute>:
		}
	}while(grid == 0);
	return i;                                                                                     //returns intersect count, so amount of intersects on route
}

void driveRoute(int route[4][20], int flag, int flagReturn, int max){                             //go to or return from, grid or chargepoint
 2e0:	ff cf       	rjmp	.-2      	; 0x2e0 <driveRoute>

000002e2 <main>:
 Y = motor 2
 */

#include "Grid.h"

int main(){
 2e2:	0f 93       	push	r16
 2e4:	1f 93       	push	r17
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	cd b7       	in	r28, 0x3d	; 61
 2ec:	de b7       	in	r29, 0x3e	; 62
 2ee:	c0 5b       	subi	r28, 0xB0	; 176
 2f0:	d1 09       	sbc	r29, r1
 2f2:	0f b6       	in	r0, 0x3f	; 63
 2f4:	f8 94       	cli
 2f6:	de bf       	out	0x3e, r29	; 62
 2f8:	0f be       	out	0x3f, r0	; 63
 2fa:	cd bf       	out	0x3d, r28	; 61
	int amountOfIntersects = 0;
	int routes[4][20];
    amountOfIntersects = readGrid(routes);
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 96       	adiw	r24, 0x01	; 1
 300:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <readGrid>
 304:	8c 01       	movw	r16, r24
	int orderX[sizeOfOrder] = { 2, 5, 3, 4};    // replace with user input
 306:	88 e0       	ldi	r24, 0x08	; 8
 308:	e0 e0       	ldi	r30, 0x00	; 0
 30a:	f1 e0       	ldi	r31, 0x01	; 1
 30c:	de 01       	movw	r26, r28
 30e:	af 55       	subi	r26, 0x5F	; 95
 310:	bf 4f       	sbci	r27, 0xFF	; 255
 312:	01 90       	ld	r0, Z+
 314:	0d 92       	st	X+, r0
 316:	8a 95       	dec	r24
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0x30>
	int orderY[sizeOfOrder] = { 3, 1, 4, 2};    // replace with user input
 31a:	88 e0       	ldi	r24, 0x08	; 8
 31c:	e8 e0       	ldi	r30, 0x08	; 8
 31e:	f1 e0       	ldi	r31, 0x01	; 1
 320:	de 01       	movw	r26, r28
 322:	a7 55       	subi	r26, 0x57	; 87
 324:	bf 4f       	sbci	r27, 0xFF	; 255
 326:	01 90       	ld	r0, Z+
 328:	0d 92       	st	X+, r0
 32a:	8a 95       	dec	r24
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0x44>
	sortOrder(orderX, orderY);
 32e:	be 01       	movw	r22, r28
 330:	67 55       	subi	r22, 0x57	; 87
 332:	7f 4f       	sbci	r23, 0xFF	; 255
 334:	ce 01       	movw	r24, r28
 336:	8f 55       	subi	r24, 0x5F	; 95
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	0e 94 6c 00 	call	0xd8	; 0xd8 <sortOrder>
	driveRoute(routes, 1, 0, amountOfIntersects);	
 33e:	98 01       	movw	r18, r16
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	50 e0       	ldi	r21, 0x00	; 0
 344:	61 e0       	ldi	r22, 0x01	; 1
 346:	70 e0       	ldi	r23, 0x00	; 0
 348:	ce 01       	movw	r24, r28
 34a:	01 96       	adiw	r24, 0x01	; 1
 34c:	0e 94 70 01 	call	0x2e0	; 0x2e0 <driveRoute>
				
 350:	80 e0       	ldi	r24, 0x00	; 0
 352:	90 e0       	ldi	r25, 0x00	; 0
 354:	c0 55       	subi	r28, 0x50	; 80
 356:	df 4f       	sbci	r29, 0xFF	; 255
 358:	0f b6       	in	r0, 0x3f	; 63
 35a:	f8 94       	cli
 35c:	de bf       	out	0x3e, r29	; 62
 35e:	0f be       	out	0x3f, r0	; 63
 360:	cd bf       	out	0x3d, r28	; 61
 362:	df 91       	pop	r29
 364:	cf 91       	pop	r28
 366:	1f 91       	pop	r17
 368:	0f 91       	pop	r16
 36a:	08 95       	ret

0000036c <__subsf3>:
 36c:	50 58       	subi	r21, 0x80	; 128

0000036e <__addsf3>:
 36e:	bb 27       	eor	r27, r27
 370:	aa 27       	eor	r26, r26
 372:	0e 94 ce 01 	call	0x39c	; 0x39c <__addsf3x>
 376:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_round>
 37a:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_pscA>
 37e:	38 f0       	brcs	.+14     	; 0x38e <__addsf3+0x20>
 380:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscB>
 384:	20 f0       	brcs	.+8      	; 0x38e <__addsf3+0x20>
 386:	39 f4       	brne	.+14     	; 0x396 <__addsf3+0x28>
 388:	9f 3f       	cpi	r25, 0xFF	; 255
 38a:	19 f4       	brne	.+6      	; 0x392 <__addsf3+0x24>
 38c:	26 f4       	brtc	.+8      	; 0x396 <__addsf3+0x28>
 38e:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>
 392:	0e f4       	brtc	.+2      	; 0x396 <__addsf3+0x28>
 394:	e0 95       	com	r30
 396:	e7 fb       	bst	r30, 7
 398:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>

0000039c <__addsf3x>:
 39c:	e9 2f       	mov	r30, r25
 39e:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_split3>
 3a2:	58 f3       	brcs	.-42     	; 0x37a <__addsf3+0xc>
 3a4:	ba 17       	cp	r27, r26
 3a6:	62 07       	cpc	r22, r18
 3a8:	73 07       	cpc	r23, r19
 3aa:	84 07       	cpc	r24, r20
 3ac:	95 07       	cpc	r25, r21
 3ae:	20 f0       	brcs	.+8      	; 0x3b8 <__addsf3x+0x1c>
 3b0:	79 f4       	brne	.+30     	; 0x3d0 <__addsf3x+0x34>
 3b2:	a6 f5       	brtc	.+104    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3b4:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_zero>
 3b8:	0e f4       	brtc	.+2      	; 0x3bc <__addsf3x+0x20>
 3ba:	e0 95       	com	r30
 3bc:	0b 2e       	mov	r0, r27
 3be:	ba 2f       	mov	r27, r26
 3c0:	a0 2d       	mov	r26, r0
 3c2:	0b 01       	movw	r0, r22
 3c4:	b9 01       	movw	r22, r18
 3c6:	90 01       	movw	r18, r0
 3c8:	0c 01       	movw	r0, r24
 3ca:	ca 01       	movw	r24, r20
 3cc:	a0 01       	movw	r20, r0
 3ce:	11 24       	eor	r1, r1
 3d0:	ff 27       	eor	r31, r31
 3d2:	59 1b       	sub	r21, r25
 3d4:	99 f0       	breq	.+38     	; 0x3fc <__addsf3x+0x60>
 3d6:	59 3f       	cpi	r21, 0xF9	; 249
 3d8:	50 f4       	brcc	.+20     	; 0x3ee <__addsf3x+0x52>
 3da:	50 3e       	cpi	r21, 0xE0	; 224
 3dc:	68 f1       	brcs	.+90     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 3de:	1a 16       	cp	r1, r26
 3e0:	f0 40       	sbci	r31, 0x00	; 0
 3e2:	a2 2f       	mov	r26, r18
 3e4:	23 2f       	mov	r18, r19
 3e6:	34 2f       	mov	r19, r20
 3e8:	44 27       	eor	r20, r20
 3ea:	58 5f       	subi	r21, 0xF8	; 248
 3ec:	f3 cf       	rjmp	.-26     	; 0x3d4 <__addsf3x+0x38>
 3ee:	46 95       	lsr	r20
 3f0:	37 95       	ror	r19
 3f2:	27 95       	ror	r18
 3f4:	a7 95       	ror	r26
 3f6:	f0 40       	sbci	r31, 0x00	; 0
 3f8:	53 95       	inc	r21
 3fa:	c9 f7       	brne	.-14     	; 0x3ee <__addsf3x+0x52>
 3fc:	7e f4       	brtc	.+30     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fe:	1f 16       	cp	r1, r31
 400:	ba 0b       	sbc	r27, r26
 402:	62 0b       	sbc	r22, r18
 404:	73 0b       	sbc	r23, r19
 406:	84 0b       	sbc	r24, r20
 408:	ba f0       	brmi	.+46     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 40a:	91 50       	subi	r25, 0x01	; 1
 40c:	a1 f0       	breq	.+40     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 40e:	ff 0f       	add	r31, r31
 410:	bb 1f       	adc	r27, r27
 412:	66 1f       	adc	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	c2 f7       	brpl	.-16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 41a:	0e c0       	rjmp	.+28     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 41c:	ba 0f       	add	r27, r26
 41e:	62 1f       	adc	r22, r18
 420:	73 1f       	adc	r23, r19
 422:	84 1f       	adc	r24, r20
 424:	48 f4       	brcc	.+18     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 426:	87 95       	ror	r24
 428:	77 95       	ror	r23
 42a:	67 95       	ror	r22
 42c:	b7 95       	ror	r27
 42e:	f7 95       	ror	r31
 430:	9e 3f       	cpi	r25, 0xFE	; 254
 432:	08 f0       	brcs	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 434:	b0 cf       	rjmp	.-160    	; 0x396 <__addsf3+0x28>
 436:	93 95       	inc	r25
 438:	88 0f       	add	r24, r24
 43a:	08 f0       	brcs	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 43c:	99 27       	eor	r25, r25
 43e:	ee 0f       	add	r30, r30
 440:	97 95       	ror	r25
 442:	87 95       	ror	r24
 444:	08 95       	ret

00000446 <__fixsfsi>:
 446:	0e 94 2a 02 	call	0x454	; 0x454 <__fixunssfsi>
 44a:	68 94       	set
 44c:	b1 11       	cpse	r27, r1
 44e:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 452:	08 95       	ret

00000454 <__fixunssfsi>:
 454:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_splitA>
 458:	88 f0       	brcs	.+34     	; 0x47c <__fixunssfsi+0x28>
 45a:	9f 57       	subi	r25, 0x7F	; 127
 45c:	98 f0       	brcs	.+38     	; 0x484 <__fixunssfsi+0x30>
 45e:	b9 2f       	mov	r27, r25
 460:	99 27       	eor	r25, r25
 462:	b7 51       	subi	r27, 0x17	; 23
 464:	b0 f0       	brcs	.+44     	; 0x492 <__fixunssfsi+0x3e>
 466:	e1 f0       	breq	.+56     	; 0x4a0 <__fixunssfsi+0x4c>
 468:	66 0f       	add	r22, r22
 46a:	77 1f       	adc	r23, r23
 46c:	88 1f       	adc	r24, r24
 46e:	99 1f       	adc	r25, r25
 470:	1a f0       	brmi	.+6      	; 0x478 <__fixunssfsi+0x24>
 472:	ba 95       	dec	r27
 474:	c9 f7       	brne	.-14     	; 0x468 <__fixunssfsi+0x14>
 476:	14 c0       	rjmp	.+40     	; 0x4a0 <__fixunssfsi+0x4c>
 478:	b1 30       	cpi	r27, 0x01	; 1
 47a:	91 f0       	breq	.+36     	; 0x4a0 <__fixunssfsi+0x4c>
 47c:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_zero>
 480:	b1 e0       	ldi	r27, 0x01	; 1
 482:	08 95       	ret
 484:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__fp_zero>
 488:	67 2f       	mov	r22, r23
 48a:	78 2f       	mov	r23, r24
 48c:	88 27       	eor	r24, r24
 48e:	b8 5f       	subi	r27, 0xF8	; 248
 490:	39 f0       	breq	.+14     	; 0x4a0 <__fixunssfsi+0x4c>
 492:	b9 3f       	cpi	r27, 0xF9	; 249
 494:	cc f3       	brlt	.-14     	; 0x488 <__fixunssfsi+0x34>
 496:	86 95       	lsr	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b3 95       	inc	r27
 49e:	d9 f7       	brne	.-10     	; 0x496 <__fixunssfsi+0x42>
 4a0:	3e f4       	brtc	.+14     	; 0x4b0 <__fixunssfsi+0x5c>
 4a2:	90 95       	com	r25
 4a4:	80 95       	com	r24
 4a6:	70 95       	com	r23
 4a8:	61 95       	neg	r22
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	08 95       	ret

000004b2 <__floatunsisf>:
 4b2:	e8 94       	clt
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__floatsisf+0x12>

000004b6 <__floatsisf>:
 4b6:	97 fb       	bst	r25, 7
 4b8:	3e f4       	brtc	.+14     	; 0x4c8 <__floatsisf+0x12>
 4ba:	90 95       	com	r25
 4bc:	80 95       	com	r24
 4be:	70 95       	com	r23
 4c0:	61 95       	neg	r22
 4c2:	7f 4f       	sbci	r23, 0xFF	; 255
 4c4:	8f 4f       	sbci	r24, 0xFF	; 255
 4c6:	9f 4f       	sbci	r25, 0xFF	; 255
 4c8:	99 23       	and	r25, r25
 4ca:	a9 f0       	breq	.+42     	; 0x4f6 <__floatsisf+0x40>
 4cc:	f9 2f       	mov	r31, r25
 4ce:	96 e9       	ldi	r25, 0x96	; 150
 4d0:	bb 27       	eor	r27, r27
 4d2:	93 95       	inc	r25
 4d4:	f6 95       	lsr	r31
 4d6:	87 95       	ror	r24
 4d8:	77 95       	ror	r23
 4da:	67 95       	ror	r22
 4dc:	b7 95       	ror	r27
 4de:	f1 11       	cpse	r31, r1
 4e0:	f8 cf       	rjmp	.-16     	; 0x4d2 <__floatsisf+0x1c>
 4e2:	fa f4       	brpl	.+62     	; 0x522 <__floatsisf+0x6c>
 4e4:	bb 0f       	add	r27, r27
 4e6:	11 f4       	brne	.+4      	; 0x4ec <__floatsisf+0x36>
 4e8:	60 ff       	sbrs	r22, 0
 4ea:	1b c0       	rjmp	.+54     	; 0x522 <__floatsisf+0x6c>
 4ec:	6f 5f       	subi	r22, 0xFF	; 255
 4ee:	7f 4f       	sbci	r23, 0xFF	; 255
 4f0:	8f 4f       	sbci	r24, 0xFF	; 255
 4f2:	9f 4f       	sbci	r25, 0xFF	; 255
 4f4:	16 c0       	rjmp	.+44     	; 0x522 <__floatsisf+0x6c>
 4f6:	88 23       	and	r24, r24
 4f8:	11 f0       	breq	.+4      	; 0x4fe <__floatsisf+0x48>
 4fa:	96 e9       	ldi	r25, 0x96	; 150
 4fc:	11 c0       	rjmp	.+34     	; 0x520 <__floatsisf+0x6a>
 4fe:	77 23       	and	r23, r23
 500:	21 f0       	breq	.+8      	; 0x50a <__floatsisf+0x54>
 502:	9e e8       	ldi	r25, 0x8E	; 142
 504:	87 2f       	mov	r24, r23
 506:	76 2f       	mov	r23, r22
 508:	05 c0       	rjmp	.+10     	; 0x514 <__floatsisf+0x5e>
 50a:	66 23       	and	r22, r22
 50c:	71 f0       	breq	.+28     	; 0x52a <__floatsisf+0x74>
 50e:	96 e8       	ldi	r25, 0x86	; 134
 510:	86 2f       	mov	r24, r22
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	60 e0       	ldi	r22, 0x00	; 0
 516:	2a f0       	brmi	.+10     	; 0x522 <__floatsisf+0x6c>
 518:	9a 95       	dec	r25
 51a:	66 0f       	add	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	da f7       	brpl	.-10     	; 0x518 <__floatsisf+0x62>
 522:	88 0f       	add	r24, r24
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret

0000052c <__fp_inf>:
 52c:	97 f9       	bld	r25, 7
 52e:	9f 67       	ori	r25, 0x7F	; 127
 530:	80 e8       	ldi	r24, 0x80	; 128
 532:	70 e0       	ldi	r23, 0x00	; 0
 534:	60 e0       	ldi	r22, 0x00	; 0
 536:	08 95       	ret

00000538 <__fp_nan>:
 538:	9f ef       	ldi	r25, 0xFF	; 255
 53a:	80 ec       	ldi	r24, 0xC0	; 192
 53c:	08 95       	ret

0000053e <__fp_pscA>:
 53e:	00 24       	eor	r0, r0
 540:	0a 94       	dec	r0
 542:	16 16       	cp	r1, r22
 544:	17 06       	cpc	r1, r23
 546:	18 06       	cpc	r1, r24
 548:	09 06       	cpc	r0, r25
 54a:	08 95       	ret

0000054c <__fp_pscB>:
 54c:	00 24       	eor	r0, r0
 54e:	0a 94       	dec	r0
 550:	12 16       	cp	r1, r18
 552:	13 06       	cpc	r1, r19
 554:	14 06       	cpc	r1, r20
 556:	05 06       	cpc	r0, r21
 558:	08 95       	ret

0000055a <__fp_round>:
 55a:	09 2e       	mov	r0, r25
 55c:	03 94       	inc	r0
 55e:	00 0c       	add	r0, r0
 560:	11 f4       	brne	.+4      	; 0x566 <__fp_round+0xc>
 562:	88 23       	and	r24, r24
 564:	52 f0       	brmi	.+20     	; 0x57a <__fp_round+0x20>
 566:	bb 0f       	add	r27, r27
 568:	40 f4       	brcc	.+16     	; 0x57a <__fp_round+0x20>
 56a:	bf 2b       	or	r27, r31
 56c:	11 f4       	brne	.+4      	; 0x572 <__fp_round+0x18>
 56e:	60 ff       	sbrs	r22, 0
 570:	04 c0       	rjmp	.+8      	; 0x57a <__fp_round+0x20>
 572:	6f 5f       	subi	r22, 0xFF	; 255
 574:	7f 4f       	sbci	r23, 0xFF	; 255
 576:	8f 4f       	sbci	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	08 95       	ret

0000057c <__fp_split3>:
 57c:	57 fd       	sbrc	r21, 7
 57e:	90 58       	subi	r25, 0x80	; 128
 580:	44 0f       	add	r20, r20
 582:	55 1f       	adc	r21, r21
 584:	59 f0       	breq	.+22     	; 0x59c <__fp_splitA+0x10>
 586:	5f 3f       	cpi	r21, 0xFF	; 255
 588:	71 f0       	breq	.+28     	; 0x5a6 <__fp_splitA+0x1a>
 58a:	47 95       	ror	r20

0000058c <__fp_splitA>:
 58c:	88 0f       	add	r24, r24
 58e:	97 fb       	bst	r25, 7
 590:	99 1f       	adc	r25, r25
 592:	61 f0       	breq	.+24     	; 0x5ac <__fp_splitA+0x20>
 594:	9f 3f       	cpi	r25, 0xFF	; 255
 596:	79 f0       	breq	.+30     	; 0x5b6 <__fp_splitA+0x2a>
 598:	87 95       	ror	r24
 59a:	08 95       	ret
 59c:	12 16       	cp	r1, r18
 59e:	13 06       	cpc	r1, r19
 5a0:	14 06       	cpc	r1, r20
 5a2:	55 1f       	adc	r21, r21
 5a4:	f2 cf       	rjmp	.-28     	; 0x58a <__fp_split3+0xe>
 5a6:	46 95       	lsr	r20
 5a8:	f1 df       	rcall	.-30     	; 0x58c <__fp_splitA>
 5aa:	08 c0       	rjmp	.+16     	; 0x5bc <__fp_splitA+0x30>
 5ac:	16 16       	cp	r1, r22
 5ae:	17 06       	cpc	r1, r23
 5b0:	18 06       	cpc	r1, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	f1 cf       	rjmp	.-30     	; 0x598 <__fp_splitA+0xc>
 5b6:	86 95       	lsr	r24
 5b8:	71 05       	cpc	r23, r1
 5ba:	61 05       	cpc	r22, r1
 5bc:	08 94       	sec
 5be:	08 95       	ret

000005c0 <__fp_zero>:
 5c0:	e8 94       	clt

000005c2 <__fp_szero>:
 5c2:	bb 27       	eor	r27, r27
 5c4:	66 27       	eor	r22, r22
 5c6:	77 27       	eor	r23, r23
 5c8:	cb 01       	movw	r24, r22
 5ca:	97 f9       	bld	r25, 7
 5cc:	08 95       	ret

000005ce <__gesf2>:
 5ce:	0e 94 9f 03 	call	0x73e	; 0x73e <__fp_cmp>
 5d2:	08 f4       	brcc	.+2      	; 0x5d6 <__gesf2+0x8>
 5d4:	8f ef       	ldi	r24, 0xFF	; 255
 5d6:	08 95       	ret

000005d8 <__mulsf3>:
 5d8:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__mulsf3x>
 5dc:	0c 94 ad 02 	jmp	0x55a	; 0x55a <__fp_round>
 5e0:	0e 94 9f 02 	call	0x53e	; 0x53e <__fp_pscA>
 5e4:	38 f0       	brcs	.+14     	; 0x5f4 <__mulsf3+0x1c>
 5e6:	0e 94 a6 02 	call	0x54c	; 0x54c <__fp_pscB>
 5ea:	20 f0       	brcs	.+8      	; 0x5f4 <__mulsf3+0x1c>
 5ec:	95 23       	and	r25, r21
 5ee:	11 f0       	breq	.+4      	; 0x5f4 <__mulsf3+0x1c>
 5f0:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 5f4:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>
 5f8:	11 24       	eor	r1, r1
 5fa:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>

000005fe <__mulsf3x>:
 5fe:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_split3>
 602:	70 f3       	brcs	.-36     	; 0x5e0 <__mulsf3+0x8>

00000604 <__mulsf3_pse>:
 604:	95 9f       	mul	r25, r21
 606:	c1 f3       	breq	.-16     	; 0x5f8 <__mulsf3+0x20>
 608:	95 0f       	add	r25, r21
 60a:	50 e0       	ldi	r21, 0x00	; 0
 60c:	55 1f       	adc	r21, r21
 60e:	62 9f       	mul	r22, r18
 610:	f0 01       	movw	r30, r0
 612:	72 9f       	mul	r23, r18
 614:	bb 27       	eor	r27, r27
 616:	f0 0d       	add	r31, r0
 618:	b1 1d       	adc	r27, r1
 61a:	63 9f       	mul	r22, r19
 61c:	aa 27       	eor	r26, r26
 61e:	f0 0d       	add	r31, r0
 620:	b1 1d       	adc	r27, r1
 622:	aa 1f       	adc	r26, r26
 624:	64 9f       	mul	r22, r20
 626:	66 27       	eor	r22, r22
 628:	b0 0d       	add	r27, r0
 62a:	a1 1d       	adc	r26, r1
 62c:	66 1f       	adc	r22, r22
 62e:	82 9f       	mul	r24, r18
 630:	22 27       	eor	r18, r18
 632:	b0 0d       	add	r27, r0
 634:	a1 1d       	adc	r26, r1
 636:	62 1f       	adc	r22, r18
 638:	73 9f       	mul	r23, r19
 63a:	b0 0d       	add	r27, r0
 63c:	a1 1d       	adc	r26, r1
 63e:	62 1f       	adc	r22, r18
 640:	83 9f       	mul	r24, r19
 642:	a0 0d       	add	r26, r0
 644:	61 1d       	adc	r22, r1
 646:	22 1f       	adc	r18, r18
 648:	74 9f       	mul	r23, r20
 64a:	33 27       	eor	r19, r19
 64c:	a0 0d       	add	r26, r0
 64e:	61 1d       	adc	r22, r1
 650:	23 1f       	adc	r18, r19
 652:	84 9f       	mul	r24, r20
 654:	60 0d       	add	r22, r0
 656:	21 1d       	adc	r18, r1
 658:	82 2f       	mov	r24, r18
 65a:	76 2f       	mov	r23, r22
 65c:	6a 2f       	mov	r22, r26
 65e:	11 24       	eor	r1, r1
 660:	9f 57       	subi	r25, 0x7F	; 127
 662:	50 40       	sbci	r21, 0x00	; 0
 664:	9a f0       	brmi	.+38     	; 0x68c <__mulsf3_pse+0x88>
 666:	f1 f0       	breq	.+60     	; 0x6a4 <__mulsf3_pse+0xa0>
 668:	88 23       	and	r24, r24
 66a:	4a f0       	brmi	.+18     	; 0x67e <__mulsf3_pse+0x7a>
 66c:	ee 0f       	add	r30, r30
 66e:	ff 1f       	adc	r31, r31
 670:	bb 1f       	adc	r27, r27
 672:	66 1f       	adc	r22, r22
 674:	77 1f       	adc	r23, r23
 676:	88 1f       	adc	r24, r24
 678:	91 50       	subi	r25, 0x01	; 1
 67a:	50 40       	sbci	r21, 0x00	; 0
 67c:	a9 f7       	brne	.-22     	; 0x668 <__mulsf3_pse+0x64>
 67e:	9e 3f       	cpi	r25, 0xFE	; 254
 680:	51 05       	cpc	r21, r1
 682:	80 f0       	brcs	.+32     	; 0x6a4 <__mulsf3_pse+0xa0>
 684:	0c 94 96 02 	jmp	0x52c	; 0x52c <__fp_inf>
 688:	0c 94 e1 02 	jmp	0x5c2	; 0x5c2 <__fp_szero>
 68c:	5f 3f       	cpi	r21, 0xFF	; 255
 68e:	e4 f3       	brlt	.-8      	; 0x688 <__mulsf3_pse+0x84>
 690:	98 3e       	cpi	r25, 0xE8	; 232
 692:	d4 f3       	brlt	.-12     	; 0x688 <__mulsf3_pse+0x84>
 694:	86 95       	lsr	r24
 696:	77 95       	ror	r23
 698:	67 95       	ror	r22
 69a:	b7 95       	ror	r27
 69c:	f7 95       	ror	r31
 69e:	e7 95       	ror	r30
 6a0:	9f 5f       	subi	r25, 0xFF	; 255
 6a2:	c1 f7       	brne	.-16     	; 0x694 <__mulsf3_pse+0x90>
 6a4:	fe 2b       	or	r31, r30
 6a6:	88 0f       	add	r24, r24
 6a8:	91 1d       	adc	r25, r1
 6aa:	96 95       	lsr	r25
 6ac:	87 95       	ror	r24
 6ae:	97 f9       	bld	r25, 7
 6b0:	08 95       	ret
 6b2:	19 f4       	brne	.+6      	; 0x6ba <__mulsf3_pse+0xb6>
 6b4:	16 f4       	brtc	.+4      	; 0x6ba <__mulsf3_pse+0xb6>
 6b6:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_nan>
 6ba:	0c 94 c3 03 	jmp	0x786	; 0x786 <__fp_mpack>

000006be <sqrt>:
 6be:	0e 94 c6 02 	call	0x58c	; 0x58c <__fp_splitA>
 6c2:	b8 f3       	brcs	.-18     	; 0x6b2 <__mulsf3_pse+0xae>
 6c4:	99 23       	and	r25, r25
 6c6:	c9 f3       	breq	.-14     	; 0x6ba <__mulsf3_pse+0xb6>
 6c8:	b6 f3       	brts	.-20     	; 0x6b6 <__mulsf3_pse+0xb2>
 6ca:	9f 57       	subi	r25, 0x7F	; 127
 6cc:	55 0b       	sbc	r21, r21
 6ce:	87 ff       	sbrs	r24, 7
 6d0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fp_norm2>
 6d4:	00 24       	eor	r0, r0
 6d6:	a0 e6       	ldi	r26, 0x60	; 96
 6d8:	40 ea       	ldi	r20, 0xA0	; 160
 6da:	90 01       	movw	r18, r0
 6dc:	80 58       	subi	r24, 0x80	; 128
 6de:	56 95       	lsr	r21
 6e0:	97 95       	ror	r25
 6e2:	28 f4       	brcc	.+10     	; 0x6ee <sqrt+0x30>
 6e4:	80 5c       	subi	r24, 0xC0	; 192
 6e6:	66 0f       	add	r22, r22
 6e8:	77 1f       	adc	r23, r23
 6ea:	88 1f       	adc	r24, r24
 6ec:	20 f0       	brcs	.+8      	; 0x6f6 <sqrt+0x38>
 6ee:	26 17       	cp	r18, r22
 6f0:	37 07       	cpc	r19, r23
 6f2:	48 07       	cpc	r20, r24
 6f4:	30 f4       	brcc	.+12     	; 0x702 <sqrt+0x44>
 6f6:	62 1b       	sub	r22, r18
 6f8:	73 0b       	sbc	r23, r19
 6fa:	84 0b       	sbc	r24, r20
 6fc:	20 29       	or	r18, r0
 6fe:	31 29       	or	r19, r1
 700:	4a 2b       	or	r20, r26
 702:	a6 95       	lsr	r26
 704:	17 94       	ror	r1
 706:	07 94       	ror	r0
 708:	20 25       	eor	r18, r0
 70a:	31 25       	eor	r19, r1
 70c:	4a 27       	eor	r20, r26
 70e:	58 f7       	brcc	.-42     	; 0x6e6 <sqrt+0x28>
 710:	66 0f       	add	r22, r22
 712:	77 1f       	adc	r23, r23
 714:	88 1f       	adc	r24, r24
 716:	20 f0       	brcs	.+8      	; 0x720 <sqrt+0x62>
 718:	26 17       	cp	r18, r22
 71a:	37 07       	cpc	r19, r23
 71c:	48 07       	cpc	r20, r24
 71e:	30 f4       	brcc	.+12     	; 0x72c <sqrt+0x6e>
 720:	62 0b       	sbc	r22, r18
 722:	73 0b       	sbc	r23, r19
 724:	84 0b       	sbc	r24, r20
 726:	20 0d       	add	r18, r0
 728:	31 1d       	adc	r19, r1
 72a:	41 1d       	adc	r20, r1
 72c:	a0 95       	com	r26
 72e:	81 f7       	brne	.-32     	; 0x710 <sqrt+0x52>
 730:	b9 01       	movw	r22, r18
 732:	84 2f       	mov	r24, r20
 734:	91 58       	subi	r25, 0x81	; 129
 736:	88 0f       	add	r24, r24
 738:	96 95       	lsr	r25
 73a:	87 95       	ror	r24
 73c:	08 95       	ret

0000073e <__fp_cmp>:
 73e:	99 0f       	add	r25, r25
 740:	00 08       	sbc	r0, r0
 742:	55 0f       	add	r21, r21
 744:	aa 0b       	sbc	r26, r26
 746:	e0 e8       	ldi	r30, 0x80	; 128
 748:	fe ef       	ldi	r31, 0xFE	; 254
 74a:	16 16       	cp	r1, r22
 74c:	17 06       	cpc	r1, r23
 74e:	e8 07       	cpc	r30, r24
 750:	f9 07       	cpc	r31, r25
 752:	c0 f0       	brcs	.+48     	; 0x784 <__fp_cmp+0x46>
 754:	12 16       	cp	r1, r18
 756:	13 06       	cpc	r1, r19
 758:	e4 07       	cpc	r30, r20
 75a:	f5 07       	cpc	r31, r21
 75c:	98 f0       	brcs	.+38     	; 0x784 <__fp_cmp+0x46>
 75e:	62 1b       	sub	r22, r18
 760:	73 0b       	sbc	r23, r19
 762:	84 0b       	sbc	r24, r20
 764:	95 0b       	sbc	r25, r21
 766:	39 f4       	brne	.+14     	; 0x776 <__fp_cmp+0x38>
 768:	0a 26       	eor	r0, r26
 76a:	61 f0       	breq	.+24     	; 0x784 <__fp_cmp+0x46>
 76c:	23 2b       	or	r18, r19
 76e:	24 2b       	or	r18, r20
 770:	25 2b       	or	r18, r21
 772:	21 f4       	brne	.+8      	; 0x77c <__fp_cmp+0x3e>
 774:	08 95       	ret
 776:	0a 26       	eor	r0, r26
 778:	09 f4       	brne	.+2      	; 0x77c <__fp_cmp+0x3e>
 77a:	a1 40       	sbci	r26, 0x01	; 1
 77c:	a6 95       	lsr	r26
 77e:	8f ef       	ldi	r24, 0xFF	; 255
 780:	81 1d       	adc	r24, r1
 782:	81 1d       	adc	r24, r1
 784:	08 95       	ret

00000786 <__fp_mpack>:
 786:	9f 3f       	cpi	r25, 0xFF	; 255
 788:	31 f0       	breq	.+12     	; 0x796 <__fp_mpack_finite+0xc>

0000078a <__fp_mpack_finite>:
 78a:	91 50       	subi	r25, 0x01	; 1
 78c:	20 f4       	brcc	.+8      	; 0x796 <__fp_mpack_finite+0xc>
 78e:	87 95       	ror	r24
 790:	77 95       	ror	r23
 792:	67 95       	ror	r22
 794:	b7 95       	ror	r27
 796:	88 0f       	add	r24, r24
 798:	91 1d       	adc	r25, r1
 79a:	96 95       	lsr	r25
 79c:	87 95       	ror	r24
 79e:	97 f9       	bld	r25, 7
 7a0:	08 95       	ret

000007a2 <__fp_norm2>:
 7a2:	91 50       	subi	r25, 0x01	; 1
 7a4:	50 40       	sbci	r21, 0x00	; 0
 7a6:	66 0f       	add	r22, r22
 7a8:	77 1f       	adc	r23, r23
 7aa:	88 1f       	adc	r24, r24
 7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fp_norm2>
 7ae:	08 95       	ret

000007b0 <_exit>:
 7b0:	f8 94       	cli

000007b2 <__stop_program>:
 7b2:	ff cf       	rjmp	.-2      	; 0x7b2 <__stop_program>
