
RobotRunGrid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00002d16  00002daa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d16  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000dd  00800162  00800162  00002e0c  2**0
                  ALLOC
  3 .stab         000073a4  00000000  00000000  00002e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000a1b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00014236  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00014278  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000000f0  00000000  00000000  000142b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00002309  00000000  00000000  000143a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000d35  00000000  00000000  000166b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000016ee  00000000  00000000  000173e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  0000031c  00000000  00000000  00018ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000830  00000000  00000000  00018df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000014ad  00000000  00000000  00019620  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000d0  00000000  00000000  0001aacd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 44 00 	jmp	0x88	; 0x88 <__dtors_end>
       4:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
       8:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
       c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      10:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      14:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      18:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      1c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      20:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      24:	0c 94 b7 0e 	jmp	0x1d6e	; 0x1d6e <__vector_9>
      28:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      2c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      30:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      34:	0c 94 2a 0b 	jmp	0x1654	; 0x1654 <__vector_13>
      38:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      3c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      40:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      44:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      48:	0c 94 2f 0e 	jmp	0x1c5e	; 0x1c5e <__vector_18>
      4c:	0c 94 92 0e 	jmp	0x1d24	; 0x1d24 <__vector_19>
      50:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      54:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      58:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      5c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      60:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      64:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__bad_interrupt>
      68:	05 a8       	ldd	r0, Z+53	; 0x35
      6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
      6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <initialize+0x3c>
      6e:	4e b9       	out	0x0e, r20	; 14
      70:	38 36       	cpi	r19, 0x68	; 104
      72:	a9 02       	muls	r26, r25
      74:	0c 50       	subi	r16, 0x0C	; 12
      76:	b9 91       	ld	r27, Y+
      78:	86 88       	ldd	r8, Z+22	; 0x16
      7a:	08 3c       	cpi	r16, 0xC8	; 200
      7c:	a6 aa       	std	Z+54, r10	; 0x36
      7e:	aa 2a       	or	r10, r26
      80:	be 00       	.word	0x00be	; ????
      82:	00 00       	nop
      84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__ctors_end>:
      86:	91 0f       	add	r25, r17

00000088 <__dtors_end>:
      88:	11 24       	eor	r1, r1
      8a:	1f be       	out	0x3f, r1	; 63
      8c:	cf ef       	ldi	r28, 0xFF	; 255
      8e:	d8 e0       	ldi	r29, 0x08	; 8
      90:	de bf       	out	0x3e, r29	; 62
      92:	cd bf       	out	0x3d, r28	; 61

00000094 <__do_copy_data>:
      94:	11 e0       	ldi	r17, 0x01	; 1
      96:	a0 e0       	ldi	r26, 0x00	; 0
      98:	b1 e0       	ldi	r27, 0x01	; 1
      9a:	e6 e1       	ldi	r30, 0x16	; 22
      9c:	fd e2       	ldi	r31, 0x2D	; 45
      9e:	02 c0       	rjmp	.+4      	; 0xa4 <__do_copy_data+0x10>
      a0:	05 90       	lpm	r0, Z+
      a2:	0d 92       	st	X+, r0
      a4:	a2 36       	cpi	r26, 0x62	; 98
      a6:	b1 07       	cpc	r27, r17
      a8:	d9 f7       	brne	.-10     	; 0xa0 <__do_copy_data+0xc>

000000aa <__do_clear_bss>:
      aa:	22 e0       	ldi	r18, 0x02	; 2
      ac:	a2 e6       	ldi	r26, 0x62	; 98
      ae:	b1 e0       	ldi	r27, 0x01	; 1
      b0:	01 c0       	rjmp	.+2      	; 0xb4 <.do_clear_bss_start>

000000b2 <.do_clear_bss_loop>:
      b2:	1d 92       	st	X+, r1

000000b4 <.do_clear_bss_start>:
      b4:	af 33       	cpi	r26, 0x3F	; 63
      b6:	b2 07       	cpc	r27, r18
      b8:	e1 f7       	brne	.-8      	; 0xb2 <.do_clear_bss_loop>
      ba:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
      be:	0c 94 7e 16 	jmp	0x2cfc	; 0x2cfc <__do_global_dtors>

000000c2 <__bad_interrupt>:
      c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c6 <main>:
#include <avr/pgmspace.h>
#include <avr/io.h>
#include <avr/interrupt.h>

int main(){
	initialize();
      c6:	0e 94 cb 04 	call	0x996	; 0x996 <initialize>
	motorControl(100, 'F', 0.86);
      ca:	26 ef       	ldi	r18, 0xF6	; 246
      cc:	38 e2       	ldi	r19, 0x28	; 40
      ce:	4c e5       	ldi	r20, 0x5C	; 92
      d0:	5f e3       	ldi	r21, 0x3F	; 63
      d2:	66 e4       	ldi	r22, 0x46	; 70
      d4:	84 e6       	ldi	r24, 0x64	; 100
      d6:	90 e0       	ldi	r25, 0x00	; 0
      d8:	0e 94 7e 00 	call	0xfc	; 0xfc <motorControl>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
      dc:	88 eb       	ldi	r24, 0xB8	; 184
      de:	9b e0       	ldi	r25, 0x0B	; 11
      e0:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
	delay(3000);
	motorControl(0, 'F', 0.86);
      e4:	26 ef       	ldi	r18, 0xF6	; 246
      e6:	38 e2       	ldi	r19, 0x28	; 40
      e8:	4c e5       	ldi	r20, 0x5C	; 92
      ea:	5f e3       	ldi	r21, 0x3F	; 63
      ec:	66 e4       	ldi	r22, 0x46	; 70
      ee:	80 e0       	ldi	r24, 0x00	; 0
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	0e 94 7e 00 	call	0xfc	; 0xfc <motorControl>
	sortOrder(orderX, orderY);
	clear();*/
	//driveRoute(routes, 1);
	//fetchOrder(orderX, orderY, routes);
	
      f6:	80 e0       	ldi	r24, 0x00	; 0
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	08 95       	ret

000000fc <motorControl>:

int speedCurrent = 0;			//Defining the current speeds.
int speedCurrentRight = 0;
int speedCurrentLeft = 0;

void motorControl(int speed, char direction, float aggressionFactor){		//This function is an upgrade over the existing motor control function written by Pololu. This function moves the robot with an entered speed and acceleration time in a desired direction.
      fc:	2f 92       	push	r2
      fe:	3f 92       	push	r3
     100:	4f 92       	push	r4
     102:	5f 92       	push	r5
     104:	6f 92       	push	r6
     106:	7f 92       	push	r7
     108:	8f 92       	push	r8
     10a:	9f 92       	push	r9
     10c:	af 92       	push	r10
     10e:	bf 92       	push	r11
     110:	cf 92       	push	r12
     112:	df 92       	push	r13
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	0f 93       	push	r16
     11a:	1f 93       	push	r17
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	cd b7       	in	r28, 0x3d	; 61
     122:	de b7       	in	r29, 0x3e	; 62
     124:	66 97       	sbiw	r28, 0x16	; 22
     126:	0f b6       	in	r0, 0x3f	; 63
     128:	f8 94       	cli
     12a:	de bf       	out	0x3e, r29	; 62
     12c:	0f be       	out	0x3f, r0	; 63
     12e:	cd bf       	out	0x3d, r28	; 61
     130:	1c 01       	movw	r2, r24
     132:	29 83       	std	Y+1, r18	; 0x01
     134:	3a 83       	std	Y+2, r19	; 0x02
     136:	4b 83       	std	Y+3, r20	; 0x03
     138:	5c 83       	std	Y+4, r21	; 0x04
	int setSpeedRight = 0;
	int setSpeedLeft = 0;
	
	//directions direction;

	switch (direction){														//This switch case switches between the directions based on the user input.
     13a:	66 34       	cpi	r22, 0x46	; 70
     13c:	61 f0       	breq	.+24     	; 0x156 <motorControl+0x5a>
     13e:	20 f4       	brcc	.+8      	; 0x148 <motorControl+0x4c>
     140:	62 34       	cpi	r22, 0x42	; 66
     142:	09 f4       	brne	.+2      	; 0x146 <motorControl+0x4a>
     144:	95 c0       	rjmp	.+298    	; 0x270 <motorControl+0x174>
     146:	08 c4       	rjmp	.+2064   	; 0x958 <__stack+0x59>
     148:	6c 34       	cpi	r22, 0x4C	; 76
     14a:	09 f4       	brne	.+2      	; 0x14e <motorControl+0x52>
     14c:	a9 c2       	rjmp	.+1362   	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
     14e:	62 35       	cpi	r22, 0x52	; 82
     150:	09 f4       	brne	.+2      	; 0x154 <motorControl+0x58>
     152:	1b c1       	rjmp	.+566    	; 0x38a <motorControl+0x28e>
     154:	01 c4       	rjmp	.+2050   	; 0x958 <__stack+0x59>
		case 'F':															//This case handles the forward movement of the 3PI robot.
		
		setSpeed = speed - speedCurrent;
     156:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <speedCurrent>
     15a:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     15e:	91 01       	movw	r18, r2
     160:	28 1b       	sub	r18, r24
     162:	39 0b       	sbc	r19, r25
     164:	45 e6       	ldi	r20, 0x65	; 101
     166:	50 e0       	ldi	r21, 0x00	; 0
     168:	5a 87       	std	Y+10, r21	; 0x0a
     16a:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){	//This for loop increases the speed of the current speed to the desired speed with a total of a 100 increments.
     16c:	41 2c       	mov	r4, r1
     16e:	51 2c       	mov	r5, r1
     170:	32 01       	movw	r6, r4
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );		//This function transfers the input speed to a segmented speed increase based on the swept sinusoidal curve.
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     172:	03 2e       	mov	r0, r19
     174:	00 0c       	add	r0, r0
     176:	44 0b       	sbc	r20, r20
     178:	55 0b       	sbc	r21, r21
     17a:	2d 83       	std	Y+5, r18	; 0x05
     17c:	3e 83       	std	Y+6, r19	; 0x06
     17e:	4f 83       	std	Y+7, r20	; 0x07
     180:	58 87       	std	Y+8, r21	; 0x08
		case 'F':															//This case handles the forward movement of the 3PI robot.
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){	//This for loop increases the speed of the current speed to the desired speed with a total of a 100 increments.
			timerStart = get_ms();
     182:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     186:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );		//This function transfers the input speed to a segmented speed increase based on the swept sinusoidal curve.
     188:	2b ed       	ldi	r18, 0xDB	; 219
     18a:	3f e0       	ldi	r19, 0x0F	; 15
     18c:	49 ec       	ldi	r20, 0xC9	; 201
     18e:	50 e4       	ldi	r21, 0x40	; 64
     190:	c3 01       	movw	r24, r6
     192:	b2 01       	movw	r22, r4
     194:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     198:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     19c:	23 e8       	ldi	r18, 0x83	; 131
     19e:	39 ef       	ldi	r19, 0xF9	; 249
     1a0:	42 e2       	ldi	r20, 0x22	; 34
     1a2:	5e e3       	ldi	r21, 0x3E	; 62
     1a4:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     1a8:	9b 01       	movw	r18, r22
     1aa:	ac 01       	movw	r20, r24
     1ac:	c3 01       	movw	r24, r6
     1ae:	b2 01       	movw	r22, r4
     1b0:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     1b4:	4b 01       	movw	r8, r22
     1b6:	5c 01       	movw	r10, r24
     1b8:	6d 81       	ldd	r22, Y+5	; 0x05
     1ba:	7e 81       	ldd	r23, Y+6	; 0x06
     1bc:	8f 81       	ldd	r24, Y+7	; 0x07
     1be:	98 85       	ldd	r25, Y+8	; 0x08
     1c0:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     1c4:	9b 01       	movw	r18, r22
     1c6:	ac 01       	movw	r20, r24
     1c8:	c5 01       	movw	r24, r10
     1ca:	b4 01       	movw	r22, r8
     1cc:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     1d0:	4b 01       	movw	r8, r22
     1d2:	5c 01       	movw	r10, r24
     1d4:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     1d8:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     1dc:	07 2e       	mov	r0, r23
     1de:	00 0c       	add	r0, r0
     1e0:	88 0b       	sbc	r24, r24
     1e2:	99 0b       	sbc	r25, r25
     1e4:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     1e8:	9b 01       	movw	r18, r22
     1ea:	ac 01       	movw	r20, r24
     1ec:	c5 01       	movw	r24, r10
     1ee:	b4 01       	movw	r22, r8
     1f0:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     1f4:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     1f8:	dc 01       	movw	r26, r24
     1fa:	cb 01       	movw	r24, r22
     1fc:	bc 01       	movw	r22, r24
     1fe:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {											//This while loop temporarily freezes the system to make sure that the increments are spaced properly to facilitate a fluent and consequent increase in speed.
     202:	48 01       	movw	r8, r16
     204:	11 0f       	add	r17, r17
     206:	aa 08       	sbc	r10, r10
     208:	bb 08       	sbc	r11, r11
     20a:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     20e:	68 19       	sub	r22, r8
     210:	79 09       	sbc	r23, r9
     212:	8a 09       	sbc	r24, r10
     214:	9b 09       	sbc	r25, r11
     216:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     21a:	6b 01       	movw	r12, r22
     21c:	7c 01       	movw	r14, r24
     21e:	20 e0       	ldi	r18, 0x00	; 0
     220:	30 e0       	ldi	r19, 0x00	; 0
     222:	40 e2       	ldi	r20, 0x20	; 32
     224:	51 e4       	ldi	r21, 0x41	; 65
     226:	69 81       	ldd	r22, Y+1	; 0x01
     228:	7a 81       	ldd	r23, Y+2	; 0x02
     22a:	8b 81       	ldd	r24, Y+3	; 0x03
     22c:	9c 81       	ldd	r25, Y+4	; 0x04
     22e:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     232:	9b 01       	movw	r18, r22
     234:	ac 01       	movw	r20, r24
     236:	c7 01       	movw	r24, r14
     238:	b6 01       	movw	r22, r12
     23a:	0e 94 b0 05 	call	0xb60	; 0xb60 <__cmpsf2>
     23e:	88 23       	and	r24, r24
     240:	24 f3       	brlt	.-56     	; 0x20a <motorControl+0x10e>
	switch (direction){														//This switch case switches between the directions based on the user input.
		case 'F':															//This case handles the forward movement of the 3PI robot.
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){	//This for loop increases the speed of the current speed to the desired speed with a total of a 100 increments.
     242:	2a e0       	ldi	r18, 0x0A	; 10
     244:	37 ed       	ldi	r19, 0xD7	; 215
     246:	43 e2       	ldi	r20, 0x23	; 35
     248:	5c e3       	ldi	r21, 0x3C	; 60
     24a:	c3 01       	movw	r24, r6
     24c:	b2 01       	movw	r22, r4
     24e:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     252:	2b 01       	movw	r4, r22
     254:	3c 01       	movw	r6, r24
     256:	a9 85       	ldd	r26, Y+9	; 0x09
     258:	ba 85       	ldd	r27, Y+10	; 0x0a
     25a:	11 97       	sbiw	r26, 0x01	; 1
     25c:	ba 87       	std	Y+10, r27	; 0x0a
     25e:	a9 87       	std	Y+9, r26	; 0x09
     260:	ab 2b       	or	r26, r27
     262:	09 f0       	breq	.+2      	; 0x266 <motorControl+0x16a>
     264:	8e cf       	rjmp	.-228    	; 0x182 <motorControl+0x86>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {											//This while loop temporarily freezes the system to make sure that the increments are spaced properly to facilitate a fluent and consequent increase in speed.
				//Change the aggression factor to manipulate the acceleration time. A shorter time increases the overall jerk of the acceleration.
			}
		}
		speedCurrent = speed;
     266:	30 92 d4 01 	sts	0x01D4, r3	; 0x8001d4 <speedCurrent+0x1>
     26a:	20 92 d3 01 	sts	0x01D3, r2	; 0x8001d3 <speedCurrent>
		break;
     26e:	7a c3       	rjmp	.+1780   	; 0x964 <__stack+0x65>
		
		case 'B':		//This case handles the backward movement of the robot. While the robot does not require this function in the standard routine, it is desired when operating the robot in manual mode.
		
		setSpeed = speed - speedCurrent;
     270:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <speedCurrent>
     274:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     278:	91 01       	movw	r18, r2
     27a:	28 1b       	sub	r18, r24
     27c:	39 0b       	sbc	r19, r25
     27e:	45 e6       	ldi	r20, 0x65	; 101
     280:	50 e0       	ldi	r21, 0x00	; 0
     282:	5a 87       	std	Y+10, r21	; 0x0a
     284:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     286:	41 2c       	mov	r4, r1
     288:	51 2c       	mov	r5, r1
     28a:	32 01       	movw	r6, r4
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     28c:	03 2e       	mov	r0, r19
     28e:	00 0c       	add	r0, r0
     290:	44 0b       	sbc	r20, r20
     292:	55 0b       	sbc	r21, r21
     294:	2d 83       	std	Y+5, r18	; 0x05
     296:	3e 83       	std	Y+6, r19	; 0x06
     298:	4f 83       	std	Y+7, r20	; 0x07
     29a:	58 87       	std	Y+8, r21	; 0x08
		case 'B':		//This case handles the backward movement of the robot. While the robot does not require this function in the standard routine, it is desired when operating the robot in manual mode.
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     29c:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     2a0:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
     2a2:	2b ed       	ldi	r18, 0xDB	; 219
     2a4:	3f e0       	ldi	r19, 0x0F	; 15
     2a6:	49 ec       	ldi	r20, 0xC9	; 201
     2a8:	50 e4       	ldi	r21, 0x40	; 64
     2aa:	c3 01       	movw	r24, r6
     2ac:	b2 01       	movw	r22, r4
     2ae:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     2b2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     2b6:	23 e8       	ldi	r18, 0x83	; 131
     2b8:	39 ef       	ldi	r19, 0xF9	; 249
     2ba:	42 e2       	ldi	r20, 0x22	; 34
     2bc:	5e e3       	ldi	r21, 0x3E	; 62
     2be:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     2c2:	9b 01       	movw	r18, r22
     2c4:	ac 01       	movw	r20, r24
     2c6:	c3 01       	movw	r24, r6
     2c8:	b2 01       	movw	r22, r4
     2ca:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     2ce:	4b 01       	movw	r8, r22
     2d0:	5c 01       	movw	r10, r24
     2d2:	6d 81       	ldd	r22, Y+5	; 0x05
     2d4:	7e 81       	ldd	r23, Y+6	; 0x06
     2d6:	8f 81       	ldd	r24, Y+7	; 0x07
     2d8:	98 85       	ldd	r25, Y+8	; 0x08
     2da:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     2de:	9b 01       	movw	r18, r22
     2e0:	ac 01       	movw	r20, r24
     2e2:	c5 01       	movw	r24, r10
     2e4:	b4 01       	movw	r22, r8
     2e6:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     2ea:	4b 01       	movw	r8, r22
     2ec:	5c 01       	movw	r10, r24
     2ee:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     2f2:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     2f6:	07 2e       	mov	r0, r23
     2f8:	00 0c       	add	r0, r0
     2fa:	88 0b       	sbc	r24, r24
     2fc:	99 0b       	sbc	r25, r25
     2fe:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     302:	9b 01       	movw	r18, r22
     304:	ac 01       	movw	r20, r24
     306:	c5 01       	movw	r24, r10
     308:	b4 01       	movw	r22, r8
     30a:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     30e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	bc 01       	movw	r22, r24
     318:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     31c:	48 01       	movw	r8, r16
     31e:	11 0f       	add	r17, r17
     320:	aa 08       	sbc	r10, r10
     322:	bb 08       	sbc	r11, r11
     324:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     328:	68 19       	sub	r22, r8
     32a:	79 09       	sbc	r23, r9
     32c:	8a 09       	sbc	r24, r10
     32e:	9b 09       	sbc	r25, r11
     330:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     334:	6b 01       	movw	r12, r22
     336:	7c 01       	movw	r14, r24
     338:	20 e0       	ldi	r18, 0x00	; 0
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	40 e2       	ldi	r20, 0x20	; 32
     33e:	51 e4       	ldi	r21, 0x41	; 65
     340:	69 81       	ldd	r22, Y+1	; 0x01
     342:	7a 81       	ldd	r23, Y+2	; 0x02
     344:	8b 81       	ldd	r24, Y+3	; 0x03
     346:	9c 81       	ldd	r25, Y+4	; 0x04
     348:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     34c:	9b 01       	movw	r18, r22
     34e:	ac 01       	movw	r20, r24
     350:	c7 01       	movw	r24, r14
     352:	b6 01       	movw	r22, r12
     354:	0e 94 b0 05 	call	0xb60	; 0xb60 <__cmpsf2>
     358:	88 23       	and	r24, r24
     35a:	24 f3       	brlt	.-56     	; 0x324 <motorControl+0x228>
		
		case 'B':		//This case handles the backward movement of the robot. While the robot does not require this function in the standard routine, it is desired when operating the robot in manual mode.
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     35c:	2a e0       	ldi	r18, 0x0A	; 10
     35e:	37 ed       	ldi	r19, 0xD7	; 215
     360:	43 e2       	ldi	r20, 0x23	; 35
     362:	5c e3       	ldi	r21, 0x3C	; 60
     364:	c3 01       	movw	r24, r6
     366:	b2 01       	movw	r22, r4
     368:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     36c:	2b 01       	movw	r4, r22
     36e:	3c 01       	movw	r6, r24
     370:	a9 85       	ldd	r26, Y+9	; 0x09
     372:	ba 85       	ldd	r27, Y+10	; 0x0a
     374:	11 97       	sbiw	r26, 0x01	; 1
     376:	ba 87       	std	Y+10, r27	; 0x0a
     378:	a9 87       	std	Y+9, r26	; 0x09
     37a:	ab 2b       	or	r26, r27
     37c:	09 f0       	breq	.+2      	; 0x380 <motorControl+0x284>
     37e:	8e cf       	rjmp	.-228    	; 0x29c <motorControl+0x1a0>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrent = speed;
     380:	30 92 d4 01 	sts	0x01D4, r3	; 0x8001d4 <speedCurrent+0x1>
     384:	20 92 d3 01 	sts	0x01D3, r2	; 0x8001d3 <speedCurrent>
		break;
     388:	ed c2       	rjmp	.+1498   	; 0x964 <__stack+0x65>

		case 'R':		//This case handles the rotation of the robot 90 degrees to the right. The robot accelerates and decelerates with the same method used with forward and backward movement.
		
		setSpeedRight = speed + speedCurrentRight;
     38a:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <speedCurrentRight>
     38e:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     392:	82 0d       	add	r24, r2
     394:	93 1d       	adc	r25, r3
		setSpeedLeft = speed - speedCurrentLeft;
     396:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <speedCurrentLeft>
     39a:	30 91 d0 01 	lds	r19, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     39e:	a1 01       	movw	r20, r2
     3a0:	42 1b       	sub	r20, r18
     3a2:	53 0b       	sbc	r21, r19
     3a4:	9a 01       	movw	r18, r20
     3a6:	05 e6       	ldi	r16, 0x65	; 101
     3a8:	10 e0       	ldi	r17, 0x00	; 0
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     3aa:	1d 82       	std	Y+5, r1	; 0x05
     3ac:	1e 82       	std	Y+6, r1	; 0x06
     3ae:	1f 82       	std	Y+7, r1	; 0x07
     3b0:	18 86       	std	Y+8, r1	; 0x08
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     3b2:	ac 01       	movw	r20, r24
     3b4:	99 0f       	add	r25, r25
     3b6:	66 0b       	sbc	r22, r22
     3b8:	77 0b       	sbc	r23, r23
     3ba:	4d 87       	std	Y+13, r20	; 0x0d
     3bc:	5e 87       	std	Y+14, r21	; 0x0e
     3be:	6f 87       	std	Y+15, r22	; 0x0f
     3c0:	78 8b       	std	Y+16, r23	; 0x10
     3c2:	b9 01       	movw	r22, r18
     3c4:	33 0f       	add	r19, r19
     3c6:	88 0b       	sbc	r24, r24
     3c8:	99 0b       	sbc	r25, r25
     3ca:	69 8b       	std	Y+17, r22	; 0x11
     3cc:	7a 8b       	std	Y+18, r23	; 0x12
     3ce:	8b 8b       	std	Y+19, r24	; 0x13
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     3d2:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     3d6:	7e 8b       	std	Y+22, r23	; 0x16
     3d8:	6d 8b       	std	Y+21, r22	; 0x15
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     3da:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     3de:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     3e2:	07 2e       	mov	r0, r23
     3e4:	00 0c       	add	r0, r0
     3e6:	88 0b       	sbc	r24, r24
     3e8:	99 0b       	sbc	r25, r25
     3ea:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     3ee:	69 87       	std	Y+9, r22	; 0x09
     3f0:	7a 87       	std	Y+10, r23	; 0x0a
     3f2:	8b 87       	std	Y+11, r24	; 0x0b
     3f4:	9c 87       	std	Y+12, r25	; 0x0c
     3f6:	2b ed       	ldi	r18, 0xDB	; 219
     3f8:	3f e0       	ldi	r19, 0x0F	; 15
     3fa:	49 ec       	ldi	r20, 0xC9	; 201
     3fc:	50 e4       	ldi	r21, 0x40	; 64
     3fe:	6d 81       	ldd	r22, Y+5	; 0x05
     400:	7e 81       	ldd	r23, Y+6	; 0x06
     402:	8f 81       	ldd	r24, Y+7	; 0x07
     404:	98 85       	ldd	r25, Y+8	; 0x08
     406:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     40a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
     40e:	23 e8       	ldi	r18, 0x83	; 131
     410:	39 ef       	ldi	r19, 0xF9	; 249
     412:	42 e2       	ldi	r20, 0x22	; 34
     414:	5e e3       	ldi	r21, 0x3E	; 62
     416:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     41a:	2d 81       	ldd	r18, Y+5	; 0x05
     41c:	3e 81       	ldd	r19, Y+6	; 0x06
     41e:	4f 81       	ldd	r20, Y+7	; 0x07
     420:	58 85       	ldd	r21, Y+8	; 0x08
     422:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     426:	4b 01       	movw	r8, r22
     428:	5c 01       	movw	r10, r24
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     42a:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     42e:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     432:	07 2e       	mov	r0, r23
     434:	00 0c       	add	r0, r0
     436:	88 0b       	sbc	r24, r24
     438:	99 0b       	sbc	r25, r25
     43a:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     43e:	2b 01       	movw	r4, r22
     440:	3c 01       	movw	r6, r24
     442:	6d 85       	ldd	r22, Y+13	; 0x0d
     444:	7e 85       	ldd	r23, Y+14	; 0x0e
     446:	8f 85       	ldd	r24, Y+15	; 0x0f
     448:	98 89       	ldd	r25, Y+16	; 0x10
     44a:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     44e:	a5 01       	movw	r20, r10
     450:	94 01       	movw	r18, r8
     452:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     456:	9b 01       	movw	r18, r22
     458:	ac 01       	movw	r20, r24
     45a:	c3 01       	movw	r24, r6
     45c:	b2 01       	movw	r22, r4
     45e:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     462:	29 85       	ldd	r18, Y+9	; 0x09
     464:	3a 85       	ldd	r19, Y+10	; 0x0a
     466:	4b 85       	ldd	r20, Y+11	; 0x0b
     468:	5c 85       	ldd	r21, Y+12	; 0x0c
     46a:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     46e:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     472:	2b 01       	movw	r4, r22
     474:	3c 01       	movw	r6, r24
     476:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     47a:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     47e:	07 2e       	mov	r0, r23
     480:	00 0c       	add	r0, r0
     482:	88 0b       	sbc	r24, r24
     484:	99 0b       	sbc	r25, r25
     486:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     48a:	6b 01       	movw	r12, r22
     48c:	7c 01       	movw	r14, r24
     48e:	69 89       	ldd	r22, Y+17	; 0x11
     490:	7a 89       	ldd	r23, Y+18	; 0x12
     492:	8b 89       	ldd	r24, Y+19	; 0x13
     494:	9c 89       	ldd	r25, Y+20	; 0x14
     496:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     49a:	a5 01       	movw	r20, r10
     49c:	94 01       	movw	r18, r8
     49e:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     4a2:	9b 01       	movw	r18, r22
     4a4:	ac 01       	movw	r20, r24
     4a6:	c7 01       	movw	r24, r14
     4a8:	b6 01       	movw	r22, r12
     4aa:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     4ae:	29 85       	ldd	r18, Y+9	; 0x09
     4b0:	3a 85       	ldd	r19, Y+10	; 0x0a
     4b2:	4b 85       	ldd	r20, Y+11	; 0x0b
     4b4:	5c 85       	ldd	r21, Y+12	; 0x0c
     4b6:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     4ba:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	b2 01       	movw	r22, r4
     4c4:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     4c8:	8d 89       	ldd	r24, Y+21	; 0x15
     4ca:	9e 89       	ldd	r25, Y+22	; 0x16
     4cc:	4c 01       	movw	r8, r24
     4ce:	99 0f       	add	r25, r25
     4d0:	aa 08       	sbc	r10, r10
     4d2:	bb 08       	sbc	r11, r11
     4d4:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     4d8:	6b 01       	movw	r12, r22
     4da:	7c 01       	movw	r14, r24
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	40 e2       	ldi	r20, 0x20	; 32
     4e2:	51 e4       	ldi	r21, 0x41	; 65
     4e4:	69 81       	ldd	r22, Y+1	; 0x01
     4e6:	7a 81       	ldd	r23, Y+2	; 0x02
     4e8:	8b 81       	ldd	r24, Y+3	; 0x03
     4ea:	9c 81       	ldd	r25, Y+4	; 0x04
     4ec:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     4f0:	2b 01       	movw	r4, r22
     4f2:	3c 01       	movw	r6, r24
     4f4:	c7 01       	movw	r24, r14
     4f6:	b6 01       	movw	r22, r12
     4f8:	68 19       	sub	r22, r8
     4fa:	79 09       	sbc	r23, r9
     4fc:	8a 09       	sbc	r24, r10
     4fe:	9b 09       	sbc	r25, r11
     500:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     504:	a3 01       	movw	r20, r6
     506:	92 01       	movw	r18, r4
     508:	0e 94 b0 05 	call	0xb60	; 0xb60 <__cmpsf2>
     50c:	88 23       	and	r24, r24
     50e:	14 f3       	brlt	.-60     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		case 'R':		//This case handles the rotation of the robot 90 degrees to the right. The robot accelerates and decelerates with the same method used with forward and backward movement.
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     510:	2a e0       	ldi	r18, 0x0A	; 10
     512:	37 ed       	ldi	r19, 0xD7	; 215
     514:	43 e2       	ldi	r20, 0x23	; 35
     516:	5c e3       	ldi	r21, 0x3C	; 60
     518:	6d 81       	ldd	r22, Y+5	; 0x05
     51a:	7e 81       	ldd	r23, Y+6	; 0x06
     51c:	8f 81       	ldd	r24, Y+7	; 0x07
     51e:	98 85       	ldd	r25, Y+8	; 0x08
     520:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     524:	6d 83       	std	Y+5, r22	; 0x05
     526:	7e 83       	std	Y+6, r23	; 0x06
     528:	8f 83       	std	Y+7, r24	; 0x07
     52a:	98 87       	std	Y+8, r25	; 0x08
     52c:	01 50       	subi	r16, 0x01	; 1
     52e:	11 09       	sbc	r17, r1
     530:	09 f0       	breq	.+2      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     532:	4f cf       	rjmp	.-354    	; 0x3d2 <motorControl+0x2d6>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = -speed;
     534:	88 27       	eor	r24, r24
     536:	99 27       	eor	r25, r25
     538:	82 19       	sub	r24, r2
     53a:	93 09       	sbc	r25, r3
     53c:	90 93 d2 01 	sts	0x01D2, r25	; 0x8001d2 <speedCurrentRight+0x1>
     540:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <speedCurrentRight>
		speedCurrentLeft = speed;
     544:	30 92 d0 01 	sts	0x01D0, r3	; 0x8001d0 <speedCurrentLeft+0x1>
     548:	20 92 cf 01 	sts	0x01CF, r2	; 0x8001cf <speedCurrentLeft>
     54c:	05 e6       	ldi	r16, 0x65	; 101
     54e:	10 e0       	ldi	r17, 0x00	; 0
		speed = 0;
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     550:	19 82       	std	Y+1, r1	; 0x01
     552:	1a 82       	std	Y+2, r1	; 0x02
     554:	1b 82       	std	Y+3, r1	; 0x03
     556:	1c 82       	std	Y+4, r1	; 0x04
			timerStart = get_ms();
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     558:	9c 01       	movw	r18, r24
     55a:	99 0f       	add	r25, r25
     55c:	44 0b       	sbc	r20, r20
     55e:	55 0b       	sbc	r21, r21
     560:	29 87       	std	Y+9, r18	; 0x09
     562:	3a 87       	std	Y+10, r19	; 0x0a
     564:	4b 87       	std	Y+11, r20	; 0x0b
     566:	5c 87       	std	Y+12, r21	; 0x0c
     568:	c1 2c       	mov	r12, r1
     56a:	d1 2c       	mov	r13, r1
     56c:	76 01       	movw	r14, r12
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     56e:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     572:	7e 87       	std	Y+14, r23	; 0x0e
     574:	6d 87       	std	Y+13, r22	; 0x0d
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     576:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     57a:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     57e:	07 2e       	mov	r0, r23
     580:	00 0c       	add	r0, r0
     582:	88 0b       	sbc	r24, r24
     584:	99 0b       	sbc	r25, r25
     586:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     58a:	69 83       	std	Y+1, r22	; 0x01
     58c:	7a 83       	std	Y+2, r23	; 0x02
     58e:	8b 83       	std	Y+3, r24	; 0x03
     590:	9c 83       	std	Y+4, r25	; 0x04
     592:	2b ed       	ldi	r18, 0xDB	; 219
     594:	3f e0       	ldi	r19, 0x0F	; 15
     596:	49 ec       	ldi	r20, 0xC9	; 201
     598:	50 e4       	ldi	r21, 0x40	; 64
     59a:	c7 01       	movw	r24, r14
     59c:	b6 01       	movw	r22, r12
     59e:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     5a2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
     5a6:	23 e8       	ldi	r18, 0x83	; 131
     5a8:	39 ef       	ldi	r19, 0xF9	; 249
     5aa:	42 e2       	ldi	r20, 0x22	; 34
     5ac:	5e e3       	ldi	r21, 0x3E	; 62
     5ae:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     5b2:	a7 01       	movw	r20, r14
     5b4:	96 01       	movw	r18, r12
     5b6:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     5ba:	4b 01       	movw	r8, r22
     5bc:	5c 01       	movw	r10, r24
     5be:	69 85       	ldd	r22, Y+9	; 0x09
     5c0:	7a 85       	ldd	r23, Y+10	; 0x0a
     5c2:	8b 85       	ldd	r24, Y+11	; 0x0b
     5c4:	9c 85       	ldd	r25, Y+12	; 0x0c
     5c6:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	c5 01       	movw	r24, r10
     5d0:	b4 01       	movw	r22, r8
     5d2:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     5d6:	4b 01       	movw	r8, r22
     5d8:	5c 01       	movw	r10, r24
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     5da:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     5de:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     5e2:	07 2e       	mov	r0, r23
     5e4:	00 0c       	add	r0, r0
     5e6:	88 0b       	sbc	r24, r24
     5e8:	99 0b       	sbc	r25, r25
     5ea:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     5ee:	a5 01       	movw	r20, r10
     5f0:	94 01       	movw	r18, r8
     5f2:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     5f6:	29 81       	ldd	r18, Y+1	; 0x01
     5f8:	3a 81       	ldd	r19, Y+2	; 0x02
     5fa:	4b 81       	ldd	r20, Y+3	; 0x03
     5fc:	5c 81       	ldd	r21, Y+4	; 0x04
     5fe:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     602:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     606:	6d 83       	std	Y+5, r22	; 0x05
     608:	7e 83       	std	Y+6, r23	; 0x06
     60a:	8f 83       	std	Y+7, r24	; 0x07
     60c:	98 87       	std	Y+8, r25	; 0x08
     60e:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     612:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     616:	07 2e       	mov	r0, r23
     618:	00 0c       	add	r0, r0
     61a:	88 0b       	sbc	r24, r24
     61c:	99 0b       	sbc	r25, r25
     61e:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     622:	a5 01       	movw	r20, r10
     624:	94 01       	movw	r18, r8
     626:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     62a:	29 81       	ldd	r18, Y+1	; 0x01
     62c:	3a 81       	ldd	r19, Y+2	; 0x02
     62e:	4b 81       	ldd	r20, Y+3	; 0x03
     630:	5c 81       	ldd	r21, Y+4	; 0x04
     632:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     636:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     63a:	dc 01       	movw	r26, r24
     63c:	cb 01       	movw	r24, r22
     63e:	6d 81       	ldd	r22, Y+5	; 0x05
     640:	7e 81       	ldd	r23, Y+6	; 0x06
     642:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     646:	4d 85       	ldd	r20, Y+13	; 0x0d
     648:	5e 85       	ldd	r21, Y+14	; 0x0e
     64a:	4a 01       	movw	r8, r20
     64c:	55 0f       	add	r21, r21
     64e:	aa 08       	sbc	r10, r10
     650:	bb 08       	sbc	r11, r11
     652:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     656:	68 19       	sub	r22, r8
     658:	79 09       	sbc	r23, r9
     65a:	8a 09       	sbc	r24, r10
     65c:	9b 09       	sbc	r25, r11
     65e:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     662:	9b 01       	movw	r18, r22
     664:	ac 01       	movw	r20, r24
     666:	c3 01       	movw	r24, r6
     668:	b2 01       	movw	r22, r4
     66a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__gesf2>
     66e:	18 16       	cp	r1, r24
     670:	84 f3       	brlt	.-32     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
		speed = 0;
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     672:	2a e0       	ldi	r18, 0x0A	; 10
     674:	37 ed       	ldi	r19, 0xD7	; 215
     676:	43 e2       	ldi	r20, 0x23	; 35
     678:	5c e3       	ldi	r21, 0x3C	; 60
     67a:	c7 01       	movw	r24, r14
     67c:	b6 01       	movw	r22, r12
     67e:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     682:	6b 01       	movw	r12, r22
     684:	7c 01       	movw	r14, r24
     686:	01 50       	subi	r16, 0x01	; 1
     688:	11 09       	sbc	r17, r1
     68a:	09 f0       	breq	.+2      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
     68c:	70 cf       	rjmp	.-288    	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = -speed;
     68e:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <speedCurrentRight+0x1>
     692:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <speedCurrentRight>
		speedCurrentLeft = speed;
     696:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <speedCurrentLeft+0x1>
     69a:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <speedCurrentLeft>
		
		break;
     69e:	62 c1       	rjmp	.+708    	; 0x964 <__stack+0x65>

		case 'L': //This case handles the rotation of the robot 90 degrees to the left. The robot accelerates and decelerates with the same method used with forward and backward movement.
		
		setSpeedRight = speed - speedCurrentRight;
     6a0:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <speedCurrentRight>
     6a4:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     6a8:	91 01       	movw	r18, r2
     6aa:	28 1b       	sub	r18, r24
     6ac:	39 0b       	sbc	r19, r25
		setSpeedLeft = speed + speedCurrentLeft;
     6ae:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <speedCurrentLeft>
     6b2:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     6b6:	82 0d       	add	r24, r2
     6b8:	93 1d       	adc	r25, r3
     6ba:	65 e6       	ldi	r22, 0x65	; 101
     6bc:	70 e0       	ldi	r23, 0x00	; 0
     6be:	7a 8b       	std	Y+18, r23	; 0x12
     6c0:	69 8b       	std	Y+17, r22	; 0x11
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     6c2:	1d 82       	std	Y+5, r1	; 0x05
     6c4:	1e 82       	std	Y+6, r1	; 0x06
     6c6:	1f 82       	std	Y+7, r1	; 0x07
     6c8:	18 86       	std	Y+8, r1	; 0x08
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     6ca:	a9 01       	movw	r20, r18
     6cc:	33 0f       	add	r19, r19
     6ce:	66 0b       	sbc	r22, r22
     6d0:	77 0b       	sbc	r23, r23
     6d2:	49 87       	std	Y+9, r20	; 0x09
     6d4:	5a 87       	std	Y+10, r21	; 0x0a
     6d6:	6b 87       	std	Y+11, r22	; 0x0b
     6d8:	7c 87       	std	Y+12, r23	; 0x0c
     6da:	9c 01       	movw	r18, r24
     6dc:	99 0f       	add	r25, r25
     6de:	44 0b       	sbc	r20, r20
     6e0:	55 0b       	sbc	r21, r21
     6e2:	2d 87       	std	Y+13, r18	; 0x0d
     6e4:	3e 87       	std	Y+14, r19	; 0x0e
     6e6:	4f 87       	std	Y+15, r20	; 0x0f
     6e8:	58 8b       	std	Y+16, r21	; 0x10
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     6ea:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     6ee:	8b 01       	movw	r16, r22
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     6f0:	2b ed       	ldi	r18, 0xDB	; 219
     6f2:	3f e0       	ldi	r19, 0x0F	; 15
     6f4:	49 ec       	ldi	r20, 0xC9	; 201
     6f6:	50 e4       	ldi	r21, 0x40	; 64
     6f8:	6d 81       	ldd	r22, Y+5	; 0x05
     6fa:	7e 81       	ldd	r23, Y+6	; 0x06
     6fc:	8f 81       	ldd	r24, Y+7	; 0x07
     6fe:	98 85       	ldd	r25, Y+8	; 0x08
     700:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     704:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
     708:	23 e8       	ldi	r18, 0x83	; 131
     70a:	39 ef       	ldi	r19, 0xF9	; 249
     70c:	42 e2       	ldi	r20, 0x22	; 34
     70e:	5e e3       	ldi	r21, 0x3E	; 62
     710:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     714:	2d 81       	ldd	r18, Y+5	; 0x05
     716:	3e 81       	ldd	r19, Y+6	; 0x06
     718:	4f 81       	ldd	r20, Y+7	; 0x07
     71a:	58 85       	ldd	r21, Y+8	; 0x08
     71c:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     720:	6b 01       	movw	r12, r22
     722:	7c 01       	movw	r14, r24
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     724:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     728:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     72c:	07 2e       	mov	r0, r23
     72e:	00 0c       	add	r0, r0
     730:	88 0b       	sbc	r24, r24
     732:	99 0b       	sbc	r25, r25
     734:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     738:	4b 01       	movw	r8, r22
     73a:	5c 01       	movw	r10, r24
     73c:	69 85       	ldd	r22, Y+9	; 0x09
     73e:	7a 85       	ldd	r23, Y+10	; 0x0a
     740:	8b 85       	ldd	r24, Y+11	; 0x0b
     742:	9c 85       	ldd	r25, Y+12	; 0x0c
     744:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     748:	a7 01       	movw	r20, r14
     74a:	96 01       	movw	r18, r12
     74c:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     750:	9b 01       	movw	r18, r22
     752:	ac 01       	movw	r20, r24
     754:	c5 01       	movw	r24, r10
     756:	b4 01       	movw	r22, r8
     758:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     75c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     760:	4b 01       	movw	r8, r22
     762:	5c 01       	movw	r10, r24
     764:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     768:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     76c:	07 2e       	mov	r0, r23
     76e:	00 0c       	add	r0, r0
     770:	88 0b       	sbc	r24, r24
     772:	99 0b       	sbc	r25, r25
     774:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     778:	2b 01       	movw	r4, r22
     77a:	3c 01       	movw	r6, r24
     77c:	6d 85       	ldd	r22, Y+13	; 0x0d
     77e:	7e 85       	ldd	r23, Y+14	; 0x0e
     780:	8f 85       	ldd	r24, Y+15	; 0x0f
     782:	98 89       	ldd	r25, Y+16	; 0x10
     784:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     788:	a7 01       	movw	r20, r14
     78a:	96 01       	movw	r18, r12
     78c:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     790:	9b 01       	movw	r18, r22
     792:	ac 01       	movw	r20, r24
     794:	c3 01       	movw	r24, r6
     796:	b2 01       	movw	r22, r4
     798:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     79c:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     7a0:	dc 01       	movw	r26, r24
     7a2:	cb 01       	movw	r24, r22
     7a4:	b4 01       	movw	r22, r8
     7a6:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     7aa:	48 01       	movw	r8, r16
     7ac:	11 0f       	add	r17, r17
     7ae:	aa 08       	sbc	r10, r10
     7b0:	bb 08       	sbc	r11, r11
     7b2:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     7b6:	2b 01       	movw	r4, r22
     7b8:	3c 01       	movw	r6, r24
     7ba:	20 e0       	ldi	r18, 0x00	; 0
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	40 e2       	ldi	r20, 0x20	; 32
     7c0:	51 e4       	ldi	r21, 0x41	; 65
     7c2:	69 81       	ldd	r22, Y+1	; 0x01
     7c4:	7a 81       	ldd	r23, Y+2	; 0x02
     7c6:	8b 81       	ldd	r24, Y+3	; 0x03
     7c8:	9c 81       	ldd	r25, Y+4	; 0x04
     7ca:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     7ce:	6b 01       	movw	r12, r22
     7d0:	7c 01       	movw	r14, r24
     7d2:	c3 01       	movw	r24, r6
     7d4:	b2 01       	movw	r22, r4
     7d6:	68 19       	sub	r22, r8
     7d8:	79 09       	sbc	r23, r9
     7da:	8a 09       	sbc	r24, r10
     7dc:	9b 09       	sbc	r25, r11
     7de:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     7e2:	a7 01       	movw	r20, r14
     7e4:	96 01       	movw	r18, r12
     7e6:	0e 94 b0 05 	call	0xb60	; 0xb60 <__cmpsf2>
     7ea:	88 23       	and	r24, r24
     7ec:	14 f3       	brlt	.-60     	; 0x7b2 <__LOCK_REGION_LENGTH__+0x3b2>
		case 'L': //This case handles the rotation of the robot 90 degrees to the left. The robot accelerates and decelerates with the same method used with forward and backward movement.
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     7ee:	2a e0       	ldi	r18, 0x0A	; 10
     7f0:	37 ed       	ldi	r19, 0xD7	; 215
     7f2:	43 e2       	ldi	r20, 0x23	; 35
     7f4:	5c e3       	ldi	r21, 0x3C	; 60
     7f6:	6d 81       	ldd	r22, Y+5	; 0x05
     7f8:	7e 81       	ldd	r23, Y+6	; 0x06
     7fa:	8f 81       	ldd	r24, Y+7	; 0x07
     7fc:	98 85       	ldd	r25, Y+8	; 0x08
     7fe:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     802:	6d 83       	std	Y+5, r22	; 0x05
     804:	7e 83       	std	Y+6, r23	; 0x06
     806:	8f 83       	std	Y+7, r24	; 0x07
     808:	98 87       	std	Y+8, r25	; 0x08
     80a:	a9 89       	ldd	r26, Y+17	; 0x11
     80c:	ba 89       	ldd	r27, Y+18	; 0x12
     80e:	11 97       	sbiw	r26, 0x01	; 1
     810:	ba 8b       	std	Y+18, r27	; 0x12
     812:	a9 8b       	std	Y+17, r26	; 0x11
     814:	ab 2b       	or	r26, r27
     816:	09 f0       	breq	.+2      	; 0x81a <__LOCK_REGION_LENGTH__+0x41a>
     818:	68 cf       	rjmp	.-304    	; 0x6ea <__LOCK_REGION_LENGTH__+0x2ea>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = speed;
     81a:	30 92 d2 01 	sts	0x01D2, r3	; 0x8001d2 <speedCurrentRight+0x1>
     81e:	20 92 d1 01 	sts	0x01D1, r2	; 0x8001d1 <speedCurrentRight>
		speedCurrentLeft = -speed;
     822:	31 94       	neg	r3
     824:	21 94       	neg	r2
     826:	31 08       	sbc	r3, r1
     828:	30 92 d0 01 	sts	0x01D0, r3	; 0x8001d0 <speedCurrentLeft+0x1>
     82c:	20 92 cf 01 	sts	0x01CF, r2	; 0x8001cf <speedCurrentLeft>
     830:	25 e6       	ldi	r18, 0x65	; 101
     832:	30 e0       	ldi	r19, 0x00	; 0
		speed = 0;
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     834:	19 82       	std	Y+1, r1	; 0x01
     836:	1a 82       	std	Y+2, r1	; 0x02
     838:	1b 82       	std	Y+3, r1	; 0x03
     83a:	1c 82       	std	Y+4, r1	; 0x04
			timerStart = get_ms();
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     83c:	a1 01       	movw	r20, r2
     83e:	33 0c       	add	r3, r3
     840:	66 0b       	sbc	r22, r22
     842:	77 0b       	sbc	r23, r23
     844:	4d 83       	std	Y+5, r20	; 0x05
     846:	5e 83       	std	Y+6, r21	; 0x06
     848:	6f 83       	std	Y+7, r22	; 0x07
     84a:	78 87       	std	Y+8, r23	; 0x08
     84c:	3a 87       	std	Y+10, r19	; 0x0a
     84e:	29 87       	std	Y+9, r18	; 0x09
     850:	81 2c       	mov	r8, r1
     852:	91 2c       	mov	r9, r1
     854:	54 01       	movw	r10, r8
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     856:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     85a:	8b 01       	movw	r16, r22
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     85c:	2b ed       	ldi	r18, 0xDB	; 219
     85e:	3f e0       	ldi	r19, 0x0F	; 15
     860:	49 ec       	ldi	r20, 0xC9	; 201
     862:	50 e4       	ldi	r21, 0x40	; 64
     864:	c5 01       	movw	r24, r10
     866:	b4 01       	movw	r22, r8
     868:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     86c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sin>
     870:	23 e8       	ldi	r18, 0x83	; 131
     872:	39 ef       	ldi	r19, 0xF9	; 249
     874:	42 e2       	ldi	r20, 0x22	; 34
     876:	5e e3       	ldi	r21, 0x3E	; 62
     878:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     87c:	a5 01       	movw	r20, r10
     87e:	94 01       	movw	r18, r8
     880:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     884:	2b 01       	movw	r4, r22
     886:	3c 01       	movw	r6, r24
     888:	6d 81       	ldd	r22, Y+5	; 0x05
     88a:	7e 81       	ldd	r23, Y+6	; 0x06
     88c:	8f 81       	ldd	r24, Y+7	; 0x07
     88e:	98 85       	ldd	r25, Y+8	; 0x08
     890:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     894:	9b 01       	movw	r18, r22
     896:	ac 01       	movw	r20, r24
     898:	c3 01       	movw	r24, r6
     89a:	b2 01       	movw	r22, r4
     89c:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     8a0:	2b 01       	movw	r4, r22
     8a2:	3c 01       	movw	r6, r24
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     8a4:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     8a8:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     8ac:	07 2e       	mov	r0, r23
     8ae:	00 0c       	add	r0, r0
     8b0:	88 0b       	sbc	r24, r24
     8b2:	99 0b       	sbc	r25, r25
     8b4:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     8b8:	a3 01       	movw	r20, r6
     8ba:	92 01       	movw	r18, r4
     8bc:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     8c0:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     8c4:	69 83       	std	Y+1, r22	; 0x01
     8c6:	7a 83       	std	Y+2, r23	; 0x02
     8c8:	8b 83       	std	Y+3, r24	; 0x03
     8ca:	9c 83       	std	Y+4, r25	; 0x04
     8cc:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     8d0:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     8d4:	07 2e       	mov	r0, r23
     8d6:	00 0c       	add	r0, r0
     8d8:	88 0b       	sbc	r24, r24
     8da:	99 0b       	sbc	r25, r25
     8dc:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatsisf>
     8e0:	a3 01       	movw	r20, r6
     8e2:	92 01       	movw	r18, r4
     8e4:	0e 94 43 05 	call	0xa86	; 0xa86 <__subsf3>
     8e8:	0e 94 b5 05 	call	0xb6a	; 0xb6a <__fixsfsi>
     8ec:	dc 01       	movw	r26, r24
     8ee:	cb 01       	movw	r24, r22
     8f0:	69 81       	ldd	r22, Y+1	; 0x01
     8f2:	7a 81       	ldd	r23, Y+2	; 0x02
     8f4:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     8f8:	28 01       	movw	r4, r16
     8fa:	11 0f       	add	r17, r17
     8fc:	66 08       	sbc	r6, r6
     8fe:	77 08       	sbc	r7, r7
     900:	0e 94 37 0f 	call	0x1e6e	; 0x1e6e <get_ms>
     904:	64 19       	sub	r22, r4
     906:	75 09       	sbc	r23, r5
     908:	86 09       	sbc	r24, r6
     90a:	97 09       	sbc	r25, r7
     90c:	0e 94 eb 05 	call	0xbd6	; 0xbd6 <__floatunsisf>
     910:	9b 01       	movw	r18, r22
     912:	ac 01       	movw	r20, r24
     914:	c7 01       	movw	r24, r14
     916:	b6 01       	movw	r22, r12
     918:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__gesf2>
     91c:	18 16       	cp	r1, r24
     91e:	84 f3       	brlt	.-32     	; 0x900 <__stack+0x1>
		speed = 0;
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     920:	2a e0       	ldi	r18, 0x0A	; 10
     922:	37 ed       	ldi	r19, 0xD7	; 215
     924:	43 e2       	ldi	r20, 0x23	; 35
     926:	5c e3       	ldi	r21, 0x3C	; 60
     928:	c5 01       	movw	r24, r10
     92a:	b4 01       	movw	r22, r8
     92c:	0e 94 44 05 	call	0xa88	; 0xa88 <__addsf3>
     930:	4b 01       	movw	r8, r22
     932:	5c 01       	movw	r10, r24
     934:	69 85       	ldd	r22, Y+9	; 0x09
     936:	7a 85       	ldd	r23, Y+10	; 0x0a
     938:	61 50       	subi	r22, 0x01	; 1
     93a:	71 09       	sbc	r23, r1
     93c:	7a 87       	std	Y+10, r23	; 0x0a
     93e:	69 87       	std	Y+9, r22	; 0x09
     940:	67 2b       	or	r22, r23
     942:	09 f0       	breq	.+2      	; 0x946 <__stack+0x47>
     944:	88 cf       	rjmp	.-240    	; 0x856 <__LOCK_REGION_LENGTH__+0x456>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = speed;
     946:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <speedCurrentRight+0x1>
     94a:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <speedCurrentRight>
		speedCurrentLeft = -speed;
     94e:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <speedCurrentLeft+0x1>
     952:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <speedCurrentLeft>
		break;
     956:	06 c0       	rjmp	.+12     	; 0x964 <__stack+0x65>
		
		default:		//The default case puts the robot into a full stop and is only used in emergency situations. Using this case is not recommended as it applies the brakes instantaneously and therefore creates an extreme jerk in the acceleration curve.
		set_motors(0,0);
     958:	60 e0       	ldi	r22, 0x00	; 0
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	80 e0       	ldi	r24, 0x00	; 0
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>
		break;
	}
}
     964:	66 96       	adiw	r28, 0x16	; 22
     966:	0f b6       	in	r0, 0x3f	; 63
     968:	f8 94       	cli
     96a:	de bf       	out	0x3e, r29	; 62
     96c:	0f be       	out	0x3f, r0	; 63
     96e:	cd bf       	out	0x3d, r28	; 61
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	ff 90       	pop	r15
     97a:	ef 90       	pop	r14
     97c:	df 90       	pop	r13
     97e:	cf 90       	pop	r12
     980:	bf 90       	pop	r11
     982:	af 90       	pop	r10
     984:	9f 90       	pop	r9
     986:	8f 90       	pop	r8
     988:	7f 90       	pop	r7
     98a:	6f 90       	pop	r6
     98c:	5f 90       	pop	r5
     98e:	4f 90       	pop	r4
     990:	3f 90       	pop	r3
     992:	2f 90       	pop	r2
     994:	08 95       	ret

00000996 <initialize>:
#include "motoren.h"

int situations[3]={LOW, LOW, LOW};

void initialize()
{
     996:	cf 93       	push	r28
     998:	df 93       	push	r29

	
	unsigned int counter;
	pololu_3pi_init(2000);								//initialize sensor value from 0 to 2000
     99a:	80 ed       	ldi	r24, 0xD0	; 208
     99c:	97 e0       	ldi	r25, 0x07	; 7
     99e:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B))					//this function is activated until button B is pressed.
     9a2:	1b c0       	rjmp	.+54     	; 0x9da <initialize+0x44>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     9a4:	0e 94 70 08 	call	0x10e0	; 0x10e0 <read_battery_millivolts_3pi>
     9a8:	ec 01       	movw	r28, r24
	{
		int bat = read_battery_millivolts();
		clear();
     9aa:	0e 94 81 0c 	call	0x1902	; 0x1902 <clear>
		print_long(bat);								//print battery voltage in millivolts on the LCD
     9ae:	be 01       	movw	r22, r28
     9b0:	dd 0f       	add	r29, r29
     9b2:	88 0b       	sbc	r24, r24
     9b4:	99 0b       	sbc	r25, r25
     9b6:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <print_long>
		print("mV");
     9ba:	81 e3       	ldi	r24, 0x31	; 49
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	0e 94 90 0c 	call	0x1920	; 0x1920 <print>
		lcd_goto_xy(0,1);
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <lcd_goto_xy>
		print("druk B");								//print instruction to continue
     9ca:	84 e3       	ldi	r24, 0x34	; 52
     9cc:	91 e0       	ldi	r25, 0x01	; 1
     9ce:	0e 94 90 0c 	call	0x1920	; 0x1920 <print>
		delay_ms(100);
     9d2:	84 e6       	ldi	r24, 0x64	; 100
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>

	
	unsigned int counter;
	pololu_3pi_init(2000);								//initialize sensor value from 0 to 2000
	
	while(!button_is_pressed(BUTTON_B))					//this function is activated until button B is pressed.
     9da:	80 e1       	ldi	r24, 0x10	; 16
     9dc:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <button_is_pressed>
     9e0:	88 23       	and	r24, r24
     9e2:	01 f3       	breq	.-64     	; 0x9a4 <initialize+0xe>
		lcd_goto_xy(0,1);
		print("druk B");								//print instruction to continue
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);					//button B is pressed
     9e4:	80 e1       	ldi	r24, 0x10	; 16
     9e6:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <wait_for_button_release>
	delay_ms(1000);
     9ea:	88 ee       	ldi	r24, 0xE8	; 232
     9ec:	93 e0       	ldi	r25, 0x03	; 3
     9ee:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
     9f2:	cc ee       	ldi	r28, 0xEC	; 236
     9f4:	df ef       	ldi	r29, 0xFF	; 255
	
	for(counter=0;counter<80;counter++)					//calibrating line sensors
	{
		if(counter < 20 || counter >= 60)
     9f6:	c8 32       	cpi	r28, 0x28	; 40
     9f8:	d1 05       	cpc	r29, r1
     9fa:	38 f0       	brcs	.+14     	; 0xa0a <initialize+0x74>
		set_motors(40,-40);
     9fc:	68 ed       	ldi	r22, 0xD8	; 216
     9fe:	7f ef       	ldi	r23, 0xFF	; 255
     a00:	88 e2       	ldi	r24, 0x28	; 40
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>
     a08:	06 c0       	rjmp	.+12     	; 0xa16 <initialize+0x80>
		else
		set_motors(-40,40);
     a0a:	68 e2       	ldi	r22, 0x28	; 40
     a0c:	70 e0       	ldi	r23, 0x00	; 0
     a0e:	88 ed       	ldi	r24, 0xD8	; 216
     a10:	9f ef       	ldi	r25, 0xFF	; 255
     a12:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	0e 94 51 0f 	call	0x1ea2	; 0x1ea2 <calibrate_line_sensors>
		delay_ms(20);
     a1c:	84 e1       	ldi	r24, 0x14	; 20
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
     a24:	21 96       	adiw	r28, 0x01	; 1
	}
	
	wait_for_button_release(BUTTON_B);					//button B is pressed
	delay_ms(1000);
	
	for(counter=0;counter<80;counter++)					//calibrating line sensors
     a26:	cc 33       	cpi	r28, 0x3C	; 60
     a28:	d1 05       	cpc	r29, r1
     a2a:	29 f7       	brne	.-54     	; 0x9f6 <initialize+0x60>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	
	set_motors(0,0);
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <set_motors>
	
	while(!button_is_pressed(BUTTON_B))										//function is activated until button B is pressed
     a38:	15 c0       	rjmp	.+42     	; 0xa64 <initialize+0xce>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);			//reading the sensors to determine the position of the robot
     a3a:	61 e0       	ldi	r22, 0x01	; 1
     a3c:	81 e3       	ldi	r24, 0x31	; 49
     a3e:	92 e0       	ldi	r25, 0x02	; 2
     a40:	0e 94 57 0f 	call	0x1eae	; 0x1eae <read_line>
     a44:	ec 01       	movw	r28, r24
		clear();															//clear LCD
     a46:	0e 94 81 0c 	call	0x1902	; 0x1902 <clear>
		print("  ");
     a4a:	8b e3       	ldi	r24, 0x3B	; 59
     a4c:	91 e0       	ldi	r25, 0x01	; 1
     a4e:	0e 94 90 0c 	call	0x1920	; 0x1920 <print>
		print_long(position);												//print position of the robot compared to the line
     a52:	be 01       	movw	r22, r28
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <print_long>
		delay_ms(100);
     a5c:	84 e6       	ldi	r24, 0x64	; 100
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
		delay_ms(20);
	}
	
	set_motors(0,0);
	
	while(!button_is_pressed(BUTTON_B))										//function is activated until button B is pressed
     a64:	80 e1       	ldi	r24, 0x10	; 16
     a66:	0e 94 01 0e 	call	0x1c02	; 0x1c02 <button_is_pressed>
     a6a:	88 23       	and	r24, r24
     a6c:	31 f3       	breq	.-52     	; 0xa3a <initialize+0xa4>
		print("  ");
		print_long(position);												//print position of the robot compared to the line
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);										//button B is pressed
     a6e:	80 e1       	ldi	r24, 0x10	; 16
     a70:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <wait_for_button_release>
	clear();																//clear LCD
     a74:	0e 94 81 0c 	call	0x1902	; 0x1902 <clear>
	print("Go!");
     a78:	8e e3       	ldi	r24, 0x3E	; 62
     a7a:	91 e0       	ldi	r25, 0x01	; 1
     a7c:	0e 94 90 0c 	call	0x1920	; 0x1920 <print>

}
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	08 95       	ret

00000a86 <__subsf3>:
     a86:	50 58       	subi	r21, 0x80	; 128

00000a88 <__addsf3>:
     a88:	bb 27       	eor	r27, r27
     a8a:	aa 27       	eor	r26, r26
     a8c:	0e 94 5b 05 	call	0xab6	; 0xab6 <__addsf3x>
     a90:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_round>
     a94:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_pscA>
     a98:	38 f0       	brcs	.+14     	; 0xaa8 <__addsf3+0x20>
     a9a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_pscB>
     a9e:	20 f0       	brcs	.+8      	; 0xaa8 <__addsf3+0x20>
     aa0:	39 f4       	brne	.+14     	; 0xab0 <__addsf3+0x28>
     aa2:	9f 3f       	cpi	r25, 0xFF	; 255
     aa4:	19 f4       	brne	.+6      	; 0xaac <__addsf3+0x24>
     aa6:	26 f4       	brtc	.+8      	; 0xab0 <__addsf3+0x28>
     aa8:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_nan>
     aac:	0e f4       	brtc	.+2      	; 0xab0 <__addsf3+0x28>
     aae:	e0 95       	com	r30
     ab0:	e7 fb       	bst	r30, 7
     ab2:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_inf>

00000ab6 <__addsf3x>:
     ab6:	e9 2f       	mov	r30, r25
     ab8:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_split3>
     abc:	58 f3       	brcs	.-42     	; 0xa94 <__addsf3+0xc>
     abe:	ba 17       	cp	r27, r26
     ac0:	62 07       	cpc	r22, r18
     ac2:	73 07       	cpc	r23, r19
     ac4:	84 07       	cpc	r24, r20
     ac6:	95 07       	cpc	r25, r21
     ac8:	20 f0       	brcs	.+8      	; 0xad2 <__addsf3x+0x1c>
     aca:	79 f4       	brne	.+30     	; 0xaea <__addsf3x+0x34>
     acc:	a6 f5       	brtc	.+104    	; 0xb36 <__addsf3x+0x80>
     ace:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__fp_zero>
     ad2:	0e f4       	brtc	.+2      	; 0xad6 <__addsf3x+0x20>
     ad4:	e0 95       	com	r30
     ad6:	0b 2e       	mov	r0, r27
     ad8:	ba 2f       	mov	r27, r26
     ada:	a0 2d       	mov	r26, r0
     adc:	0b 01       	movw	r0, r22
     ade:	b9 01       	movw	r22, r18
     ae0:	90 01       	movw	r18, r0
     ae2:	0c 01       	movw	r0, r24
     ae4:	ca 01       	movw	r24, r20
     ae6:	a0 01       	movw	r20, r0
     ae8:	11 24       	eor	r1, r1
     aea:	ff 27       	eor	r31, r31
     aec:	59 1b       	sub	r21, r25
     aee:	99 f0       	breq	.+38     	; 0xb16 <__addsf3x+0x60>
     af0:	59 3f       	cpi	r21, 0xF9	; 249
     af2:	50 f4       	brcc	.+20     	; 0xb08 <__addsf3x+0x52>
     af4:	50 3e       	cpi	r21, 0xE0	; 224
     af6:	68 f1       	brcs	.+90     	; 0xb52 <__addsf3x+0x9c>
     af8:	1a 16       	cp	r1, r26
     afa:	f0 40       	sbci	r31, 0x00	; 0
     afc:	a2 2f       	mov	r26, r18
     afe:	23 2f       	mov	r18, r19
     b00:	34 2f       	mov	r19, r20
     b02:	44 27       	eor	r20, r20
     b04:	58 5f       	subi	r21, 0xF8	; 248
     b06:	f3 cf       	rjmp	.-26     	; 0xaee <__addsf3x+0x38>
     b08:	46 95       	lsr	r20
     b0a:	37 95       	ror	r19
     b0c:	27 95       	ror	r18
     b0e:	a7 95       	ror	r26
     b10:	f0 40       	sbci	r31, 0x00	; 0
     b12:	53 95       	inc	r21
     b14:	c9 f7       	brne	.-14     	; 0xb08 <__addsf3x+0x52>
     b16:	7e f4       	brtc	.+30     	; 0xb36 <__addsf3x+0x80>
     b18:	1f 16       	cp	r1, r31
     b1a:	ba 0b       	sbc	r27, r26
     b1c:	62 0b       	sbc	r22, r18
     b1e:	73 0b       	sbc	r23, r19
     b20:	84 0b       	sbc	r24, r20
     b22:	ba f0       	brmi	.+46     	; 0xb52 <__addsf3x+0x9c>
     b24:	91 50       	subi	r25, 0x01	; 1
     b26:	a1 f0       	breq	.+40     	; 0xb50 <__addsf3x+0x9a>
     b28:	ff 0f       	add	r31, r31
     b2a:	bb 1f       	adc	r27, r27
     b2c:	66 1f       	adc	r22, r22
     b2e:	77 1f       	adc	r23, r23
     b30:	88 1f       	adc	r24, r24
     b32:	c2 f7       	brpl	.-16     	; 0xb24 <__addsf3x+0x6e>
     b34:	0e c0       	rjmp	.+28     	; 0xb52 <__addsf3x+0x9c>
     b36:	ba 0f       	add	r27, r26
     b38:	62 1f       	adc	r22, r18
     b3a:	73 1f       	adc	r23, r19
     b3c:	84 1f       	adc	r24, r20
     b3e:	48 f4       	brcc	.+18     	; 0xb52 <__addsf3x+0x9c>
     b40:	87 95       	ror	r24
     b42:	77 95       	ror	r23
     b44:	67 95       	ror	r22
     b46:	b7 95       	ror	r27
     b48:	f7 95       	ror	r31
     b4a:	9e 3f       	cpi	r25, 0xFE	; 254
     b4c:	08 f0       	brcs	.+2      	; 0xb50 <__addsf3x+0x9a>
     b4e:	b0 cf       	rjmp	.-160    	; 0xab0 <__addsf3+0x28>
     b50:	93 95       	inc	r25
     b52:	88 0f       	add	r24, r24
     b54:	08 f0       	brcs	.+2      	; 0xb58 <__addsf3x+0xa2>
     b56:	99 27       	eor	r25, r25
     b58:	ee 0f       	add	r30, r30
     b5a:	97 95       	ror	r25
     b5c:	87 95       	ror	r24
     b5e:	08 95       	ret

00000b60 <__cmpsf2>:
     b60:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_cmp>
     b64:	08 f4       	brcc	.+2      	; 0xb68 <__cmpsf2+0x8>
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	08 95       	ret

00000b6a <__fixsfsi>:
     b6a:	0e 94 bc 05 	call	0xb78	; 0xb78 <__fixunssfsi>
     b6e:	68 94       	set
     b70:	b1 11       	cpse	r27, r1
     b72:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     b76:	08 95       	ret

00000b78 <__fixunssfsi>:
     b78:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__fp_splitA>
     b7c:	88 f0       	brcs	.+34     	; 0xba0 <__fixunssfsi+0x28>
     b7e:	9f 57       	subi	r25, 0x7F	; 127
     b80:	98 f0       	brcs	.+38     	; 0xba8 <__fixunssfsi+0x30>
     b82:	b9 2f       	mov	r27, r25
     b84:	99 27       	eor	r25, r25
     b86:	b7 51       	subi	r27, 0x17	; 23
     b88:	b0 f0       	brcs	.+44     	; 0xbb6 <__fixunssfsi+0x3e>
     b8a:	e1 f0       	breq	.+56     	; 0xbc4 <__fixunssfsi+0x4c>
     b8c:	66 0f       	add	r22, r22
     b8e:	77 1f       	adc	r23, r23
     b90:	88 1f       	adc	r24, r24
     b92:	99 1f       	adc	r25, r25
     b94:	1a f0       	brmi	.+6      	; 0xb9c <__fixunssfsi+0x24>
     b96:	ba 95       	dec	r27
     b98:	c9 f7       	brne	.-14     	; 0xb8c <__fixunssfsi+0x14>
     b9a:	14 c0       	rjmp	.+40     	; 0xbc4 <__fixunssfsi+0x4c>
     b9c:	b1 30       	cpi	r27, 0x01	; 1
     b9e:	91 f0       	breq	.+36     	; 0xbc4 <__fixunssfsi+0x4c>
     ba0:	0e 94 96 06 	call	0xd2c	; 0xd2c <__fp_zero>
     ba4:	b1 e0       	ldi	r27, 0x01	; 1
     ba6:	08 95       	ret
     ba8:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__fp_zero>
     bac:	67 2f       	mov	r22, r23
     bae:	78 2f       	mov	r23, r24
     bb0:	88 27       	eor	r24, r24
     bb2:	b8 5f       	subi	r27, 0xF8	; 248
     bb4:	39 f0       	breq	.+14     	; 0xbc4 <__fixunssfsi+0x4c>
     bb6:	b9 3f       	cpi	r27, 0xF9	; 249
     bb8:	cc f3       	brlt	.-14     	; 0xbac <__fixunssfsi+0x34>
     bba:	86 95       	lsr	r24
     bbc:	77 95       	ror	r23
     bbe:	67 95       	ror	r22
     bc0:	b3 95       	inc	r27
     bc2:	d9 f7       	brne	.-10     	; 0xbba <__fixunssfsi+0x42>
     bc4:	3e f4       	brtc	.+14     	; 0xbd4 <__fixunssfsi+0x5c>
     bc6:	90 95       	com	r25
     bc8:	80 95       	com	r24
     bca:	70 95       	com	r23
     bcc:	61 95       	neg	r22
     bce:	7f 4f       	sbci	r23, 0xFF	; 255
     bd0:	8f 4f       	sbci	r24, 0xFF	; 255
     bd2:	9f 4f       	sbci	r25, 0xFF	; 255
     bd4:	08 95       	ret

00000bd6 <__floatunsisf>:
     bd6:	e8 94       	clt
     bd8:	09 c0       	rjmp	.+18     	; 0xbec <__floatsisf+0x12>

00000bda <__floatsisf>:
     bda:	97 fb       	bst	r25, 7
     bdc:	3e f4       	brtc	.+14     	; 0xbec <__floatsisf+0x12>
     bde:	90 95       	com	r25
     be0:	80 95       	com	r24
     be2:	70 95       	com	r23
     be4:	61 95       	neg	r22
     be6:	7f 4f       	sbci	r23, 0xFF	; 255
     be8:	8f 4f       	sbci	r24, 0xFF	; 255
     bea:	9f 4f       	sbci	r25, 0xFF	; 255
     bec:	99 23       	and	r25, r25
     bee:	a9 f0       	breq	.+42     	; 0xc1a <__floatsisf+0x40>
     bf0:	f9 2f       	mov	r31, r25
     bf2:	96 e9       	ldi	r25, 0x96	; 150
     bf4:	bb 27       	eor	r27, r27
     bf6:	93 95       	inc	r25
     bf8:	f6 95       	lsr	r31
     bfa:	87 95       	ror	r24
     bfc:	77 95       	ror	r23
     bfe:	67 95       	ror	r22
     c00:	b7 95       	ror	r27
     c02:	f1 11       	cpse	r31, r1
     c04:	f8 cf       	rjmp	.-16     	; 0xbf6 <__floatsisf+0x1c>
     c06:	fa f4       	brpl	.+62     	; 0xc46 <__floatsisf+0x6c>
     c08:	bb 0f       	add	r27, r27
     c0a:	11 f4       	brne	.+4      	; 0xc10 <__floatsisf+0x36>
     c0c:	60 ff       	sbrs	r22, 0
     c0e:	1b c0       	rjmp	.+54     	; 0xc46 <__floatsisf+0x6c>
     c10:	6f 5f       	subi	r22, 0xFF	; 255
     c12:	7f 4f       	sbci	r23, 0xFF	; 255
     c14:	8f 4f       	sbci	r24, 0xFF	; 255
     c16:	9f 4f       	sbci	r25, 0xFF	; 255
     c18:	16 c0       	rjmp	.+44     	; 0xc46 <__floatsisf+0x6c>
     c1a:	88 23       	and	r24, r24
     c1c:	11 f0       	breq	.+4      	; 0xc22 <__floatsisf+0x48>
     c1e:	96 e9       	ldi	r25, 0x96	; 150
     c20:	11 c0       	rjmp	.+34     	; 0xc44 <__floatsisf+0x6a>
     c22:	77 23       	and	r23, r23
     c24:	21 f0       	breq	.+8      	; 0xc2e <__floatsisf+0x54>
     c26:	9e e8       	ldi	r25, 0x8E	; 142
     c28:	87 2f       	mov	r24, r23
     c2a:	76 2f       	mov	r23, r22
     c2c:	05 c0       	rjmp	.+10     	; 0xc38 <__floatsisf+0x5e>
     c2e:	66 23       	and	r22, r22
     c30:	71 f0       	breq	.+28     	; 0xc4e <__floatsisf+0x74>
     c32:	96 e8       	ldi	r25, 0x86	; 134
     c34:	86 2f       	mov	r24, r22
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	60 e0       	ldi	r22, 0x00	; 0
     c3a:	2a f0       	brmi	.+10     	; 0xc46 <__floatsisf+0x6c>
     c3c:	9a 95       	dec	r25
     c3e:	66 0f       	add	r22, r22
     c40:	77 1f       	adc	r23, r23
     c42:	88 1f       	adc	r24, r24
     c44:	da f7       	brpl	.-10     	; 0xc3c <__floatsisf+0x62>
     c46:	88 0f       	add	r24, r24
     c48:	96 95       	lsr	r25
     c4a:	87 95       	ror	r24
     c4c:	97 f9       	bld	r25, 7
     c4e:	08 95       	ret

00000c50 <__fp_cmp>:
     c50:	99 0f       	add	r25, r25
     c52:	00 08       	sbc	r0, r0
     c54:	55 0f       	add	r21, r21
     c56:	aa 0b       	sbc	r26, r26
     c58:	e0 e8       	ldi	r30, 0x80	; 128
     c5a:	fe ef       	ldi	r31, 0xFE	; 254
     c5c:	16 16       	cp	r1, r22
     c5e:	17 06       	cpc	r1, r23
     c60:	e8 07       	cpc	r30, r24
     c62:	f9 07       	cpc	r31, r25
     c64:	c0 f0       	brcs	.+48     	; 0xc96 <__fp_cmp+0x46>
     c66:	12 16       	cp	r1, r18
     c68:	13 06       	cpc	r1, r19
     c6a:	e4 07       	cpc	r30, r20
     c6c:	f5 07       	cpc	r31, r21
     c6e:	98 f0       	brcs	.+38     	; 0xc96 <__fp_cmp+0x46>
     c70:	62 1b       	sub	r22, r18
     c72:	73 0b       	sbc	r23, r19
     c74:	84 0b       	sbc	r24, r20
     c76:	95 0b       	sbc	r25, r21
     c78:	39 f4       	brne	.+14     	; 0xc88 <__fp_cmp+0x38>
     c7a:	0a 26       	eor	r0, r26
     c7c:	61 f0       	breq	.+24     	; 0xc96 <__fp_cmp+0x46>
     c7e:	23 2b       	or	r18, r19
     c80:	24 2b       	or	r18, r20
     c82:	25 2b       	or	r18, r21
     c84:	21 f4       	brne	.+8      	; 0xc8e <__fp_cmp+0x3e>
     c86:	08 95       	ret
     c88:	0a 26       	eor	r0, r26
     c8a:	09 f4       	brne	.+2      	; 0xc8e <__fp_cmp+0x3e>
     c8c:	a1 40       	sbci	r26, 0x01	; 1
     c8e:	a6 95       	lsr	r26
     c90:	8f ef       	ldi	r24, 0xFF	; 255
     c92:	81 1d       	adc	r24, r1
     c94:	81 1d       	adc	r24, r1
     c96:	08 95       	ret

00000c98 <__fp_inf>:
     c98:	97 f9       	bld	r25, 7
     c9a:	9f 67       	ori	r25, 0x7F	; 127
     c9c:	80 e8       	ldi	r24, 0x80	; 128
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	60 e0       	ldi	r22, 0x00	; 0
     ca2:	08 95       	ret

00000ca4 <__fp_nan>:
     ca4:	9f ef       	ldi	r25, 0xFF	; 255
     ca6:	80 ec       	ldi	r24, 0xC0	; 192
     ca8:	08 95       	ret

00000caa <__fp_pscA>:
     caa:	00 24       	eor	r0, r0
     cac:	0a 94       	dec	r0
     cae:	16 16       	cp	r1, r22
     cb0:	17 06       	cpc	r1, r23
     cb2:	18 06       	cpc	r1, r24
     cb4:	09 06       	cpc	r0, r25
     cb6:	08 95       	ret

00000cb8 <__fp_pscB>:
     cb8:	00 24       	eor	r0, r0
     cba:	0a 94       	dec	r0
     cbc:	12 16       	cp	r1, r18
     cbe:	13 06       	cpc	r1, r19
     cc0:	14 06       	cpc	r1, r20
     cc2:	05 06       	cpc	r0, r21
     cc4:	08 95       	ret

00000cc6 <__fp_round>:
     cc6:	09 2e       	mov	r0, r25
     cc8:	03 94       	inc	r0
     cca:	00 0c       	add	r0, r0
     ccc:	11 f4       	brne	.+4      	; 0xcd2 <__fp_round+0xc>
     cce:	88 23       	and	r24, r24
     cd0:	52 f0       	brmi	.+20     	; 0xce6 <__fp_round+0x20>
     cd2:	bb 0f       	add	r27, r27
     cd4:	40 f4       	brcc	.+16     	; 0xce6 <__fp_round+0x20>
     cd6:	bf 2b       	or	r27, r31
     cd8:	11 f4       	brne	.+4      	; 0xcde <__fp_round+0x18>
     cda:	60 ff       	sbrs	r22, 0
     cdc:	04 c0       	rjmp	.+8      	; 0xce6 <__fp_round+0x20>
     cde:	6f 5f       	subi	r22, 0xFF	; 255
     ce0:	7f 4f       	sbci	r23, 0xFF	; 255
     ce2:	8f 4f       	sbci	r24, 0xFF	; 255
     ce4:	9f 4f       	sbci	r25, 0xFF	; 255
     ce6:	08 95       	ret

00000ce8 <__fp_split3>:
     ce8:	57 fd       	sbrc	r21, 7
     cea:	90 58       	subi	r25, 0x80	; 128
     cec:	44 0f       	add	r20, r20
     cee:	55 1f       	adc	r21, r21
     cf0:	59 f0       	breq	.+22     	; 0xd08 <__fp_splitA+0x10>
     cf2:	5f 3f       	cpi	r21, 0xFF	; 255
     cf4:	71 f0       	breq	.+28     	; 0xd12 <__fp_splitA+0x1a>
     cf6:	47 95       	ror	r20

00000cf8 <__fp_splitA>:
     cf8:	88 0f       	add	r24, r24
     cfa:	97 fb       	bst	r25, 7
     cfc:	99 1f       	adc	r25, r25
     cfe:	61 f0       	breq	.+24     	; 0xd18 <__fp_splitA+0x20>
     d00:	9f 3f       	cpi	r25, 0xFF	; 255
     d02:	79 f0       	breq	.+30     	; 0xd22 <__fp_splitA+0x2a>
     d04:	87 95       	ror	r24
     d06:	08 95       	ret
     d08:	12 16       	cp	r1, r18
     d0a:	13 06       	cpc	r1, r19
     d0c:	14 06       	cpc	r1, r20
     d0e:	55 1f       	adc	r21, r21
     d10:	f2 cf       	rjmp	.-28     	; 0xcf6 <__fp_split3+0xe>
     d12:	46 95       	lsr	r20
     d14:	f1 df       	rcall	.-30     	; 0xcf8 <__fp_splitA>
     d16:	08 c0       	rjmp	.+16     	; 0xd28 <__fp_splitA+0x30>
     d18:	16 16       	cp	r1, r22
     d1a:	17 06       	cpc	r1, r23
     d1c:	18 06       	cpc	r1, r24
     d1e:	99 1f       	adc	r25, r25
     d20:	f1 cf       	rjmp	.-30     	; 0xd04 <__fp_splitA+0xc>
     d22:	86 95       	lsr	r24
     d24:	71 05       	cpc	r23, r1
     d26:	61 05       	cpc	r22, r1
     d28:	08 94       	sec
     d2a:	08 95       	ret

00000d2c <__fp_zero>:
     d2c:	e8 94       	clt

00000d2e <__fp_szero>:
     d2e:	bb 27       	eor	r27, r27
     d30:	66 27       	eor	r22, r22
     d32:	77 27       	eor	r23, r23
     d34:	cb 01       	movw	r24, r22
     d36:	97 f9       	bld	r25, 7
     d38:	08 95       	ret

00000d3a <__gesf2>:
     d3a:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_cmp>
     d3e:	08 f4       	brcc	.+2      	; 0xd42 <__gesf2+0x8>
     d40:	8f ef       	ldi	r24, 0xFF	; 255
     d42:	08 95       	ret

00000d44 <__mulsf3>:
     d44:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__mulsf3x>
     d48:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_round>
     d4c:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_pscA>
     d50:	38 f0       	brcs	.+14     	; 0xd60 <__mulsf3+0x1c>
     d52:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_pscB>
     d56:	20 f0       	brcs	.+8      	; 0xd60 <__mulsf3+0x1c>
     d58:	95 23       	and	r25, r21
     d5a:	11 f0       	breq	.+4      	; 0xd60 <__mulsf3+0x1c>
     d5c:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_inf>
     d60:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_nan>
     d64:	11 24       	eor	r1, r1
     d66:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>

00000d6a <__mulsf3x>:
     d6a:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_split3>
     d6e:	70 f3       	brcs	.-36     	; 0xd4c <__mulsf3+0x8>

00000d70 <__mulsf3_pse>:
     d70:	95 9f       	mul	r25, r21
     d72:	c1 f3       	breq	.-16     	; 0xd64 <__mulsf3+0x20>
     d74:	95 0f       	add	r25, r21
     d76:	50 e0       	ldi	r21, 0x00	; 0
     d78:	55 1f       	adc	r21, r21
     d7a:	62 9f       	mul	r22, r18
     d7c:	f0 01       	movw	r30, r0
     d7e:	72 9f       	mul	r23, r18
     d80:	bb 27       	eor	r27, r27
     d82:	f0 0d       	add	r31, r0
     d84:	b1 1d       	adc	r27, r1
     d86:	63 9f       	mul	r22, r19
     d88:	aa 27       	eor	r26, r26
     d8a:	f0 0d       	add	r31, r0
     d8c:	b1 1d       	adc	r27, r1
     d8e:	aa 1f       	adc	r26, r26
     d90:	64 9f       	mul	r22, r20
     d92:	66 27       	eor	r22, r22
     d94:	b0 0d       	add	r27, r0
     d96:	a1 1d       	adc	r26, r1
     d98:	66 1f       	adc	r22, r22
     d9a:	82 9f       	mul	r24, r18
     d9c:	22 27       	eor	r18, r18
     d9e:	b0 0d       	add	r27, r0
     da0:	a1 1d       	adc	r26, r1
     da2:	62 1f       	adc	r22, r18
     da4:	73 9f       	mul	r23, r19
     da6:	b0 0d       	add	r27, r0
     da8:	a1 1d       	adc	r26, r1
     daa:	62 1f       	adc	r22, r18
     dac:	83 9f       	mul	r24, r19
     dae:	a0 0d       	add	r26, r0
     db0:	61 1d       	adc	r22, r1
     db2:	22 1f       	adc	r18, r18
     db4:	74 9f       	mul	r23, r20
     db6:	33 27       	eor	r19, r19
     db8:	a0 0d       	add	r26, r0
     dba:	61 1d       	adc	r22, r1
     dbc:	23 1f       	adc	r18, r19
     dbe:	84 9f       	mul	r24, r20
     dc0:	60 0d       	add	r22, r0
     dc2:	21 1d       	adc	r18, r1
     dc4:	82 2f       	mov	r24, r18
     dc6:	76 2f       	mov	r23, r22
     dc8:	6a 2f       	mov	r22, r26
     dca:	11 24       	eor	r1, r1
     dcc:	9f 57       	subi	r25, 0x7F	; 127
     dce:	50 40       	sbci	r21, 0x00	; 0
     dd0:	9a f0       	brmi	.+38     	; 0xdf8 <__mulsf3_pse+0x88>
     dd2:	f1 f0       	breq	.+60     	; 0xe10 <__mulsf3_pse+0xa0>
     dd4:	88 23       	and	r24, r24
     dd6:	4a f0       	brmi	.+18     	; 0xdea <__mulsf3_pse+0x7a>
     dd8:	ee 0f       	add	r30, r30
     dda:	ff 1f       	adc	r31, r31
     ddc:	bb 1f       	adc	r27, r27
     dde:	66 1f       	adc	r22, r22
     de0:	77 1f       	adc	r23, r23
     de2:	88 1f       	adc	r24, r24
     de4:	91 50       	subi	r25, 0x01	; 1
     de6:	50 40       	sbci	r21, 0x00	; 0
     de8:	a9 f7       	brne	.-22     	; 0xdd4 <__mulsf3_pse+0x64>
     dea:	9e 3f       	cpi	r25, 0xFE	; 254
     dec:	51 05       	cpc	r21, r1
     dee:	80 f0       	brcs	.+32     	; 0xe10 <__mulsf3_pse+0xa0>
     df0:	0c 94 4c 06 	jmp	0xc98	; 0xc98 <__fp_inf>
     df4:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     df8:	5f 3f       	cpi	r21, 0xFF	; 255
     dfa:	e4 f3       	brlt	.-8      	; 0xdf4 <__mulsf3_pse+0x84>
     dfc:	98 3e       	cpi	r25, 0xE8	; 232
     dfe:	d4 f3       	brlt	.-12     	; 0xdf4 <__mulsf3_pse+0x84>
     e00:	86 95       	lsr	r24
     e02:	77 95       	ror	r23
     e04:	67 95       	ror	r22
     e06:	b7 95       	ror	r27
     e08:	f7 95       	ror	r31
     e0a:	e7 95       	ror	r30
     e0c:	9f 5f       	subi	r25, 0xFF	; 255
     e0e:	c1 f7       	brne	.-16     	; 0xe00 <__mulsf3_pse+0x90>
     e10:	fe 2b       	or	r31, r30
     e12:	88 0f       	add	r24, r24
     e14:	91 1d       	adc	r25, r1
     e16:	96 95       	lsr	r25
     e18:	87 95       	ror	r24
     e1a:	97 f9       	bld	r25, 7
     e1c:	08 95       	ret

00000e1e <sin>:
     e1e:	9f 93       	push	r25
     e20:	0e 94 27 07 	call	0xe4e	; 0xe4e <__fp_rempio2>
     e24:	0f 90       	pop	r0
     e26:	07 fc       	sbrc	r0, 7
     e28:	ee 5f       	subi	r30, 0xFE	; 254
     e2a:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_sinus>

00000e2e <__fp_mpack>:
     e2e:	9f 3f       	cpi	r25, 0xFF	; 255
     e30:	31 f0       	breq	.+12     	; 0xe3e <__fp_mpack_finite+0xc>

00000e32 <__fp_mpack_finite>:
     e32:	91 50       	subi	r25, 0x01	; 1
     e34:	20 f4       	brcc	.+8      	; 0xe3e <__fp_mpack_finite+0xc>
     e36:	87 95       	ror	r24
     e38:	77 95       	ror	r23
     e3a:	67 95       	ror	r22
     e3c:	b7 95       	ror	r27
     e3e:	88 0f       	add	r24, r24
     e40:	91 1d       	adc	r25, r1
     e42:	96 95       	lsr	r25
     e44:	87 95       	ror	r24
     e46:	97 f9       	bld	r25, 7
     e48:	08 95       	ret
     e4a:	0c 94 52 06 	jmp	0xca4	; 0xca4 <__fp_nan>

00000e4e <__fp_rempio2>:
     e4e:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__fp_splitA>
     e52:	d8 f3       	brcs	.-10     	; 0xe4a <__fp_mpack_finite+0x18>
     e54:	e8 94       	clt
     e56:	e0 e0       	ldi	r30, 0x00	; 0
     e58:	bb 27       	eor	r27, r27
     e5a:	9f 57       	subi	r25, 0x7F	; 127
     e5c:	f0 f0       	brcs	.+60     	; 0xe9a <__fp_rempio2+0x4c>
     e5e:	2a ed       	ldi	r18, 0xDA	; 218
     e60:	3f e0       	ldi	r19, 0x0F	; 15
     e62:	49 ec       	ldi	r20, 0xC9	; 201
     e64:	06 c0       	rjmp	.+12     	; 0xe72 <__fp_rempio2+0x24>
     e66:	ee 0f       	add	r30, r30
     e68:	bb 0f       	add	r27, r27
     e6a:	66 1f       	adc	r22, r22
     e6c:	77 1f       	adc	r23, r23
     e6e:	88 1f       	adc	r24, r24
     e70:	28 f0       	brcs	.+10     	; 0xe7c <__fp_rempio2+0x2e>
     e72:	b2 3a       	cpi	r27, 0xA2	; 162
     e74:	62 07       	cpc	r22, r18
     e76:	73 07       	cpc	r23, r19
     e78:	84 07       	cpc	r24, r20
     e7a:	28 f0       	brcs	.+10     	; 0xe86 <__fp_rempio2+0x38>
     e7c:	b2 5a       	subi	r27, 0xA2	; 162
     e7e:	62 0b       	sbc	r22, r18
     e80:	73 0b       	sbc	r23, r19
     e82:	84 0b       	sbc	r24, r20
     e84:	e3 95       	inc	r30
     e86:	9a 95       	dec	r25
     e88:	72 f7       	brpl	.-36     	; 0xe66 <__fp_rempio2+0x18>
     e8a:	80 38       	cpi	r24, 0x80	; 128
     e8c:	30 f4       	brcc	.+12     	; 0xe9a <__fp_rempio2+0x4c>
     e8e:	9a 95       	dec	r25
     e90:	bb 0f       	add	r27, r27
     e92:	66 1f       	adc	r22, r22
     e94:	77 1f       	adc	r23, r23
     e96:	88 1f       	adc	r24, r24
     e98:	d2 f7       	brpl	.-12     	; 0xe8e <__fp_rempio2+0x40>
     e9a:	90 48       	sbci	r25, 0x80	; 128
     e9c:	0c 94 19 07 	jmp	0xe32	; 0xe32 <__fp_mpack_finite>

00000ea0 <__fp_sinus>:
     ea0:	ef 93       	push	r30
     ea2:	e0 ff       	sbrs	r30, 0
     ea4:	07 c0       	rjmp	.+14     	; 0xeb4 <__fp_sinus+0x14>
     ea6:	a2 ea       	ldi	r26, 0xA2	; 162
     ea8:	2a ed       	ldi	r18, 0xDA	; 218
     eaa:	3f e0       	ldi	r19, 0x0F	; 15
     eac:	49 ec       	ldi	r20, 0xC9	; 201
     eae:	5f eb       	ldi	r21, 0xBF	; 191
     eb0:	0e 94 5b 05 	call	0xab6	; 0xab6 <__addsf3x>
     eb4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_round>
     eb8:	0f 90       	pop	r0
     eba:	03 94       	inc	r0
     ebc:	01 fc       	sbrc	r0, 1
     ebe:	90 58       	subi	r25, 0x80	; 128
     ec0:	e8 e6       	ldi	r30, 0x68	; 104
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__fp_powsodd>

00000ec8 <__fp_powsodd>:
     ec8:	9f 93       	push	r25
     eca:	8f 93       	push	r24
     ecc:	7f 93       	push	r23
     ece:	6f 93       	push	r22
     ed0:	ff 93       	push	r31
     ed2:	ef 93       	push	r30
     ed4:	9b 01       	movw	r18, r22
     ed6:	ac 01       	movw	r20, r24
     ed8:	0e 94 a2 06 	call	0xd44	; 0xd44 <__mulsf3>
     edc:	ef 91       	pop	r30
     ede:	ff 91       	pop	r31
     ee0:	0e 94 78 07 	call	0xef0	; 0xef0 <__fp_powser>
     ee4:	2f 91       	pop	r18
     ee6:	3f 91       	pop	r19
     ee8:	4f 91       	pop	r20
     eea:	5f 91       	pop	r21
     eec:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__mulsf3>

00000ef0 <__fp_powser>:
     ef0:	df 93       	push	r29
     ef2:	cf 93       	push	r28
     ef4:	1f 93       	push	r17
     ef6:	0f 93       	push	r16
     ef8:	ff 92       	push	r15
     efa:	ef 92       	push	r14
     efc:	df 92       	push	r13
     efe:	7b 01       	movw	r14, r22
     f00:	8c 01       	movw	r16, r24
     f02:	68 94       	set
     f04:	06 c0       	rjmp	.+12     	; 0xf12 <__fp_powser+0x22>
     f06:	da 2e       	mov	r13, r26
     f08:	ef 01       	movw	r28, r30
     f0a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__mulsf3x>
     f0e:	fe 01       	movw	r30, r28
     f10:	e8 94       	clt
     f12:	a5 91       	lpm	r26, Z+
     f14:	25 91       	lpm	r18, Z+
     f16:	35 91       	lpm	r19, Z+
     f18:	45 91       	lpm	r20, Z+
     f1a:	55 91       	lpm	r21, Z+
     f1c:	a6 f3       	brts	.-24     	; 0xf06 <__fp_powser+0x16>
     f1e:	ef 01       	movw	r28, r30
     f20:	0e 94 5b 05 	call	0xab6	; 0xab6 <__addsf3x>
     f24:	fe 01       	movw	r30, r28
     f26:	97 01       	movw	r18, r14
     f28:	a8 01       	movw	r20, r16
     f2a:	da 94       	dec	r13
     f2c:	69 f7       	brne	.-38     	; 0xf08 <__fp_powser+0x18>
     f2e:	df 90       	pop	r13
     f30:	ef 90       	pop	r14
     f32:	ff 90       	pop	r15
     f34:	0f 91       	pop	r16
     f36:	1f 91       	pop	r17
     f38:	cf 91       	pop	r28
     f3a:	df 91       	pop	r29
     f3c:	08 95       	ret

00000f3e <_ZN15OrangutanAnalog7setModeEh.part.0>:
     f3e:	ec e7       	ldi	r30, 0x7C	; 124
     f40:	f0 e0       	ldi	r31, 0x00	; 0
     f42:	80 81       	ld	r24, Z
     f44:	8f 7d       	andi	r24, 0xDF	; 223
     f46:	80 83       	st	Z, r24
     f48:	08 95       	ret

00000f4a <_ZN15OrangutanAnalog7setModeEh>:
     f4a:	81 11       	cpse	r24, r1
     f4c:	03 c0       	rjmp	.+6      	; 0xf54 <_ZN15OrangutanAnalog7setModeEh+0xa>
     f4e:	0e 94 9f 07 	call	0xf3e	; 0xf3e <_ZN15OrangutanAnalog7setModeEh.part.0>
     f52:	08 95       	ret
     f54:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     f58:	80 62       	ori	r24, 0x20	; 32
     f5a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     f5e:	08 95       	ret

00000f60 <_ZN15OrangutanAnalog7getModeEv>:
     f60:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     f64:	85 fb       	bst	r24, 5
     f66:	88 27       	eor	r24, r24
     f68:	80 f9       	bld	r24, 0
     f6a:	08 95       	ret

00000f6c <_ZN15OrangutanAnalog16conversionResultEv>:
     f6c:	0e 94 b0 07 	call	0xf60	; 0xf60 <_ZN15OrangutanAnalog7getModeEv>
     f70:	88 23       	and	r24, r24
     f72:	21 f0       	breq	.+8      	; 0xf7c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     f74:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	08 95       	ret
     f7c:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     f80:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     f84:	08 95       	ret

00000f86 <_ZN15OrangutanAnalog15startConversionEhh>:
     f86:	80 32       	cpi	r24, 0x20	; 32
     f88:	a0 f4       	brcc	.+40     	; 0xfb2 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     f8a:	97 e8       	ldi	r25, 0x87	; 135
     f8c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     f90:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     f94:	66 23       	and	r22, r22
     f96:	11 f0       	breq	.+4      	; 0xf9c <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     f98:	90 6c       	ori	r25, 0xC0	; 192
     f9a:	02 c0       	rjmp	.+4      	; 0xfa0 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     f9c:	9f 77       	andi	r25, 0x7F	; 127
     f9e:	90 64       	ori	r25, 0x40	; 64
     fa0:	90 7e       	andi	r25, 0xE0	; 224
     fa2:	98 2b       	or	r25, r24
     fa4:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     fa8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fac:	80 64       	ori	r24, 0x40	; 64
     fae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fb2:	08 95       	ret

00000fb4 <_ZN15OrangutanAnalog11readAverageEhj>:
     fb4:	a0 e0       	ldi	r26, 0x00	; 0
     fb6:	b0 e0       	ldi	r27, 0x00	; 0
     fb8:	e0 ee       	ldi	r30, 0xE0	; 224
     fba:	f7 e0       	ldi	r31, 0x07	; 7
     fbc:	0c 94 2a 15 	jmp	0x2a54	; 0x2a54 <__prologue_saves__+0x14>
     fc0:	eb 01       	movw	r28, r22
     fc2:	60 e0       	ldi	r22, 0x00	; 0
     fc4:	0e 94 c3 07 	call	0xf86	; 0xf86 <_ZN15OrangutanAnalog15startConversionEhh>
     fc8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fcc:	86 fd       	sbrc	r24, 6
     fce:	fc cf       	rjmp	.-8      	; 0xfc8 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     fd0:	8e 01       	movw	r16, r28
     fd2:	c1 2c       	mov	r12, r1
     fd4:	d1 2c       	mov	r13, r1
     fd6:	76 01       	movw	r14, r12
     fd8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fdc:	80 64       	ori	r24, 0x40	; 64
     fde:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fe2:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fe6:	86 fd       	sbrc	r24, 6
     fe8:	fc cf       	rjmp	.-8      	; 0xfe2 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     fea:	0e 94 b6 07 	call	0xf6c	; 0xf6c <_ZN15OrangutanAnalog16conversionResultEv>
     fee:	c8 0e       	add	r12, r24
     ff0:	d9 1e       	adc	r13, r25
     ff2:	e1 1c       	adc	r14, r1
     ff4:	f1 1c       	adc	r15, r1
     ff6:	01 50       	subi	r16, 0x01	; 1
     ff8:	11 09       	sbc	r17, r1
     ffa:	01 15       	cp	r16, r1
     ffc:	11 05       	cpc	r17, r1
     ffe:	61 f7       	brne	.-40     	; 0xfd8 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1000:	ce 01       	movw	r24, r28
    1002:	96 95       	lsr	r25
    1004:	87 95       	ror	r24
    1006:	c0 34       	cpi	r28, 0x40	; 64
    1008:	d1 05       	cpc	r29, r1
    100a:	38 f4       	brcc	.+14     	; 0x101a <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    100c:	8c 0d       	add	r24, r12
    100e:	9d 1d       	adc	r25, r13
    1010:	be 01       	movw	r22, r28
    1012:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    1016:	cb 01       	movw	r24, r22
    1018:	0e c0       	rjmp	.+28     	; 0x1036 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    101a:	a7 01       	movw	r20, r14
    101c:	96 01       	movw	r18, r12
    101e:	28 0f       	add	r18, r24
    1020:	39 1f       	adc	r19, r25
    1022:	41 1d       	adc	r20, r1
    1024:	51 1d       	adc	r21, r1
    1026:	ca 01       	movw	r24, r20
    1028:	b9 01       	movw	r22, r18
    102a:	9e 01       	movw	r18, r28
    102c:	40 e0       	ldi	r20, 0x00	; 0
    102e:	50 e0       	ldi	r21, 0x00	; 0
    1030:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    1034:	c9 01       	movw	r24, r18
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	e8 e0       	ldi	r30, 0x08	; 8
    103c:	0c 94 46 15 	jmp	0x2a8c	; 0x2a8c <__epilogue_restores__+0x14>

00001040 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1040:	cf 92       	push	r12
    1042:	df 92       	push	r13
    1044:	ef 92       	push	r14
    1046:	ff 92       	push	r15
    1048:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
    104c:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
    1050:	9c 01       	movw	r18, r24
    1052:	0e 94 fe 14 	call	0x29fc	; 0x29fc <__umulhisi3>
    1056:	6b 01       	movw	r12, r22
    1058:	7c 01       	movw	r14, r24
    105a:	0e 94 b0 07 	call	0xf60	; 0xf60 <_ZN15OrangutanAnalog7getModeEv>
    105e:	88 23       	and	r24, r24
    1060:	59 f0       	breq	.+22     	; 0x1078 <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1062:	c7 01       	movw	r24, r14
    1064:	b6 01       	movw	r22, r12
    1066:	61 58       	subi	r22, 0x81	; 129
    1068:	7f 4f       	sbci	r23, 0xFF	; 255
    106a:	8f 4f       	sbci	r24, 0xFF	; 255
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	2f ef       	ldi	r18, 0xFF	; 255
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	40 e0       	ldi	r20, 0x00	; 0
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	0a c0       	rjmp	.+20     	; 0x108c <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1078:	c7 01       	movw	r24, r14
    107a:	b6 01       	movw	r22, r12
    107c:	61 50       	subi	r22, 0x01	; 1
    107e:	7e 4f       	sbci	r23, 0xFE	; 254
    1080:	8f 4f       	sbci	r24, 0xFF	; 255
    1082:	9f 4f       	sbci	r25, 0xFF	; 255
    1084:	2f ef       	ldi	r18, 0xFF	; 255
    1086:	33 e0       	ldi	r19, 0x03	; 3
    1088:	40 e0       	ldi	r20, 0x00	; 0
    108a:	50 e0       	ldi	r21, 0x00	; 0
    108c:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    1090:	c9 01       	movw	r24, r18
    1092:	ff 90       	pop	r15
    1094:	ef 90       	pop	r14
    1096:	df 90       	pop	r13
    1098:	cf 90       	pop	r12
    109a:	08 95       	ret

0000109c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    109c:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15OrangutanAnalog11readAverageEhj>
    10a0:	0e 94 20 08 	call	0x1040	; 0x1040 <_ZN15OrangutanAnalog12toMillivoltsEj>
    10a4:	08 95       	ret

000010a6 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    10a6:	1f 93       	push	r17
    10a8:	cf 93       	push	r28
    10aa:	df 93       	push	r29
    10ac:	0e 94 b0 07 	call	0xf60	; 0xf60 <_ZN15OrangutanAnalog7getModeEv>
    10b0:	18 2f       	mov	r17, r24
    10b2:	0e 94 9f 07 	call	0xf3e	; 0xf3e <_ZN15OrangutanAnalog7setModeEh.part.0>
    10b6:	6a e0       	ldi	r22, 0x0A	; 10
    10b8:	70 e0       	ldi	r23, 0x00	; 0
    10ba:	86 e0       	ldi	r24, 0x06	; 6
    10bc:	0e 94 4e 08 	call	0x109c	; 0x109c <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    10c0:	ec 01       	movw	r28, r24
    10c2:	81 2f       	mov	r24, r17
    10c4:	0e 94 a5 07 	call	0xf4a	; 0xf4a <_ZN15OrangutanAnalog7setModeEh>
    10c8:	ce 01       	movw	r24, r28
    10ca:	88 0f       	add	r24, r24
    10cc:	99 1f       	adc	r25, r25
    10ce:	8c 0f       	add	r24, r28
    10d0:	9d 1f       	adc	r25, r29
    10d2:	01 96       	adiw	r24, 0x01	; 1
    10d4:	96 95       	lsr	r25
    10d6:	87 95       	ror	r24
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	1f 91       	pop	r17
    10de:	08 95       	ret

000010e0 <read_battery_millivolts_3pi>:
    10e0:	0e 94 53 08 	call	0x10a6	; 0x10a6 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    10e4:	08 95       	ret

000010e6 <_ZL16currentCharacterv>:
    10e6:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <_ZL17use_program_space>
    10ea:	e0 91 62 01 	lds	r30, 0x0162	; 0x800162 <__data_end>
    10ee:	f0 91 63 01 	lds	r31, 0x0163	; 0x800163 <__data_end+0x1>
    10f2:	99 23       	and	r25, r25
    10f4:	11 f0       	breq	.+4      	; 0x10fa <_ZL16currentCharacterv+0x14>
    10f6:	84 91       	lpm	r24, Z
    10f8:	01 c0       	rjmp	.+2      	; 0x10fc <_ZL16currentCharacterv+0x16>
    10fa:	80 81       	ld	r24, Z
    10fc:	2f eb       	ldi	r18, 0xBF	; 191
    10fe:	28 0f       	add	r18, r24
    1100:	2a 31       	cpi	r18, 0x1A	; 26
    1102:	10 f4       	brcc	.+4      	; 0x1108 <_ZL16currentCharacterv+0x22>
    1104:	80 5e       	subi	r24, 0xE0	; 224
    1106:	08 95       	ret
    1108:	80 32       	cpi	r24, 0x20	; 32
    110a:	49 f4       	brne	.+18     	; 0x111e <_ZL16currentCharacterv+0x38>
    110c:	9f 01       	movw	r18, r30
    110e:	2f 5f       	subi	r18, 0xFF	; 255
    1110:	3f 4f       	sbci	r19, 0xFF	; 255
    1112:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    1116:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    111a:	ef 2b       	or	r30, r31
    111c:	31 f7       	brne	.-52     	; 0x10ea <_ZL16currentCharacterv+0x4>
    111e:	08 95       	ret

00001120 <_ZL9getNumberv>:
    1120:	1f 93       	push	r17
    1122:	cf 93       	push	r28
    1124:	df 93       	push	r29
    1126:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    112a:	c0 e0       	ldi	r28, 0x00	; 0
    112c:	d0 e0       	ldi	r29, 0x00	; 0
    112e:	1a e0       	ldi	r17, 0x0A	; 10
    1130:	90 ed       	ldi	r25, 0xD0	; 208
    1132:	98 0f       	add	r25, r24
    1134:	9a 30       	cpi	r25, 0x0A	; 10
    1136:	b8 f4       	brcc	.+46     	; 0x1166 <_ZL9getNumberv+0x46>
    1138:	9e 01       	movw	r18, r28
    113a:	12 9f       	mul	r17, r18
    113c:	e0 01       	movw	r28, r0
    113e:	13 9f       	mul	r17, r19
    1140:	d0 0d       	add	r29, r0
    1142:	11 24       	eor	r1, r1
    1144:	c8 0f       	add	r28, r24
    1146:	d1 1d       	adc	r29, r1
    1148:	87 fd       	sbrc	r24, 7
    114a:	da 95       	dec	r29
    114c:	e0 97       	sbiw	r28, 0x30	; 48
    114e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
    1152:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <__data_end+0x1>
    115c:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
    1160:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    1164:	e5 cf       	rjmp	.-54     	; 0x1130 <_ZL9getNumberv+0x10>
    1166:	ce 01       	movw	r24, r28
    1168:	df 91       	pop	r29
    116a:	cf 91       	pop	r28
    116c:	1f 91       	pop	r17
    116e:	08 95       	ret

00001170 <_ZN15OrangutanBuzzer5init2Ev>:
    1170:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1174:	83 e2       	ldi	r24, 0x23	; 35
    1176:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    117a:	81 e1       	ldi	r24, 0x11	; 17
    117c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1180:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    1184:	80 e1       	ldi	r24, 0x10	; 16
    1186:	97 e2       	ldi	r25, 0x27	; 39
    1188:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    118c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1190:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    1194:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    1198:	22 9a       	sbi	0x04, 2	; 4
    119a:	78 94       	sei
    119c:	08 95       	ret

0000119e <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    119e:	8f 92       	push	r8
    11a0:	9f 92       	push	r9
    11a2:	af 92       	push	r10
    11a4:	bf 92       	push	r11
    11a6:	df 92       	push	r13
    11a8:	ef 92       	push	r14
    11aa:	ff 92       	push	r15
    11ac:	0f 93       	push	r16
    11ae:	1f 93       	push	r17
    11b0:	cf 93       	push	r28
    11b2:	df 93       	push	r29
    11b4:	5c 01       	movw	r10, r24
    11b6:	8b 01       	movw	r16, r22
    11b8:	d4 2e       	mov	r13, r20
    11ba:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <buzzerInitialized>
    11be:	81 11       	cpse	r24, r1
    11c0:	05 c0       	rjmp	.+10     	; 0x11cc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <buzzerInitialized>
    11c8:	0e 94 b8 08 	call	0x1170	; 0x1170 <_ZN15OrangutanBuzzer5init2Ev>
    11cc:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    11d0:	b7 fe       	sbrs	r11, 7
    11d2:	05 c0       	rjmp	.+10     	; 0x11de <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    11d4:	e8 94       	clt
    11d6:	b7 f8       	bld	r11, 7
    11d8:	2a e0       	ldi	r18, 0x0A	; 10
    11da:	f2 2e       	mov	r15, r18
    11dc:	02 c0       	rjmp	.+4      	; 0x11e2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    11de:	ff 24       	eor	r15, r15
    11e0:	f3 94       	inc	r15
    11e2:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11e6:	2e 2d       	mov	r18, r14
    11e8:	28 7f       	andi	r18, 0xF8	; 248
    11ea:	e2 2e       	mov	r14, r18
    11ec:	48 ec       	ldi	r20, 0xC8	; 200
    11ee:	f4 9e       	mul	r15, r20
    11f0:	c0 01       	movw	r24, r0
    11f2:	11 24       	eor	r1, r1
    11f4:	8a 15       	cp	r24, r10
    11f6:	9b 05       	cpc	r25, r11
    11f8:	e0 f4       	brcc	.+56     	; 0x1232 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    11fa:	e5 01       	movw	r28, r10
    11fc:	51 e1       	ldi	r21, 0x11	; 17
    11fe:	a5 16       	cp	r10, r21
    1200:	57 e2       	ldi	r21, 0x27	; 39
    1202:	b5 06       	cpc	r11, r21
    1204:	10 f0       	brcs	.+4      	; 0x120a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1206:	c0 e1       	ldi	r28, 0x10	; 16
    1208:	d7 e2       	ldi	r29, 0x27	; 39
    120a:	be 01       	movw	r22, r28
    120c:	76 95       	lsr	r23
    120e:	67 95       	ror	r22
    1210:	80 e0       	ldi	r24, 0x00	; 0
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	60 58       	subi	r22, 0x80	; 128
    1216:	79 46       	sbci	r23, 0x69	; 105
    1218:	87 46       	sbci	r24, 0x67	; 103
    121a:	9f 4f       	sbci	r25, 0xFF	; 255
    121c:	4e 01       	movw	r8, r28
    121e:	a1 2c       	mov	r10, r1
    1220:	b1 2c       	mov	r11, r1
    1222:	a5 01       	movw	r20, r10
    1224:	94 01       	movw	r18, r8
    1226:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    122a:	59 01       	movw	r10, r18
    122c:	8e 2d       	mov	r24, r14
    122e:	81 60       	ori	r24, 0x01	; 1
    1230:	24 c0       	rjmp	.+72     	; 0x127a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1232:	c8 e2       	ldi	r28, 0x28	; 40
    1234:	fc 9e       	mul	r15, r28
    1236:	c0 2d       	mov	r28, r0
    1238:	11 24       	eor	r1, r1
    123a:	d0 e0       	ldi	r29, 0x00	; 0
    123c:	ca 15       	cp	r28, r10
    123e:	db 05       	cpc	r29, r11
    1240:	08 f4       	brcc	.+2      	; 0x1244 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1242:	e5 01       	movw	r28, r10
    1244:	be 01       	movw	r22, r28
    1246:	76 95       	lsr	r23
    1248:	67 95       	ror	r22
    124a:	9e 01       	movw	r18, r28
    124c:	40 e0       	ldi	r20, 0x00	; 0
    124e:	50 e0       	ldi	r21, 0x00	; 0
    1250:	8a e0       	ldi	r24, 0x0A	; 10
    1252:	f8 12       	cpse	r15, r24
    1254:	07 c0       	rjmp	.+14     	; 0x1264 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1256:	80 e0       	ldi	r24, 0x00	; 0
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	60 5e       	subi	r22, 0xE0	; 224
    125c:	73 44       	sbci	r23, 0x43	; 67
    125e:	81 44       	sbci	r24, 0x41	; 65
    1260:	9f 4f       	sbci	r25, 0xFF	; 255
    1262:	06 c0       	rjmp	.+12     	; 0x1270 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	60 53       	subi	r22, 0x30	; 48
    126a:	7d 4e       	sbci	r23, 0xED	; 237
    126c:	8c 4e       	sbci	r24, 0xEC	; 236
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    1274:	59 01       	movw	r10, r18
    1276:	8e 2d       	mov	r24, r14
    1278:	82 60       	ori	r24, 0x02	; 2
    127a:	88 2e       	mov	r8, r24
    127c:	2a e0       	ldi	r18, 0x0A	; 10
    127e:	f2 12       	cpse	r15, r18
    1280:	07 c0       	rjmp	.+14     	; 0x1290 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1282:	ce 01       	movw	r24, r28
    1284:	05 96       	adiw	r24, 0x05	; 5
    1286:	6a e0       	ldi	r22, 0x0A	; 10
    1288:	70 e0       	ldi	r23, 0x00	; 0
    128a:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    128e:	eb 01       	movw	r28, r22
    1290:	c8 3e       	cpi	r28, 0xE8	; 232
    1292:	43 e0       	ldi	r20, 0x03	; 3
    1294:	d4 07       	cpc	r29, r20
    1296:	59 f0       	breq	.+22     	; 0x12ae <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1298:	98 01       	movw	r18, r16
    129a:	de 01       	movw	r26, r28
    129c:	0e 94 fe 14 	call	0x29fc	; 0x29fc <__umulhisi3>
    12a0:	28 ee       	ldi	r18, 0xE8	; 232
    12a2:	33 e0       	ldi	r19, 0x03	; 3
    12a4:	40 e0       	ldi	r20, 0x00	; 0
    12a6:	50 e0       	ldi	r21, 0x00	; 0
    12a8:	0e 94 df 14 	call	0x29be	; 0x29be <__divmodsi4>
    12ac:	89 01       	movw	r16, r18
    12ae:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    12b2:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    12b6:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    12ba:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    12be:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    12c2:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    12c6:	4d 2d       	mov	r20, r13
    12c8:	40 31       	cpi	r20, 0x10	; 16
    12ca:	08 f0       	brcs	.+2      	; 0x12ce <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    12cc:	4f e0       	ldi	r20, 0x0F	; 15
    12ce:	80 e1       	ldi	r24, 0x10	; 16
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	84 1b       	sub	r24, r20
    12d4:	91 09       	sbc	r25, r1
    12d6:	a9 01       	movw	r20, r18
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    12da:	56 95       	lsr	r21
    12dc:	47 95       	ror	r20
    12de:	8a 95       	dec	r24
    12e0:	e2 f7       	brpl	.-8      	; 0x12da <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    12e2:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    12e6:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    12ea:	10 93 6a 01 	sts	0x016A, r17	; 0x80016a <_ZL13buzzerTimeout+0x1>
    12ee:	00 93 69 01 	sts	0x0169, r16	; 0x800169 <_ZL13buzzerTimeout>
    12f2:	86 b3       	in	r24, 0x16	; 22
    12f4:	8f ef       	ldi	r24, 0xFF	; 255
    12f6:	86 bb       	out	0x16, r24	; 22
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    12fe:	df 91       	pop	r29
    1300:	cf 91       	pop	r28
    1302:	1f 91       	pop	r17
    1304:	0f 91       	pop	r16
    1306:	ff 90       	pop	r15
    1308:	ef 90       	pop	r14
    130a:	df 90       	pop	r13
    130c:	bf 90       	pop	r11
    130e:	af 90       	pop	r10
    1310:	9f 90       	pop	r9
    1312:	8f 90       	pop	r8
    1314:	08 95       	ret

00001316 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    1316:	cf 93       	push	r28
    1318:	df 93       	push	r29
    131a:	eb 01       	movw	r28, r22
    131c:	8f 3f       	cpi	r24, 0xFF	; 255
    131e:	11 f0       	breq	.+4      	; 0x1324 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1320:	41 11       	cpse	r20, r1
    1322:	05 c0       	rjmp	.+10     	; 0x132e <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1324:	40 e0       	ldi	r20, 0x00	; 0
    1326:	be 01       	movw	r22, r28
    1328:	88 ee       	ldi	r24, 0xE8	; 232
    132a:	93 e0       	ldi	r25, 0x03	; 3
    132c:	43 c0       	rjmp	.+134    	; 0x13b4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    132e:	81 31       	cpi	r24, 0x11	; 17
    1330:	30 f0       	brcs	.+12     	; 0x133e <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1332:	50 ef       	ldi	r21, 0xF0	; 240
    1334:	58 0f       	add	r21, r24
    1336:	50 36       	cpi	r21, 0x60	; 96
    1338:	18 f0       	brcs	.+6      	; 0x1340 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    133a:	5f e5       	ldi	r21, 0x5F	; 95
    133c:	01 c0       	rjmp	.+2      	; 0x1340 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    133e:	50 e0       	ldi	r21, 0x00	; 0
    1340:	85 2f       	mov	r24, r21
    1342:	6c e0       	ldi	r22, 0x0C	; 12
    1344:	0e 94 9d 14 	call	0x293a	; 0x293a <__udivmodqi4>
    1348:	68 2f       	mov	r22, r24
    134a:	74 ef       	ldi	r23, 0xF4	; 244
    134c:	76 03       	mulsu	r23, r22
    134e:	90 01       	movw	r18, r0
    1350:	11 24       	eor	r1, r1
    1352:	25 0f       	add	r18, r21
    1354:	31 1d       	adc	r19, r1
    1356:	2c 30       	cpi	r18, 0x0C	; 12
    1358:	31 05       	cpc	r19, r1
    135a:	40 f4       	brcc	.+16     	; 0x136c <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    135c:	f9 01       	movw	r30, r18
    135e:	ee 0f       	add	r30, r30
    1360:	ff 1f       	adc	r31, r31
    1362:	ec 5e       	subi	r30, 0xEC	; 236
    1364:	fe 4f       	sbci	r31, 0xFE	; 254
    1366:	20 81       	ld	r18, Z
    1368:	31 81       	ldd	r19, Z+1	; 0x01
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    136c:	20 e0       	ldi	r18, 0x00	; 0
    136e:	30 e0       	ldi	r19, 0x00	; 0
    1370:	87 30       	cpi	r24, 0x07	; 7
    1372:	81 f0       	breq	.+32     	; 0x1394 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    1374:	08 2e       	mov	r0, r24
    1376:	02 c0       	rjmp	.+4      	; 0x137c <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    1378:	22 0f       	add	r18, r18
    137a:	33 1f       	adc	r19, r19
    137c:	0a 94       	dec	r0
    137e:	e2 f7       	brpl	.-8      	; 0x1378 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1380:	82 30       	cpi	r24, 0x02	; 2
    1382:	28 f0       	brcs	.+10     	; 0x138e <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    1384:	c9 01       	movw	r24, r18
    1386:	05 96       	adiw	r24, 0x05	; 5
    1388:	6a e0       	ldi	r22, 0x0A	; 10
    138a:	70 e0       	ldi	r23, 0x00	; 0
    138c:	0c c0       	rjmp	.+24     	; 0x13a6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    138e:	c9 01       	movw	r24, r18
    1390:	90 58       	subi	r25, 0x80	; 128
    1392:	0c c0       	rjmp	.+24     	; 0x13ac <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    1394:	c9 01       	movw	r24, r18
    1396:	36 e0       	ldi	r19, 0x06	; 6
    1398:	88 0f       	add	r24, r24
    139a:	99 1f       	adc	r25, r25
    139c:	3a 95       	dec	r19
    139e:	e1 f7       	brne	.-8      	; 0x1398 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    13a0:	02 96       	adiw	r24, 0x02	; 2
    13a2:	65 e0       	ldi	r22, 0x05	; 5
    13a4:	70 e0       	ldi	r23, 0x00	; 0
    13a6:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    13aa:	cb 01       	movw	r24, r22
    13ac:	40 31       	cpi	r20, 0x10	; 16
    13ae:	08 f0       	brcs	.+2      	; 0x13b2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    13b0:	4f e0       	ldi	r20, 0x0F	; 15
    13b2:	be 01       	movw	r22, r28
    13b4:	0e 94 cf 08 	call	0x119e	; 0x119e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    13b8:	df 91       	pop	r29
    13ba:	cf 91       	pop	r28
    13bc:	08 95       	ret

000013be <_ZL8nextNotev>:
    13be:	a2 e0       	ldi	r26, 0x02	; 2
    13c0:	b0 e0       	ldi	r27, 0x00	; 0
    13c2:	e5 ee       	ldi	r30, 0xE5	; 229
    13c4:	f9 e0       	ldi	r31, 0x09	; 9
    13c6:	0c 94 22 15 	jmp	0x2a44	; 0x2a44 <__prologue_saves__+0x4>
    13ca:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    13ce:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <_ZL8staccato>
    13d2:	88 23       	and	r24, r24
    13d4:	21 f0       	breq	.+8      	; 0x13de <_ZL8nextNotev+0x20>
    13d6:	60 91 65 01 	lds	r22, 0x0165	; 0x800165 <_ZL22staccato_rest_duration>
    13da:	61 11       	cpse	r22, r1
    13dc:	17 c0       	rjmp	.+46     	; 0x140c <_ZL8nextNotev+0x4e>
    13de:	77 24       	eor	r7, r7
    13e0:	73 94       	inc	r7
    13e2:	b0 ec       	ldi	r27, 0xC0	; 192
    13e4:	ab 2e       	mov	r10, r27
    13e6:	bd e5       	ldi	r27, 0x5D	; 93
    13e8:	bb 2e       	mov	r11, r27
    13ea:	1a e0       	ldi	r17, 0x0A	; 10
    13ec:	61 2e       	mov	r6, r17
    13ee:	04 e0       	ldi	r16, 0x04	; 4
    13f0:	80 2e       	mov	r8, r16
    13f2:	80 ed       	ldi	r24, 0xD0	; 208
    13f4:	c8 2e       	mov	r12, r24
    13f6:	87 e0       	ldi	r24, 0x07	; 7
    13f8:	d8 2e       	mov	r13, r24
    13fa:	94 e0       	ldi	r25, 0x04	; 4
    13fc:	e9 2e       	mov	r14, r25
    13fe:	f1 2c       	mov	r15, r1
    1400:	04 ef       	ldi	r16, 0xF4	; 244
    1402:	11 e0       	ldi	r17, 0x01	; 1
    1404:	2f e0       	ldi	r18, 0x0F	; 15
    1406:	42 2e       	mov	r4, r18
    1408:	51 2c       	mov	r5, r1
    140a:	15 c0       	rjmp	.+42     	; 0x1436 <_ZL8nextNotev+0x78>
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	40 e0       	ldi	r20, 0x00	; 0
    1410:	88 ee       	ldi	r24, 0xE8	; 232
    1412:	93 e0       	ldi	r25, 0x03	; 3
    1414:	0e 94 cf 08 	call	0x119e	; 0x119e <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1418:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_ZL22staccato_rest_duration>
    141c:	17 c1       	rjmp	.+558    	; 0x164c <_ZL8nextNotev+0x28e>
    141e:	86 36       	cpi	r24, 0x66	; 102
    1420:	d4 f5       	brge	.+116    	; 0x1496 <_ZL8nextNotev+0xd8>
    1422:	81 36       	cpi	r24, 0x61	; 97
    1424:	09 f4       	brne	.+2      	; 0x1428 <_ZL8nextNotev+0x6a>
    1426:	a9 c0       	rjmp	.+338    	; 0x157a <_ZL8nextNotev+0x1bc>
    1428:	7c f5       	brge	.+94     	; 0x1488 <_ZL8nextNotev+0xca>
    142a:	8c 33       	cpi	r24, 0x3C	; 60
    142c:	09 f4       	brne	.+2      	; 0x1430 <_ZL8nextNotev+0x72>
    142e:	60 c0       	rjmp	.+192    	; 0x14f0 <_ZL8nextNotev+0x132>
    1430:	8e 33       	cpi	r24, 0x3E	; 62
    1432:	81 f4       	brne	.+32     	; 0x1454 <_ZL8nextNotev+0x96>
    1434:	93 94       	inc	r9
    1436:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    143a:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    143e:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    1442:	2f 5f       	subi	r18, 0xFF	; 255
    1444:	3f 4f       	sbci	r19, 0xFF	; 255
    1446:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    144a:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    144e:	85 36       	cpi	r24, 0x65	; 101
    1450:	31 f7       	brne	.-52     	; 0x141e <_ZL8nextNotev+0x60>
    1452:	52 c0       	rjmp	.+164    	; 0x14f8 <_ZL8nextNotev+0x13a>
    1454:	81 32       	cpi	r24, 0x21	; 33
    1456:	09 f0       	breq	.+2      	; 0x145a <_ZL8nextNotev+0x9c>
    1458:	8b c0       	rjmp	.+278    	; 0x1570 <_ZL8nextNotev+0x1b2>
    145a:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    145e:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    1462:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    1466:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    146a:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    146e:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    1472:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    1476:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    147a:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    147e:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <_ZL8staccato>
    1482:	a4 e0       	ldi	r26, 0x04	; 4
    1484:	9a 2e       	mov	r9, r26
    1486:	d7 cf       	rjmp	.-82     	; 0x1436 <_ZL8nextNotev+0x78>
    1488:	83 36       	cpi	r24, 0x63	; 99
    148a:	a1 f1       	breq	.+104    	; 0x14f4 <_ZL8nextNotev+0x136>
    148c:	0c f4       	brge	.+2      	; 0x1490 <_ZL8nextNotev+0xd2>
    148e:	78 c0       	rjmp	.+240    	; 0x1580 <_ZL8nextNotev+0x1c2>
    1490:	10 e0       	ldi	r17, 0x00	; 0
    1492:	82 e0       	ldi	r24, 0x02	; 2
    1494:	77 c0       	rjmp	.+238    	; 0x1584 <_ZL8nextNotev+0x1c6>
    1496:	8d 36       	cpi	r24, 0x6D	; 109
    1498:	c1 f1       	breq	.+112    	; 0x150a <_ZL8nextNotev+0x14c>
    149a:	94 f4       	brge	.+36     	; 0x14c0 <_ZL8nextNotev+0x102>
    149c:	87 36       	cpi	r24, 0x67	; 103
    149e:	91 f1       	breq	.+100    	; 0x1504 <_ZL8nextNotev+0x146>
    14a0:	74 f1       	brlt	.+92     	; 0x14fe <_ZL8nextNotev+0x140>
    14a2:	8c 36       	cpi	r24, 0x6C	; 108
    14a4:	09 f0       	breq	.+2      	; 0x14a8 <_ZL8nextNotev+0xea>
    14a6:	64 c0       	rjmp	.+200    	; 0x1570 <_ZL8nextNotev+0x1b2>
    14a8:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZL9getNumberv>
    14ac:	bc 01       	movw	r22, r24
    14ae:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    14b2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    14b6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    14ba:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    14be:	51 c0       	rjmp	.+162    	; 0x1562 <_ZL8nextNotev+0x1a4>
    14c0:	82 37       	cpi	r24, 0x72	; 114
    14c2:	c9 f1       	breq	.+114    	; 0x1536 <_ZL8nextNotev+0x178>
    14c4:	4c f4       	brge	.+18     	; 0x14d8 <_ZL8nextNotev+0x11a>
    14c6:	8f 36       	cpi	r24, 0x6F	; 111
    14c8:	09 f0       	breq	.+2      	; 0x14cc <_ZL8nextNotev+0x10e>
    14ca:	52 c0       	rjmp	.+164    	; 0x1570 <_ZL8nextNotev+0x1b2>
    14cc:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZL9getNumberv>
    14d0:	98 2e       	mov	r9, r24
    14d2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    14d6:	af cf       	rjmp	.-162    	; 0x1436 <_ZL8nextNotev+0x78>
    14d8:	84 37       	cpi	r24, 0x74	; 116
    14da:	81 f1       	breq	.+96     	; 0x153c <_ZL8nextNotev+0x17e>
    14dc:	86 37       	cpi	r24, 0x76	; 118
    14de:	09 f0       	breq	.+2      	; 0x14e2 <_ZL8nextNotev+0x124>
    14e0:	47 c0       	rjmp	.+142    	; 0x1570 <_ZL8nextNotev+0x1b2>
    14e2:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZL9getNumberv>
    14e6:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    14ea:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    14ee:	a3 cf       	rjmp	.-186    	; 0x1436 <_ZL8nextNotev+0x78>
    14f0:	9a 94       	dec	r9
    14f2:	a1 cf       	rjmp	.-190    	; 0x1436 <_ZL8nextNotev+0x78>
    14f4:	10 e0       	ldi	r17, 0x00	; 0
    14f6:	20 c0       	rjmp	.+64     	; 0x1538 <_ZL8nextNotev+0x17a>
    14f8:	10 e0       	ldi	r17, 0x00	; 0
    14fa:	84 e0       	ldi	r24, 0x04	; 4
    14fc:	43 c0       	rjmp	.+134    	; 0x1584 <_ZL8nextNotev+0x1c6>
    14fe:	10 e0       	ldi	r17, 0x00	; 0
    1500:	85 e0       	ldi	r24, 0x05	; 5
    1502:	40 c0       	rjmp	.+128    	; 0x1584 <_ZL8nextNotev+0x1c6>
    1504:	10 e0       	ldi	r17, 0x00	; 0
    1506:	87 e0       	ldi	r24, 0x07	; 7
    1508:	3d c0       	rjmp	.+122    	; 0x1584 <_ZL8nextNotev+0x1c6>
    150a:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    150e:	8c 36       	cpi	r24, 0x6C	; 108
    1510:	19 f4       	brne	.+6      	; 0x1518 <_ZL8nextNotev+0x15a>
    1512:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <_ZL8staccato>
    1516:	04 c0       	rjmp	.+8      	; 0x1520 <_ZL8nextNotev+0x162>
    1518:	70 92 66 01 	sts	0x0166, r7	; 0x800166 <_ZL8staccato>
    151c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_ZL22staccato_rest_duration>
    1520:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    1524:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    1528:	2f 5f       	subi	r18, 0xFF	; 255
    152a:	3f 4f       	sbci	r19, 0xFF	; 255
    152c:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    1530:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    1534:	80 cf       	rjmp	.-256    	; 0x1436 <_ZL8nextNotev+0x78>
    1536:	11 e0       	ldi	r17, 0x01	; 1
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	24 c0       	rjmp	.+72     	; 0x1584 <_ZL8nextNotev+0x1c6>
    153c:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZL9getNumberv>
    1540:	bc 01       	movw	r22, r24
    1542:	c5 01       	movw	r24, r10
    1544:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    1548:	66 9e       	mul	r6, r22
    154a:	c0 01       	movw	r24, r0
    154c:	67 9e       	mul	r6, r23
    154e:	90 0d       	add	r25, r0
    1550:	11 24       	eor	r1, r1
    1552:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    1556:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    155a:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    155e:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    1562:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    1566:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    156a:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    156e:	63 cf       	rjmp	.-314    	; 0x1436 <_ZL8nextNotev+0x78>
    1570:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <__data_end+0x1>
    1574:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
    1578:	69 c0       	rjmp	.+210    	; 0x164c <_ZL8nextNotev+0x28e>
    157a:	10 e0       	ldi	r17, 0x00	; 0
    157c:	89 e0       	ldi	r24, 0x09	; 9
    157e:	02 c0       	rjmp	.+4      	; 0x1584 <_ZL8nextNotev+0x1c6>
    1580:	10 e0       	ldi	r17, 0x00	; 0
    1582:	8b e0       	ldi	r24, 0x0B	; 11
    1584:	08 2f       	mov	r16, r24
    1586:	9c e0       	ldi	r25, 0x0C	; 12
    1588:	99 9e       	mul	r9, r25
    158a:	00 0d       	add	r16, r0
    158c:	11 24       	eor	r1, r1
    158e:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    1592:	98 2f       	mov	r25, r24
    1594:	97 7f       	andi	r25, 0xF7	; 247
    1596:	93 32       	cpi	r25, 0x23	; 35
    1598:	61 f4       	brne	.+24     	; 0x15b2 <_ZL8nextNotev+0x1f4>
    159a:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    159e:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    15a2:	2f 5f       	subi	r18, 0xFF	; 255
    15a4:	3f 4f       	sbci	r19, 0xFF	; 255
    15a6:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    15aa:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    15ae:	0f 5f       	subi	r16, 0xFF	; 255
    15b0:	ee cf       	rjmp	.-36     	; 0x158e <_ZL8nextNotev+0x1d0>
    15b2:	8d 32       	cpi	r24, 0x2D	; 45
    15b4:	71 f4       	brne	.+28     	; 0x15d2 <_ZL8nextNotev+0x214>
    15b6:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    15ba:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    15be:	2f 5f       	subi	r18, 0xFF	; 255
    15c0:	3f 4f       	sbci	r19, 0xFF	; 255
    15c2:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    15c6:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    15ca:	01 50       	subi	r16, 0x01	; 1
    15cc:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    15d0:	f0 cf       	rjmp	.-32     	; 0x15b2 <_ZL8nextNotev+0x1f4>
    15d2:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    15d6:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    15da:	81 53       	subi	r24, 0x31	; 49
    15dc:	88 30       	cpi	r24, 0x08	; 8
    15de:	50 f4       	brcc	.+20     	; 0x15f4 <_ZL8nextNotev+0x236>
    15e0:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    15e4:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    15e8:	0e 94 90 08 	call	0x1120	; 0x1120 <_ZL9getNumberv>
    15ec:	bc 01       	movw	r22, r24
    15ee:	c7 01       	movw	r24, r14
    15f0:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    15f4:	7b 01       	movw	r14, r22
    15f6:	f6 94       	lsr	r15
    15f8:	e7 94       	ror	r14
    15fa:	69 83       	std	Y+1, r22	; 0x01
    15fc:	7a 83       	std	Y+2, r23	; 0x02
    15fe:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZL16currentCharacterv>
    1602:	69 81       	ldd	r22, Y+1	; 0x01
    1604:	7a 81       	ldd	r23, Y+2	; 0x02
    1606:	8e 32       	cpi	r24, 0x2E	; 46
    1608:	69 f4       	brne	.+26     	; 0x1624 <_ZL8nextNotev+0x266>
    160a:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    160e:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    1612:	2f 5f       	subi	r18, 0xFF	; 255
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    161a:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    161e:	6e 0d       	add	r22, r14
    1620:	7f 1d       	adc	r23, r15
    1622:	e9 cf       	rjmp	.-46     	; 0x15f6 <_ZL8nextNotev+0x238>
    1624:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <_ZL8staccato>
    1628:	88 23       	and	r24, r24
    162a:	39 f0       	breq	.+14     	; 0x163a <_ZL8nextNotev+0x27c>
    162c:	9b 01       	movw	r18, r22
    162e:	36 95       	lsr	r19
    1630:	27 95       	ror	r18
    1632:	20 93 65 01 	sts	0x0165, r18	; 0x800165 <_ZL22staccato_rest_duration>
    1636:	62 1b       	sub	r22, r18
    1638:	71 09       	sbc	r23, r1
    163a:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    163e:	11 23       	and	r17, r17
    1640:	11 f0       	breq	.+4      	; 0x1646 <_ZL8nextNotev+0x288>
    1642:	8f ef       	ldi	r24, 0xFF	; 255
    1644:	01 c0       	rjmp	.+2      	; 0x1648 <_ZL8nextNotev+0x28a>
    1646:	80 2f       	mov	r24, r16
    1648:	0e 94 8b 09 	call	0x1316	; 0x1316 <_ZN15OrangutanBuzzer8playNoteEhjh>
    164c:	22 96       	adiw	r28, 0x02	; 2
    164e:	e0 e1       	ldi	r30, 0x10	; 16
    1650:	0c 94 3e 15 	jmp	0x2a7c	; 0x2a7c <__epilogue_restores__+0x4>

00001654 <__vector_13>:
    1654:	1f 92       	push	r1
    1656:	0f 92       	push	r0
    1658:	0f b6       	in	r0, 0x3f	; 63
    165a:	0f 92       	push	r0
    165c:	11 24       	eor	r1, r1
    165e:	2f 93       	push	r18
    1660:	3f 93       	push	r19
    1662:	4f 93       	push	r20
    1664:	5f 93       	push	r21
    1666:	6f 93       	push	r22
    1668:	7f 93       	push	r23
    166a:	8f 93       	push	r24
    166c:	9f 93       	push	r25
    166e:	af 93       	push	r26
    1670:	bf 93       	push	r27
    1672:	ef 93       	push	r30
    1674:	ff 93       	push	r31
    1676:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <_ZL13buzzerTimeout>
    167a:	90 91 6a 01 	lds	r25, 0x016A	; 0x80016a <_ZL13buzzerTimeout+0x1>
    167e:	9c 01       	movw	r18, r24
    1680:	21 50       	subi	r18, 0x01	; 1
    1682:	31 09       	sbc	r19, r1
    1684:	30 93 6a 01 	sts	0x016A, r19	; 0x80016a <_ZL13buzzerTimeout+0x1>
    1688:	20 93 69 01 	sts	0x0169, r18	; 0x800169 <_ZL13buzzerTimeout>
    168c:	89 2b       	or	r24, r25
    168e:	11 f5       	brne	.+68     	; 0x16d4 <__vector_13+0x80>
    1690:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1694:	78 94       	sei
    1696:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    169a:	88 7f       	andi	r24, 0xF8	; 248
    169c:	81 60       	ori	r24, 0x01	; 1
    169e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    16a2:	80 e1       	ldi	r24, 0x10	; 16
    16a4:	97 e2       	ldi	r25, 0x27	; 39
    16a6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    16aa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    16ae:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    16b2:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    16b6:	81 e0       	ldi	r24, 0x01	; 1
    16b8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    16bc:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
    16c0:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
    16c4:	89 2b       	or	r24, r25
    16c6:	31 f0       	breq	.+12     	; 0x16d4 <__vector_13+0x80>
    16c8:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <_ZL17play_mode_setting>
    16cc:	81 11       	cpse	r24, r1
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <__vector_13+0x80>
    16d0:	0e 94 df 09 	call	0x13be	; 0x13be <_ZL8nextNotev>
    16d4:	ff 91       	pop	r31
    16d6:	ef 91       	pop	r30
    16d8:	bf 91       	pop	r27
    16da:	af 91       	pop	r26
    16dc:	9f 91       	pop	r25
    16de:	8f 91       	pop	r24
    16e0:	7f 91       	pop	r23
    16e2:	6f 91       	pop	r22
    16e4:	5f 91       	pop	r21
    16e6:	4f 91       	pop	r20
    16e8:	3f 91       	pop	r19
    16ea:	2f 91       	pop	r18
    16ec:	0f 90       	pop	r0
    16ee:	0f be       	out	0x3f, r0	; 63
    16f0:	0f 90       	pop	r0
    16f2:	1f 90       	pop	r1
    16f4:	18 95       	reti

000016f6 <delay_us.constprop.0>:
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	6f 93       	push	r22
    16fc:	64 e0       	ldi	r22, 0x04	; 4
    16fe:	6a 95       	dec	r22
    1700:	f1 f7       	brne	.-4      	; 0x16fe <delay_us.constprop.0+0x8>
    1702:	6f 91       	pop	r22
    1704:	01 97       	sbiw	r24, 0x01	; 1
    1706:	c9 f7       	brne	.-14     	; 0x16fa <delay_us.constprop.0+0x4>
    1708:	08 95       	ret

0000170a <_ZN12OrangutanLCD8busyWaitEv>:
    170a:	0f 93       	push	r16
    170c:	1f 93       	push	r17
    170e:	cf 93       	push	r28
    1710:	df 93       	push	r29
    1712:	1a b1       	in	r17, 0x0a	; 10
    1714:	57 98       	cbi	0x0a, 7	; 10
    1716:	5a 98       	cbi	0x0b, 2	; 11
    1718:	28 9a       	sbi	0x05, 0	; 5
    171a:	c0 e0       	ldi	r28, 0x00	; 0
    171c:	d0 e0       	ldi	r29, 0x00	; 0
    171e:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    1722:	5c 9a       	sbi	0x0b, 4	; 11
    1724:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    1728:	09 b1       	in	r16, 0x09	; 9
    172a:	5c 98       	cbi	0x0b, 4	; 11
    172c:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    1730:	5c 9a       	sbi	0x0b, 4	; 11
    1732:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    1736:	5c 98       	cbi	0x0b, 4	; 11
    1738:	24 96       	adiw	r28, 0x04	; 4
    173a:	07 ff       	sbrs	r16, 7
    173c:	10 c0       	rjmp	.+32     	; 0x175e <_ZN12OrangutanLCD8busyWaitEv+0x54>
    173e:	ae 01       	movw	r20, r28
    1740:	60 e0       	ldi	r22, 0x00	; 0
    1742:	70 e0       	ldi	r23, 0x00	; 0
    1744:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <lcdTimeout>
    1748:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <lcdTimeout+0x1>
    174c:	a0 91 6d 01 	lds	r26, 0x016D	; 0x80016d <lcdTimeout+0x2>
    1750:	b0 91 6e 01 	lds	r27, 0x016E	; 0x80016e <lcdTimeout+0x3>
    1754:	48 17       	cp	r20, r24
    1756:	59 07       	cpc	r21, r25
    1758:	6a 07       	cpc	r22, r26
    175a:	7b 07       	cpc	r23, r27
    175c:	00 f3       	brcs	.-64     	; 0x171e <_ZN12OrangutanLCD8busyWaitEv+0x14>
    175e:	1a b9       	out	0x0a, r17	; 10
    1760:	df 91       	pop	r29
    1762:	cf 91       	pop	r28
    1764:	1f 91       	pop	r17
    1766:	0f 91       	pop	r16
    1768:	08 95       	ret

0000176a <_ZN12OrangutanLCD8sendDataEh>:
    176a:	95 b1       	in	r25, 0x05	; 5
    176c:	28 2f       	mov	r18, r24
    176e:	21 70       	andi	r18, 0x01	; 1
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	22 0f       	add	r18, r18
    1774:	33 1f       	adc	r19, r19
    1776:	48 2f       	mov	r20, r24
    1778:	46 70       	andi	r20, 0x06	; 6
    177a:	68 e0       	ldi	r22, 0x08	; 8
    177c:	46 9f       	mul	r20, r22
    177e:	a0 01       	movw	r20, r0
    1780:	11 24       	eor	r1, r1
    1782:	24 2b       	or	r18, r20
    1784:	9d 7c       	andi	r25, 0xCD	; 205
    1786:	29 2b       	or	r18, r25
    1788:	25 b9       	out	0x05, r18	; 5
    178a:	9b b1       	in	r25, 0x0b	; 11
    178c:	88 70       	andi	r24, 0x08	; 8
    178e:	82 95       	swap	r24
    1790:	80 7f       	andi	r24, 0xF0	; 240
    1792:	9f 77       	andi	r25, 0x7F	; 127
    1794:	89 2b       	or	r24, r25
    1796:	8b b9       	out	0x0b, r24	; 11
    1798:	5c 9a       	sbi	0x0b, 4	; 11
    179a:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    179e:	5c 98       	cbi	0x0b, 4	; 11
    17a0:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <delay_us.constprop.0>
    17a4:	08 95       	ret

000017a6 <_ZN12OrangutanLCD4sendEhhh>:
    17a6:	a0 e0       	ldi	r26, 0x00	; 0
    17a8:	b0 e0       	ldi	r27, 0x00	; 0
    17aa:	e9 ed       	ldi	r30, 0xD9	; 217
    17ac:	fb e0       	ldi	r31, 0x0B	; 11
    17ae:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__prologue_saves__+0x16>
    17b2:	c8 2f       	mov	r28, r24
    17b4:	d6 2e       	mov	r13, r22
    17b6:	e4 2e       	mov	r14, r20
    17b8:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <_ZZN12OrangutanLCD4initEvE11initialized>
    17bc:	81 11       	cpse	r24, r1
    17be:	05 c0       	rjmp	.+10     	; 0x17ca <_ZN12OrangutanLCD4sendEhhh+0x24>
    17c0:	81 e0       	ldi	r24, 0x01	; 1
    17c2:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <_ZZN12OrangutanLCD4initEvE11initialized>
    17c6:	0e 94 19 0c 	call	0x1832	; 0x1832 <_ZN12OrangutanLCD5init2Ev>
    17ca:	0e 94 85 0b 	call	0x170a	; 0x170a <_ZN12OrangutanLCD8busyWaitEv>
    17ce:	14 b1       	in	r17, 0x04	; 4
    17d0:	d5 b1       	in	r29, 0x05	; 5
    17d2:	fa b0       	in	r15, 0x0a	; 10
    17d4:	0b b1       	in	r16, 0x0b	; 11
    17d6:	28 98       	cbi	0x05, 0	; 5
    17d8:	dd 20       	and	r13, r13
    17da:	11 f0       	breq	.+4      	; 0x17e0 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    17dc:	5a 9a       	sbi	0x0b, 2	; 11
    17de:	01 c0       	rjmp	.+2      	; 0x17e2 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    17e0:	5a 98       	cbi	0x0b, 2	; 11
    17e2:	94 b1       	in	r25, 0x04	; 4
    17e4:	92 63       	ori	r25, 0x32	; 50
    17e6:	94 b9       	out	0x04, r25	; 4
    17e8:	57 9a       	sbi	0x0a, 7	; 10
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	e8 16       	cp	r14, r24
    17ee:	29 f0       	breq	.+10     	; 0x17fa <_ZN12OrangutanLCD4sendEhhh+0x54>
    17f0:	8c 2f       	mov	r24, r28
    17f2:	82 95       	swap	r24
    17f4:	8f 70       	andi	r24, 0x0F	; 15
    17f6:	0e 94 b5 0b 	call	0x176a	; 0x176a <_ZN12OrangutanLCD8sendDataEh>
    17fa:	8c 2f       	mov	r24, r28
    17fc:	8f 70       	andi	r24, 0x0F	; 15
    17fe:	0e 94 b5 0b 	call	0x176a	; 0x176a <_ZN12OrangutanLCD8sendDataEh>
    1802:	fa b8       	out	0x0a, r15	; 10
    1804:	0b b9       	out	0x0b, r16	; 11
    1806:	14 b9       	out	0x04, r17	; 4
    1808:	d5 b9       	out	0x05, r29	; 5
    180a:	cd b7       	in	r28, 0x3d	; 61
    180c:	de b7       	in	r29, 0x3e	; 62
    180e:	e7 e0       	ldi	r30, 0x07	; 7
    1810:	0c 94 47 15 	jmp	0x2a8e	; 0x2a8e <__epilogue_restores__+0x16>

00001814 <_ZN12OrangutanLCD8send_cmdEh>:
    1814:	42 e0       	ldi	r20, 0x02	; 2
    1816:	60 e0       	ldi	r22, 0x00	; 0
    1818:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <_ZN12OrangutanLCD4sendEhhh>
    181c:	08 95       	ret

0000181e <_ZN12OrangutanLCD9send_dataEh>:
    181e:	42 e0       	ldi	r20, 0x02	; 2
    1820:	61 e0       	ldi	r22, 0x01	; 1
    1822:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <_ZN12OrangutanLCD4sendEhhh>
    1826:	08 95       	ret

00001828 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1828:	41 e0       	ldi	r20, 0x01	; 1
    182a:	60 e0       	ldi	r22, 0x00	; 0
    182c:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <_ZN12OrangutanLCD4sendEhhh>
    1830:	08 95       	ret

00001832 <_ZN12OrangutanLCD5init2Ev>:
    1832:	80 e1       	ldi	r24, 0x10	; 16
    1834:	97 e2       	ldi	r25, 0x27	; 39
    1836:	a0 e0       	ldi	r26, 0x00	; 0
    1838:	b0 e0       	ldi	r27, 0x00	; 0
    183a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <lcdTimeout>
    183e:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <lcdTimeout+0x1>
    1842:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <lcdTimeout+0x2>
    1846:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <lcdTimeout+0x3>
    184a:	52 9a       	sbi	0x0a, 2	; 10
    184c:	20 9a       	sbi	0x04, 0	; 4
    184e:	54 9a       	sbi	0x0a, 4	; 10
    1850:	8e e1       	ldi	r24, 0x1E	; 30
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1858:	83 e0       	ldi	r24, 0x03	; 3
    185a:	0e 94 14 0c 	call	0x1828	; 0x1828 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    185e:	86 e0       	ldi	r24, 0x06	; 6
    1860:	90 e0       	ldi	r25, 0x00	; 0
    1862:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1866:	83 e0       	ldi	r24, 0x03	; 3
    1868:	0e 94 14 0c 	call	0x1828	; 0x1828 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    186c:	82 e0       	ldi	r24, 0x02	; 2
    186e:	90 e0       	ldi	r25, 0x00	; 0
    1870:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1874:	83 e0       	ldi	r24, 0x03	; 3
    1876:	0e 94 14 0c 	call	0x1828	; 0x1828 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    187a:	82 e0       	ldi	r24, 0x02	; 2
    187c:	90 e0       	ldi	r25, 0x00	; 0
    187e:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1882:	82 e0       	ldi	r24, 0x02	; 2
    1884:	0e 94 14 0c 	call	0x1828	; 0x1828 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1888:	82 e0       	ldi	r24, 0x02	; 2
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1890:	88 e2       	ldi	r24, 0x28	; 40
    1892:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    1896:	88 e0       	ldi	r24, 0x08	; 8
    1898:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    189c:	81 e0       	ldi	r24, 0x01	; 1
    189e:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    18a2:	86 e0       	ldi	r24, 0x06	; 6
    18a4:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    18a8:	8c e0       	ldi	r24, 0x0C	; 12
    18aa:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    18ae:	08 95       	ret

000018b0 <_ZN12OrangutanLCD5clearEv>:
    18b0:	81 e0       	ldi	r24, 0x01	; 1
    18b2:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    18b6:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <printf_chars>
    18ba:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <printf_chars+0x1>
    18be:	89 2b       	or	r24, r25
    18c0:	f9 f0       	breq	.+62     	; 0x1900 <_ZN12OrangutanLCD5clearEv+0x50>
    18c2:	60 e0       	ldi	r22, 0x00	; 0
    18c4:	a0 e2       	ldi	r26, 0x20	; 32
    18c6:	26 2f       	mov	r18, r22
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    18ce:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	01 97       	sbiw	r24, 0x01	; 1
    18d6:	78 9f       	mul	r23, r24
    18d8:	a0 01       	movw	r20, r0
    18da:	79 9f       	mul	r23, r25
    18dc:	50 0d       	add	r21, r0
    18de:	11 24       	eor	r1, r1
    18e0:	24 17       	cp	r18, r20
    18e2:	35 07       	cpc	r19, r21
    18e4:	4c f4       	brge	.+18     	; 0x18f8 <_ZN12OrangutanLCD5clearEv+0x48>
    18e6:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <printf_chars>
    18ea:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <printf_chars+0x1>
    18ee:	e2 0f       	add	r30, r18
    18f0:	f3 1f       	adc	r31, r19
    18f2:	a0 83       	st	Z, r26
    18f4:	6f 5f       	subi	r22, 0xFF	; 255
    18f6:	e7 cf       	rjmp	.-50     	; 0x18c6 <_ZN12OrangutanLCD5clearEv+0x16>
    18f8:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <col>
    18fc:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <row>
    1900:	08 95       	ret

00001902 <clear>:
    1902:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <_ZN12OrangutanLCD5clearEv>
    1906:	08 95       	ret

00001908 <_ZN12OrangutanLCD5printEPKc>:
    1908:	cf 93       	push	r28
    190a:	df 93       	push	r29
    190c:	ec 01       	movw	r28, r24
    190e:	89 91       	ld	r24, Y+
    1910:	88 23       	and	r24, r24
    1912:	19 f0       	breq	.+6      	; 0x191a <_ZN12OrangutanLCD5printEPKc+0x12>
    1914:	0e 94 0f 0c 	call	0x181e	; 0x181e <_ZN12OrangutanLCD9send_dataEh>
    1918:	fa cf       	rjmp	.-12     	; 0x190e <_ZN12OrangutanLCD5printEPKc+0x6>
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	08 95       	ret

00001920 <print>:
    1920:	0e 94 84 0c 	call	0x1908	; 0x1908 <_ZN12OrangutanLCD5printEPKc>
    1924:	08 95       	ret

00001926 <_ZN12OrangutanLCD5printEm>:
    1926:	aa e0       	ldi	r26, 0x0A	; 10
    1928:	b0 e0       	ldi	r27, 0x00	; 0
    192a:	e9 e9       	ldi	r30, 0x99	; 153
    192c:	fc e0       	ldi	r31, 0x0C	; 12
    192e:	0c 94 2a 15 	jmp	0x2a54	; 0x2a54 <__prologue_saves__+0x14>
    1932:	1a e0       	ldi	r17, 0x0A	; 10
    1934:	5a e0       	ldi	r21, 0x0A	; 10
    1936:	c5 2e       	mov	r12, r21
    1938:	d1 2c       	mov	r13, r1
    193a:	e1 2c       	mov	r14, r1
    193c:	f1 2c       	mov	r15, r1
    193e:	06 2f       	mov	r16, r22
    1940:	a7 01       	movw	r20, r14
    1942:	96 01       	movw	r18, r12
    1944:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    1948:	ca 01       	movw	r24, r20
    194a:	b9 01       	movw	r22, r18
    194c:	11 50       	subi	r17, 0x01	; 1
    194e:	e1 e0       	ldi	r30, 0x01	; 1
    1950:	f0 e0       	ldi	r31, 0x00	; 0
    1952:	ec 0f       	add	r30, r28
    1954:	fd 1f       	adc	r31, r29
    1956:	e1 0f       	add	r30, r17
    1958:	f1 1d       	adc	r31, r1
    195a:	00 5d       	subi	r16, 0xD0	; 208
    195c:	2a e0       	ldi	r18, 0x0A	; 10
    195e:	62 9f       	mul	r22, r18
    1960:	00 19       	sub	r16, r0
    1962:	11 24       	eor	r1, r1
    1964:	00 83       	st	Z, r16
    1966:	61 15       	cp	r22, r1
    1968:	71 05       	cpc	r23, r1
    196a:	81 05       	cpc	r24, r1
    196c:	91 05       	cpc	r25, r1
    196e:	39 f7       	brne	.-50     	; 0x193e <_ZN12OrangutanLCD5printEm+0x18>
    1970:	1a 30       	cpi	r17, 0x0A	; 10
    1972:	58 f4       	brcc	.+22     	; 0x198a <_ZN12OrangutanLCD5printEm+0x64>
    1974:	e1 e0       	ldi	r30, 0x01	; 1
    1976:	f0 e0       	ldi	r31, 0x00	; 0
    1978:	ec 0f       	add	r30, r28
    197a:	fd 1f       	adc	r31, r29
    197c:	e1 0f       	add	r30, r17
    197e:	f1 1d       	adc	r31, r1
    1980:	80 81       	ld	r24, Z
    1982:	0e 94 0f 0c 	call	0x181e	; 0x181e <_ZN12OrangutanLCD9send_dataEh>
    1986:	1f 5f       	subi	r17, 0xFF	; 255
    1988:	f3 cf       	rjmp	.-26     	; 0x1970 <_ZN12OrangutanLCD5printEm+0x4a>
    198a:	2a 96       	adiw	r28, 0x0a	; 10
    198c:	e8 e0       	ldi	r30, 0x08	; 8
    198e:	0c 94 46 15 	jmp	0x2a8c	; 0x2a8c <__epilogue_restores__+0x14>

00001992 <_ZN12OrangutanLCD5printEl>:
    1992:	cf 92       	push	r12
    1994:	df 92       	push	r13
    1996:	ef 92       	push	r14
    1998:	ff 92       	push	r15
    199a:	6b 01       	movw	r12, r22
    199c:	7c 01       	movw	r14, r24
    199e:	97 ff       	sbrs	r25, 7
    19a0:	0b c0       	rjmp	.+22     	; 0x19b8 <_ZN12OrangutanLCD5printEl+0x26>
    19a2:	f0 94       	com	r15
    19a4:	e0 94       	com	r14
    19a6:	d0 94       	com	r13
    19a8:	c0 94       	com	r12
    19aa:	c1 1c       	adc	r12, r1
    19ac:	d1 1c       	adc	r13, r1
    19ae:	e1 1c       	adc	r14, r1
    19b0:	f1 1c       	adc	r15, r1
    19b2:	8d e2       	ldi	r24, 0x2D	; 45
    19b4:	0e 94 0f 0c 	call	0x181e	; 0x181e <_ZN12OrangutanLCD9send_dataEh>
    19b8:	c7 01       	movw	r24, r14
    19ba:	b6 01       	movw	r22, r12
    19bc:	0e 94 93 0c 	call	0x1926	; 0x1926 <_ZN12OrangutanLCD5printEm>
    19c0:	ff 90       	pop	r15
    19c2:	ef 90       	pop	r14
    19c4:	df 90       	pop	r13
    19c6:	cf 90       	pop	r12
    19c8:	08 95       	ret

000019ca <print_long>:
    19ca:	0e 94 c9 0c 	call	0x1992	; 0x1992 <_ZN12OrangutanLCD5printEl>
    19ce:	08 95       	ret

000019d0 <_ZN12OrangutanLCD6gotoXYEhh>:
    19d0:	a5 e0       	ldi	r26, 0x05	; 5
    19d2:	b0 e0       	ldi	r27, 0x00	; 0
    19d4:	ee ee       	ldi	r30, 0xEE	; 238
    19d6:	fc e0       	ldi	r31, 0x0C	; 12
    19d8:	0c 94 2f 15 	jmp	0x2a5e	; 0x2a5e <__prologue_saves__+0x1e>
    19dc:	18 2f       	mov	r17, r24
    19de:	80 e8       	ldi	r24, 0x80	; 128
    19e0:	89 83       	std	Y+1, r24	; 0x01
    19e2:	80 ec       	ldi	r24, 0xC0	; 192
    19e4:	8a 83       	std	Y+2, r24	; 0x02
    19e6:	84 e9       	ldi	r24, 0x94	; 148
    19e8:	8b 83       	std	Y+3, r24	; 0x03
    19ea:	84 ed       	ldi	r24, 0xD4	; 212
    19ec:	8c 83       	std	Y+4, r24	; 0x04
    19ee:	fe 01       	movw	r30, r28
    19f0:	e6 0f       	add	r30, r22
    19f2:	f1 1d       	adc	r31, r1
    19f4:	81 81       	ldd	r24, Z+1	; 0x01
    19f6:	81 0f       	add	r24, r17
    19f8:	6d 83       	std	Y+5, r22	; 0x05
    19fa:	0e 94 0a 0c 	call	0x1814	; 0x1814 <_ZN12OrangutanLCD8send_cmdEh>
    19fe:	10 93 6f 01 	sts	0x016F, r17	; 0x80016f <col>
    1a02:	6d 81       	ldd	r22, Y+5	; 0x05
    1a04:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <row>
    1a08:	25 96       	adiw	r28, 0x05	; 5
    1a0a:	e3 e0       	ldi	r30, 0x03	; 3
    1a0c:	0c 94 4b 15 	jmp	0x2a96	; 0x2a96 <__epilogue_restores__+0x1e>

00001a10 <lcd_goto_xy>:
    1a10:	0e 94 e8 0c 	call	0x19d0	; 0x19d0 <_ZN12OrangutanLCD6gotoXYEhh>
    1a14:	08 95       	ret

00001a16 <_ZN16OrangutanDigital9setOutputEhh>:
    1a16:	88 30       	cpi	r24, 0x08	; 8
    1a18:	58 f4       	brcc	.+22     	; 0x1a30 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1a1a:	91 e0       	ldi	r25, 0x01	; 1
    1a1c:	01 c0       	rjmp	.+2      	; 0x1a20 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1a1e:	99 0f       	add	r25, r25
    1a20:	8a 95       	dec	r24
    1a22:	ea f7       	brpl	.-6      	; 0x1a1e <_ZN16OrangutanDigital9setOutputEhh+0x8>
    1a24:	89 2f       	mov	r24, r25
    1a26:	aa e2       	ldi	r26, 0x2A	; 42
    1a28:	b0 e0       	ldi	r27, 0x00	; 0
    1a2a:	eb e2       	ldi	r30, 0x2B	; 43
    1a2c:	f0 e0       	ldi	r31, 0x00	; 0
    1a2e:	21 c0       	rjmp	.+66     	; 0x1a72 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1a30:	8e 30       	cpi	r24, 0x0E	; 14
    1a32:	60 f4       	brcc	.+24     	; 0x1a4c <_ZN16OrangutanDigital9setOutputEhh+0x36>
    1a34:	98 ef       	ldi	r25, 0xF8	; 248
    1a36:	98 0f       	add	r25, r24
    1a38:	81 e0       	ldi	r24, 0x01	; 1
    1a3a:	01 c0       	rjmp	.+2      	; 0x1a3e <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1a3c:	88 0f       	add	r24, r24
    1a3e:	9a 95       	dec	r25
    1a40:	ea f7       	brpl	.-6      	; 0x1a3c <_ZN16OrangutanDigital9setOutputEhh+0x26>
    1a42:	a4 e2       	ldi	r26, 0x24	; 36
    1a44:	b0 e0       	ldi	r27, 0x00	; 0
    1a46:	e5 e2       	ldi	r30, 0x25	; 37
    1a48:	f0 e0       	ldi	r31, 0x00	; 0
    1a4a:	13 c0       	rjmp	.+38     	; 0x1a72 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1a4c:	85 31       	cpi	r24, 0x15	; 21
    1a4e:	60 f4       	brcc	.+24     	; 0x1a68 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1a50:	92 ef       	ldi	r25, 0xF2	; 242
    1a52:	98 0f       	add	r25, r24
    1a54:	81 e0       	ldi	r24, 0x01	; 1
    1a56:	01 c0       	rjmp	.+2      	; 0x1a5a <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1a58:	88 0f       	add	r24, r24
    1a5a:	9a 95       	dec	r25
    1a5c:	ea f7       	brpl	.-6      	; 0x1a58 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1a5e:	a7 e2       	ldi	r26, 0x27	; 39
    1a60:	b0 e0       	ldi	r27, 0x00	; 0
    1a62:	e8 e2       	ldi	r30, 0x28	; 40
    1a64:	f0 e0       	ldi	r31, 0x00	; 0
    1a66:	05 c0       	rjmp	.+10     	; 0x1a72 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1a68:	80 e0       	ldi	r24, 0x00	; 0
    1a6a:	a0 e0       	ldi	r26, 0x00	; 0
    1a6c:	b0 e0       	ldi	r27, 0x00	; 0
    1a6e:	e0 e0       	ldi	r30, 0x00	; 0
    1a70:	f0 e0       	ldi	r31, 0x00	; 0
    1a72:	6f 3f       	cpi	r22, 0xFF	; 255
    1a74:	19 f4       	brne	.+6      	; 0x1a7c <_ZN16OrangutanDigital9setOutputEhh+0x66>
    1a76:	90 81       	ld	r25, Z
    1a78:	98 27       	eor	r25, r24
    1a7a:	09 c0       	rjmp	.+18     	; 0x1a8e <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1a7c:	66 23       	and	r22, r22
    1a7e:	19 f0       	breq	.+6      	; 0x1a86 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    1a80:	90 81       	ld	r25, Z
    1a82:	98 2b       	or	r25, r24
    1a84:	04 c0       	rjmp	.+8      	; 0x1a8e <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1a86:	20 81       	ld	r18, Z
    1a88:	98 2f       	mov	r25, r24
    1a8a:	90 95       	com	r25
    1a8c:	92 23       	and	r25, r18
    1a8e:	90 83       	st	Z, r25
    1a90:	9c 91       	ld	r25, X
    1a92:	98 2b       	or	r25, r24
    1a94:	9c 93       	st	X, r25
    1a96:	08 95       	ret

00001a98 <_ZN15OrangutanMotors5init2Ev>:
    1a98:	83 ef       	ldi	r24, 0xF3	; 243
    1a9a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1a9e:	84 bd       	out	0x24, r24	; 36
    1aa0:	82 e0       	ldi	r24, 0x02	; 2
    1aa2:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1aa6:	85 bd       	out	0x25, r24	; 37
    1aa8:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1aac:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1ab0:	18 bc       	out	0x28, r1	; 40
    1ab2:	17 bc       	out	0x27, r1	; 39
    1ab4:	60 e0       	ldi	r22, 0x00	; 0
    1ab6:	86 e0       	ldi	r24, 0x06	; 6
    1ab8:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <_ZN16OrangutanDigital9setOutputEhh>
    1abc:	60 e0       	ldi	r22, 0x00	; 0
    1abe:	85 e0       	ldi	r24, 0x05	; 5
    1ac0:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <_ZN16OrangutanDigital9setOutputEhh>
    1ac4:	60 e0       	ldi	r22, 0x00	; 0
    1ac6:	8b e0       	ldi	r24, 0x0B	; 11
    1ac8:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <_ZN16OrangutanDigital9setOutputEhh>
    1acc:	60 e0       	ldi	r22, 0x00	; 0
    1ace:	83 e0       	ldi	r24, 0x03	; 3
    1ad0:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <_ZN16OrangutanDigital9setOutputEhh>
    1ad4:	08 95       	ret

00001ad6 <_ZN15OrangutanMotors4initEv>:
    1ad6:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <_ZZN15OrangutanMotors4initEvE11initialized>
    1ada:	81 11       	cpse	r24, r1
    1adc:	05 c0       	rjmp	.+10     	; 0x1ae8 <_ZN15OrangutanMotors4initEv+0x12>
    1ade:	81 e0       	ldi	r24, 0x01	; 1
    1ae0:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <_ZZN15OrangutanMotors4initEvE11initialized>
    1ae4:	0e 94 4c 0d 	call	0x1a98	; 0x1a98 <_ZN15OrangutanMotors5init2Ev>
    1ae8:	08 95       	ret

00001aea <_ZN15OrangutanMotors10setM1SpeedEi>:
    1aea:	cf 93       	push	r28
    1aec:	df 93       	push	r29
    1aee:	ec 01       	movw	r28, r24
    1af0:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <_ZN15OrangutanMotors4initEv>
    1af4:	d7 ff       	sbrs	r29, 7
    1af6:	05 c0       	rjmp	.+10     	; 0x1b02 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    1af8:	d1 95       	neg	r29
    1afa:	c1 95       	neg	r28
    1afc:	d1 09       	sbc	r29, r1
    1afe:	81 e0       	ldi	r24, 0x01	; 1
    1b00:	01 c0       	rjmp	.+2      	; 0x1b04 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1b02:	80 e0       	ldi	r24, 0x00	; 0
    1b04:	cf 3f       	cpi	r28, 0xFF	; 255
    1b06:	d1 05       	cpc	r29, r1
    1b08:	19 f0       	breq	.+6      	; 0x1b10 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1b0a:	14 f0       	brlt	.+4      	; 0x1b10 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1b0c:	cf ef       	ldi	r28, 0xFF	; 255
    1b0e:	d0 e0       	ldi	r29, 0x00	; 0
    1b10:	88 23       	and	r24, r24
    1b12:	19 f0       	breq	.+6      	; 0x1b1a <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    1b14:	18 bc       	out	0x28, r1	; 40
    1b16:	c7 bd       	out	0x27, r28	; 39
    1b18:	02 c0       	rjmp	.+4      	; 0x1b1e <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1b1a:	c8 bd       	out	0x28, r28	; 40
    1b1c:	17 bc       	out	0x27, r1	; 39
    1b1e:	df 91       	pop	r29
    1b20:	cf 91       	pop	r28
    1b22:	08 95       	ret

00001b24 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1b24:	cf 93       	push	r28
    1b26:	df 93       	push	r29
    1b28:	ec 01       	movw	r28, r24
    1b2a:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <_ZN15OrangutanMotors4initEv>
    1b2e:	d7 ff       	sbrs	r29, 7
    1b30:	05 c0       	rjmp	.+10     	; 0x1b3c <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1b32:	d1 95       	neg	r29
    1b34:	c1 95       	neg	r28
    1b36:	d1 09       	sbc	r29, r1
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	01 c0       	rjmp	.+2      	; 0x1b3e <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1b3c:	80 e0       	ldi	r24, 0x00	; 0
    1b3e:	cf 3f       	cpi	r28, 0xFF	; 255
    1b40:	d1 05       	cpc	r29, r1
    1b42:	19 f0       	breq	.+6      	; 0x1b4a <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1b44:	14 f0       	brlt	.+4      	; 0x1b4a <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1b46:	cf ef       	ldi	r28, 0xFF	; 255
    1b48:	d0 e0       	ldi	r29, 0x00	; 0
    1b4a:	88 23       	and	r24, r24
    1b4c:	29 f0       	breq	.+10     	; 0x1b58 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1b4e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1b52:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1b56:	04 c0       	rjmp	.+8      	; 0x1b60 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1b58:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1b5c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1b60:	df 91       	pop	r29
    1b62:	cf 91       	pop	r28
    1b64:	08 95       	ret

00001b66 <_ZN15OrangutanMotors9setSpeedsEii>:
    1b66:	cf 93       	push	r28
    1b68:	df 93       	push	r29
    1b6a:	eb 01       	movw	r28, r22
    1b6c:	0e 94 75 0d 	call	0x1aea	; 0x1aea <_ZN15OrangutanMotors10setM1SpeedEi>
    1b70:	ce 01       	movw	r24, r28
    1b72:	0e 94 92 0d 	call	0x1b24	; 0x1b24 <_ZN15OrangutanMotors10setM2SpeedEi>
    1b76:	df 91       	pop	r29
    1b78:	cf 91       	pop	r28
    1b7a:	08 95       	ret

00001b7c <set_motors>:
    1b7c:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <_ZN15OrangutanMotors9setSpeedsEii>
    1b80:	08 95       	ret

00001b82 <_ZN20OrangutanPushbuttons5init2Ev>:
    1b82:	84 b1       	in	r24, 0x04	; 4
    1b84:	8d 7c       	andi	r24, 0xCD	; 205
    1b86:	84 b9       	out	0x04, r24	; 4
    1b88:	85 b1       	in	r24, 0x05	; 5
    1b8a:	82 63       	ori	r24, 0x32	; 50
    1b8c:	85 b9       	out	0x05, r24	; 5
    1b8e:	85 e0       	ldi	r24, 0x05	; 5
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	6f 93       	push	r22
    1b94:	64 e0       	ldi	r22, 0x04	; 4
    1b96:	6a 95       	dec	r22
    1b98:	f1 f7       	brne	.-4      	; 0x1b96 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1b9a:	6f 91       	pop	r22
    1b9c:	01 97       	sbiw	r24, 0x01	; 1
    1b9e:	c9 f7       	brne	.-14     	; 0x1b92 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1ba0:	08 95       	ret

00001ba2 <_ZN20OrangutanPushbuttons4initEv>:
    1ba2:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1ba6:	81 11       	cpse	r24, r1
    1ba8:	05 c0       	rjmp	.+10     	; 0x1bb4 <_ZN20OrangutanPushbuttons4initEv+0x12>
    1baa:	81 e0       	ldi	r24, 0x01	; 1
    1bac:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1bb0:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <_ZN20OrangutanPushbuttons5init2Ev>
    1bb4:	08 95       	ret

00001bb6 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1bb6:	cf 93       	push	r28
    1bb8:	c8 2f       	mov	r28, r24
    1bba:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <_ZN20OrangutanPushbuttons4initEv>
    1bbe:	83 b1       	in	r24, 0x03	; 3
    1bc0:	8c 23       	and	r24, r28
    1bc2:	e9 f3       	breq	.-6      	; 0x1bbe <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1bc4:	8a e0       	ldi	r24, 0x0A	; 10
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <delay_ms>
    1bcc:	83 b1       	in	r24, 0x03	; 3
    1bce:	8c 23       	and	r24, r28
    1bd0:	b1 f3       	breq	.-20     	; 0x1bbe <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1bd2:	83 b1       	in	r24, 0x03	; 3
    1bd4:	8c 23       	and	r24, r28
    1bd6:	cf 91       	pop	r28
    1bd8:	08 95       	ret

00001bda <wait_for_button_release>:
    1bda:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1bde:	08 95       	ret

00001be0 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1be0:	a1 e0       	ldi	r26, 0x01	; 1
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	e6 ef       	ldi	r30, 0xF6	; 246
    1be6:	fd e0       	ldi	r31, 0x0D	; 13
    1be8:	0c 94 30 15 	jmp	0x2a60	; 0x2a60 <__prologue_saves__+0x20>
    1bec:	89 83       	std	Y+1, r24	; 0x01
    1bee:	0e 94 d1 0d 	call	0x1ba2	; 0x1ba2 <_ZN20OrangutanPushbuttons4initEv>
    1bf2:	93 b1       	in	r25, 0x03	; 3
    1bf4:	90 95       	com	r25
    1bf6:	89 81       	ldd	r24, Y+1	; 0x01
    1bf8:	89 23       	and	r24, r25
    1bfa:	21 96       	adiw	r28, 0x01	; 1
    1bfc:	e2 e0       	ldi	r30, 0x02	; 2
    1bfe:	0c 94 4c 15 	jmp	0x2a98	; 0x2a98 <__epilogue_restores__+0x20>

00001c02 <button_is_pressed>:
    1c02:	0e 94 f0 0d 	call	0x1be0	; 0x1be0 <_ZN20OrangutanPushbuttons9isPressedEh>
    1c06:	08 95       	ret

00001c08 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    1c08:	28 2f       	mov	r18, r24
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	9a e0       	ldi	r25, 0x0A	; 10
    1c0e:	89 9f       	mul	r24, r25
    1c10:	f0 01       	movw	r30, r0
    1c12:	11 24       	eor	r1, r1
    1c14:	ed 58       	subi	r30, 0x8D	; 141
    1c16:	fe 4f       	sbci	r31, 0xFE	; 254
    1c18:	80 85       	ldd	r24, Z+8	; 0x08
    1c1a:	91 85       	ldd	r25, Z+9	; 0x09
    1c1c:	00 97       	sbiw	r24, 0x00	; 0
    1c1e:	21 f0       	breq	.+8      	; 0x1c28 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    1c20:	52 81       	ldd	r21, Z+2	; 0x02
    1c22:	44 81       	ldd	r20, Z+4	; 0x04
    1c24:	54 17       	cp	r21, r20
    1c26:	80 f0       	brcs	.+32     	; 0x1c48 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    1c28:	8a e0       	ldi	r24, 0x0A	; 10
    1c2a:	82 9f       	mul	r24, r18
    1c2c:	f0 01       	movw	r30, r0
    1c2e:	83 9f       	mul	r24, r19
    1c30:	f0 0d       	add	r31, r0
    1c32:	11 24       	eor	r1, r1
    1c34:	ed 58       	subi	r30, 0x8D	; 141
    1c36:	fe 4f       	sbci	r31, 0xFE	; 254
    1c38:	92 81       	ldd	r25, Z+2	; 0x02
    1c3a:	84 81       	ldd	r24, Z+4	; 0x04
    1c3c:	98 13       	cpse	r25, r24
    1c3e:	0e c0       	rjmp	.+28     	; 0x1c5c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    1c40:	85 81       	ldd	r24, Z+5	; 0x05
    1c42:	81 11       	cpse	r24, r1
    1c44:	0a c0       	rjmp	.+20     	; 0x1c5a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    1c46:	08 95       	ret
    1c48:	42 81       	ldd	r20, Z+2	; 0x02
    1c4a:	dc 01       	movw	r26, r24
    1c4c:	a4 0f       	add	r26, r20
    1c4e:	b1 1d       	adc	r27, r1
    1c50:	6c 93       	st	X, r22
    1c52:	82 81       	ldd	r24, Z+2	; 0x02
    1c54:	8f 5f       	subi	r24, 0xFF	; 255
    1c56:	82 83       	std	Z+2, r24	; 0x02
    1c58:	e7 cf       	rjmp	.-50     	; 0x1c28 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    1c5a:	12 82       	std	Z+2, r1	; 0x02
    1c5c:	08 95       	ret

00001c5e <__vector_18>:
    1c5e:	1f 92       	push	r1
    1c60:	0f 92       	push	r0
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	0f 92       	push	r0
    1c66:	11 24       	eor	r1, r1
    1c68:	2f 93       	push	r18
    1c6a:	3f 93       	push	r19
    1c6c:	4f 93       	push	r20
    1c6e:	5f 93       	push	r21
    1c70:	6f 93       	push	r22
    1c72:	7f 93       	push	r23
    1c74:	8f 93       	push	r24
    1c76:	9f 93       	push	r25
    1c78:	af 93       	push	r26
    1c7a:	bf 93       	push	r27
    1c7c:	ef 93       	push	r30
    1c7e:	ff 93       	push	r31
    1c80:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1c84:	80 e0       	ldi	r24, 0x00	; 0
    1c86:	0e 94 04 0e 	call	0x1c08	; 0x1c08 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1c8a:	ff 91       	pop	r31
    1c8c:	ef 91       	pop	r30
    1c8e:	bf 91       	pop	r27
    1c90:	af 91       	pop	r26
    1c92:	9f 91       	pop	r25
    1c94:	8f 91       	pop	r24
    1c96:	7f 91       	pop	r23
    1c98:	6f 91       	pop	r22
    1c9a:	5f 91       	pop	r21
    1c9c:	4f 91       	pop	r20
    1c9e:	3f 91       	pop	r19
    1ca0:	2f 91       	pop	r18
    1ca2:	0f 90       	pop	r0
    1ca4:	0f be       	out	0x3f, r0	; 63
    1ca6:	0f 90       	pop	r0
    1ca8:	1f 90       	pop	r1
    1caa:	18 95       	reti

00001cac <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1cac:	9a e0       	ldi	r25, 0x0A	; 10
    1cae:	89 9f       	mul	r24, r25
    1cb0:	f0 01       	movw	r30, r0
    1cb2:	11 24       	eor	r1, r1
    1cb4:	ed 58       	subi	r30, 0x8D	; 141
    1cb6:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb8:	86 81       	ldd	r24, Z+6	; 0x06
    1cba:	97 81       	ldd	r25, Z+7	; 0x07
    1cbc:	89 2b       	or	r24, r25
    1cbe:	59 f0       	breq	.+22     	; 0x1cd6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1cc0:	91 81       	ldd	r25, Z+1	; 0x01
    1cc2:	83 81       	ldd	r24, Z+3	; 0x03
    1cc4:	98 17       	cp	r25, r24
    1cc6:	38 f4       	brcc	.+14     	; 0x1cd6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1cc8:	80 81       	ld	r24, Z
    1cca:	81 11       	cpse	r24, r1
    1ccc:	04 c0       	rjmp	.+8      	; 0x1cd6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1cce:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1cd2:	80 62       	ori	r24, 0x20	; 32
    1cd4:	03 c0       	rjmp	.+6      	; 0x1cdc <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    1cd6:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1cda:	8f 7d       	andi	r24, 0xDF	; 223
    1cdc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1ce0:	08 95       	ret

00001ce2 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    1ce2:	9a e0       	ldi	r25, 0x0A	; 10
    1ce4:	89 9f       	mul	r24, r25
    1ce6:	f0 01       	movw	r30, r0
    1ce8:	11 24       	eor	r1, r1
    1cea:	ed 58       	subi	r30, 0x8D	; 141
    1cec:	fe 4f       	sbci	r31, 0xFE	; 254
    1cee:	26 81       	ldd	r18, Z+6	; 0x06
    1cf0:	37 81       	ldd	r19, Z+7	; 0x07
    1cf2:	21 15       	cp	r18, r1
    1cf4:	31 05       	cpc	r19, r1
    1cf6:	41 f0       	breq	.+16     	; 0x1d08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1cf8:	41 81       	ldd	r20, Z+1	; 0x01
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	49 17       	cp	r20, r25
    1cfe:	20 f4       	brcc	.+8      	; 0x1d08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1d00:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1d04:	95 fd       	sbrc	r25, 5
    1d06:	03 c0       	rjmp	.+6      	; 0x1d0e <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    1d08:	0e 94 56 0e 	call	0x1cac	; 0x1cac <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1d0c:	08 95       	ret
    1d0e:	91 81       	ldd	r25, Z+1	; 0x01
    1d10:	d9 01       	movw	r26, r18
    1d12:	a9 0f       	add	r26, r25
    1d14:	b1 1d       	adc	r27, r1
    1d16:	9c 91       	ld	r25, X
    1d18:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1d1c:	91 81       	ldd	r25, Z+1	; 0x01
    1d1e:	9f 5f       	subi	r25, 0xFF	; 255
    1d20:	91 83       	std	Z+1, r25	; 0x01
    1d22:	f2 cf       	rjmp	.-28     	; 0x1d08 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00001d24 <__vector_19>:
    1d24:	1f 92       	push	r1
    1d26:	0f 92       	push	r0
    1d28:	0f b6       	in	r0, 0x3f	; 63
    1d2a:	0f 92       	push	r0
    1d2c:	11 24       	eor	r1, r1
    1d2e:	2f 93       	push	r18
    1d30:	3f 93       	push	r19
    1d32:	4f 93       	push	r20
    1d34:	5f 93       	push	r21
    1d36:	6f 93       	push	r22
    1d38:	7f 93       	push	r23
    1d3a:	8f 93       	push	r24
    1d3c:	9f 93       	push	r25
    1d3e:	af 93       	push	r26
    1d40:	bf 93       	push	r27
    1d42:	ef 93       	push	r30
    1d44:	ff 93       	push	r31
    1d46:	80 e0       	ldi	r24, 0x00	; 0
    1d48:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <_ZN15OrangutanSerial11uart_tx_isrEh>
    1d4c:	ff 91       	pop	r31
    1d4e:	ef 91       	pop	r30
    1d50:	bf 91       	pop	r27
    1d52:	af 91       	pop	r26
    1d54:	9f 91       	pop	r25
    1d56:	8f 91       	pop	r24
    1d58:	7f 91       	pop	r23
    1d5a:	6f 91       	pop	r22
    1d5c:	5f 91       	pop	r21
    1d5e:	4f 91       	pop	r20
    1d60:	3f 91       	pop	r19
    1d62:	2f 91       	pop	r18
    1d64:	0f 90       	pop	r0
    1d66:	0f be       	out	0x3f, r0	; 63
    1d68:	0f 90       	pop	r0
    1d6a:	1f 90       	pop	r1
    1d6c:	18 95       	reti

00001d6e <__vector_9>:
    1d6e:	2f 92       	push	r2
    1d70:	8f 93       	push	r24
    1d72:	9f 93       	push	r25
    1d74:	2f b6       	in	r2, 0x3f	; 63
    1d76:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <tickCount+0x1>
    1d7a:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <tickCount+0x2>
    1d7e:	01 96       	adiw	r24, 0x01	; 1
    1d80:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <tickCount+0x1>
    1d84:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <tickCount+0x2>
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <tickCount+0x3>
    1d8e:	89 1f       	adc	r24, r25
    1d90:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <tickCount+0x3>
    1d94:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <us_over_10+0x1>
    1d98:	9c 5f       	subi	r25, 0xFC	; 252
    1d9a:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <us_over_10+0x1>
    1d9e:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <us_over_10>
    1da2:	80 51       	subi	r24, 0x10	; 16
    1da4:	97 42       	sbci	r25, 0x27	; 39
    1da6:	c0 f0       	brcs	.+48     	; 0x1dd8 <end>
    1da8:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <us_over_10+0x1>
    1dac:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <us_over_10>
    1db0:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <msCounter>
    1db4:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <msCounter+0x1>
    1db8:	01 96       	adiw	r24, 0x01	; 1
    1dba:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <msCounter>
    1dbe:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <msCounter+0x1>
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <msCounter+0x2>
    1dc8:	89 1f       	adc	r24, r25
    1dca:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <msCounter+0x2>
    1dce:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <msCounter+0x3>
    1dd2:	89 1f       	adc	r24, r25
    1dd4:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <msCounter+0x3>

00001dd8 <end>:
    1dd8:	2f be       	out	0x3f, r2	; 63
    1dda:	9f 91       	pop	r25
    1ddc:	8f 91       	pop	r24
    1dde:	2f 90       	pop	r2
    1de0:	18 95       	reti

00001de2 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1de2:	28 ee       	ldi	r18, 0xE8	; 232
    1de4:	33 e0       	ldi	r19, 0x03	; 3
    1de6:	01 97       	sbiw	r24, 0x01	; 1
    1de8:	48 f0       	brcs	.+18     	; 0x1dfc <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1dea:	f9 01       	movw	r30, r18
    1dec:	6f 93       	push	r22
    1dee:	64 e0       	ldi	r22, 0x04	; 4
    1df0:	6a 95       	dec	r22
    1df2:	f1 f7       	brne	.-4      	; 0x1df0 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1df4:	6f 91       	pop	r22
    1df6:	31 97       	sbiw	r30, 0x01	; 1
    1df8:	c9 f7       	brne	.-14     	; 0x1dec <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1dfa:	f5 cf       	rjmp	.-22     	; 0x1de6 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1dfc:	08 95       	ret

00001dfe <delay_ms>:
    1dfe:	0e 94 f1 0e 	call	0x1de2	; 0x1de2 <_ZN13OrangutanTime17delayMillisecondsEj>
    1e02:	08 95       	ret

00001e04 <_ZN13OrangutanTime5init2Ev>:
    1e04:	e0 e7       	ldi	r30, 0x70	; 112
    1e06:	f0 e0       	ldi	r31, 0x00	; 0
    1e08:	80 81       	ld	r24, Z
    1e0a:	8e 7f       	andi	r24, 0xFE	; 254
    1e0c:	80 83       	st	Z, r24
    1e0e:	a0 eb       	ldi	r26, 0xB0	; 176
    1e10:	b0 e0       	ldi	r27, 0x00	; 0
    1e12:	8c 91       	ld	r24, X
    1e14:	83 60       	ori	r24, 0x03	; 3
    1e16:	8c 93       	st	X, r24
    1e18:	a1 eb       	ldi	r26, 0xB1	; 177
    1e1a:	b0 e0       	ldi	r27, 0x00	; 0
    1e1c:	8c 91       	ld	r24, X
    1e1e:	80 7f       	andi	r24, 0xF0	; 240
    1e20:	8c 93       	st	X, r24
    1e22:	8c 91       	ld	r24, X
    1e24:	82 60       	ori	r24, 0x02	; 2
    1e26:	8c 93       	st	X, r24
    1e28:	b8 9a       	sbi	0x17, 0	; 23
    1e2a:	80 81       	ld	r24, Z
    1e2c:	81 60       	ori	r24, 0x01	; 1
    1e2e:	80 83       	st	Z, r24
    1e30:	78 94       	sei
    1e32:	08 95       	ret

00001e34 <_ZN13OrangutanTime4initEv>:
    1e34:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <_ZZN13OrangutanTime4initEvE11initialized>
    1e38:	81 11       	cpse	r24, r1
    1e3a:	05 c0       	rjmp	.+10     	; 0x1e46 <_ZN13OrangutanTime4initEv+0x12>
    1e3c:	81 e0       	ldi	r24, 0x01	; 1
    1e3e:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <_ZZN13OrangutanTime4initEvE11initialized>
    1e42:	0e 94 02 0f 	call	0x1e04	; 0x1e04 <_ZN13OrangutanTime5init2Ev>
    1e46:	08 95       	ret

00001e48 <_ZN13OrangutanTime2msEv>:
    1e48:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <_ZN13OrangutanTime4initEv>
    1e4c:	e0 e7       	ldi	r30, 0x70	; 112
    1e4e:	f0 e0       	ldi	r31, 0x00	; 0
    1e50:	80 81       	ld	r24, Z
    1e52:	8e 7f       	andi	r24, 0xFE	; 254
    1e54:	80 83       	st	Z, r24
    1e56:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <msCounter>
    1e5a:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <msCounter+0x1>
    1e5e:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <msCounter+0x2>
    1e62:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <msCounter+0x3>
    1e66:	20 81       	ld	r18, Z
    1e68:	21 60       	ori	r18, 0x01	; 1
    1e6a:	20 83       	st	Z, r18
    1e6c:	08 95       	ret

00001e6e <get_ms>:
    1e6e:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <_ZN13OrangutanTime2msEv>
    1e72:	08 95       	ret

00001e74 <_ZN13OrangutanTime5resetEv>:
    1e74:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <_ZN13OrangutanTime4initEv>
    1e78:	e0 e7       	ldi	r30, 0x70	; 112
    1e7a:	f0 e0       	ldi	r31, 0x00	; 0
    1e7c:	80 81       	ld	r24, Z
    1e7e:	8e 7f       	andi	r24, 0xFE	; 254
    1e80:	80 83       	st	Z, r24
    1e82:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <msCounter>
    1e86:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <msCounter+0x1>
    1e8a:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <msCounter+0x2>
    1e8e:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <msCounter+0x3>
    1e92:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <us_over_10+0x1>
    1e96:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <us_over_10>
    1e9a:	80 81       	ld	r24, Z
    1e9c:	81 60       	ori	r24, 0x01	; 1
    1e9e:	80 83       	st	Z, r24
    1ea0:	08 95       	ret

00001ea2 <calibrate_line_sensors>:
    1ea2:	68 2f       	mov	r22, r24
    1ea4:	87 e8       	ldi	r24, 0x87	; 135
    1ea6:	91 e0       	ldi	r25, 0x01	; 1
    1ea8:	0e 94 39 13 	call	0x2672	; 0x2672 <_ZN16PololuQTRSensors9calibrateEh>
    1eac:	08 95       	ret

00001eae <read_line>:
    1eae:	46 2f       	mov	r20, r22
    1eb0:	20 e0       	ldi	r18, 0x00	; 0
    1eb2:	bc 01       	movw	r22, r24
    1eb4:	87 e8       	ldi	r24, 0x87	; 135
    1eb6:	91 e0       	ldi	r25, 0x01	; 1
    1eb8:	0e 94 0a 14 	call	0x2814	; 0x2814 <_ZN16PololuQTRSensors8readLineEPjhh>
    1ebc:	08 95       	ret

00001ebe <_ZN9Pololu3pi4initEjh>:
    1ebe:	0f 93       	push	r16
    1ec0:	cf 93       	push	r28
    1ec2:	df 93       	push	r29
    1ec4:	00 d0       	rcall	.+0      	; 0x1ec6 <_ZN9Pololu3pi4initEjh+0x8>
    1ec6:	00 d0       	rcall	.+0      	; 0x1ec8 <_ZN9Pololu3pi4initEjh+0xa>
    1ec8:	1f 92       	push	r1
    1eca:	cd b7       	in	r28, 0x3d	; 61
    1ecc:	de b7       	in	r29, 0x3e	; 62
    1ece:	9c 01       	movw	r18, r24
    1ed0:	85 e0       	ldi	r24, 0x05	; 5
    1ed2:	ec e2       	ldi	r30, 0x2C	; 44
    1ed4:	f1 e0       	ldi	r31, 0x01	; 1
    1ed6:	de 01       	movw	r26, r28
    1ed8:	11 96       	adiw	r26, 0x01	; 1
    1eda:	01 90       	ld	r0, Z+
    1edc:	0d 92       	st	X+, r0
    1ede:	8a 95       	dec	r24
    1ee0:	e1 f7       	brne	.-8      	; 0x1eda <_ZN9Pololu3pi4initEjh+0x1c>
    1ee2:	66 23       	and	r22, r22
    1ee4:	11 f0       	breq	.+4      	; 0x1eea <_ZN9Pololu3pi4initEjh+0x2c>
    1ee6:	0f ef       	ldi	r16, 0xFF	; 255
    1ee8:	01 c0       	rjmp	.+2      	; 0x1eec <_ZN9Pololu3pi4initEjh+0x2e>
    1eea:	03 e1       	ldi	r16, 0x13	; 19
    1eec:	45 e0       	ldi	r20, 0x05	; 5
    1eee:	be 01       	movw	r22, r28
    1ef0:	6f 5f       	subi	r22, 0xFF	; 255
    1ef2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ef4:	87 e8       	ldi	r24, 0x87	; 135
    1ef6:	91 e0       	ldi	r25, 0x01	; 1
    1ef8:	0e 94 31 10 	call	0x2062	; 0x2062 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1efc:	87 e8       	ldi	r24, 0x87	; 135
    1efe:	91 e0       	ldi	r25, 0x01	; 1
    1f00:	0e 94 08 10 	call	0x2010	; 0x2010 <_ZN16PololuQTRSensors11emittersOffEv>
    1f04:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <_ZN13OrangutanTime5resetEv>
    1f08:	0f 90       	pop	r0
    1f0a:	0f 90       	pop	r0
    1f0c:	0f 90       	pop	r0
    1f0e:	0f 90       	pop	r0
    1f10:	0f 90       	pop	r0
    1f12:	df 91       	pop	r29
    1f14:	cf 91       	pop	r28
    1f16:	0f 91       	pop	r16
    1f18:	08 95       	ret

00001f1a <pololu_3pi_init>:
    1f1a:	60 e0       	ldi	r22, 0x00	; 0
    1f1c:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <_ZN9Pololu3pi4initEjh>
    1f20:	08 95       	ret

00001f22 <_GLOBAL__sub_D_pololu_3pi_init>:
    1f22:	87 e8       	ldi	r24, 0x87	; 135
    1f24:	91 e0       	ldi	r25, 0x01	; 1
    1f26:	0e 94 7f 14 	call	0x28fe	; 0x28fe <_ZN16PololuQTRSensorsD1Ev>
    1f2a:	08 95       	ret

00001f2c <delay_us>:
    1f2c:	6f 93       	push	r22
    1f2e:	64 e0       	ldi	r22, 0x04	; 4
    1f30:	6a 95       	dec	r22
    1f32:	f1 f7       	brne	.-4      	; 0x1f30 <delay_us+0x4>
    1f34:	6f 91       	pop	r22
    1f36:	01 97       	sbiw	r24, 0x01	; 1
    1f38:	c9 f7       	brne	.-14     	; 0x1f2c <delay_us>
    1f3a:	08 95       	ret

00001f3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1f3c:	fc 01       	movw	r30, r24
    1f3e:	11 82       	std	Z+1, r1	; 0x01
    1f40:	10 82       	st	Z, r1
    1f42:	13 82       	std	Z+3, r1	; 0x03
    1f44:	12 82       	std	Z+2, r1	; 0x02
    1f46:	15 82       	std	Z+5, r1	; 0x05
    1f48:	14 82       	std	Z+4, r1	; 0x04
    1f4a:	16 82       	std	Z+6, r1	; 0x06
    1f4c:	68 30       	cpi	r22, 0x08	; 8
    1f4e:	68 f4       	brcc	.+26     	; 0x1f6a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1f50:	89 e2       	ldi	r24, 0x29	; 41
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	91 83       	std	Z+1, r25	; 0x01
    1f56:	80 83       	st	Z, r24
    1f58:	8b e2       	ldi	r24, 0x2B	; 43
    1f5a:	90 e0       	ldi	r25, 0x00	; 0
    1f5c:	93 83       	std	Z+3, r25	; 0x03
    1f5e:	82 83       	std	Z+2, r24	; 0x02
    1f60:	8a e2       	ldi	r24, 0x2A	; 42
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	95 83       	std	Z+5, r25	; 0x05
    1f66:	84 83       	std	Z+4, r24	; 0x04
    1f68:	1f c0       	rjmp	.+62     	; 0x1fa8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1f6a:	6e 30       	cpi	r22, 0x0E	; 14
    1f6c:	70 f4       	brcc	.+28     	; 0x1f8a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1f6e:	83 e2       	ldi	r24, 0x23	; 35
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	91 83       	std	Z+1, r25	; 0x01
    1f74:	80 83       	st	Z, r24
    1f76:	85 e2       	ldi	r24, 0x25	; 37
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	93 83       	std	Z+3, r25	; 0x03
    1f7c:	82 83       	std	Z+2, r24	; 0x02
    1f7e:	84 e2       	ldi	r24, 0x24	; 36
    1f80:	90 e0       	ldi	r25, 0x00	; 0
    1f82:	95 83       	std	Z+5, r25	; 0x05
    1f84:	84 83       	std	Z+4, r24	; 0x04
    1f86:	68 50       	subi	r22, 0x08	; 8
    1f88:	0f c0       	rjmp	.+30     	; 0x1fa8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1f8a:	65 31       	cpi	r22, 0x15	; 21
    1f8c:	98 f4       	brcc	.+38     	; 0x1fb4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1f8e:	86 e2       	ldi	r24, 0x26	; 38
    1f90:	90 e0       	ldi	r25, 0x00	; 0
    1f92:	91 83       	std	Z+1, r25	; 0x01
    1f94:	80 83       	st	Z, r24
    1f96:	88 e2       	ldi	r24, 0x28	; 40
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	93 83       	std	Z+3, r25	; 0x03
    1f9c:	82 83       	std	Z+2, r24	; 0x02
    1f9e:	87 e2       	ldi	r24, 0x27	; 39
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	95 83       	std	Z+5, r25	; 0x05
    1fa4:	84 83       	std	Z+4, r24	; 0x04
    1fa6:	6e 50       	subi	r22, 0x0E	; 14
    1fa8:	81 e0       	ldi	r24, 0x01	; 1
    1faa:	01 c0       	rjmp	.+2      	; 0x1fae <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1fac:	88 0f       	add	r24, r24
    1fae:	6a 95       	dec	r22
    1fb0:	ea f7       	brpl	.-6      	; 0x1fac <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1fb2:	86 83       	std	Z+6, r24	; 0x06
    1fb4:	08 95       	ret

00001fb6 <_ZN16PololuQTRSensors4initEhhh>:
    1fb6:	a7 e0       	ldi	r26, 0x07	; 7
    1fb8:	b0 e0       	ldi	r27, 0x00	; 0
    1fba:	e1 ee       	ldi	r30, 0xE1	; 225
    1fbc:	ff e0       	ldi	r31, 0x0F	; 15
    1fbe:	0c 94 2e 15 	jmp	0x2a5c	; 0x2a5c <__prologue_saves__+0x1c>
    1fc2:	8c 01       	movw	r16, r24
    1fc4:	fc 01       	movw	r30, r24
    1fc6:	11 82       	std	Z+1, r1	; 0x01
    1fc8:	10 82       	st	Z, r1
    1fca:	13 82       	std	Z+3, r1	; 0x03
    1fcc:	12 82       	std	Z+2, r1	; 0x02
    1fce:	15 82       	std	Z+5, r1	; 0x05
    1fd0:	14 82       	std	Z+4, r1	; 0x04
    1fd2:	17 82       	std	Z+7, r1	; 0x07
    1fd4:	16 82       	std	Z+6, r1	; 0x06
    1fd6:	61 31       	cpi	r22, 0x11	; 17
    1fd8:	18 f0       	brcs	.+6      	; 0x1fe0 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1fda:	80 e1       	ldi	r24, 0x10	; 16
    1fdc:	80 87       	std	Z+8, r24	; 0x08
    1fde:	02 c0       	rjmp	.+4      	; 0x1fe4 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1fe0:	fc 01       	movw	r30, r24
    1fe2:	60 87       	std	Z+8, r22	; 0x08
    1fe4:	f8 01       	movw	r30, r16
    1fe6:	20 8b       	std	Z+16, r18	; 0x10
    1fe8:	64 2f       	mov	r22, r20
    1fea:	ce 01       	movw	r24, r28
    1fec:	01 96       	adiw	r24, 0x01	; 1
    1fee:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1ff2:	8f 81       	ldd	r24, Y+7	; 0x07
    1ff4:	f8 01       	movw	r30, r16
    1ff6:	81 87       	std	Z+9, r24	; 0x09
    1ff8:	8b 81       	ldd	r24, Y+3	; 0x03
    1ffa:	9c 81       	ldd	r25, Y+4	; 0x04
    1ffc:	93 87       	std	Z+11, r25	; 0x0b
    1ffe:	82 87       	std	Z+10, r24	; 0x0a
    2000:	8d 81       	ldd	r24, Y+5	; 0x05
    2002:	9e 81       	ldd	r25, Y+6	; 0x06
    2004:	95 87       	std	Z+13, r25	; 0x0d
    2006:	84 87       	std	Z+12, r24	; 0x0c
    2008:	27 96       	adiw	r28, 0x07	; 7
    200a:	e4 e0       	ldi	r30, 0x04	; 4
    200c:	0c 94 4a 15 	jmp	0x2a94	; 0x2a94 <__epilogue_restores__+0x1c>

00002010 <_ZN16PololuQTRSensors11emittersOffEv>:
    2010:	fc 01       	movw	r30, r24
    2012:	a4 85       	ldd	r26, Z+12	; 0x0c
    2014:	b5 85       	ldd	r27, Z+13	; 0x0d
    2016:	10 97       	sbiw	r26, 0x00	; 0
    2018:	79 f0       	breq	.+30     	; 0x2038 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    201a:	8c 91       	ld	r24, X
    201c:	91 85       	ldd	r25, Z+9	; 0x09
    201e:	89 2b       	or	r24, r25
    2020:	8c 93       	st	X, r24
    2022:	a2 85       	ldd	r26, Z+10	; 0x0a
    2024:	b3 85       	ldd	r27, Z+11	; 0x0b
    2026:	9c 91       	ld	r25, X
    2028:	81 85       	ldd	r24, Z+9	; 0x09
    202a:	80 95       	com	r24
    202c:	89 23       	and	r24, r25
    202e:	8c 93       	st	X, r24
    2030:	88 ec       	ldi	r24, 0xC8	; 200
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <delay_us>
    2038:	08 95       	ret

0000203a <_ZN16PololuQTRSensors10emittersOnEv>:
    203a:	fc 01       	movw	r30, r24
    203c:	a4 85       	ldd	r26, Z+12	; 0x0c
    203e:	b5 85       	ldd	r27, Z+13	; 0x0d
    2040:	10 97       	sbiw	r26, 0x00	; 0
    2042:	71 f0       	breq	.+28     	; 0x2060 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2044:	8c 91       	ld	r24, X
    2046:	91 85       	ldd	r25, Z+9	; 0x09
    2048:	89 2b       	or	r24, r25
    204a:	8c 93       	st	X, r24
    204c:	a2 85       	ldd	r26, Z+10	; 0x0a
    204e:	b3 85       	ldd	r27, Z+11	; 0x0b
    2050:	8c 91       	ld	r24, X
    2052:	91 85       	ldd	r25, Z+9	; 0x09
    2054:	89 2b       	or	r24, r25
    2056:	8c 93       	st	X, r24
    2058:	88 ec       	ldi	r24, 0xC8	; 200
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <delay_us>
    2060:	08 95       	ret

00002062 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2062:	a7 e0       	ldi	r26, 0x07	; 7
    2064:	b0 e0       	ldi	r27, 0x00	; 0
    2066:	e7 e3       	ldi	r30, 0x37	; 55
    2068:	f0 e1       	ldi	r31, 0x10	; 16
    206a:	0c 94 23 15 	jmp	0x2a46	; 0x2a46 <__prologue_saves__+0x6>
    206e:	7c 01       	movw	r14, r24
    2070:	4b 01       	movw	r8, r22
    2072:	64 2f       	mov	r22, r20
    2074:	39 01       	movw	r6, r18
    2076:	40 2f       	mov	r20, r16
    2078:	20 e0       	ldi	r18, 0x00	; 0
    207a:	0e 94 db 0f 	call	0x1fb6	; 0x1fb6 <_ZN16PololuQTRSensors4initEhhh>
    207e:	87 01       	movw	r16, r14
    2080:	0f 5b       	subi	r16, 0xBF	; 191
    2082:	1f 4f       	sbci	r17, 0xFF	; 255
    2084:	f8 01       	movw	r30, r16
    2086:	10 82       	st	Z, r1
    2088:	67 01       	movw	r12, r14
    208a:	f2 e4       	ldi	r31, 0x42	; 66
    208c:	cf 0e       	add	r12, r31
    208e:	d1 1c       	adc	r13, r1
    2090:	f6 01       	movw	r30, r12
    2092:	10 82       	st	Z, r1
    2094:	57 01       	movw	r10, r14
    2096:	f3 e4       	ldi	r31, 0x43	; 67
    2098:	af 0e       	add	r10, r31
    209a:	b1 1c       	adc	r11, r1
    209c:	f5 01       	movw	r30, r10
    209e:	10 82       	st	Z, r1
    20a0:	f7 01       	movw	r30, r14
    20a2:	77 86       	std	Z+15, r7	; 0x0f
    20a4:	66 86       	std	Z+14, r6	; 0x0e
    20a6:	51 2c       	mov	r5, r1
    20a8:	f7 01       	movw	r30, r14
    20aa:	80 85       	ldd	r24, Z+8	; 0x08
    20ac:	58 16       	cp	r5, r24
    20ae:	50 f5       	brcc	.+84     	; 0x2104 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    20b0:	65 2c       	mov	r6, r5
    20b2:	71 2c       	mov	r7, r1
    20b4:	f4 01       	movw	r30, r8
    20b6:	e6 0d       	add	r30, r6
    20b8:	f7 1d       	adc	r31, r7
    20ba:	60 81       	ld	r22, Z
    20bc:	ce 01       	movw	r24, r28
    20be:	01 96       	adiw	r24, 0x01	; 1
    20c0:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    20c4:	2f 81       	ldd	r18, Y+7	; 0x07
    20c6:	f7 01       	movw	r30, r14
    20c8:	e6 0d       	add	r30, r6
    20ca:	f7 1d       	adc	r31, r7
    20cc:	21 8b       	std	Z+17, r18	; 0x11
    20ce:	89 81       	ldd	r24, Y+1	; 0x01
    20d0:	9a 81       	ldd	r25, Y+2	; 0x02
    20d2:	f3 01       	movw	r30, r6
    20d4:	ee 0f       	add	r30, r30
    20d6:	ff 1f       	adc	r31, r31
    20d8:	ee 0d       	add	r30, r14
    20da:	ff 1d       	adc	r31, r15
    20dc:	92 a3       	std	Z+34, r25	; 0x22
    20de:	81 a3       	std	Z+33, r24	; 0x21
    20e0:	83 32       	cpi	r24, 0x23	; 35
    20e2:	91 05       	cpc	r25, r1
    20e4:	11 f4       	brne	.+4      	; 0x20ea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    20e6:	f8 01       	movw	r30, r16
    20e8:	08 c0       	rjmp	.+16     	; 0x20fa <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    20ea:	86 32       	cpi	r24, 0x26	; 38
    20ec:	91 05       	cpc	r25, r1
    20ee:	11 f4       	brne	.+4      	; 0x20f4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    20f0:	f6 01       	movw	r30, r12
    20f2:	03 c0       	rjmp	.+6      	; 0x20fa <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    20f4:	89 97       	sbiw	r24, 0x29	; 41
    20f6:	21 f4       	brne	.+8      	; 0x2100 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    20f8:	f5 01       	movw	r30, r10
    20fa:	80 81       	ld	r24, Z
    20fc:	82 2b       	or	r24, r18
    20fe:	80 83       	st	Z, r24
    2100:	53 94       	inc	r5
    2102:	d2 cf       	rjmp	.-92     	; 0x20a8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    2104:	27 96       	adiw	r28, 0x07	; 7
    2106:	ef e0       	ldi	r30, 0x0F	; 15
    2108:	0c 94 3f 15 	jmp	0x2a7e	; 0x2a7e <__epilogue_restores__+0x6>

0000210c <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    210c:	a0 e0       	ldi	r26, 0x00	; 0
    210e:	b0 e0       	ldi	r27, 0x00	; 0
    2110:	ec e8       	ldi	r30, 0x8C	; 140
    2112:	f0 e1       	ldi	r31, 0x10	; 16
    2114:	0c 94 25 15 	jmp	0x2a4a	; 0x2a4a <__prologue_saves__+0xa>
    2118:	ec 01       	movw	r28, r24
    211a:	5b 01       	movw	r10, r22
    211c:	6c 01       	movw	r12, r24
    211e:	81 e4       	ldi	r24, 0x41	; 65
    2120:	c8 0e       	add	r12, r24
    2122:	d1 1c       	adc	r13, r1
    2124:	f6 01       	movw	r30, r12
    2126:	80 80       	ld	r8, Z
    2128:	7e 01       	movw	r14, r28
    212a:	f2 e4       	ldi	r31, 0x42	; 66
    212c:	ef 0e       	add	r14, r31
    212e:	f1 1c       	adc	r15, r1
    2130:	f7 01       	movw	r30, r14
    2132:	70 80       	ld	r7, Z
    2134:	8e 01       	movw	r16, r28
    2136:	0d 5b       	subi	r16, 0xBD	; 189
    2138:	1f 4f       	sbci	r17, 0xFF	; 255
    213a:	f8 01       	movw	r30, r16
    213c:	90 80       	ld	r9, Z
    213e:	80 e0       	ldi	r24, 0x00	; 0
    2140:	98 85       	ldd	r25, Y+8	; 0x08
    2142:	89 17       	cp	r24, r25
    2144:	48 f4       	brcc	.+18     	; 0x2158 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    2146:	f5 01       	movw	r30, r10
    2148:	e8 0f       	add	r30, r24
    214a:	f1 1d       	adc	r31, r1
    214c:	e8 0f       	add	r30, r24
    214e:	f1 1d       	adc	r31, r1
    2150:	11 82       	std	Z+1, r1	; 0x01
    2152:	10 82       	st	Z, r1
    2154:	8f 5f       	subi	r24, 0xFF	; 255
    2156:	f4 cf       	rjmp	.-24     	; 0x2140 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    2158:	84 b1       	in	r24, 0x04	; 4
    215a:	f6 01       	movw	r30, r12
    215c:	90 81       	ld	r25, Z
    215e:	89 2b       	or	r24, r25
    2160:	84 b9       	out	0x04, r24	; 4
    2162:	87 b1       	in	r24, 0x07	; 7
    2164:	f7 01       	movw	r30, r14
    2166:	90 81       	ld	r25, Z
    2168:	89 2b       	or	r24, r25
    216a:	87 b9       	out	0x07, r24	; 7
    216c:	8a b1       	in	r24, 0x0a	; 10
    216e:	f8 01       	movw	r30, r16
    2170:	90 81       	ld	r25, Z
    2172:	89 2b       	or	r24, r25
    2174:	8a b9       	out	0x0a, r24	; 10
    2176:	85 b1       	in	r24, 0x05	; 5
    2178:	f6 01       	movw	r30, r12
    217a:	90 81       	ld	r25, Z
    217c:	89 2b       	or	r24, r25
    217e:	85 b9       	out	0x05, r24	; 5
    2180:	88 b1       	in	r24, 0x08	; 8
    2182:	f7 01       	movw	r30, r14
    2184:	90 81       	ld	r25, Z
    2186:	89 2b       	or	r24, r25
    2188:	88 b9       	out	0x08, r24	; 8
    218a:	8b b1       	in	r24, 0x0b	; 11
    218c:	f8 01       	movw	r30, r16
    218e:	90 81       	ld	r25, Z
    2190:	89 2b       	or	r24, r25
    2192:	8b b9       	out	0x0b, r24	; 11
    2194:	8a e0       	ldi	r24, 0x0A	; 10
    2196:	90 e0       	ldi	r25, 0x00	; 0
    2198:	0e 94 96 0f 	call	0x1f2c	; 0x1f2c <delay_us>
    219c:	94 b1       	in	r25, 0x04	; 4
    219e:	f6 01       	movw	r30, r12
    21a0:	80 81       	ld	r24, Z
    21a2:	80 95       	com	r24
    21a4:	89 23       	and	r24, r25
    21a6:	84 b9       	out	0x04, r24	; 4
    21a8:	97 b1       	in	r25, 0x07	; 7
    21aa:	f7 01       	movw	r30, r14
    21ac:	80 81       	ld	r24, Z
    21ae:	80 95       	com	r24
    21b0:	89 23       	and	r24, r25
    21b2:	87 b9       	out	0x07, r24	; 7
    21b4:	9a b1       	in	r25, 0x0a	; 10
    21b6:	f8 01       	movw	r30, r16
    21b8:	80 81       	ld	r24, Z
    21ba:	80 95       	com	r24
    21bc:	89 23       	and	r24, r25
    21be:	8a b9       	out	0x0a, r24	; 10
    21c0:	95 b1       	in	r25, 0x05	; 5
    21c2:	f6 01       	movw	r30, r12
    21c4:	80 81       	ld	r24, Z
    21c6:	80 95       	com	r24
    21c8:	89 23       	and	r24, r25
    21ca:	85 b9       	out	0x05, r24	; 5
    21cc:	98 b1       	in	r25, 0x08	; 8
    21ce:	f7 01       	movw	r30, r14
    21d0:	80 81       	ld	r24, Z
    21d2:	80 95       	com	r24
    21d4:	89 23       	and	r24, r25
    21d6:	88 b9       	out	0x08, r24	; 8
    21d8:	9b b1       	in	r25, 0x0b	; 11
    21da:	f8 01       	movw	r30, r16
    21dc:	80 81       	ld	r24, Z
    21de:	80 95       	com	r24
    21e0:	89 23       	and	r24, r25
    21e2:	8b b9       	out	0x0b, r24	; 11
    21e4:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    21e8:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    21ec:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    21f0:	83 60       	ori	r24, 0x03	; 3
    21f2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    21f6:	82 e0       	ldi	r24, 0x02	; 2
    21f8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    21fc:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    2200:	80 e0       	ldi	r24, 0x00	; 0
    2202:	90 e0       	ldi	r25, 0x00	; 0
    2204:	2e 85       	ldd	r18, Y+14	; 0x0e
    2206:	3f 85       	ldd	r19, Y+15	; 0x0f
    2208:	82 17       	cp	r24, r18
    220a:	93 07       	cpc	r25, r19
    220c:	20 f5       	brcc	.+72     	; 0x2256 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    220e:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    2212:	2c 2d       	mov	r18, r12
    2214:	24 1b       	sub	r18, r20
    2216:	82 0f       	add	r24, r18
    2218:	91 1d       	adc	r25, r1
    221a:	03 b1       	in	r16, 0x03	; 3
    221c:	08 11       	cpse	r16, r8
    221e:	32 c0       	rjmp	.+100    	; 0x2284 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2220:	f6 b0       	in	r15, 0x06	; 6
    2222:	f7 10       	cpse	r15, r7
    2224:	2f c0       	rjmp	.+94     	; 0x2284 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2226:	29 b1       	in	r18, 0x09	; 9
    2228:	29 11       	cpse	r18, r9
    222a:	2c c0       	rjmp	.+88     	; 0x2284 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    222c:	10 c0       	rjmp	.+32     	; 0x224e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    222e:	21 2f       	mov	r18, r17
    2230:	30 e0       	ldi	r19, 0x00	; 0
    2232:	a9 01       	movw	r20, r18
    2234:	44 0f       	add	r20, r20
    2236:	55 1f       	adc	r21, r21
    2238:	f5 01       	movw	r30, r10
    223a:	e4 0f       	add	r30, r20
    223c:	f5 1f       	adc	r31, r21
    223e:	60 81       	ld	r22, Z
    2240:	71 81       	ldd	r23, Z+1	; 0x01
    2242:	67 2b       	or	r22, r23
    2244:	21 f1       	breq	.+72     	; 0x228e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    2246:	1f 5f       	subi	r17, 0xFF	; 255
    2248:	28 85       	ldd	r18, Y+8	; 0x08
    224a:	12 17       	cp	r17, r18
    224c:	80 f3       	brcs	.-32     	; 0x222e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    224e:	7f 2c       	mov	r7, r15
    2250:	80 2e       	mov	r8, r16
    2252:	4c 2d       	mov	r20, r12
    2254:	d7 cf       	rjmp	.-82     	; 0x2204 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    2256:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    225a:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    225e:	20 e0       	ldi	r18, 0x00	; 0
    2260:	88 85       	ldd	r24, Y+8	; 0x08
    2262:	28 17       	cp	r18, r24
    2264:	30 f5       	brcc	.+76     	; 0x22b2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    2266:	f5 01       	movw	r30, r10
    2268:	e2 0f       	add	r30, r18
    226a:	f1 1d       	adc	r31, r1
    226c:	e2 0f       	add	r30, r18
    226e:	f1 1d       	adc	r31, r1
    2270:	80 81       	ld	r24, Z
    2272:	91 81       	ldd	r25, Z+1	; 0x01
    2274:	89 2b       	or	r24, r25
    2276:	21 f4       	brne	.+8      	; 0x2280 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    2278:	8e 85       	ldd	r24, Y+14	; 0x0e
    227a:	9f 85       	ldd	r25, Y+15	; 0x0f
    227c:	91 83       	std	Z+1, r25	; 0x01
    227e:	80 83       	st	Z, r24
    2280:	2f 5f       	subi	r18, 0xFF	; 255
    2282:	ee cf       	rjmp	.-36     	; 0x2260 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    2284:	03 b1       	in	r16, 0x03	; 3
    2286:	f6 b0       	in	r15, 0x06	; 6
    2288:	99 b0       	in	r9, 0x09	; 9
    228a:	10 e0       	ldi	r17, 0x00	; 0
    228c:	dd cf       	rjmp	.-70     	; 0x2248 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    228e:	de 01       	movw	r26, r28
    2290:	a4 0f       	add	r26, r20
    2292:	b5 1f       	adc	r27, r21
    2294:	91 96       	adiw	r26, 0x21	; 33
    2296:	0d 90       	ld	r0, X+
    2298:	bc 91       	ld	r27, X
    229a:	a0 2d       	mov	r26, r0
    229c:	4c 91       	ld	r20, X
    229e:	de 01       	movw	r26, r28
    22a0:	a2 0f       	add	r26, r18
    22a2:	b3 1f       	adc	r27, r19
    22a4:	51 96       	adiw	r26, 0x11	; 17
    22a6:	2c 91       	ld	r18, X
    22a8:	42 23       	and	r20, r18
    22aa:	69 f6       	brne	.-102    	; 0x2246 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    22ac:	91 83       	std	Z+1, r25	; 0x01
    22ae:	80 83       	st	Z, r24
    22b0:	ca cf       	rjmp	.-108    	; 0x2246 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    22b2:	cd b7       	in	r28, 0x3d	; 61
    22b4:	de b7       	in	r29, 0x3e	; 62
    22b6:	ed e0       	ldi	r30, 0x0D	; 13
    22b8:	0c 94 41 15 	jmp	0x2a82	; 0x2a82 <__epilogue_restores__+0xa>

000022bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    22bc:	ef 92       	push	r14
    22be:	ff 92       	push	r15
    22c0:	0f 93       	push	r16
    22c2:	1f 93       	push	r17
    22c4:	cf 93       	push	r28
    22c6:	df 93       	push	r29
    22c8:	fc 01       	movw	r30, r24
    22ca:	9b 01       	movw	r18, r22
    22cc:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    22d0:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    22d4:	47 b1       	in	r20, 0x07	; 7
    22d6:	18 b1       	in	r17, 0x08	; 8
    22d8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    22dc:	86 fd       	sbrc	r24, 6
    22de:	fc cf       	rjmp	.-8      	; 0x22d8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    22e0:	80 e0       	ldi	r24, 0x00	; 0
    22e2:	90 85       	ldd	r25, Z+8	; 0x08
    22e4:	89 17       	cp	r24, r25
    22e6:	48 f4       	brcc	.+18     	; 0x22fa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    22e8:	d9 01       	movw	r26, r18
    22ea:	a8 0f       	add	r26, r24
    22ec:	b1 1d       	adc	r27, r1
    22ee:	a8 0f       	add	r26, r24
    22f0:	b1 1d       	adc	r27, r1
    22f2:	1d 92       	st	X+, r1
    22f4:	1c 92       	st	X, r1
    22f6:	8f 5f       	subi	r24, 0xFF	; 255
    22f8:	f4 cf       	rjmp	.-24     	; 0x22e2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    22fa:	97 b1       	in	r25, 0x07	; 7
    22fc:	82 a1       	ldd	r24, Z+34	; 0x22
    22fe:	80 95       	com	r24
    2300:	89 23       	and	r24, r25
    2302:	87 b9       	out	0x07, r24	; 7
    2304:	98 b1       	in	r25, 0x08	; 8
    2306:	82 a1       	ldd	r24, Z+34	; 0x22
    2308:	80 95       	com	r24
    230a:	89 23       	and	r24, r25
    230c:	88 b9       	out	0x08, r24	; 8
    230e:	87 e8       	ldi	r24, 0x87	; 135
    2310:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2314:	e1 2c       	mov	r14, r1
    2316:	81 a1       	ldd	r24, Z+33	; 0x21
    2318:	e8 16       	cp	r14, r24
    231a:	10 f0       	brcs	.+4      	; 0x2320 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    231c:	e1 2c       	mov	r14, r1
    231e:	29 c0       	rjmp	.+82     	; 0x2372 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2320:	50 e0       	ldi	r21, 0x00	; 0
    2322:	80 85       	ldd	r24, Z+8	; 0x08
    2324:	58 17       	cp	r21, r24
    2326:	18 f5       	brcc	.+70     	; 0x236e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    2328:	a5 2f       	mov	r26, r21
    232a:	b0 e0       	ldi	r27, 0x00	; 0
    232c:	ef 01       	movw	r28, r30
    232e:	ca 0f       	add	r28, r26
    2330:	db 1f       	adc	r29, r27
    2332:	89 89       	ldd	r24, Y+17	; 0x11
    2334:	80 64       	ori	r24, 0x40	; 64
    2336:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    233a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    233e:	80 64       	ori	r24, 0x40	; 64
    2340:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2344:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2348:	86 fd       	sbrc	r24, 6
    234a:	fc cf       	rjmp	.-8      	; 0x2344 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    234c:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    2350:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    2354:	aa 0f       	add	r26, r26
    2356:	bb 1f       	adc	r27, r27
    2358:	a2 0f       	add	r26, r18
    235a:	b3 1f       	adc	r27, r19
    235c:	8d 91       	ld	r24, X+
    235e:	9c 91       	ld	r25, X
    2360:	11 97       	sbiw	r26, 0x01	; 1
    2362:	86 0f       	add	r24, r22
    2364:	97 1f       	adc	r25, r23
    2366:	8d 93       	st	X+, r24
    2368:	9c 93       	st	X, r25
    236a:	5f 5f       	subi	r21, 0xFF	; 255
    236c:	da cf       	rjmp	.-76     	; 0x2322 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    236e:	e3 94       	inc	r14
    2370:	d2 cf       	rjmp	.-92     	; 0x2316 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    2372:	80 85       	ldd	r24, Z+8	; 0x08
    2374:	e8 16       	cp	r14, r24
    2376:	a0 f4       	brcc	.+40     	; 0x23a0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    2378:	e9 01       	movw	r28, r18
    237a:	ce 0d       	add	r28, r14
    237c:	d1 1d       	adc	r29, r1
    237e:	ce 0d       	add	r28, r14
    2380:	d1 1d       	adc	r29, r1
    2382:	61 a1       	ldd	r22, Z+33	; 0x21
    2384:	70 e0       	ldi	r23, 0x00	; 0
    2386:	cb 01       	movw	r24, r22
    2388:	95 95       	asr	r25
    238a:	87 95       	ror	r24
    238c:	a8 81       	ld	r26, Y
    238e:	b9 81       	ldd	r27, Y+1	; 0x01
    2390:	8a 0f       	add	r24, r26
    2392:	9b 1f       	adc	r25, r27
    2394:	0e 94 a9 14 	call	0x2952	; 0x2952 <__udivmodhi4>
    2398:	79 83       	std	Y+1, r23	; 0x01
    239a:	68 83       	st	Y, r22
    239c:	e3 94       	inc	r14
    239e:	e9 cf       	rjmp	.-46     	; 0x2372 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    23a0:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    23a4:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    23a8:	18 b9       	out	0x08, r17	; 8
    23aa:	47 b9       	out	0x07, r20	; 7
    23ac:	cd b7       	in	r28, 0x3d	; 61
    23ae:	de b7       	in	r29, 0x3e	; 62
    23b0:	e6 e0       	ldi	r30, 0x06	; 6
    23b2:	0c 94 48 15 	jmp	0x2a90	; 0x2a90 <__epilogue_restores__+0x18>

000023b6 <_ZN16PololuQTRSensors4readEPjh>:
    23b6:	a0 e2       	ldi	r26, 0x20	; 32
    23b8:	b0 e0       	ldi	r27, 0x00	; 0
    23ba:	e1 ee       	ldi	r30, 0xE1	; 225
    23bc:	f1 e1       	ldi	r31, 0x11	; 17
    23be:	0c 94 2b 15 	jmp	0x2a56	; 0x2a56 <__prologue_saves__+0x16>
    23c2:	8c 01       	movw	r16, r24
    23c4:	7b 01       	movw	r14, r22
    23c6:	d4 2e       	mov	r13, r20
    23c8:	8f ef       	ldi	r24, 0xFF	; 255
    23ca:	84 0f       	add	r24, r20
    23cc:	82 30       	cpi	r24, 0x02	; 2
    23ce:	18 f4       	brcc	.+6      	; 0x23d6 <_ZN16PololuQTRSensors4readEPjh+0x20>
    23d0:	c8 01       	movw	r24, r16
    23d2:	0e 94 1d 10 	call	0x203a	; 0x203a <_ZN16PololuQTRSensors10emittersOnEv>
    23d6:	d8 01       	movw	r26, r16
    23d8:	50 96       	adiw	r26, 0x10	; 16
    23da:	8c 91       	ld	r24, X
    23dc:	b7 01       	movw	r22, r14
    23de:	81 11       	cpse	r24, r1
    23e0:	10 c0       	rjmp	.+32     	; 0x2402 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    23e2:	c8 01       	movw	r24, r16
    23e4:	0e 94 86 10 	call	0x210c	; 0x210c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    23e8:	c8 01       	movw	r24, r16
    23ea:	0e 94 08 10 	call	0x2010	; 0x2010 <_ZN16PololuQTRSensors11emittersOffEv>
    23ee:	b2 e0       	ldi	r27, 0x02	; 2
    23f0:	db 12       	cpse	r13, r27
    23f2:	3a c0       	rjmp	.+116    	; 0x2468 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    23f4:	be 01       	movw	r22, r28
    23f6:	6f 5f       	subi	r22, 0xFF	; 255
    23f8:	7f 4f       	sbci	r23, 0xFF	; 255
    23fa:	c8 01       	movw	r24, r16
    23fc:	0e 94 86 10 	call	0x210c	; 0x210c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2400:	0f c0       	rjmp	.+30     	; 0x2420 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    2402:	c8 01       	movw	r24, r16
    2404:	0e 94 5e 11 	call	0x22bc	; 0x22bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2408:	c8 01       	movw	r24, r16
    240a:	0e 94 08 10 	call	0x2010	; 0x2010 <_ZN16PololuQTRSensors11emittersOffEv>
    240e:	e2 e0       	ldi	r30, 0x02	; 2
    2410:	de 12       	cpse	r13, r30
    2412:	2a c0       	rjmp	.+84     	; 0x2468 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2414:	be 01       	movw	r22, r28
    2416:	6f 5f       	subi	r22, 0xFF	; 255
    2418:	7f 4f       	sbci	r23, 0xFF	; 255
    241a:	c8 01       	movw	r24, r16
    241c:	0e 94 5e 11 	call	0x22bc	; 0x22bc <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2420:	40 e0       	ldi	r20, 0x00	; 0
    2422:	f8 01       	movw	r30, r16
    2424:	80 85       	ldd	r24, Z+8	; 0x08
    2426:	48 17       	cp	r20, r24
    2428:	f8 f4       	brcc	.+62     	; 0x2468 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    242a:	84 2f       	mov	r24, r20
    242c:	90 e0       	ldi	r25, 0x00	; 0
    242e:	88 0f       	add	r24, r24
    2430:	99 1f       	adc	r25, r25
    2432:	f7 01       	movw	r30, r14
    2434:	e8 0f       	add	r30, r24
    2436:	f9 1f       	adc	r31, r25
    2438:	21 e0       	ldi	r18, 0x01	; 1
    243a:	30 e0       	ldi	r19, 0x00	; 0
    243c:	2c 0f       	add	r18, r28
    243e:	3d 1f       	adc	r19, r29
    2440:	82 0f       	add	r24, r18
    2442:	93 1f       	adc	r25, r19
    2444:	d8 01       	movw	r26, r16
    2446:	1e 96       	adiw	r26, 0x0e	; 14
    2448:	2d 91       	ld	r18, X+
    244a:	3c 91       	ld	r19, X
    244c:	1f 97       	sbiw	r26, 0x0f	; 15
    244e:	dc 01       	movw	r26, r24
    2450:	8d 91       	ld	r24, X+
    2452:	9c 91       	ld	r25, X
    2454:	28 1b       	sub	r18, r24
    2456:	39 0b       	sbc	r19, r25
    2458:	80 81       	ld	r24, Z
    245a:	91 81       	ldd	r25, Z+1	; 0x01
    245c:	82 0f       	add	r24, r18
    245e:	93 1f       	adc	r25, r19
    2460:	91 83       	std	Z+1, r25	; 0x01
    2462:	80 83       	st	Z, r24
    2464:	4f 5f       	subi	r20, 0xFF	; 255
    2466:	dd cf       	rjmp	.-70     	; 0x2422 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    2468:	a0 96       	adiw	r28, 0x20	; 32
    246a:	e7 e0       	ldi	r30, 0x07	; 7
    246c:	0c 94 47 15 	jmp	0x2a8e	; 0x2a8e <__epilogue_restores__+0x16>

00002470 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    2470:	2f 92       	push	r2
    2472:	3f 92       	push	r3
    2474:	5f 92       	push	r5
    2476:	6f 92       	push	r6
    2478:	7f 92       	push	r7
    247a:	8f 92       	push	r8
    247c:	9f 92       	push	r9
    247e:	af 92       	push	r10
    2480:	bf 92       	push	r11
    2482:	cf 92       	push	r12
    2484:	df 92       	push	r13
    2486:	ef 92       	push	r14
    2488:	ff 92       	push	r15
    248a:	0f 93       	push	r16
    248c:	1f 93       	push	r17
    248e:	cf 93       	push	r28
    2490:	df 93       	push	r29
    2492:	cd b7       	in	r28, 0x3d	; 61
    2494:	de b7       	in	r29, 0x3e	; 62
    2496:	c0 56       	subi	r28, 0x60	; 96
    2498:	d1 09       	sbc	r29, r1
    249a:	0f b6       	in	r0, 0x3f	; 63
    249c:	f8 94       	cli
    249e:	de bf       	out	0x3e, r29	; 62
    24a0:	0f be       	out	0x3f, r0	; 63
    24a2:	cd bf       	out	0x3d, r28	; 61
    24a4:	8c 01       	movw	r16, r24
    24a6:	4b 01       	movw	r8, r22
    24a8:	5a 01       	movw	r10, r20
    24aa:	52 2e       	mov	r5, r18
    24ac:	da 01       	movw	r26, r20
    24ae:	8d 91       	ld	r24, X+
    24b0:	9c 91       	ld	r25, X
    24b2:	89 2b       	or	r24, r25
    24b4:	31 f0       	breq	.+12     	; 0x24c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    24b6:	f4 01       	movw	r30, r8
    24b8:	80 81       	ld	r24, Z
    24ba:	91 81       	ldd	r25, Z+1	; 0x01
    24bc:	89 2b       	or	r24, r25
    24be:	f1 f4       	brne	.+60     	; 0x24fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    24c0:	24 c0       	rjmp	.+72     	; 0x250a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    24c2:	d8 01       	movw	r26, r16
    24c4:	18 96       	adiw	r26, 0x08	; 8
    24c6:	8c 91       	ld	r24, X
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	88 0f       	add	r24, r24
    24cc:	99 1f       	adc	r25, r25
    24ce:	0e 94 5d 15 	call	0x2aba	; 0x2aba <malloc>
    24d2:	f5 01       	movw	r30, r10
    24d4:	91 83       	std	Z+1, r25	; 0x01
    24d6:	80 83       	st	Z, r24
    24d8:	00 97       	sbiw	r24, 0x00	; 0
    24da:	09 f4       	brne	.+2      	; 0x24de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    24dc:	b1 c0       	rjmp	.+354    	; 0x2640 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    24de:	fc 01       	movw	r30, r24
    24e0:	20 e0       	ldi	r18, 0x00	; 0
    24e2:	30 e0       	ldi	r19, 0x00	; 0
    24e4:	d8 01       	movw	r26, r16
    24e6:	18 96       	adiw	r26, 0x08	; 8
    24e8:	8c 91       	ld	r24, X
    24ea:	90 e0       	ldi	r25, 0x00	; 0
    24ec:	28 17       	cp	r18, r24
    24ee:	39 07       	cpc	r19, r25
    24f0:	14 f7       	brge	.-60     	; 0x24b6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    24f2:	11 92       	st	Z+, r1
    24f4:	11 92       	st	Z+, r1
    24f6:	2f 5f       	subi	r18, 0xFF	; 255
    24f8:	3f 4f       	sbci	r19, 0xFF	; 255
    24fa:	f4 cf       	rjmp	.-24     	; 0x24e4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    24fc:	e1 2c       	mov	r14, r1
    24fe:	f1 2c       	mov	r15, r1
    2500:	6e 01       	movw	r12, r28
    2502:	b1 e2       	ldi	r27, 0x21	; 33
    2504:	cb 0e       	add	r12, r27
    2506:	d1 1c       	adc	r13, r1
    2508:	21 c0       	rjmp	.+66     	; 0x254c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    250a:	f8 01       	movw	r30, r16
    250c:	80 85       	ldd	r24, Z+8	; 0x08
    250e:	90 e0       	ldi	r25, 0x00	; 0
    2510:	88 0f       	add	r24, r24
    2512:	99 1f       	adc	r25, r25
    2514:	0e 94 5d 15 	call	0x2aba	; 0x2aba <malloc>
    2518:	d4 01       	movw	r26, r8
    251a:	8d 93       	st	X+, r24
    251c:	9c 93       	st	X, r25
    251e:	00 97       	sbiw	r24, 0x00	; 0
    2520:	09 f4       	brne	.+2      	; 0x2524 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    2522:	8e c0       	rjmp	.+284    	; 0x2640 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    2524:	fc 01       	movw	r30, r24
    2526:	20 e0       	ldi	r18, 0x00	; 0
    2528:	30 e0       	ldi	r19, 0x00	; 0
    252a:	d8 01       	movw	r26, r16
    252c:	18 96       	adiw	r26, 0x08	; 8
    252e:	8c 91       	ld	r24, X
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	28 17       	cp	r18, r24
    2534:	39 07       	cpc	r19, r25
    2536:	14 f7       	brge	.-60     	; 0x24fc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    2538:	d8 01       	movw	r26, r16
    253a:	1e 96       	adiw	r26, 0x0e	; 14
    253c:	8d 91       	ld	r24, X+
    253e:	9c 91       	ld	r25, X
    2540:	1f 97       	sbiw	r26, 0x0f	; 15
    2542:	81 93       	st	Z+, r24
    2544:	91 93       	st	Z+, r25
    2546:	2f 5f       	subi	r18, 0xFF	; 255
    2548:	3f 4f       	sbci	r19, 0xFF	; 255
    254a:	ef cf       	rjmp	.-34     	; 0x252a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    254c:	45 2d       	mov	r20, r5
    254e:	be 01       	movw	r22, r28
    2550:	6f 5b       	subi	r22, 0xBF	; 191
    2552:	7f 4f       	sbci	r23, 0xFF	; 255
    2554:	c8 01       	movw	r24, r16
    2556:	0e 94 db 11 	call	0x23b6	; 0x23b6 <_ZN16PololuQTRSensors4readEPjh>
    255a:	f8 01       	movw	r30, r16
    255c:	60 84       	ldd	r6, Z+8	; 0x08
    255e:	71 2c       	mov	r7, r1
    2560:	fe 01       	movw	r30, r28
    2562:	ef 5b       	subi	r30, 0xBF	; 191
    2564:	ff 4f       	sbci	r31, 0xFF	; 255
    2566:	c6 01       	movw	r24, r12
    2568:	9e 01       	movw	r18, r28
    256a:	2f 5f       	subi	r18, 0xFF	; 255
    256c:	3f 4f       	sbci	r19, 0xFF	; 255
    256e:	19 01       	movw	r2, r18
    2570:	20 e0       	ldi	r18, 0x00	; 0
    2572:	30 e0       	ldi	r19, 0x00	; 0
    2574:	26 15       	cp	r18, r6
    2576:	37 05       	cpc	r19, r7
    2578:	4c f5       	brge	.+82     	; 0x25cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    257a:	e1 14       	cp	r14, r1
    257c:	f1 04       	cpc	r15, r1
    257e:	89 f0       	breq	.+34     	; 0x25a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    2580:	dc 01       	movw	r26, r24
    2582:	6d 91       	ld	r22, X+
    2584:	7c 91       	ld	r23, X
    2586:	40 81       	ld	r20, Z
    2588:	51 81       	ldd	r21, Z+1	; 0x01
    258a:	64 17       	cp	r22, r20
    258c:	75 07       	cpc	r23, r21
    258e:	48 f0       	brcs	.+18     	; 0x25a2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    2590:	d1 01       	movw	r26, r2
    2592:	6d 91       	ld	r22, X+
    2594:	7c 91       	ld	r23, X
    2596:	40 81       	ld	r20, Z
    2598:	51 81       	ldd	r21, Z+1	; 0x01
    259a:	46 17       	cp	r20, r22
    259c:	57 07       	cpc	r21, r23
    259e:	48 f0       	brcs	.+18     	; 0x25b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    25a0:	0d c0       	rjmp	.+26     	; 0x25bc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    25a2:	40 81       	ld	r20, Z
    25a4:	51 81       	ldd	r21, Z+1	; 0x01
    25a6:	dc 01       	movw	r26, r24
    25a8:	4d 93       	st	X+, r20
    25aa:	5c 93       	st	X, r21
    25ac:	e1 14       	cp	r14, r1
    25ae:	f1 04       	cpc	r15, r1
    25b0:	79 f7       	brne	.-34     	; 0x2590 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    25b2:	40 81       	ld	r20, Z
    25b4:	51 81       	ldd	r21, Z+1	; 0x01
    25b6:	d1 01       	movw	r26, r2
    25b8:	4d 93       	st	X+, r20
    25ba:	5c 93       	st	X, r21
    25bc:	2f 5f       	subi	r18, 0xFF	; 255
    25be:	3f 4f       	sbci	r19, 0xFF	; 255
    25c0:	b2 e0       	ldi	r27, 0x02	; 2
    25c2:	2b 0e       	add	r2, r27
    25c4:	31 1c       	adc	r3, r1
    25c6:	32 96       	adiw	r30, 0x02	; 2
    25c8:	02 96       	adiw	r24, 0x02	; 2
    25ca:	d4 cf       	rjmp	.-88     	; 0x2574 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    25cc:	ef ef       	ldi	r30, 0xFF	; 255
    25ce:	ee 1a       	sub	r14, r30
    25d0:	fe 0a       	sbc	r15, r30
    25d2:	fa e0       	ldi	r31, 0x0A	; 10
    25d4:	ef 16       	cp	r14, r31
    25d6:	f1 04       	cpc	r15, r1
    25d8:	09 f0       	breq	.+2      	; 0x25dc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    25da:	b8 cf       	rjmp	.-144    	; 0x254c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    25dc:	9e 01       	movw	r18, r28
    25de:	2f 5f       	subi	r18, 0xFF	; 255
    25e0:	3f 4f       	sbci	r19, 0xFF	; 255
    25e2:	79 01       	movw	r14, r18
    25e4:	36 01       	movw	r6, r12
    25e6:	80 e0       	ldi	r24, 0x00	; 0
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	f8 01       	movw	r30, r16
    25ec:	20 85       	ldd	r18, Z+8	; 0x08
    25ee:	30 e0       	ldi	r19, 0x00	; 0
    25f0:	82 17       	cp	r24, r18
    25f2:	93 07       	cpc	r25, r19
    25f4:	2c f5       	brge	.+74     	; 0x2640 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    25f6:	d7 01       	movw	r26, r14
    25f8:	2d 91       	ld	r18, X+
    25fa:	3d 91       	ld	r19, X+
    25fc:	7d 01       	movw	r14, r26
    25fe:	b3 01       	movw	r22, r6
    2600:	6c 19       	sub	r22, r12
    2602:	7d 09       	sbc	r23, r13
    2604:	d5 01       	movw	r26, r10
    2606:	ed 91       	ld	r30, X+
    2608:	fc 91       	ld	r31, X
    260a:	e6 0f       	add	r30, r22
    260c:	f7 1f       	adc	r31, r23
    260e:	40 81       	ld	r20, Z
    2610:	51 81       	ldd	r21, Z+1	; 0x01
    2612:	42 17       	cp	r20, r18
    2614:	53 07       	cpc	r21, r19
    2616:	10 f4       	brcc	.+4      	; 0x261c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    2618:	31 83       	std	Z+1, r19	; 0x01
    261a:	20 83       	st	Z, r18
    261c:	f3 01       	movw	r30, r6
    261e:	21 91       	ld	r18, Z+
    2620:	31 91       	ld	r19, Z+
    2622:	3f 01       	movw	r6, r30
    2624:	d4 01       	movw	r26, r8
    2626:	ed 91       	ld	r30, X+
    2628:	fc 91       	ld	r31, X
    262a:	e6 0f       	add	r30, r22
    262c:	f7 1f       	adc	r31, r23
    262e:	40 81       	ld	r20, Z
    2630:	51 81       	ldd	r21, Z+1	; 0x01
    2632:	24 17       	cp	r18, r20
    2634:	35 07       	cpc	r19, r21
    2636:	10 f4       	brcc	.+4      	; 0x263c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    2638:	31 83       	std	Z+1, r19	; 0x01
    263a:	20 83       	st	Z, r18
    263c:	01 96       	adiw	r24, 0x01	; 1
    263e:	d5 cf       	rjmp	.-86     	; 0x25ea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    2640:	c0 5a       	subi	r28, 0xA0	; 160
    2642:	df 4f       	sbci	r29, 0xFF	; 255
    2644:	0f b6       	in	r0, 0x3f	; 63
    2646:	f8 94       	cli
    2648:	de bf       	out	0x3e, r29	; 62
    264a:	0f be       	out	0x3f, r0	; 63
    264c:	cd bf       	out	0x3d, r28	; 61
    264e:	df 91       	pop	r29
    2650:	cf 91       	pop	r28
    2652:	1f 91       	pop	r17
    2654:	0f 91       	pop	r16
    2656:	ff 90       	pop	r15
    2658:	ef 90       	pop	r14
    265a:	df 90       	pop	r13
    265c:	cf 90       	pop	r12
    265e:	bf 90       	pop	r11
    2660:	af 90       	pop	r10
    2662:	9f 90       	pop	r9
    2664:	8f 90       	pop	r8
    2666:	7f 90       	pop	r7
    2668:	6f 90       	pop	r6
    266a:	5f 90       	pop	r5
    266c:	3f 90       	pop	r3
    266e:	2f 90       	pop	r2
    2670:	08 95       	ret

00002672 <_ZN16PololuQTRSensors9calibrateEh>:
    2672:	1f 93       	push	r17
    2674:	cf 93       	push	r28
    2676:	df 93       	push	r29
    2678:	ec 01       	movw	r28, r24
    267a:	16 2f       	mov	r17, r22
    267c:	8f ef       	ldi	r24, 0xFF	; 255
    267e:	86 0f       	add	r24, r22
    2680:	82 30       	cpi	r24, 0x02	; 2
    2682:	18 f0       	brcs	.+6      	; 0x268a <_ZN16PololuQTRSensors9calibrateEh+0x18>
    2684:	66 23       	and	r22, r22
    2686:	59 f0       	breq	.+22     	; 0x269e <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    2688:	14 c0       	rjmp	.+40     	; 0x26b2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    268a:	21 e0       	ldi	r18, 0x01	; 1
    268c:	ae 01       	movw	r20, r28
    268e:	4e 5f       	subi	r20, 0xFE	; 254
    2690:	5f 4f       	sbci	r21, 0xFF	; 255
    2692:	be 01       	movw	r22, r28
    2694:	ce 01       	movw	r24, r28
    2696:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    269a:	12 30       	cpi	r17, 0x02	; 2
    269c:	51 f4       	brne	.+20     	; 0x26b2 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    269e:	ae 01       	movw	r20, r28
    26a0:	4a 5f       	subi	r20, 0xFA	; 250
    26a2:	5f 4f       	sbci	r21, 0xFF	; 255
    26a4:	be 01       	movw	r22, r28
    26a6:	6c 5f       	subi	r22, 0xFC	; 252
    26a8:	7f 4f       	sbci	r23, 0xFF	; 255
    26aa:	20 e0       	ldi	r18, 0x00	; 0
    26ac:	ce 01       	movw	r24, r28
    26ae:	0e 94 38 12 	call	0x2470	; 0x2470 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    26b2:	df 91       	pop	r29
    26b4:	cf 91       	pop	r28
    26b6:	1f 91       	pop	r17
    26b8:	08 95       	ret

000026ba <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    26ba:	a0 e0       	ldi	r26, 0x00	; 0
    26bc:	b0 e0       	ldi	r27, 0x00	; 0
    26be:	e3 e6       	ldi	r30, 0x63	; 99
    26c0:	f3 e1       	ldi	r31, 0x13	; 19
    26c2:	0c 94 29 15 	jmp	0x2a52	; 0x2a52 <__prologue_saves__+0x12>
    26c6:	ec 01       	movw	r28, r24
    26c8:	8b 01       	movw	r16, r22
    26ca:	b4 2e       	mov	r11, r20
    26cc:	84 2f       	mov	r24, r20
    26ce:	8d 7f       	andi	r24, 0xFD	; 253
    26d0:	51 f4       	brne	.+20     	; 0x26e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    26d2:	8c 81       	ldd	r24, Y+4	; 0x04
    26d4:	9d 81       	ldd	r25, Y+5	; 0x05
    26d6:	89 2b       	or	r24, r25
    26d8:	09 f4       	brne	.+2      	; 0x26dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    26da:	97 c0       	rjmp	.+302    	; 0x280a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    26dc:	8e 81       	ldd	r24, Y+6	; 0x06
    26de:	9f 81       	ldd	r25, Y+7	; 0x07
    26e0:	89 2b       	or	r24, r25
    26e2:	09 f4       	brne	.+2      	; 0x26e6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    26e4:	92 c0       	rjmp	.+292    	; 0x280a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    26e6:	8f ef       	ldi	r24, 0xFF	; 255
    26e8:	8b 0d       	add	r24, r11
    26ea:	82 30       	cpi	r24, 0x02	; 2
    26ec:	50 f4       	brcc	.+20     	; 0x2702 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    26ee:	88 81       	ld	r24, Y
    26f0:	99 81       	ldd	r25, Y+1	; 0x01
    26f2:	89 2b       	or	r24, r25
    26f4:	09 f4       	brne	.+2      	; 0x26f8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    26f6:	89 c0       	rjmp	.+274    	; 0x280a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    26f8:	8a 81       	ldd	r24, Y+2	; 0x02
    26fa:	9b 81       	ldd	r25, Y+3	; 0x03
    26fc:	89 2b       	or	r24, r25
    26fe:	09 f4       	brne	.+2      	; 0x2702 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2700:	84 c0       	rjmp	.+264    	; 0x280a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2702:	4b 2d       	mov	r20, r11
    2704:	b8 01       	movw	r22, r16
    2706:	ce 01       	movw	r24, r28
    2708:	0e 94 db 11 	call	0x23b6	; 0x23b6 <_ZN16PololuQTRSensors4readEPjh>
    270c:	78 01       	movw	r14, r16
    270e:	00 e0       	ldi	r16, 0x00	; 0
    2710:	10 e0       	ldi	r17, 0x00	; 0
    2712:	c1 2c       	mov	r12, r1
    2714:	d1 2c       	mov	r13, r1
    2716:	88 85       	ldd	r24, Y+8	; 0x08
    2718:	90 e0       	ldi	r25, 0x00	; 0
    271a:	c8 16       	cp	r12, r24
    271c:	d9 06       	cpc	r13, r25
    271e:	0c f0       	brlt	.+2      	; 0x2722 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    2720:	74 c0       	rjmp	.+232    	; 0x280a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2722:	81 e0       	ldi	r24, 0x01	; 1
    2724:	b8 12       	cpse	r11, r24
    2726:	0a c0       	rjmp	.+20     	; 0x273c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    2728:	ea 81       	ldd	r30, Y+2	; 0x02
    272a:	fb 81       	ldd	r31, Y+3	; 0x03
    272c:	e0 0f       	add	r30, r16
    272e:	f1 1f       	adc	r31, r17
    2730:	01 90       	ld	r0, Z+
    2732:	f0 81       	ld	r31, Z
    2734:	e0 2d       	mov	r30, r0
    2736:	a8 81       	ld	r26, Y
    2738:	b9 81       	ldd	r27, Y+1	; 0x01
    273a:	0d c0       	rjmp	.+26     	; 0x2756 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    273c:	8c 81       	ldd	r24, Y+4	; 0x04
    273e:	9d 81       	ldd	r25, Y+5	; 0x05
    2740:	2e 81       	ldd	r18, Y+6	; 0x06
    2742:	3f 81       	ldd	r19, Y+7	; 0x07
    2744:	b1 10       	cpse	r11, r1
    2746:	0c c0       	rjmp	.+24     	; 0x2760 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    2748:	f9 01       	movw	r30, r18
    274a:	e0 0f       	add	r30, r16
    274c:	f1 1f       	adc	r31, r17
    274e:	01 90       	ld	r0, Z+
    2750:	f0 81       	ld	r31, Z
    2752:	e0 2d       	mov	r30, r0
    2754:	dc 01       	movw	r26, r24
    2756:	a0 0f       	add	r26, r16
    2758:	b1 1f       	adc	r27, r17
    275a:	8d 91       	ld	r24, X+
    275c:	9c 91       	ld	r25, X
    275e:	28 c0       	rjmp	.+80     	; 0x27b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    2760:	fc 01       	movw	r30, r24
    2762:	e0 0f       	add	r30, r16
    2764:	f1 1f       	adc	r31, r17
    2766:	40 81       	ld	r20, Z
    2768:	51 81       	ldd	r21, Z+1	; 0x01
    276a:	e8 81       	ld	r30, Y
    276c:	f9 81       	ldd	r31, Y+1	; 0x01
    276e:	e0 0f       	add	r30, r16
    2770:	f1 1f       	adc	r31, r17
    2772:	80 81       	ld	r24, Z
    2774:	91 81       	ldd	r25, Z+1	; 0x01
    2776:	ee 85       	ldd	r30, Y+14	; 0x0e
    2778:	ff 85       	ldd	r31, Y+15	; 0x0f
    277a:	48 17       	cp	r20, r24
    277c:	59 07       	cpc	r21, r25
    277e:	10 f4       	brcc	.+4      	; 0x2784 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    2780:	cf 01       	movw	r24, r30
    2782:	04 c0       	rjmp	.+8      	; 0x278c <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    2784:	8e 0f       	add	r24, r30
    2786:	9f 1f       	adc	r25, r31
    2788:	84 1b       	sub	r24, r20
    278a:	95 0b       	sbc	r25, r21
    278c:	d9 01       	movw	r26, r18
    278e:	a0 0f       	add	r26, r16
    2790:	b1 1f       	adc	r27, r17
    2792:	2d 91       	ld	r18, X+
    2794:	3c 91       	ld	r19, X
    2796:	aa 81       	ldd	r26, Y+2	; 0x02
    2798:	bb 81       	ldd	r27, Y+3	; 0x03
    279a:	a0 0f       	add	r26, r16
    279c:	b1 1f       	adc	r27, r17
    279e:	4d 91       	ld	r20, X+
    27a0:	5c 91       	ld	r21, X
    27a2:	24 17       	cp	r18, r20
    27a4:	35 07       	cpc	r19, r21
    27a6:	20 f0       	brcs	.+8      	; 0x27b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    27a8:	e4 0f       	add	r30, r20
    27aa:	f5 1f       	adc	r31, r21
    27ac:	e2 1b       	sub	r30, r18
    27ae:	f3 0b       	sbc	r31, r19
    27b0:	e8 1b       	sub	r30, r24
    27b2:	f9 0b       	sbc	r31, r25
    27b4:	a9 f0       	breq	.+42     	; 0x27e0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    27b6:	d7 01       	movw	r26, r14
    27b8:	2d 91       	ld	r18, X+
    27ba:	3c 91       	ld	r19, X
    27bc:	40 e0       	ldi	r20, 0x00	; 0
    27be:	50 e0       	ldi	r21, 0x00	; 0
    27c0:	28 1b       	sub	r18, r24
    27c2:	39 0b       	sbc	r19, r25
    27c4:	41 09       	sbc	r20, r1
    27c6:	51 09       	sbc	r21, r1
    27c8:	a8 ee       	ldi	r26, 0xE8	; 232
    27ca:	b3 e0       	ldi	r27, 0x03	; 3
    27cc:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__muluhisi3>
    27d0:	9f 01       	movw	r18, r30
    27d2:	40 e0       	ldi	r20, 0x00	; 0
    27d4:	50 e0       	ldi	r21, 0x00	; 0
    27d6:	0e 94 df 14 	call	0x29be	; 0x29be <__divmodsi4>
    27da:	37 fd       	sbrc	r19, 7
    27dc:	0a c0       	rjmp	.+20     	; 0x27f2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    27de:	02 c0       	rjmp	.+4      	; 0x27e4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    27e0:	20 e0       	ldi	r18, 0x00	; 0
    27e2:	30 e0       	ldi	r19, 0x00	; 0
    27e4:	29 3e       	cpi	r18, 0xE9	; 233
    27e6:	b3 e0       	ldi	r27, 0x03	; 3
    27e8:	3b 07       	cpc	r19, r27
    27ea:	2c f0       	brlt	.+10     	; 0x27f6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    27ec:	28 ee       	ldi	r18, 0xE8	; 232
    27ee:	33 e0       	ldi	r19, 0x03	; 3
    27f0:	02 c0       	rjmp	.+4      	; 0x27f6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    27f2:	20 e0       	ldi	r18, 0x00	; 0
    27f4:	30 e0       	ldi	r19, 0x00	; 0
    27f6:	f7 01       	movw	r30, r14
    27f8:	21 93       	st	Z+, r18
    27fa:	31 93       	st	Z+, r19
    27fc:	7f 01       	movw	r14, r30
    27fe:	ff ef       	ldi	r31, 0xFF	; 255
    2800:	cf 1a       	sub	r12, r31
    2802:	df 0a       	sbc	r13, r31
    2804:	0e 5f       	subi	r16, 0xFE	; 254
    2806:	1f 4f       	sbci	r17, 0xFF	; 255
    2808:	86 cf       	rjmp	.-244    	; 0x2716 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    280a:	cd b7       	in	r28, 0x3d	; 61
    280c:	de b7       	in	r29, 0x3e	; 62
    280e:	e9 e0       	ldi	r30, 0x09	; 9
    2810:	0c 94 45 15 	jmp	0x2a8a	; 0x2a8a <__epilogue_restores__+0x12>

00002814 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2814:	a0 e0       	ldi	r26, 0x00	; 0
    2816:	b0 e0       	ldi	r27, 0x00	; 0
    2818:	e0 e1       	ldi	r30, 0x10	; 16
    281a:	f4 e1       	ldi	r31, 0x14	; 20
    281c:	0c 94 20 15 	jmp	0x2a40	; 0x2a40 <__prologue_saves__>
    2820:	ec 01       	movw	r28, r24
    2822:	8b 01       	movw	r16, r22
    2824:	82 2e       	mov	r8, r18
    2826:	0e 94 5d 13 	call	0x26ba	; 0x26ba <_ZN16PololuQTRSensors14readCalibratedEPjh>
    282a:	28 84       	ldd	r2, Y+8	; 0x08
    282c:	e8 01       	movw	r28, r16
    282e:	41 2c       	mov	r4, r1
    2830:	51 2c       	mov	r5, r1
    2832:	32 01       	movw	r6, r4
    2834:	00 e0       	ldi	r16, 0x00	; 0
    2836:	10 e0       	ldi	r17, 0x00	; 0
    2838:	c1 2c       	mov	r12, r1
    283a:	d1 2c       	mov	r13, r1
    283c:	76 01       	movw	r14, r12
    283e:	31 2c       	mov	r3, r1
    2840:	91 2c       	mov	r9, r1
    2842:	58 ee       	ldi	r21, 0xE8	; 232
    2844:	a5 2e       	mov	r10, r21
    2846:	53 e0       	ldi	r21, 0x03	; 3
    2848:	b5 2e       	mov	r11, r21
    284a:	92 14       	cp	r9, r2
    284c:	21 f1       	breq	.+72     	; 0x2896 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    284e:	e9 91       	ld	r30, Y+
    2850:	f9 91       	ld	r31, Y+
    2852:	88 20       	and	r8, r8
    2854:	21 f0       	breq	.+8      	; 0x285e <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    2856:	c5 01       	movw	r24, r10
    2858:	8e 1b       	sub	r24, r30
    285a:	9f 0b       	sbc	r25, r31
    285c:	fc 01       	movw	r30, r24
    285e:	e9 3c       	cpi	r30, 0xC9	; 201
    2860:	f1 05       	cpc	r31, r1
    2862:	24 f4       	brge	.+8      	; 0x286c <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    2864:	e3 33       	cpi	r30, 0x33	; 51
    2866:	f1 05       	cpc	r31, r1
    2868:	74 f0       	brlt	.+28     	; 0x2886 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    286a:	02 c0       	rjmp	.+4      	; 0x2870 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    286c:	33 24       	eor	r3, r3
    286e:	33 94       	inc	r3
    2870:	df 01       	movw	r26, r30
    2872:	a3 01       	movw	r20, r6
    2874:	92 01       	movw	r18, r4
    2876:	0e 94 18 15 	call	0x2a30	; 0x2a30 <__mulshisi3>
    287a:	c6 0e       	add	r12, r22
    287c:	d7 1e       	adc	r13, r23
    287e:	e8 1e       	adc	r14, r24
    2880:	f9 1e       	adc	r15, r25
    2882:	0e 0f       	add	r16, r30
    2884:	1f 1f       	adc	r17, r31
    2886:	93 94       	inc	r9
    2888:	98 ee       	ldi	r25, 0xE8	; 232
    288a:	49 0e       	add	r4, r25
    288c:	93 e0       	ldi	r25, 0x03	; 3
    288e:	59 1e       	adc	r5, r25
    2890:	61 1c       	adc	r6, r1
    2892:	71 1c       	adc	r7, r1
    2894:	da cf       	rjmp	.-76     	; 0x284a <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    2896:	31 10       	cpse	r3, r1
    2898:	1e c0       	rjmp	.+60     	; 0x28d6 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    289a:	49 2d       	mov	r20, r9
    289c:	50 e0       	ldi	r21, 0x00	; 0
    289e:	41 50       	subi	r20, 0x01	; 1
    28a0:	51 09       	sbc	r21, r1
    28a2:	24 ef       	ldi	r18, 0xF4	; 244
    28a4:	31 e0       	ldi	r19, 0x01	; 1
    28a6:	42 9f       	mul	r20, r18
    28a8:	c0 01       	movw	r24, r0
    28aa:	43 9f       	mul	r20, r19
    28ac:	90 0d       	add	r25, r0
    28ae:	52 9f       	mul	r21, r18
    28b0:	90 0d       	add	r25, r0
    28b2:	11 24       	eor	r1, r1
    28b4:	20 91 cb 01 	lds	r18, 0x01CB	; 0x8001cb <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    28b8:	30 91 cc 01 	lds	r19, 0x01CC	; 0x8001cc <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    28bc:	28 17       	cp	r18, r24
    28be:	39 07       	cpc	r19, r25
    28c0:	b4 f0       	brlt	.+44     	; 0x28ee <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    28c2:	88 ee       	ldi	r24, 0xE8	; 232
    28c4:	93 e0       	ldi	r25, 0x03	; 3
    28c6:	48 9f       	mul	r20, r24
    28c8:	90 01       	movw	r18, r0
    28ca:	49 9f       	mul	r20, r25
    28cc:	30 0d       	add	r19, r0
    28ce:	58 9f       	mul	r21, r24
    28d0:	30 0d       	add	r19, r0
    28d2:	11 24       	eor	r1, r1
    28d4:	0e c0       	rjmp	.+28     	; 0x28f2 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    28d6:	98 01       	movw	r18, r16
    28d8:	40 e0       	ldi	r20, 0x00	; 0
    28da:	50 e0       	ldi	r21, 0x00	; 0
    28dc:	c7 01       	movw	r24, r14
    28de:	b6 01       	movw	r22, r12
    28e0:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    28e4:	30 93 cc 01 	sts	0x01CC, r19	; 0x8001cc <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    28e8:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    28ec:	02 c0       	rjmp	.+4      	; 0x28f2 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    28ee:	20 e0       	ldi	r18, 0x00	; 0
    28f0:	30 e0       	ldi	r19, 0x00	; 0
    28f2:	c9 01       	movw	r24, r18
    28f4:	cd b7       	in	r28, 0x3d	; 61
    28f6:	de b7       	in	r29, 0x3e	; 62
    28f8:	e2 e1       	ldi	r30, 0x12	; 18
    28fa:	0c 94 3c 15 	jmp	0x2a78	; 0x2a78 <__epilogue_restores__>

000028fe <_ZN16PololuQTRSensorsD1Ev>:
    28fe:	cf 93       	push	r28
    2900:	df 93       	push	r29
    2902:	ec 01       	movw	r28, r24
    2904:	8a 81       	ldd	r24, Y+2	; 0x02
    2906:	9b 81       	ldd	r25, Y+3	; 0x03
    2908:	00 97       	sbiw	r24, 0x00	; 0
    290a:	11 f0       	breq	.+4      	; 0x2910 <_ZN16PololuQTRSensorsD1Ev+0x12>
    290c:	0e 94 f5 15 	call	0x2bea	; 0x2bea <free>
    2910:	8e 81       	ldd	r24, Y+6	; 0x06
    2912:	9f 81       	ldd	r25, Y+7	; 0x07
    2914:	00 97       	sbiw	r24, 0x00	; 0
    2916:	11 f0       	breq	.+4      	; 0x291c <_ZN16PololuQTRSensorsD1Ev+0x1e>
    2918:	0e 94 f5 15 	call	0x2bea	; 0x2bea <free>
    291c:	88 81       	ld	r24, Y
    291e:	99 81       	ldd	r25, Y+1	; 0x01
    2920:	00 97       	sbiw	r24, 0x00	; 0
    2922:	11 f0       	breq	.+4      	; 0x2928 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    2924:	0e 94 f5 15 	call	0x2bea	; 0x2bea <free>
    2928:	8c 81       	ldd	r24, Y+4	; 0x04
    292a:	9d 81       	ldd	r25, Y+5	; 0x05
    292c:	00 97       	sbiw	r24, 0x00	; 0
    292e:	11 f0       	breq	.+4      	; 0x2934 <_ZN16PololuQTRSensorsD1Ev+0x36>
    2930:	0e 94 f5 15 	call	0x2bea	; 0x2bea <free>
    2934:	df 91       	pop	r29
    2936:	cf 91       	pop	r28
    2938:	08 95       	ret

0000293a <__udivmodqi4>:
    293a:	99 1b       	sub	r25, r25
    293c:	79 e0       	ldi	r23, 0x09	; 9
    293e:	04 c0       	rjmp	.+8      	; 0x2948 <__udivmodqi4_ep>

00002940 <__udivmodqi4_loop>:
    2940:	99 1f       	adc	r25, r25
    2942:	96 17       	cp	r25, r22
    2944:	08 f0       	brcs	.+2      	; 0x2948 <__udivmodqi4_ep>
    2946:	96 1b       	sub	r25, r22

00002948 <__udivmodqi4_ep>:
    2948:	88 1f       	adc	r24, r24
    294a:	7a 95       	dec	r23
    294c:	c9 f7       	brne	.-14     	; 0x2940 <__udivmodqi4_loop>
    294e:	80 95       	com	r24
    2950:	08 95       	ret

00002952 <__udivmodhi4>:
    2952:	aa 1b       	sub	r26, r26
    2954:	bb 1b       	sub	r27, r27
    2956:	51 e1       	ldi	r21, 0x11	; 17
    2958:	07 c0       	rjmp	.+14     	; 0x2968 <__udivmodhi4_ep>

0000295a <__udivmodhi4_loop>:
    295a:	aa 1f       	adc	r26, r26
    295c:	bb 1f       	adc	r27, r27
    295e:	a6 17       	cp	r26, r22
    2960:	b7 07       	cpc	r27, r23
    2962:	10 f0       	brcs	.+4      	; 0x2968 <__udivmodhi4_ep>
    2964:	a6 1b       	sub	r26, r22
    2966:	b7 0b       	sbc	r27, r23

00002968 <__udivmodhi4_ep>:
    2968:	88 1f       	adc	r24, r24
    296a:	99 1f       	adc	r25, r25
    296c:	5a 95       	dec	r21
    296e:	a9 f7       	brne	.-22     	; 0x295a <__udivmodhi4_loop>
    2970:	80 95       	com	r24
    2972:	90 95       	com	r25
    2974:	bc 01       	movw	r22, r24
    2976:	cd 01       	movw	r24, r26
    2978:	08 95       	ret

0000297a <__udivmodsi4>:
    297a:	a1 e2       	ldi	r26, 0x21	; 33
    297c:	1a 2e       	mov	r1, r26
    297e:	aa 1b       	sub	r26, r26
    2980:	bb 1b       	sub	r27, r27
    2982:	fd 01       	movw	r30, r26
    2984:	0d c0       	rjmp	.+26     	; 0x29a0 <__udivmodsi4_ep>

00002986 <__udivmodsi4_loop>:
    2986:	aa 1f       	adc	r26, r26
    2988:	bb 1f       	adc	r27, r27
    298a:	ee 1f       	adc	r30, r30
    298c:	ff 1f       	adc	r31, r31
    298e:	a2 17       	cp	r26, r18
    2990:	b3 07       	cpc	r27, r19
    2992:	e4 07       	cpc	r30, r20
    2994:	f5 07       	cpc	r31, r21
    2996:	20 f0       	brcs	.+8      	; 0x29a0 <__udivmodsi4_ep>
    2998:	a2 1b       	sub	r26, r18
    299a:	b3 0b       	sbc	r27, r19
    299c:	e4 0b       	sbc	r30, r20
    299e:	f5 0b       	sbc	r31, r21

000029a0 <__udivmodsi4_ep>:
    29a0:	66 1f       	adc	r22, r22
    29a2:	77 1f       	adc	r23, r23
    29a4:	88 1f       	adc	r24, r24
    29a6:	99 1f       	adc	r25, r25
    29a8:	1a 94       	dec	r1
    29aa:	69 f7       	brne	.-38     	; 0x2986 <__udivmodsi4_loop>
    29ac:	60 95       	com	r22
    29ae:	70 95       	com	r23
    29b0:	80 95       	com	r24
    29b2:	90 95       	com	r25
    29b4:	9b 01       	movw	r18, r22
    29b6:	ac 01       	movw	r20, r24
    29b8:	bd 01       	movw	r22, r26
    29ba:	cf 01       	movw	r24, r30
    29bc:	08 95       	ret

000029be <__divmodsi4>:
    29be:	05 2e       	mov	r0, r21
    29c0:	97 fb       	bst	r25, 7
    29c2:	1e f4       	brtc	.+6      	; 0x29ca <__divmodsi4+0xc>
    29c4:	00 94       	com	r0
    29c6:	0e 94 f6 14 	call	0x29ec	; 0x29ec <__negsi2>
    29ca:	57 fd       	sbrc	r21, 7
    29cc:	07 d0       	rcall	.+14     	; 0x29dc <__divmodsi4_neg2>
    29ce:	0e 94 bd 14 	call	0x297a	; 0x297a <__udivmodsi4>
    29d2:	07 fc       	sbrc	r0, 7
    29d4:	03 d0       	rcall	.+6      	; 0x29dc <__divmodsi4_neg2>
    29d6:	4e f4       	brtc	.+18     	; 0x29ea <__divmodsi4_exit>
    29d8:	0c 94 f6 14 	jmp	0x29ec	; 0x29ec <__negsi2>

000029dc <__divmodsi4_neg2>:
    29dc:	50 95       	com	r21
    29de:	40 95       	com	r20
    29e0:	30 95       	com	r19
    29e2:	21 95       	neg	r18
    29e4:	3f 4f       	sbci	r19, 0xFF	; 255
    29e6:	4f 4f       	sbci	r20, 0xFF	; 255
    29e8:	5f 4f       	sbci	r21, 0xFF	; 255

000029ea <__divmodsi4_exit>:
    29ea:	08 95       	ret

000029ec <__negsi2>:
    29ec:	90 95       	com	r25
    29ee:	80 95       	com	r24
    29f0:	70 95       	com	r23
    29f2:	61 95       	neg	r22
    29f4:	7f 4f       	sbci	r23, 0xFF	; 255
    29f6:	8f 4f       	sbci	r24, 0xFF	; 255
    29f8:	9f 4f       	sbci	r25, 0xFF	; 255
    29fa:	08 95       	ret

000029fc <__umulhisi3>:
    29fc:	a2 9f       	mul	r26, r18
    29fe:	b0 01       	movw	r22, r0
    2a00:	b3 9f       	mul	r27, r19
    2a02:	c0 01       	movw	r24, r0
    2a04:	a3 9f       	mul	r26, r19
    2a06:	70 0d       	add	r23, r0
    2a08:	81 1d       	adc	r24, r1
    2a0a:	11 24       	eor	r1, r1
    2a0c:	91 1d       	adc	r25, r1
    2a0e:	b2 9f       	mul	r27, r18
    2a10:	70 0d       	add	r23, r0
    2a12:	81 1d       	adc	r24, r1
    2a14:	11 24       	eor	r1, r1
    2a16:	91 1d       	adc	r25, r1
    2a18:	08 95       	ret

00002a1a <__muluhisi3>:
    2a1a:	0e 94 fe 14 	call	0x29fc	; 0x29fc <__umulhisi3>
    2a1e:	a5 9f       	mul	r26, r21
    2a20:	90 0d       	add	r25, r0
    2a22:	b4 9f       	mul	r27, r20
    2a24:	90 0d       	add	r25, r0
    2a26:	a4 9f       	mul	r26, r20
    2a28:	80 0d       	add	r24, r0
    2a2a:	91 1d       	adc	r25, r1
    2a2c:	11 24       	eor	r1, r1
    2a2e:	08 95       	ret

00002a30 <__mulshisi3>:
    2a30:	b7 ff       	sbrs	r27, 7
    2a32:	0c 94 0d 15 	jmp	0x2a1a	; 0x2a1a <__muluhisi3>

00002a36 <__mulohisi3>:
    2a36:	0e 94 0d 15 	call	0x2a1a	; 0x2a1a <__muluhisi3>
    2a3a:	82 1b       	sub	r24, r18
    2a3c:	93 0b       	sbc	r25, r19
    2a3e:	08 95       	ret

00002a40 <__prologue_saves__>:
    2a40:	2f 92       	push	r2
    2a42:	3f 92       	push	r3
    2a44:	4f 92       	push	r4
    2a46:	5f 92       	push	r5
    2a48:	6f 92       	push	r6
    2a4a:	7f 92       	push	r7
    2a4c:	8f 92       	push	r8
    2a4e:	9f 92       	push	r9
    2a50:	af 92       	push	r10
    2a52:	bf 92       	push	r11
    2a54:	cf 92       	push	r12
    2a56:	df 92       	push	r13
    2a58:	ef 92       	push	r14
    2a5a:	ff 92       	push	r15
    2a5c:	0f 93       	push	r16
    2a5e:	1f 93       	push	r17
    2a60:	cf 93       	push	r28
    2a62:	df 93       	push	r29
    2a64:	cd b7       	in	r28, 0x3d	; 61
    2a66:	de b7       	in	r29, 0x3e	; 62
    2a68:	ca 1b       	sub	r28, r26
    2a6a:	db 0b       	sbc	r29, r27
    2a6c:	0f b6       	in	r0, 0x3f	; 63
    2a6e:	f8 94       	cli
    2a70:	de bf       	out	0x3e, r29	; 62
    2a72:	0f be       	out	0x3f, r0	; 63
    2a74:	cd bf       	out	0x3d, r28	; 61
    2a76:	09 94       	ijmp

00002a78 <__epilogue_restores__>:
    2a78:	2a 88       	ldd	r2, Y+18	; 0x12
    2a7a:	39 88       	ldd	r3, Y+17	; 0x11
    2a7c:	48 88       	ldd	r4, Y+16	; 0x10
    2a7e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2a80:	6e 84       	ldd	r6, Y+14	; 0x0e
    2a82:	7d 84       	ldd	r7, Y+13	; 0x0d
    2a84:	8c 84       	ldd	r8, Y+12	; 0x0c
    2a86:	9b 84       	ldd	r9, Y+11	; 0x0b
    2a88:	aa 84       	ldd	r10, Y+10	; 0x0a
    2a8a:	b9 84       	ldd	r11, Y+9	; 0x09
    2a8c:	c8 84       	ldd	r12, Y+8	; 0x08
    2a8e:	df 80       	ldd	r13, Y+7	; 0x07
    2a90:	ee 80       	ldd	r14, Y+6	; 0x06
    2a92:	fd 80       	ldd	r15, Y+5	; 0x05
    2a94:	0c 81       	ldd	r16, Y+4	; 0x04
    2a96:	1b 81       	ldd	r17, Y+3	; 0x03
    2a98:	aa 81       	ldd	r26, Y+2	; 0x02
    2a9a:	b9 81       	ldd	r27, Y+1	; 0x01
    2a9c:	ce 0f       	add	r28, r30
    2a9e:	d1 1d       	adc	r29, r1
    2aa0:	0f b6       	in	r0, 0x3f	; 63
    2aa2:	f8 94       	cli
    2aa4:	de bf       	out	0x3e, r29	; 62
    2aa6:	0f be       	out	0x3f, r0	; 63
    2aa8:	cd bf       	out	0x3d, r28	; 61
    2aaa:	ed 01       	movw	r28, r26
    2aac:	08 95       	ret

00002aae <__tablejump2__>:
    2aae:	ee 0f       	add	r30, r30
    2ab0:	ff 1f       	adc	r31, r31
    2ab2:	05 90       	lpm	r0, Z+
    2ab4:	f4 91       	lpm	r31, Z
    2ab6:	e0 2d       	mov	r30, r0
    2ab8:	09 94       	ijmp

00002aba <malloc>:
    2aba:	0f 93       	push	r16
    2abc:	1f 93       	push	r17
    2abe:	cf 93       	push	r28
    2ac0:	df 93       	push	r29
    2ac2:	82 30       	cpi	r24, 0x02	; 2
    2ac4:	91 05       	cpc	r25, r1
    2ac6:	10 f4       	brcc	.+4      	; 0x2acc <malloc+0x12>
    2ac8:	82 e0       	ldi	r24, 0x02	; 2
    2aca:	90 e0       	ldi	r25, 0x00	; 0
    2acc:	e0 91 3d 02 	lds	r30, 0x023D	; 0x80023d <__flp>
    2ad0:	f0 91 3e 02 	lds	r31, 0x023E	; 0x80023e <__flp+0x1>
    2ad4:	20 e0       	ldi	r18, 0x00	; 0
    2ad6:	30 e0       	ldi	r19, 0x00	; 0
    2ad8:	a0 e0       	ldi	r26, 0x00	; 0
    2ada:	b0 e0       	ldi	r27, 0x00	; 0
    2adc:	30 97       	sbiw	r30, 0x00	; 0
    2ade:	19 f1       	breq	.+70     	; 0x2b26 <malloc+0x6c>
    2ae0:	40 81       	ld	r20, Z
    2ae2:	51 81       	ldd	r21, Z+1	; 0x01
    2ae4:	02 81       	ldd	r16, Z+2	; 0x02
    2ae6:	13 81       	ldd	r17, Z+3	; 0x03
    2ae8:	48 17       	cp	r20, r24
    2aea:	59 07       	cpc	r21, r25
    2aec:	c8 f0       	brcs	.+50     	; 0x2b20 <malloc+0x66>
    2aee:	84 17       	cp	r24, r20
    2af0:	95 07       	cpc	r25, r21
    2af2:	69 f4       	brne	.+26     	; 0x2b0e <malloc+0x54>
    2af4:	10 97       	sbiw	r26, 0x00	; 0
    2af6:	31 f0       	breq	.+12     	; 0x2b04 <malloc+0x4a>
    2af8:	12 96       	adiw	r26, 0x02	; 2
    2afa:	0c 93       	st	X, r16
    2afc:	12 97       	sbiw	r26, 0x02	; 2
    2afe:	13 96       	adiw	r26, 0x03	; 3
    2b00:	1c 93       	st	X, r17
    2b02:	27 c0       	rjmp	.+78     	; 0x2b52 <malloc+0x98>
    2b04:	00 93 3d 02 	sts	0x023D, r16	; 0x80023d <__flp>
    2b08:	10 93 3e 02 	sts	0x023E, r17	; 0x80023e <__flp+0x1>
    2b0c:	22 c0       	rjmp	.+68     	; 0x2b52 <malloc+0x98>
    2b0e:	21 15       	cp	r18, r1
    2b10:	31 05       	cpc	r19, r1
    2b12:	19 f0       	breq	.+6      	; 0x2b1a <malloc+0x60>
    2b14:	42 17       	cp	r20, r18
    2b16:	53 07       	cpc	r21, r19
    2b18:	18 f4       	brcc	.+6      	; 0x2b20 <malloc+0x66>
    2b1a:	9a 01       	movw	r18, r20
    2b1c:	bd 01       	movw	r22, r26
    2b1e:	ef 01       	movw	r28, r30
    2b20:	df 01       	movw	r26, r30
    2b22:	f8 01       	movw	r30, r16
    2b24:	db cf       	rjmp	.-74     	; 0x2adc <malloc+0x22>
    2b26:	21 15       	cp	r18, r1
    2b28:	31 05       	cpc	r19, r1
    2b2a:	f9 f0       	breq	.+62     	; 0x2b6a <malloc+0xb0>
    2b2c:	28 1b       	sub	r18, r24
    2b2e:	39 0b       	sbc	r19, r25
    2b30:	24 30       	cpi	r18, 0x04	; 4
    2b32:	31 05       	cpc	r19, r1
    2b34:	80 f4       	brcc	.+32     	; 0x2b56 <malloc+0x9c>
    2b36:	8a 81       	ldd	r24, Y+2	; 0x02
    2b38:	9b 81       	ldd	r25, Y+3	; 0x03
    2b3a:	61 15       	cp	r22, r1
    2b3c:	71 05       	cpc	r23, r1
    2b3e:	21 f0       	breq	.+8      	; 0x2b48 <malloc+0x8e>
    2b40:	fb 01       	movw	r30, r22
    2b42:	93 83       	std	Z+3, r25	; 0x03
    2b44:	82 83       	std	Z+2, r24	; 0x02
    2b46:	04 c0       	rjmp	.+8      	; 0x2b50 <malloc+0x96>
    2b48:	90 93 3e 02 	sts	0x023E, r25	; 0x80023e <__flp+0x1>
    2b4c:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <__flp>
    2b50:	fe 01       	movw	r30, r28
    2b52:	32 96       	adiw	r30, 0x02	; 2
    2b54:	44 c0       	rjmp	.+136    	; 0x2bde <malloc+0x124>
    2b56:	fe 01       	movw	r30, r28
    2b58:	e2 0f       	add	r30, r18
    2b5a:	f3 1f       	adc	r31, r19
    2b5c:	81 93       	st	Z+, r24
    2b5e:	91 93       	st	Z+, r25
    2b60:	22 50       	subi	r18, 0x02	; 2
    2b62:	31 09       	sbc	r19, r1
    2b64:	39 83       	std	Y+1, r19	; 0x01
    2b66:	28 83       	st	Y, r18
    2b68:	3a c0       	rjmp	.+116    	; 0x2bde <malloc+0x124>
    2b6a:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    2b6e:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    2b72:	23 2b       	or	r18, r19
    2b74:	41 f4       	brne	.+16     	; 0x2b86 <malloc+0xcc>
    2b76:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    2b7a:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    2b7e:	30 93 3c 02 	sts	0x023C, r19	; 0x80023c <__brkval+0x1>
    2b82:	20 93 3b 02 	sts	0x023B, r18	; 0x80023b <__brkval>
    2b86:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    2b8a:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    2b8e:	21 15       	cp	r18, r1
    2b90:	31 05       	cpc	r19, r1
    2b92:	41 f4       	brne	.+16     	; 0x2ba4 <malloc+0xea>
    2b94:	2d b7       	in	r18, 0x3d	; 61
    2b96:	3e b7       	in	r19, 0x3e	; 62
    2b98:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    2b9c:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    2ba0:	24 1b       	sub	r18, r20
    2ba2:	35 0b       	sbc	r19, r21
    2ba4:	e0 91 3b 02 	lds	r30, 0x023B	; 0x80023b <__brkval>
    2ba8:	f0 91 3c 02 	lds	r31, 0x023C	; 0x80023c <__brkval+0x1>
    2bac:	e2 17       	cp	r30, r18
    2bae:	f3 07       	cpc	r31, r19
    2bb0:	a0 f4       	brcc	.+40     	; 0x2bda <malloc+0x120>
    2bb2:	2e 1b       	sub	r18, r30
    2bb4:	3f 0b       	sbc	r19, r31
    2bb6:	28 17       	cp	r18, r24
    2bb8:	39 07       	cpc	r19, r25
    2bba:	78 f0       	brcs	.+30     	; 0x2bda <malloc+0x120>
    2bbc:	ac 01       	movw	r20, r24
    2bbe:	4e 5f       	subi	r20, 0xFE	; 254
    2bc0:	5f 4f       	sbci	r21, 0xFF	; 255
    2bc2:	24 17       	cp	r18, r20
    2bc4:	35 07       	cpc	r19, r21
    2bc6:	48 f0       	brcs	.+18     	; 0x2bda <malloc+0x120>
    2bc8:	4e 0f       	add	r20, r30
    2bca:	5f 1f       	adc	r21, r31
    2bcc:	50 93 3c 02 	sts	0x023C, r21	; 0x80023c <__brkval+0x1>
    2bd0:	40 93 3b 02 	sts	0x023B, r20	; 0x80023b <__brkval>
    2bd4:	81 93       	st	Z+, r24
    2bd6:	91 93       	st	Z+, r25
    2bd8:	02 c0       	rjmp	.+4      	; 0x2bde <malloc+0x124>
    2bda:	e0 e0       	ldi	r30, 0x00	; 0
    2bdc:	f0 e0       	ldi	r31, 0x00	; 0
    2bde:	cf 01       	movw	r24, r30
    2be0:	df 91       	pop	r29
    2be2:	cf 91       	pop	r28
    2be4:	1f 91       	pop	r17
    2be6:	0f 91       	pop	r16
    2be8:	08 95       	ret

00002bea <free>:
    2bea:	cf 93       	push	r28
    2bec:	df 93       	push	r29
    2bee:	00 97       	sbiw	r24, 0x00	; 0
    2bf0:	09 f4       	brne	.+2      	; 0x2bf4 <free+0xa>
    2bf2:	81 c0       	rjmp	.+258    	; 0x2cf6 <free+0x10c>
    2bf4:	fc 01       	movw	r30, r24
    2bf6:	32 97       	sbiw	r30, 0x02	; 2
    2bf8:	13 82       	std	Z+3, r1	; 0x03
    2bfa:	12 82       	std	Z+2, r1	; 0x02
    2bfc:	a0 91 3d 02 	lds	r26, 0x023D	; 0x80023d <__flp>
    2c00:	b0 91 3e 02 	lds	r27, 0x023E	; 0x80023e <__flp+0x1>
    2c04:	10 97       	sbiw	r26, 0x00	; 0
    2c06:	81 f4       	brne	.+32     	; 0x2c28 <free+0x3e>
    2c08:	20 81       	ld	r18, Z
    2c0a:	31 81       	ldd	r19, Z+1	; 0x01
    2c0c:	82 0f       	add	r24, r18
    2c0e:	93 1f       	adc	r25, r19
    2c10:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    2c14:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    2c18:	28 17       	cp	r18, r24
    2c1a:	39 07       	cpc	r19, r25
    2c1c:	51 f5       	brne	.+84     	; 0x2c72 <free+0x88>
    2c1e:	f0 93 3c 02 	sts	0x023C, r31	; 0x80023c <__brkval+0x1>
    2c22:	e0 93 3b 02 	sts	0x023B, r30	; 0x80023b <__brkval>
    2c26:	67 c0       	rjmp	.+206    	; 0x2cf6 <free+0x10c>
    2c28:	ed 01       	movw	r28, r26
    2c2a:	20 e0       	ldi	r18, 0x00	; 0
    2c2c:	30 e0       	ldi	r19, 0x00	; 0
    2c2e:	ce 17       	cp	r28, r30
    2c30:	df 07       	cpc	r29, r31
    2c32:	40 f4       	brcc	.+16     	; 0x2c44 <free+0x5a>
    2c34:	4a 81       	ldd	r20, Y+2	; 0x02
    2c36:	5b 81       	ldd	r21, Y+3	; 0x03
    2c38:	9e 01       	movw	r18, r28
    2c3a:	41 15       	cp	r20, r1
    2c3c:	51 05       	cpc	r21, r1
    2c3e:	f1 f0       	breq	.+60     	; 0x2c7c <free+0x92>
    2c40:	ea 01       	movw	r28, r20
    2c42:	f5 cf       	rjmp	.-22     	; 0x2c2e <free+0x44>
    2c44:	d3 83       	std	Z+3, r29	; 0x03
    2c46:	c2 83       	std	Z+2, r28	; 0x02
    2c48:	40 81       	ld	r20, Z
    2c4a:	51 81       	ldd	r21, Z+1	; 0x01
    2c4c:	84 0f       	add	r24, r20
    2c4e:	95 1f       	adc	r25, r21
    2c50:	c8 17       	cp	r28, r24
    2c52:	d9 07       	cpc	r29, r25
    2c54:	59 f4       	brne	.+22     	; 0x2c6c <free+0x82>
    2c56:	88 81       	ld	r24, Y
    2c58:	99 81       	ldd	r25, Y+1	; 0x01
    2c5a:	84 0f       	add	r24, r20
    2c5c:	95 1f       	adc	r25, r21
    2c5e:	02 96       	adiw	r24, 0x02	; 2
    2c60:	91 83       	std	Z+1, r25	; 0x01
    2c62:	80 83       	st	Z, r24
    2c64:	8a 81       	ldd	r24, Y+2	; 0x02
    2c66:	9b 81       	ldd	r25, Y+3	; 0x03
    2c68:	93 83       	std	Z+3, r25	; 0x03
    2c6a:	82 83       	std	Z+2, r24	; 0x02
    2c6c:	21 15       	cp	r18, r1
    2c6e:	31 05       	cpc	r19, r1
    2c70:	29 f4       	brne	.+10     	; 0x2c7c <free+0x92>
    2c72:	f0 93 3e 02 	sts	0x023E, r31	; 0x80023e <__flp+0x1>
    2c76:	e0 93 3d 02 	sts	0x023D, r30	; 0x80023d <__flp>
    2c7a:	3d c0       	rjmp	.+122    	; 0x2cf6 <free+0x10c>
    2c7c:	e9 01       	movw	r28, r18
    2c7e:	fb 83       	std	Y+3, r31	; 0x03
    2c80:	ea 83       	std	Y+2, r30	; 0x02
    2c82:	49 91       	ld	r20, Y+
    2c84:	59 91       	ld	r21, Y+
    2c86:	c4 0f       	add	r28, r20
    2c88:	d5 1f       	adc	r29, r21
    2c8a:	ec 17       	cp	r30, r28
    2c8c:	fd 07       	cpc	r31, r29
    2c8e:	61 f4       	brne	.+24     	; 0x2ca8 <free+0xbe>
    2c90:	80 81       	ld	r24, Z
    2c92:	91 81       	ldd	r25, Z+1	; 0x01
    2c94:	84 0f       	add	r24, r20
    2c96:	95 1f       	adc	r25, r21
    2c98:	02 96       	adiw	r24, 0x02	; 2
    2c9a:	e9 01       	movw	r28, r18
    2c9c:	99 83       	std	Y+1, r25	; 0x01
    2c9e:	88 83       	st	Y, r24
    2ca0:	82 81       	ldd	r24, Z+2	; 0x02
    2ca2:	93 81       	ldd	r25, Z+3	; 0x03
    2ca4:	9b 83       	std	Y+3, r25	; 0x03
    2ca6:	8a 83       	std	Y+2, r24	; 0x02
    2ca8:	e0 e0       	ldi	r30, 0x00	; 0
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	12 96       	adiw	r26, 0x02	; 2
    2cae:	8d 91       	ld	r24, X+
    2cb0:	9c 91       	ld	r25, X
    2cb2:	13 97       	sbiw	r26, 0x03	; 3
    2cb4:	00 97       	sbiw	r24, 0x00	; 0
    2cb6:	19 f0       	breq	.+6      	; 0x2cbe <free+0xd4>
    2cb8:	fd 01       	movw	r30, r26
    2cba:	dc 01       	movw	r26, r24
    2cbc:	f7 cf       	rjmp	.-18     	; 0x2cac <free+0xc2>
    2cbe:	8d 91       	ld	r24, X+
    2cc0:	9c 91       	ld	r25, X
    2cc2:	11 97       	sbiw	r26, 0x01	; 1
    2cc4:	9d 01       	movw	r18, r26
    2cc6:	2e 5f       	subi	r18, 0xFE	; 254
    2cc8:	3f 4f       	sbci	r19, 0xFF	; 255
    2cca:	82 0f       	add	r24, r18
    2ccc:	93 1f       	adc	r25, r19
    2cce:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    2cd2:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    2cd6:	28 17       	cp	r18, r24
    2cd8:	39 07       	cpc	r19, r25
    2cda:	69 f4       	brne	.+26     	; 0x2cf6 <free+0x10c>
    2cdc:	30 97       	sbiw	r30, 0x00	; 0
    2cde:	29 f4       	brne	.+10     	; 0x2cea <free+0x100>
    2ce0:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <__flp+0x1>
    2ce4:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <__flp>
    2ce8:	02 c0       	rjmp	.+4      	; 0x2cee <free+0x104>
    2cea:	13 82       	std	Z+3, r1	; 0x03
    2cec:	12 82       	std	Z+2, r1	; 0x02
    2cee:	b0 93 3c 02 	sts	0x023C, r27	; 0x80023c <__brkval+0x1>
    2cf2:	a0 93 3b 02 	sts	0x023B, r26	; 0x80023b <__brkval>
    2cf6:	df 91       	pop	r29
    2cf8:	cf 91       	pop	r28
    2cfa:	08 95       	ret

00002cfc <__do_global_dtors>:
    2cfc:	10 e0       	ldi	r17, 0x00	; 0
    2cfe:	c3 e4       	ldi	r28, 0x43	; 67
    2d00:	d0 e0       	ldi	r29, 0x00	; 0
    2d02:	04 c0       	rjmp	.+8      	; 0x2d0c <__do_global_dtors+0x10>
    2d04:	fe 01       	movw	r30, r28
    2d06:	0e 94 57 15 	call	0x2aae	; 0x2aae <__tablejump2__>
    2d0a:	21 96       	adiw	r28, 0x01	; 1
    2d0c:	c4 34       	cpi	r28, 0x44	; 68
    2d0e:	d1 07       	cpc	r29, r17
    2d10:	c9 f7       	brne	.-14     	; 0x2d04 <__do_global_dtors+0x8>
    2d12:	f8 94       	cli

00002d14 <__stop_program>:
    2d14:	ff cf       	rjmp	.-2      	; 0x2d14 <__stop_program>
