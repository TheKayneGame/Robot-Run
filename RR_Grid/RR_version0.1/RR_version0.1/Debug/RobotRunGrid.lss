
RobotRunGrid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00003a6e  00003b02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003a6e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000dd  00800162  00800162  00003b64  2**0
                  ALLOC
  3 .stab         00007464  00000000  00000000  00003b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  0000afc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0001504e  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00015090  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000128  00000000  00000000  000150d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000029bd  00000000  00000000  000151f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000d6f  00000000  00000000  00017bb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000019a6  00000000  00000000  00018924  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000400  00000000  00000000  0001a2cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000092f  00000000  00000000  0001a6cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000177f  00000000  00000000  0001affb  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 000000f0  00000000  00000000  0001c77a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
       8:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
       c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      10:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      14:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      18:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      1c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      20:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      24:	0c 94 63 15 	jmp	0x2ac6	; 0x2ac6 <__vector_9>
      28:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      2c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      30:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      34:	0c 94 c5 11 	jmp	0x238a	; 0x238a <__vector_13>
      38:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      3c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      40:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      44:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      48:	0c 94 db 14 	jmp	0x29b6	; 0x29b6 <__vector_18>
      4c:	0c 94 3e 15 	jmp	0x2a7c	; 0x2a7c <__vector_19>
      50:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      54:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      58:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      5c:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      60:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      64:	0c 94 81 00 	jmp	0x102	; 0x102 <__bad_interrupt>
      68:	e5 01       	movw	r28, r10
      6a:	e8 01       	movw	r28, r16
      6c:	fc 01       	movw	r30, r24
      6e:	10 02       	muls	r17, r16
      70:	24 02       	muls	r18, r20
      72:	37 02       	muls	r19, r23
      74:	4a 02       	muls	r20, r26
      76:	5e 02       	muls	r21, r30
      78:	78 02       	muls	r23, r24
      7a:	ad 02       	muls	r26, r29
      7c:	bc 02       	muls	r27, r28
      7e:	cb 02       	muls	r28, r27
      80:	ef 02       	muls	r30, r31
      82:	13 03       	mulsu	r17, r19
      84:	37 03       	mulsu	r19, r23
      86:	7a 03       	fmul	r23, r18
      88:	5e 03       	fmul	r21, r22
      8a:	05 a8       	ldd	r0, Z+53	; 0x35
      8c:	4c cd       	rjmp	.-1384   	; 0xfffffb26 <__eeprom_end+0xff7efb26>
      8e:	b2 d4       	rcall	.+2404   	; 0x9f4 <main+0x20>
      90:	4e b9       	out	0x0e, r20	; 14
      92:	38 36       	cpi	r19, 0x68	; 104
      94:	a9 02       	muls	r26, r25
      96:	0c 50       	subi	r16, 0x0C	; 12
      98:	b9 91       	ld	r27, Y+
      9a:	86 88       	ldd	r8, Z+22	; 0x16
      9c:	08 3c       	cpi	r16, 0xC8	; 200
      9e:	a6 aa       	std	Z+54, r10	; 0x36
      a0:	aa 2a       	or	r10, r26
      a2:	be 00       	.word	0x00be	; ????
      a4:	00 00       	nop
      a6:	80 3f       	cpi	r24, 0xF0	; 240

000000a8 <__trampolines_end>:
      a8:	3e 67       	ori	r19, 0x7E	; 126
      aa:	33 32       	cpi	r19, 0x23	; 35
      ac:	3e 3e       	cpi	r19, 0xEE	; 238
      ae:	63 33       	cpi	r22, 0x33	; 51
      b0:	32 00       	.word	0x0032	; ????

000000b2 <__c.2341>:
      b2:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

000000bc <__c.2166>:
      bc:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

000000c6 <__ctors_end>:
      c6:	3d 16       	cp	r3, r29

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	ee e6       	ldi	r30, 0x6E	; 110
      dc:	fa e3       	ldi	r31, 0x3A	; 58
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	a2 36       	cpi	r26, 0x62	; 98
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	22 e0       	ldi	r18, 0x02	; 2
      ec:	a2 e6       	ldi	r26, 0x62	; 98
      ee:	b1 e0       	ldi	r27, 0x01	; 1
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	af 33       	cpi	r26, 0x3F	; 63
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>
      fa:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <main>
      fe:	0c 94 2a 1d 	jmp	0x3a54	; 0x3a54 <__do_global_dtors>

00000102 <__bad_interrupt>:
     102:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000106 <swapOne>:
	temp = *secondYValue;                                                                               //swap Y-coordinates
	*secondYValue = *firstYValue;
	*firstYValue = temp;
}

void swapOne(float *firstValue, float *secondValue) {
     106:	cf 92       	push	r12
     108:	df 92       	push	r13
     10a:	ef 92       	push	r14
     10c:	ff 92       	push	r15
     10e:	0f 93       	push	r16
     110:	1f 93       	push	r17
	float temp;

	temp = *secondValue;
     112:	fb 01       	movw	r30, r22
     114:	00 81       	ld	r16, Z
     116:	11 81       	ldd	r17, Z+1	; 0x01
     118:	22 81       	ldd	r18, Z+2	; 0x02
     11a:	33 81       	ldd	r19, Z+3	; 0x03
	*secondValue = *firstValue;
     11c:	fc 01       	movw	r30, r24
     11e:	c0 80       	ld	r12, Z
     120:	d1 80       	ldd	r13, Z+1	; 0x01
     122:	e2 80       	ldd	r14, Z+2	; 0x02
     124:	f3 80       	ldd	r15, Z+3	; 0x03
     126:	fb 01       	movw	r30, r22
     128:	c0 82       	st	Z, r12
     12a:	d1 82       	std	Z+1, r13	; 0x01
     12c:	e2 82       	std	Z+2, r14	; 0x02
     12e:	f3 82       	std	Z+3, r15	; 0x03
	*firstValue = temp;
     130:	fc 01       	movw	r30, r24
     132:	00 83       	st	Z, r16
     134:	11 83       	std	Z+1, r17	; 0x01
     136:	22 83       	std	Z+2, r18	; 0x02
     138:	33 83       	std	Z+3, r19	; 0x03
}
     13a:	1f 91       	pop	r17
     13c:	0f 91       	pop	r16
     13e:	ff 90       	pop	r15
     140:	ef 90       	pop	r14
     142:	df 90       	pop	r13
     144:	cf 90       	pop	r12
     146:	08 95       	ret

00000148 <sortOrder>:

void sortOrder(int X[], int Y[]) {
     148:	2f 92       	push	r2
     14a:	3f 92       	push	r3
     14c:	4f 92       	push	r4
     14e:	5f 92       	push	r5
     150:	6f 92       	push	r6
     152:	7f 92       	push	r7
     154:	8f 92       	push	r8
     156:	9f 92       	push	r9
     158:	af 92       	push	r10
     15a:	bf 92       	push	r11
     15c:	cf 92       	push	r12
     15e:	df 92       	push	r13
     160:	ef 92       	push	r14
     162:	ff 92       	push	r15
     164:	0f 93       	push	r16
     166:	1f 93       	push	r17
     168:	cf 93       	push	r28
     16a:	df 93       	push	r29
     16c:	cd b7       	in	r28, 0x3d	; 61
     16e:	de b7       	in	r29, 0x3e	; 62
     170:	a5 97       	sbiw	r28, 0x25	; 37
     172:	0f b6       	in	r0, 0x3f	; 63
     174:	f8 94       	cli
     176:	de bf       	out	0x3e, r29	; 62
     178:	0f be       	out	0x3f, r0	; 63
     17a:	cd bf       	out	0x3d, r28	; 61
     17c:	9b a3       	std	Y+35, r25	; 0x23
     17e:	8a a3       	std	Y+34, r24	; 0x22
     180:	6c a3       	std	Y+36, r22	; 0x24
     182:	7d a3       	std	Y+37, r23	; 0x25
     184:	06 96       	adiw	r24, 0x06	; 6
     186:	98 a3       	std	Y+32, r25	; 0x20
     188:	8f 8f       	std	Y+31, r24	; 0x1f
     18a:	b6 c0       	rjmp	.+364    	; 0x2f8 <sortOrder+0x1b0>
     18c:	7e 8e       	std	Y+30, r7	; 0x1e
     18e:	6d 8e       	std	Y+29, r6	; 0x1d

	while (check != 1) {
		orderCorrect = 1;

		for (int i = 0; i < (sizeOfOrder - 1); i++) {
			Distance[i] = sqrt((pow(X[i], 2)) + (pow(Y[i], 2)));      //Pythagoras
     190:	f3 01       	movw	r30, r6
     192:	01 90       	ld	r0, Z+
     194:	f0 81       	ld	r31, Z
     196:	e0 2d       	mov	r30, r0
     198:	fa 8f       	std	Y+26, r31	; 0x1a
     19a:	e9 8f       	std	Y+25, r30	; 0x19
     19c:	bf 01       	movw	r22, r30
     19e:	ff 0f       	add	r31, r31
     1a0:	88 0b       	sbc	r24, r24
     1a2:	99 0b       	sbc	r25, r25
     1a4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     1a8:	6b 01       	movw	r12, r22
     1aa:	7c 01       	movw	r14, r24
     1ac:	3c 8e       	std	Y+28, r3	; 0x1c
     1ae:	2b 8e       	std	Y+27, r2	; 0x1b
     1b0:	f1 01       	movw	r30, r2
     1b2:	00 81       	ld	r16, Z
     1b4:	11 81       	ldd	r17, Z+1	; 0x01
     1b6:	b8 01       	movw	r22, r16
     1b8:	01 2e       	mov	r0, r17
     1ba:	00 0c       	add	r0, r0
     1bc:	88 0b       	sbc	r24, r24
     1be:	99 0b       	sbc	r25, r25
     1c0:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     1c4:	4b 01       	movw	r8, r22
     1c6:	5c 01       	movw	r10, r24
     1c8:	9b 01       	movw	r18, r22
     1ca:	ac 01       	movw	r20, r24
     1cc:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     1d0:	69 8b       	std	Y+17, r22	; 0x11
     1d2:	7a 8b       	std	Y+18, r23	; 0x12
     1d4:	8b 8b       	std	Y+19, r24	; 0x13
     1d6:	9c 8b       	std	Y+20, r25	; 0x14
     1d8:	a5 01       	movw	r20, r10
     1da:	94 01       	movw	r18, r8
     1dc:	c5 01       	movw	r24, r10
     1de:	b4 01       	movw	r22, r8
     1e0:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     1e4:	4b 01       	movw	r8, r22
     1e6:	5c 01       	movw	r10, r24
     1e8:	a7 01       	movw	r20, r14
     1ea:	96 01       	movw	r18, r12
     1ec:	c7 01       	movw	r24, r14
     1ee:	b6 01       	movw	r22, r12
     1f0:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     1f4:	9b 01       	movw	r18, r22
     1f6:	ac 01       	movw	r20, r24
     1f8:	c5 01       	movw	r24, r10
     1fa:	b4 01       	movw	r22, r8
     1fc:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     200:	0e 94 6b 0d 	call	0x1ad6	; 0x1ad6 <sqrt>
     204:	6b 01       	movw	r12, r22
     206:	7c 01       	movw	r14, r24
     208:	f2 01       	movw	r30, r4
     20a:	61 93       	st	Z+, r22
     20c:	71 93       	st	Z+, r23
     20e:	81 93       	st	Z+, r24
     210:	91 93       	st	Z+, r25
     212:	2f 01       	movw	r4, r30
     214:	e9 8b       	std	Y+17, r30	; 0x11
     216:	59 a2       	std	Y+33, r5	; 0x21
			firstDistanceValue =  Distance[i];
			secondDistanceValue =  Distance[i + 1];
     218:	80 80       	ld	r8, Z
     21a:	91 80       	ldd	r9, Z+1	; 0x01
     21c:	a2 80       	ldd	r10, Z+2	; 0x02
     21e:	b3 80       	ldd	r11, Z+3	; 0x03

			if ( Distance[i] >  Distance[i + 1]) {
     220:	a5 01       	movw	r20, r10
     222:	94 01       	movw	r18, r8
     224:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <__gesf2>
     228:	18 16       	cp	r1, r24
     22a:	d4 f4       	brge	.+52     	; 0x260 <sortOrder+0x118>
				swapOne(& Distance[i], & Distance[i + 1]);
     22c:	b2 01       	movw	r22, r4
     22e:	8d 89       	ldd	r24, Y+21	; 0x15
     230:	9e 89       	ldd	r25, Y+22	; 0x16
     232:	0e 94 83 00 	call	0x106	; 0x106 <swapOne>


void swapTwo( int *firstXValue, int *secondXValue, int *firstYValue, int *secondYValue){
	int temp;

	temp = *secondXValue;                                                                               //swap X-coordinates
     236:	f3 01       	movw	r30, r6
     238:	82 81       	ldd	r24, Z+2	; 0x02
     23a:	93 81       	ldd	r25, Z+3	; 0x03
	*secondXValue = *firstXValue;
     23c:	20 81       	ld	r18, Z
     23e:	31 81       	ldd	r19, Z+1	; 0x01
     240:	33 83       	std	Z+3, r19	; 0x03
     242:	22 83       	std	Z+2, r18	; 0x02
	*firstXValue = temp;
     244:	91 83       	std	Z+1, r25	; 0x01
     246:	80 83       	st	Z, r24

	temp = *secondYValue;                                                                               //swap Y-coordinates
     248:	f1 01       	movw	r30, r2
     24a:	82 81       	ldd	r24, Z+2	; 0x02
     24c:	93 81       	ldd	r25, Z+3	; 0x03
	*secondYValue = *firstYValue;
     24e:	20 81       	ld	r18, Z
     250:	31 81       	ldd	r19, Z+1	; 0x01
     252:	33 83       	std	Z+3, r19	; 0x03
     254:	22 83       	std	Z+2, r18	; 0x02
	*firstYValue = temp;
     256:	91 83       	std	Z+1, r25	; 0x01
     258:	80 83       	st	Z, r24
			secondDistanceValue =  Distance[i + 1];

			if ( Distance[i] >  Distance[i + 1]) {
				swapOne(& Distance[i], & Distance[i + 1]);
				swapTwo(&X[i], &X[i + 1], &Y[i], &Y[i + 1]);
				orderCorrect = 0;
     25a:	1f 8a       	std	Y+23, r1	; 0x17
     25c:	18 8e       	std	Y+24, r1	; 0x18
     25e:	36 c0       	rjmp	.+108    	; 0x2cc <sortOrder+0x184>
				} else if ((firstDistanceValue == secondDistanceValue) && (Y[i] == Y[i + 1])) {
     260:	c7 01       	movw	r24, r14
     262:	b6 01       	movw	r22, r12
     264:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     268:	7b 01       	movw	r14, r22
     26a:	c5 01       	movw	r24, r10
     26c:	b4 01       	movw	r22, r8
     26e:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     272:	e6 16       	cp	r14, r22
     274:	f7 06       	cpc	r15, r23
     276:	51 f5       	brne	.+84     	; 0x2cc <sortOrder+0x184>
     278:	eb 8d       	ldd	r30, Y+27	; 0x1b
     27a:	fc 8d       	ldd	r31, Y+28	; 0x1c
     27c:	82 81       	ldd	r24, Z+2	; 0x02
     27e:	93 81       	ldd	r25, Z+3	; 0x03
     280:	08 17       	cp	r16, r24
     282:	19 07       	cpc	r17, r25
     284:	19 f5       	brne	.+70     	; 0x2cc <sortOrder+0x184>
				if (X[i] < X[i + 1]) {
     286:	ed 8d       	ldd	r30, Y+29	; 0x1d
     288:	fe 8d       	ldd	r31, Y+30	; 0x1e
     28a:	82 81       	ldd	r24, Z+2	; 0x02
     28c:	93 81       	ldd	r25, Z+3	; 0x03
     28e:	29 8d       	ldd	r18, Y+25	; 0x19
     290:	3a 8d       	ldd	r19, Y+26	; 0x1a
     292:	28 17       	cp	r18, r24
     294:	39 07       	cpc	r19, r25
     296:	d4 f4       	brge	.+52     	; 0x2cc <sortOrder+0x184>
					swapOne(& Distance[i], & Distance[i + 1]);
     298:	69 89       	ldd	r22, Y+17	; 0x11
     29a:	79 a1       	ldd	r23, Y+33	; 0x21
     29c:	8d 89       	ldd	r24, Y+21	; 0x15
     29e:	9e 89       	ldd	r25, Y+22	; 0x16
     2a0:	0e 94 83 00 	call	0x106	; 0x106 <swapOne>


void swapTwo( int *firstXValue, int *secondXValue, int *firstYValue, int *secondYValue){
	int temp;

	temp = *secondXValue;                                                                               //swap X-coordinates
     2a4:	ed 8d       	ldd	r30, Y+29	; 0x1d
     2a6:	fe 8d       	ldd	r31, Y+30	; 0x1e
     2a8:	82 81       	ldd	r24, Z+2	; 0x02
     2aa:	93 81       	ldd	r25, Z+3	; 0x03
	*secondXValue = *firstXValue;
     2ac:	20 81       	ld	r18, Z
     2ae:	31 81       	ldd	r19, Z+1	; 0x01
     2b0:	33 83       	std	Z+3, r19	; 0x03
     2b2:	22 83       	std	Z+2, r18	; 0x02
	*firstXValue = temp;
     2b4:	91 83       	std	Z+1, r25	; 0x01
     2b6:	80 83       	st	Z, r24

	temp = *secondYValue;                                                                               //swap Y-coordinates
     2b8:	eb 8d       	ldd	r30, Y+27	; 0x1b
     2ba:	fc 8d       	ldd	r31, Y+28	; 0x1c
     2bc:	82 81       	ldd	r24, Z+2	; 0x02
     2be:	93 81       	ldd	r25, Z+3	; 0x03
	*secondYValue = *firstYValue;
     2c0:	20 81       	ld	r18, Z
     2c2:	31 81       	ldd	r19, Z+1	; 0x01
     2c4:	33 83       	std	Z+3, r19	; 0x03
     2c6:	22 83       	std	Z+2, r18	; 0x02
	*firstYValue = temp;
     2c8:	91 83       	std	Z+1, r25	; 0x01
     2ca:	80 83       	st	Z, r24
     2cc:	f2 e0       	ldi	r31, 0x02	; 2
     2ce:	6f 0e       	add	r6, r31
     2d0:	71 1c       	adc	r7, r1
     2d2:	22 e0       	ldi	r18, 0x02	; 2
     2d4:	22 0e       	add	r2, r18
     2d6:	31 1c       	adc	r3, r1
     2d8:	8d 89       	ldd	r24, Y+21	; 0x15
     2da:	9e 89       	ldd	r25, Y+22	; 0x16
     2dc:	04 96       	adiw	r24, 0x04	; 4
     2de:	9e 8b       	std	Y+22, r25	; 0x16
     2e0:	8d 8b       	std	Y+21, r24	; 0x15
	float Distance[sizeOfOrder];

	while (check != 1) {
		orderCorrect = 1;

		for (int i = 0; i < (sizeOfOrder - 1); i++) {
     2e2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     2e4:	f8 a1       	ldd	r31, Y+32	; 0x20
     2e6:	6e 16       	cp	r6, r30
     2e8:	7f 06       	cpc	r7, r31
     2ea:	09 f0       	breq	.+2      	; 0x2ee <sortOrder+0x1a6>
     2ec:	4f cf       	rjmp	.-354    	; 0x18c <sortOrder+0x44>
					swapOne(& Distance[i], & Distance[i + 1]);
					swapTwo(&X[i], &X[i + 1], &Y[i], &Y[i + 1]);
				}
			}
		}
		if (orderCorrect == 1) {
     2ee:	2f 89       	ldd	r18, Y+23	; 0x17
     2f0:	38 8d       	ldd	r19, Y+24	; 0x18
     2f2:	21 30       	cpi	r18, 0x01	; 1
     2f4:	31 05       	cpc	r19, r1
     2f6:	69 f0       	breq	.+26     	; 0x312 <sortOrder+0x1ca>
     2f8:	6a a0       	ldd	r6, Y+34	; 0x22
     2fa:	7b a0       	ldd	r7, Y+35	; 0x23
     2fc:	2c a0       	ldd	r2, Y+36	; 0x24
     2fe:	3d a0       	ldd	r3, Y+37	; 0x25
     300:	ce 01       	movw	r24, r28
     302:	01 96       	adiw	r24, 0x01	; 1
     304:	2c 01       	movw	r4, r24
	temp = *secondValue;
	*secondValue = *firstValue;
	*firstValue = temp;
}

void sortOrder(int X[], int Y[]) {
     306:	9e 8b       	std	Y+22, r25	; 0x16
     308:	8d 8b       	std	Y+21, r24	; 0x15
     30a:	91 e0       	ldi	r25, 0x01	; 1
     30c:	9f 8b       	std	Y+23, r25	; 0x17
     30e:	18 8e       	std	Y+24, r1	; 0x18
     310:	3d cf       	rjmp	.-390    	; 0x18c <sortOrder+0x44>
		}
		if (orderCorrect == 1) {
			check = 1;
		}
	}
}
     312:	a5 96       	adiw	r28, 0x25	; 37
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	f8 94       	cli
     318:	de bf       	out	0x3e, r29	; 62
     31a:	0f be       	out	0x3f, r0	; 63
     31c:	cd bf       	out	0x3d, r28	; 61
     31e:	df 91       	pop	r29
     320:	cf 91       	pop	r28
     322:	1f 91       	pop	r17
     324:	0f 91       	pop	r16
     326:	ff 90       	pop	r15
     328:	ef 90       	pop	r14
     32a:	df 90       	pop	r13
     32c:	cf 90       	pop	r12
     32e:	bf 90       	pop	r11
     330:	af 90       	pop	r10
     332:	9f 90       	pop	r9
     334:	8f 90       	pop	r8
     336:	7f 90       	pop	r7
     338:	6f 90       	pop	r6
     33a:	5f 90       	pop	r5
     33c:	4f 90       	pop	r4
     33e:	3f 90       	pop	r3
     340:	2f 90       	pop	r2
     342:	08 95       	ret

00000344 <readGrid>:
	}
	driveRoute(route, 1, 1, amountOfIntersects);    //Drive back to home
	play_from_program_space(PSTR(">g32>>c32"));
}

int readGrid(int routes[4][20]){
     344:	2f 92       	push	r2
     346:	3f 92       	push	r3
     348:	4f 92       	push	r4
     34a:	5f 92       	push	r5
     34c:	6f 92       	push	r6
     34e:	7f 92       	push	r7
     350:	8f 92       	push	r8
     352:	9f 92       	push	r9
     354:	af 92       	push	r10
     356:	bf 92       	push	r11
     358:	cf 92       	push	r12
     35a:	df 92       	push	r13
     35c:	ef 92       	push	r14
     35e:	ff 92       	push	r15
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	8c 01       	movw	r16, r24
	int i = 1, grid = 0, numOfIntersects, crossing = 0, routeNum = 1;
	int resultTemp;
	routes[1][0] = 5;                    //Marks beginning of route
     36a:	85 e0       	ldi	r24, 0x05	; 5
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	f8 01       	movw	r30, r16
     370:	91 a7       	std	Z+41, r25	; 0x29
     372:	80 a7       	std	Z+40, r24	; 0x28
	driveRoute(route, 1, 1, amountOfIntersects);    //Drive back to home
	play_from_program_space(PSTR(">g32>>c32"));
}

int readGrid(int routes[4][20]){
	int i = 1, grid = 0, numOfIntersects, crossing = 0, routeNum = 1;
     374:	c1 e0       	ldi	r28, 0x01	; 1
     376:	d0 e0       	ldi	r29, 0x00	; 0
			followLine();
			i++;
			routes[0][i] = 6;
			break;
			case 7:              //Dead end
			routes[0][i] = 7;
     378:	0f 2e       	mov	r0, r31
     37a:	f7 e0       	ldi	r31, 0x07	; 7
     37c:	8f 2e       	mov	r8, r31
     37e:	91 2c       	mov	r9, r1
     380:	f0 2d       	mov	r31, r0
			break;
			case 6:               //It is a crossing
			motorControl(60, 'L', 0.30);
			followLine();
			i++;
			routes[0][i] = 6;
     382:	0f 2e       	mov	r0, r31
     384:	f6 e0       	ldi	r31, 0x06	; 6
     386:	af 2e       	mov	r10, r31
     388:	b1 2c       	mov	r11, r1
     38a:	f0 2d       	mov	r31, r0
			routes[0][i] = 4;
			motorControl(80, 'F', 0.89);
			followLine();
			break;
			case 5:                //L
			routes[0][i] = 5;
     38c:	0f 2e       	mov	r0, r31
     38e:	f5 e0       	ldi	r31, 0x05	; 5
     390:	cf 2e       	mov	r12, r31
     392:	d1 2c       	mov	r13, r1
     394:	f0 2d       	mov	r31, r0
			followLine();
			routes[0][i] = 3;
			i++;
			break;
			case 4:                 //R
			routes[0][i] = 4;
     396:	68 94       	set
     398:	ee 24       	eor	r14, r14
     39a:	e2 f8       	bld	r14, 2
     39c:	f1 2c       	mov	r15, r1
			i++;
			break;
			case 3:                  //It is a T-crossing    L R
			motorControl(60, 'L', 0.30);
			followLine();
			routes[0][i] = 3;
     39e:	0f 2e       	mov	r0, r31
     3a0:	f3 e0       	ldi	r31, 0x03	; 3
     3a2:	6f 2e       	mov	r6, r31
     3a4:	71 2c       	mov	r7, r1
     3a6:	f0 2d       	mov	r31, r0
			motorControl(60, 'R', 0.30);
			followLine();
			i++;
			break;
			case 2:                   //It is a corner to the left
			routes[0][i] = 2;
     3a8:	68 94       	set
     3aa:	44 24       	eor	r4, r4
     3ac:	41 f8       	bld	r4, 1
     3ae:	51 2c       	mov	r5, r1
		switch(resultTemp){
			case 0:
			followLine();
			break;
			case 1:                     //It is a corner to the right
			routes[0][i] = 1;
     3b0:	22 24       	eor	r2, r2
     3b2:	23 94       	inc	r2
     3b4:	31 2c       	mov	r3, r1
int readGrid(int routes[4][20]){
	int i = 1, grid = 0, numOfIntersects, crossing = 0, routeNum = 1;
	int resultTemp;
	routes[1][0] = 5;                    //Marks beginning of route
	do{
		resultTemp = checkAfslag();
     3b6:	0e 94 55 0a 	call	0x14aa	; 0x14aa <checkAfslag>
		switch(resultTemp){
     3ba:	89 30       	cpi	r24, 0x09	; 9
     3bc:	91 05       	cpc	r25, r1
     3be:	d8 f7       	brcc	.-10     	; 0x3b6 <readGrid+0x72>
     3c0:	fc 01       	movw	r30, r24
     3c2:	ec 5c       	subi	r30, 0xCC	; 204
     3c4:	ff 4f       	sbci	r31, 0xFF	; 255
     3c6:	0c 94 aa 1b 	jmp	0x3754	; 0x3754 <__tablejump2__>
			case 0:
			followLine();
     3ca:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			break;
     3ce:	f3 cf       	rjmp	.-26     	; 0x3b6 <readGrid+0x72>
			case 1:                     //It is a corner to the right
			routes[0][i] = 1;
     3d0:	fe 01       	movw	r30, r28
     3d2:	ee 0f       	add	r30, r30
     3d4:	ff 1f       	adc	r31, r31
     3d6:	e0 0f       	add	r30, r16
     3d8:	f1 1f       	adc	r31, r17
     3da:	31 82       	std	Z+1, r3	; 0x01
     3dc:	20 82       	st	Z, r2
			motorControl(60, 'R', 0.30);
     3de:	2a e9       	ldi	r18, 0x9A	; 154
     3e0:	39 e9       	ldi	r19, 0x99	; 153
     3e2:	49 e9       	ldi	r20, 0x99	; 153
     3e4:	5e e3       	ldi	r21, 0x3E	; 62
     3e6:	62 e5       	ldi	r22, 0x52	; 82
     3e8:	8c e3       	ldi	r24, 0x3C	; 60
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     3f0:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			i++;
     3f4:	21 96       	adiw	r28, 0x01	; 1
			break;
     3f6:	df cf       	rjmp	.-66     	; 0x3b6 <readGrid+0x72>
			case 2:                   //It is a corner to the left
			routes[0][i] = 2;
     3f8:	fe 01       	movw	r30, r28
     3fa:	ee 0f       	add	r30, r30
     3fc:	ff 1f       	adc	r31, r31
     3fe:	e0 0f       	add	r30, r16
     400:	f1 1f       	adc	r31, r17
     402:	51 82       	std	Z+1, r5	; 0x01
     404:	40 82       	st	Z, r4
			motorControl(60, 'L', 0.30);
     406:	2a e9       	ldi	r18, 0x9A	; 154
     408:	39 e9       	ldi	r19, 0x99	; 153
     40a:	49 e9       	ldi	r20, 0x99	; 153
     40c:	5e e3       	ldi	r21, 0x3E	; 62
     40e:	6c e4       	ldi	r22, 0x4C	; 76
     410:	8c e3       	ldi	r24, 0x3C	; 60
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     418:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			i++;
     41c:	21 96       	adiw	r28, 0x01	; 1
			break;
     41e:	cb cf       	rjmp	.-106    	; 0x3b6 <readGrid+0x72>
			case 3:                  //It is a T-crossing    L R
			motorControl(60, 'L', 0.30);
     420:	2a e9       	ldi	r18, 0x9A	; 154
     422:	39 e9       	ldi	r19, 0x99	; 153
     424:	49 e9       	ldi	r20, 0x99	; 153
     426:	5e e3       	ldi	r21, 0x3E	; 62
     428:	6c e4       	ldi	r22, 0x4C	; 76
     42a:	8c e3       	ldi	r24, 0x3C	; 60
     42c:	90 e0       	ldi	r25, 0x00	; 0
     42e:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     432:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			routes[0][i] = 3;
     436:	fe 01       	movw	r30, r28
     438:	ee 0f       	add	r30, r30
     43a:	ff 1f       	adc	r31, r31
     43c:	e0 0f       	add	r30, r16
     43e:	f1 1f       	adc	r31, r17
     440:	71 82       	std	Z+1, r7	; 0x01
     442:	60 82       	st	Z, r6
			i++;
     444:	21 96       	adiw	r28, 0x01	; 1
			break;
     446:	b7 cf       	rjmp	.-146    	; 0x3b6 <readGrid+0x72>
			case 4:                 //R
			routes[0][i] = 4;
     448:	fe 01       	movw	r30, r28
     44a:	ee 0f       	add	r30, r30
     44c:	ff 1f       	adc	r31, r31
     44e:	e0 0f       	add	r30, r16
     450:	f1 1f       	adc	r31, r17
     452:	f1 82       	std	Z+1, r15	; 0x01
     454:	e0 82       	st	Z, r14
			motorControl(80, 'F', 0.89);
     456:	2a e0       	ldi	r18, 0x0A	; 10
     458:	37 ed       	ldi	r19, 0xD7	; 215
     45a:	43 e6       	ldi	r20, 0x63	; 99
     45c:	5f e3       	ldi	r21, 0x3F	; 63
     45e:	66 e4       	ldi	r22, 0x46	; 70
     460:	80 e5       	ldi	r24, 0x50	; 80
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     468:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			break;
     46c:	a4 cf       	rjmp	.-184    	; 0x3b6 <readGrid+0x72>
			case 5:                //L
			routes[0][i] = 5;
     46e:	fe 01       	movw	r30, r28
     470:	ee 0f       	add	r30, r30
     472:	ff 1f       	adc	r31, r31
     474:	e0 0f       	add	r30, r16
     476:	f1 1f       	adc	r31, r17
     478:	d1 82       	std	Z+1, r13	; 0x01
     47a:	c0 82       	st	Z, r12
			motorControl(80, 'F', 0.89);
     47c:	2a e0       	ldi	r18, 0x0A	; 10
     47e:	37 ed       	ldi	r19, 0xD7	; 215
     480:	43 e6       	ldi	r20, 0x63	; 99
     482:	5f e3       	ldi	r21, 0x3F	; 63
     484:	66 e4       	ldi	r22, 0x46	; 70
     486:	80 e5       	ldi	r24, 0x50	; 80
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     48e:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			break;
     492:	91 cf       	rjmp	.-222    	; 0x3b6 <readGrid+0x72>
			case 6:               //It is a crossing
			motorControl(60, 'L', 0.30);
     494:	2a e9       	ldi	r18, 0x9A	; 154
     496:	39 e9       	ldi	r19, 0x99	; 153
     498:	49 e9       	ldi	r20, 0x99	; 153
     49a:	5e e3       	ldi	r21, 0x3E	; 62
     49c:	6c e4       	ldi	r22, 0x4C	; 76
     49e:	8c e3       	ldi	r24, 0x3C	; 60
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			followLine();
     4a6:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
			i++;
     4aa:	21 96       	adiw	r28, 0x01	; 1
			routes[0][i] = 6;
     4ac:	fe 01       	movw	r30, r28
     4ae:	ee 0f       	add	r30, r30
     4b0:	ff 1f       	adc	r31, r31
     4b2:	e0 0f       	add	r30, r16
     4b4:	f1 1f       	adc	r31, r17
     4b6:	b1 82       	std	Z+1, r11	; 0x01
     4b8:	a0 82       	st	Z, r10
			break;
     4ba:	7d cf       	rjmp	.-262    	; 0x3b6 <readGrid+0x72>
			case 7:              //Dead end
			routes[0][i] = 7;
     4bc:	fe 01       	movw	r30, r28
     4be:	ee 0f       	add	r30, r30
     4c0:	ff 1f       	adc	r31, r31
     4c2:	e0 0f       	add	r30, r16
     4c4:	f1 1f       	adc	r31, r17
     4c6:	91 82       	std	Z+1, r9	; 0x01
     4c8:	80 82       	st	Z, r8
			motorControl(60, 'R', 0.30);
     4ca:	2a e9       	ldi	r18, 0x9A	; 154
     4cc:	39 e9       	ldi	r19, 0x99	; 153
     4ce:	49 e9       	ldi	r20, 0x99	; 153
     4d0:	5e e3       	ldi	r21, 0x3E	; 62
     4d2:	62 e5       	ldi	r22, 0x52	; 82
     4d4:	8c e3       	ldi	r24, 0x3C	; 60
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			motorControl(0, 'R', 0.30);
     4dc:	2a e9       	ldi	r18, 0x9A	; 154
     4de:	39 e9       	ldi	r19, 0x99	; 153
     4e0:	49 e9       	ldi	r20, 0x99	; 153
     4e2:	5e e3       	ldi	r21, 0x3E	; 62
     4e4:	62 e5       	ldi	r22, 0x52	; 82
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
			break;
     4ee:	63 cf       	rjmp	.-314    	; 0x3b6 <readGrid+0x72>
			case 8:
			grid = 1;
			routes[0][i] = 8; //Marks end of route
     4f0:	fe 01       	movw	r30, r28
     4f2:	ee 0f       	add	r30, r30
     4f4:	ff 1f       	adc	r31, r31
     4f6:	e0 0f       	add	r30, r16
     4f8:	f1 1f       	adc	r31, r17
     4fa:	88 e0       	ldi	r24, 0x08	; 8
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	91 83       	std	Z+1, r25	; 0x01
     500:	80 83       	st	Z, r24
		}
	}while(grid == 0);
	numOfIntersects = i;
	
	for(i = 0; i < numOfIntersects; i++){   //Writing route towards X
     502:	1c 16       	cp	r1, r28
     504:	1d 06       	cpc	r1, r29
     506:	0c f0       	brlt	.+2      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
     508:	fa c0       	rjmp	.+500    	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
     50a:	d8 01       	movw	r26, r16
     50c:	21 e0       	ldi	r18, 0x01	; 1
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	e1 2c       	mov	r14, r1
     512:	f1 2c       	mov	r15, r1
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	90 e0       	ldi	r25, 0x00	; 0
				crossing = 0;
				routes[1][i - 1] = 3;
			}
			break;
			case 8:                                                     //case 7 isn't part of a route
			routes[routeNum][i] = 8;                                    //Marks end of route
     518:	48 e2       	ldi	r20, 0x28	; 40
     51a:	68 94       	set
     51c:	88 24       	eor	r8, r8
     51e:	83 f8       	bld	r8, 3
     520:	91 2c       	mov	r9, r1
				routes[routeNum][i] = 2;
			}
			break;
			case 6:
			crossing++;
			routes[routeNum][i] = 6;
     522:	0f 2e       	mov	r0, r31
     524:	f6 e0       	ldi	r31, 0x06	; 6
     526:	6f 2e       	mov	r6, r31
     528:	71 2c       	mov	r7, r1
     52a:	f0 2d       	mov	r31, r0
			if((crossing == 2) && (routes[routeNum][i - 1] == 6)){
				crossing = 0;
				routes[1][i - 1] = 3;
     52c:	0f 2e       	mov	r0, r31
     52e:	f3 e0       	ldi	r31, 0x03	; 3
     530:	4f 2e       	mov	r4, r31
     532:	51 2c       	mov	r5, r1
     534:	f0 2d       	mov	r31, r0
			case 5:
			if(routes[0][i + 1] == 7){
				routes[routeNum][i] = 1;
			}
			else if(routes[0][i] != 7){
				routes[routeNum][i] = 2;
     536:	68 94       	set
     538:	cc 24       	eor	r12, r12
     53a:	c1 f8       	bld	r12, 1
     53c:	d1 2c       	mov	r13, r1
				routes[routeNum][i] = 3;
			}
			break;
			case 5:
			if(routes[0][i + 1] == 7){
				routes[routeNum][i] = 1;
     53e:	aa 24       	eor	r10, r10
     540:	a3 94       	inc	r10
     542:	b1 2c       	mov	r11, r1
		}
	}while(grid == 0);
	numOfIntersects = i;
	
	for(i = 0; i < numOfIntersects; i++){   //Writing route towards X
		switch(routes[0][i]){
     544:	ed 91       	ld	r30, X+
     546:	fd 91       	ld	r31, X+
     548:	31 97       	sbiw	r30, 0x01	; 1
     54a:	e8 30       	cpi	r30, 0x08	; 8
     54c:	f1 05       	cpc	r31, r1
     54e:	08 f0       	brcs	.+2      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
     550:	d1 c0       	rjmp	.+418    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
     552:	e3 5c       	subi	r30, 0xC3	; 195
     554:	ff 4f       	sbci	r31, 0xFF	; 255
     556:	0c 94 aa 1b 	jmp	0x3754	; 0x3754 <__tablejump2__>
			case 1:
			routes[routeNum][i] = 1;
     55a:	42 9f       	mul	r20, r18
     55c:	f0 01       	movw	r30, r0
     55e:	43 9f       	mul	r20, r19
     560:	f0 0d       	add	r31, r0
     562:	11 24       	eor	r1, r1
     564:	e0 0f       	add	r30, r16
     566:	f1 1f       	adc	r31, r17
     568:	bc 01       	movw	r22, r24
     56a:	66 0f       	add	r22, r22
     56c:	77 1f       	adc	r23, r23
     56e:	e6 0f       	add	r30, r22
     570:	f7 1f       	adc	r31, r23
     572:	b1 82       	std	Z+1, r11	; 0x01
     574:	a0 82       	st	Z, r10
			break;
     576:	be c0       	rjmp	.+380    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			case 2:
			routes[routeNum][i] = 2;
     578:	42 9f       	mul	r20, r18
     57a:	f0 01       	movw	r30, r0
     57c:	43 9f       	mul	r20, r19
     57e:	f0 0d       	add	r31, r0
     580:	11 24       	eor	r1, r1
     582:	e0 0f       	add	r30, r16
     584:	f1 1f       	adc	r31, r17
     586:	bc 01       	movw	r22, r24
     588:	66 0f       	add	r22, r22
     58a:	77 1f       	adc	r23, r23
     58c:	e6 0f       	add	r30, r22
     58e:	f7 1f       	adc	r31, r23
     590:	d1 82       	std	Z+1, r13	; 0x01
     592:	c0 82       	st	Z, r12
			break;
     594:	af c0       	rjmp	.+350    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			case 3:
			if(routes[0][i + 1] == 7){
     596:	6d 91       	ld	r22, X+
     598:	7c 91       	ld	r23, X
     59a:	11 97       	sbiw	r26, 0x01	; 1
     59c:	67 30       	cpi	r22, 0x07	; 7
     59e:	71 05       	cpc	r23, r1
     5a0:	79 f4       	brne	.+30     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
				routes[routeNum][i] = 1;
     5a2:	42 9f       	mul	r20, r18
     5a4:	f0 01       	movw	r30, r0
     5a6:	43 9f       	mul	r20, r19
     5a8:	f0 0d       	add	r31, r0
     5aa:	11 24       	eor	r1, r1
     5ac:	e0 0f       	add	r30, r16
     5ae:	f1 1f       	adc	r31, r17
     5b0:	bc 01       	movw	r22, r24
     5b2:	66 0f       	add	r22, r22
     5b4:	77 1f       	adc	r23, r23
     5b6:	e6 0f       	add	r30, r22
     5b8:	f7 1f       	adc	r31, r23
     5ba:	b1 82       	std	Z+1, r11	; 0x01
     5bc:	a0 82       	st	Z, r10
     5be:	9a c0       	rjmp	.+308    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			else if(routes[0][i + 1] != 7){
				routes[routeNum][i] = 2;
     5c0:	42 9f       	mul	r20, r18
     5c2:	f0 01       	movw	r30, r0
     5c4:	43 9f       	mul	r20, r19
     5c6:	f0 0d       	add	r31, r0
     5c8:	11 24       	eor	r1, r1
     5ca:	e0 0f       	add	r30, r16
     5cc:	f1 1f       	adc	r31, r17
     5ce:	bc 01       	movw	r22, r24
     5d0:	66 0f       	add	r22, r22
     5d2:	77 1f       	adc	r23, r23
     5d4:	e6 0f       	add	r30, r22
     5d6:	f7 1f       	adc	r31, r23
     5d8:	d1 82       	std	Z+1, r13	; 0x01
     5da:	c0 82       	st	Z, r12
     5dc:	8b c0       	rjmp	.+278    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			break;
			case 4:
			if(routes[0][i + 1] == 7){
     5de:	6d 91       	ld	r22, X+
     5e0:	7c 91       	ld	r23, X
     5e2:	11 97       	sbiw	r26, 0x01	; 1
     5e4:	67 30       	cpi	r22, 0x07	; 7
     5e6:	71 05       	cpc	r23, r1
     5e8:	79 f4       	brne	.+30     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
				routes[routeNum][i] = 1;
     5ea:	42 9f       	mul	r20, r18
     5ec:	f0 01       	movw	r30, r0
     5ee:	43 9f       	mul	r20, r19
     5f0:	f0 0d       	add	r31, r0
     5f2:	11 24       	eor	r1, r1
     5f4:	e0 0f       	add	r30, r16
     5f6:	f1 1f       	adc	r31, r17
     5f8:	bc 01       	movw	r22, r24
     5fa:	66 0f       	add	r22, r22
     5fc:	77 1f       	adc	r23, r23
     5fe:	e6 0f       	add	r30, r22
     600:	f7 1f       	adc	r31, r23
     602:	b1 82       	std	Z+1, r11	; 0x01
     604:	a0 82       	st	Z, r10
     606:	76 c0       	rjmp	.+236    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			else if(routes[0][i] != 7){
				routes[routeNum][i] = 3;
     608:	42 9f       	mul	r20, r18
     60a:	f0 01       	movw	r30, r0
     60c:	43 9f       	mul	r20, r19
     60e:	f0 0d       	add	r31, r0
     610:	11 24       	eor	r1, r1
     612:	e0 0f       	add	r30, r16
     614:	f1 1f       	adc	r31, r17
     616:	bc 01       	movw	r22, r24
     618:	66 0f       	add	r22, r22
     61a:	77 1f       	adc	r23, r23
     61c:	e6 0f       	add	r30, r22
     61e:	f7 1f       	adc	r31, r23
     620:	51 82       	std	Z+1, r5	; 0x01
     622:	40 82       	st	Z, r4
     624:	67 c0       	rjmp	.+206    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			break;
			case 5:
			if(routes[0][i + 1] == 7){
     626:	6d 91       	ld	r22, X+
     628:	7c 91       	ld	r23, X
     62a:	11 97       	sbiw	r26, 0x01	; 1
     62c:	67 30       	cpi	r22, 0x07	; 7
     62e:	71 05       	cpc	r23, r1
     630:	79 f4       	brne	.+30     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
				routes[routeNum][i] = 1;
     632:	42 9f       	mul	r20, r18
     634:	f0 01       	movw	r30, r0
     636:	43 9f       	mul	r20, r19
     638:	f0 0d       	add	r31, r0
     63a:	11 24       	eor	r1, r1
     63c:	e0 0f       	add	r30, r16
     63e:	f1 1f       	adc	r31, r17
     640:	bc 01       	movw	r22, r24
     642:	66 0f       	add	r22, r22
     644:	77 1f       	adc	r23, r23
     646:	e6 0f       	add	r30, r22
     648:	f7 1f       	adc	r31, r23
     64a:	b1 82       	std	Z+1, r11	; 0x01
     64c:	a0 82       	st	Z, r10
     64e:	52 c0       	rjmp	.+164    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			else if(routes[0][i] != 7){
				routes[routeNum][i] = 2;
     650:	42 9f       	mul	r20, r18
     652:	f0 01       	movw	r30, r0
     654:	43 9f       	mul	r20, r19
     656:	f0 0d       	add	r31, r0
     658:	11 24       	eor	r1, r1
     65a:	e0 0f       	add	r30, r16
     65c:	f1 1f       	adc	r31, r17
     65e:	bc 01       	movw	r22, r24
     660:	66 0f       	add	r22, r22
     662:	77 1f       	adc	r23, r23
     664:	e6 0f       	add	r30, r22
     666:	f7 1f       	adc	r31, r23
     668:	d1 82       	std	Z+1, r13	; 0x01
     66a:	c0 82       	st	Z, r12
     66c:	43 c0       	rjmp	.+134    	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
			}
			break;
			case 6:
			crossing++;
     66e:	ff ef       	ldi	r31, 0xFF	; 255
     670:	ef 1a       	sub	r14, r31
     672:	ff 0a       	sbc	r15, r31
			routes[routeNum][i] = 6;
     674:	42 9f       	mul	r20, r18
     676:	b0 01       	movw	r22, r0
     678:	43 9f       	mul	r20, r19
     67a:	70 0d       	add	r23, r0
     67c:	11 24       	eor	r1, r1
     67e:	60 0f       	add	r22, r16
     680:	71 1f       	adc	r23, r17
     682:	fc 01       	movw	r30, r24
     684:	ee 0f       	add	r30, r30
     686:	ff 1f       	adc	r31, r31
     688:	e6 0f       	add	r30, r22
     68a:	f7 1f       	adc	r31, r23
     68c:	71 82       	std	Z+1, r7	; 0x01
     68e:	60 82       	st	Z, r6
			if((crossing == 2) && (routes[routeNum][i - 1] == 6)){
     690:	52 e0       	ldi	r21, 0x02	; 2
     692:	e5 16       	cp	r14, r21
     694:	f1 04       	cpc	r15, r1
     696:	71 f5       	brne	.+92     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
     698:	fc 01       	movw	r30, r24
     69a:	31 97       	sbiw	r30, 0x01	; 1
     69c:	ee 0f       	add	r30, r30
     69e:	ff 1f       	adc	r31, r31
     6a0:	e6 0f       	add	r30, r22
     6a2:	f7 1f       	adc	r31, r23
     6a4:	60 81       	ld	r22, Z
     6a6:	71 81       	ldd	r23, Z+1	; 0x01
     6a8:	66 30       	cpi	r22, 0x06	; 6
     6aa:	71 05       	cpc	r23, r1
     6ac:	19 f5       	brne	.+70     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
				crossing = 0;
				routes[1][i - 1] = 3;
     6ae:	95 96       	adiw	r26, 0x25	; 37
     6b0:	5c 92       	st	X, r5
     6b2:	4e 92       	st	-X, r4
     6b4:	94 97       	sbiw	r26, 0x24	; 36
			break;
			case 6:
			crossing++;
			routes[routeNum][i] = 6;
			if((crossing == 2) && (routes[routeNum][i - 1] == 6)){
				crossing = 0;
     6b6:	e1 2c       	mov	r14, r1
     6b8:	f1 2c       	mov	r15, r1
     6ba:	1c c0       	rjmp	.+56     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
				routes[1][i - 1] = 3;
			}
			break;
			case 8:                                                     //case 7 isn't part of a route
			routes[routeNum][i] = 8;                                    //Marks end of route
     6bc:	42 9f       	mul	r20, r18
     6be:	f0 01       	movw	r30, r0
     6c0:	43 9f       	mul	r20, r19
     6c2:	f0 0d       	add	r31, r0
     6c4:	11 24       	eor	r1, r1
     6c6:	e0 0f       	add	r30, r16
     6c8:	f1 1f       	adc	r31, r17
     6ca:	bc 01       	movw	r22, r24
     6cc:	66 0f       	add	r22, r22
     6ce:	77 1f       	adc	r23, r23
     6d0:	e6 0f       	add	r30, r22
     6d2:	f7 1f       	adc	r31, r23
     6d4:	91 82       	std	Z+1, r9	; 0x01
     6d6:	80 82       	st	Z, r8
     6d8:	64 e1       	ldi	r22, 0x14	; 20
     6da:	70 e0       	ldi	r23, 0x00	; 0
     6dc:	61 50       	subi	r22, 0x01	; 1
     6de:	71 09       	sbc	r23, r1
			for(int j = 0; j < 20; j++){                                //reset decoy array
     6e0:	e9 f7       	brne	.-6      	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
     6e2:	fd 01       	movw	r30, r26
     6e4:	32 97       	sbiw	r30, 0x02	; 2
     6e6:	11 82       	std	Z+1, r1	; 0x01
     6e8:	10 82       	st	Z, r1
				routes[0][i] = 0;
			}
			if(routeNum < 4){
     6ea:	24 30       	cpi	r18, 0x04	; 4
     6ec:	31 05       	cpc	r19, r1
     6ee:	14 f4       	brge	.+4      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
				routeNum++;
     6f0:	2f 5f       	subi	r18, 0xFF	; 255
     6f2:	3f 4f       	sbci	r19, 0xFF	; 255
			routes[0][i] = 8; //Marks end of route
		}
	}while(grid == 0);
	numOfIntersects = i;
	
	for(i = 0; i < numOfIntersects; i++){   //Writing route towards X
     6f4:	01 96       	adiw	r24, 0x01	; 1
     6f6:	c8 17       	cp	r28, r24
     6f8:	d9 07       	cpc	r29, r25
     6fa:	09 f0       	breq	.+2      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
     6fc:	23 cf       	rjmp	.-442    	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
			
		}
	}
	
	return numOfIntersects;                                                       //returns intersect count, so amount of intersects on route
}
     6fe:	ce 01       	movw	r24, r28
     700:	df 91       	pop	r29
     702:	cf 91       	pop	r28
     704:	1f 91       	pop	r17
     706:	0f 91       	pop	r16
     708:	ff 90       	pop	r15
     70a:	ef 90       	pop	r14
     70c:	df 90       	pop	r13
     70e:	cf 90       	pop	r12
     710:	bf 90       	pop	r11
     712:	af 90       	pop	r10
     714:	9f 90       	pop	r9
     716:	8f 90       	pop	r8
     718:	7f 90       	pop	r7
     71a:	6f 90       	pop	r6
     71c:	5f 90       	pop	r5
     71e:	4f 90       	pop	r4
     720:	3f 90       	pop	r3
     722:	2f 90       	pop	r2
     724:	08 95       	ret

00000726 <driveRoute>:

void driveRoute(int route[2][20], int flag, int flagReturn, int max){             //go to or return from, grid or chargepoint
     726:	cf 92       	push	r12
     728:	df 92       	push	r13
     72a:	ef 92       	push	r14
     72c:	ff 92       	push	r15
     72e:	0f 93       	push	r16
     730:	1f 93       	push	r17
     732:	cf 93       	push	r28
     734:	df 93       	push	r29
     736:	6c 01       	movw	r12, r24
     738:	eb 01       	movw	r28, r22
     73a:	7a 01       	movw	r14, r20
     73c:	89 01       	movw	r16, r18
	int intersectnum = 1;                                       // flag 1 =  from or to home, flag 2 is from or to chargepoint
	
	if(flagReturn == 1){
     73e:	41 30       	cpi	r20, 0x01	; 1
     740:	51 05       	cpc	r21, r1
     742:	11 f0       	breq	.+4      	; 0x748 <driveRoute+0x22>
	
	return numOfIntersects;                                                       //returns intersect count, so amount of intersects on route
}

void driveRoute(int route[2][20], int flag, int flagReturn, int max){             //go to or return from, grid or chargepoint
	int intersectnum = 1;                                       // flag 1 =  from or to home, flag 2 is from or to chargepoint
     744:	01 e0       	ldi	r16, 0x01	; 1
     746:	10 e0       	ldi	r17, 0x00	; 0
	
	if(flagReturn == 1){
		intersectnum = max;
	}
	
	if(flag == 2){
     748:	c2 30       	cpi	r28, 0x02	; 2
     74a:	d1 05       	cpc	r29, r1
     74c:	49 f4       	brne	.+18     	; 0x760 <driveRoute+0x3a>
		motorControl(70, 'R', 0.30);
     74e:	2a e9       	ldi	r18, 0x9A	; 154
     750:	39 e9       	ldi	r19, 0x99	; 153
     752:	49 e9       	ldi	r20, 0x99	; 153
     754:	5e e3       	ldi	r21, 0x3E	; 62
     756:	62 e5       	ldi	r22, 0x52	; 82
     758:	86 e4       	ldi	r24, 0x46	; 70
     75a:	90 e0       	ldi	r25, 0x00	; 0
     75c:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
	}while(checkAfslag() == 0);
	
	if(checkAfslag() != 0){
		
		if(flagReturn == 0){
			switch(route[flag][intersectnum]){
     760:	28 e2       	ldi	r18, 0x28	; 40
     762:	2c 9f       	mul	r18, r28
     764:	c0 01       	movw	r24, r0
     766:	2d 9f       	mul	r18, r29
     768:	90 0d       	add	r25, r0
     76a:	11 24       	eor	r1, r1
     76c:	e8 01       	movw	r28, r16
     76e:	cc 0f       	add	r28, r28
     770:	dd 1f       	adc	r29, r29
     772:	c8 0f       	add	r28, r24
     774:	d9 1f       	adc	r29, r25
     776:	cc 0d       	add	r28, r12
     778:	dd 1d       	adc	r29, r13
		motorControl(70, 'R', 0.30);
	}
	
	Next:
	do{
		followLine();
     77a:	0e 94 01 0a 	call	0x1402	; 0x1402 <followLine>
	}while(checkAfslag() == 0);
     77e:	0e 94 55 0a 	call	0x14aa	; 0x14aa <checkAfslag>
     782:	89 2b       	or	r24, r25
     784:	d1 f3       	breq	.-12     	; 0x77a <driveRoute+0x54>
	
	if(checkAfslag() != 0){
     786:	0e 94 55 0a 	call	0x14aa	; 0x14aa <checkAfslag>
     78a:	89 2b       	or	r24, r25
     78c:	c9 f1       	breq	.+114    	; 0x800 <driveRoute+0xda>
		
		if(flagReturn == 0){
     78e:	e1 14       	cp	r14, r1
     790:	f1 04       	cpc	r15, r1
     792:	b1 f5       	brne	.+108    	; 0x800 <driveRoute+0xda>
			switch(route[flag][intersectnum]){
     794:	89 91       	ld	r24, Y+
     796:	99 91       	ld	r25, Y+
     798:	82 30       	cpi	r24, 0x02	; 2
     79a:	91 05       	cpc	r25, r1
     79c:	a1 f0       	breq	.+40     	; 0x7c6 <driveRoute+0xa0>
     79e:	1c f4       	brge	.+6      	; 0x7a6 <driveRoute+0x80>
     7a0:	01 97       	sbiw	r24, 0x01	; 1
     7a2:	39 f0       	breq	.+14     	; 0x7b2 <driveRoute+0x8c>
     7a4:	2d c0       	rjmp	.+90     	; 0x800 <driveRoute+0xda>
     7a6:	83 30       	cpi	r24, 0x03	; 3
     7a8:	91 05       	cpc	r25, r1
     7aa:	b9 f0       	breq	.+46     	; 0x7da <driveRoute+0xb4>
     7ac:	05 97       	sbiw	r24, 0x05	; 5
     7ae:	f9 f0       	breq	.+62     	; 0x7ee <driveRoute+0xc8>
     7b0:	27 c0       	rjmp	.+78     	; 0x800 <driveRoute+0xda>
				case 1:
				motorControl(70, 'R', 0.30);
     7b2:	2a e9       	ldi	r18, 0x9A	; 154
     7b4:	39 e9       	ldi	r19, 0x99	; 153
     7b6:	49 e9       	ldi	r20, 0x99	; 153
     7b8:	5e e3       	ldi	r21, 0x3E	; 62
     7ba:	62 e5       	ldi	r22, 0x52	; 82
     7bc:	86 e4       	ldi	r24, 0x46	; 70
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
				intersectnum++;
				goto Next;
     7c4:	da cf       	rjmp	.-76     	; 0x77a <driveRoute+0x54>
				case 2:
				motorControl(70, 'L', 0.30);
     7c6:	2a e9       	ldi	r18, 0x9A	; 154
     7c8:	39 e9       	ldi	r19, 0x99	; 153
     7ca:	49 e9       	ldi	r20, 0x99	; 153
     7cc:	5e e3       	ldi	r21, 0x3E	; 62
     7ce:	6c e4       	ldi	r22, 0x4C	; 76
     7d0:	86 e4       	ldi	r24, 0x46	; 70
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
				intersectnum++;
				goto Next;
     7d8:	d0 cf       	rjmp	.-96     	; 0x77a <driveRoute+0x54>
				case 3:
				motorControl(80, 'F', 0.89);
     7da:	2a e0       	ldi	r18, 0x0A	; 10
     7dc:	37 ed       	ldi	r19, 0xD7	; 215
     7de:	43 e6       	ldi	r20, 0x63	; 99
     7e0:	5f e3       	ldi	r21, 0x3F	; 63
     7e2:	66 e4       	ldi	r22, 0x46	; 70
     7e4:	80 e5       	ldi	r24, 0x50	; 80
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
				intersectnum++;
				goto Next;
     7ec:	c6 cf       	rjmp	.-116    	; 0x77a <driveRoute+0x54>
				case 5:
				motorControl(0, 'F', 0.89);    //stop
     7ee:	2a e0       	ldi	r18, 0x0A	; 10
     7f0:	37 ed       	ldi	r19, 0xD7	; 215
     7f2:	43 e6       	ldi	r20, 0x63	; 99
     7f4:	5f e3       	ldi	r21, 0x3F	; 63
     7f6:	66 e4       	ldi	r22, 0x46	; 70
     7f8:	80 e0       	ldi	r24, 0x00	; 0
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
				play_from_program_space(PSTR(">g32>>c32"));

			}
		}
	}
}
     800:	df 91       	pop	r29
     802:	cf 91       	pop	r28
     804:	1f 91       	pop	r17
     806:	0f 91       	pop	r16
     808:	ff 90       	pop	r15
     80a:	ef 90       	pop	r14
     80c:	df 90       	pop	r13
     80e:	cf 90       	pop	r12
     810:	08 95       	ret

00000812 <fetchOrder>:
			check = 1;
		}
	}
}

void fetchOrder(int OrderX[], int orderY[], int route[2][20]){
     812:	4f 92       	push	r4
     814:	5f 92       	push	r5
     816:	6f 92       	push	r6
     818:	7f 92       	push	r7
     81a:	8f 92       	push	r8
     81c:	9f 92       	push	r9
     81e:	af 92       	push	r10
     820:	bf 92       	push	r11
     822:	cf 92       	push	r12
     824:	df 92       	push	r13
     826:	ef 92       	push	r14
     828:	ff 92       	push	r15
     82a:	0f 93       	push	r16
     82c:	1f 93       	push	r17
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	08 2f       	mov	r16, r24
     834:	19 2f       	mov	r17, r25
     836:	d6 2f       	mov	r29, r22
     838:	c7 2f       	mov	r28, r23
     83a:	4a 01       	movw	r8, r20
	int crossCountX = 0, crossCountY = 0, flagY = 0, flagX = 0, endX = 5, endY = 0, endFlag = 0;
	int amountOfIntersects = readGrid(route);
     83c:	ca 01       	movw	r24, r20
     83e:	0e 94 a2 01 	call	0x344	; 0x344 <readGrid>
     842:	3c 01       	movw	r6, r24
	driveRoute(route, 1, 0, amountOfIntersects);    //Drive to grid entrance
     844:	9c 01       	movw	r18, r24
     846:	40 e0       	ldi	r20, 0x00	; 0
     848:	50 e0       	ldi	r21, 0x00	; 0
     84a:	61 e0       	ldi	r22, 0x01	; 1
     84c:	70 e0       	ldi	r23, 0x00	; 0
     84e:	c4 01       	movw	r24, r8
     850:	0e 94 93 03 	call	0x726	; 0x726 <driveRoute>
	motorControl(70, 'R', 0.89);
     854:	2a e0       	ldi	r18, 0x0A	; 10
     856:	37 ed       	ldi	r19, 0xD7	; 215
     858:	43 e6       	ldi	r20, 0x63	; 99
     85a:	5f e3       	ldi	r21, 0x3F	; 63
     85c:	62 e5       	ldi	r22, 0x52	; 82
     85e:	86 e4       	ldi	r24, 0x46	; 70
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     866:	82 e3       	ldi	r24, 0x32	; 50
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
	delay(50);
	motorControl(0, 'R', 0.89);
     86e:	2a e0       	ldi	r18, 0x0A	; 10
     870:	37 ed       	ldi	r19, 0xD7	; 215
     872:	43 e6       	ldi	r20, 0x63	; 99
     874:	5f e3       	ldi	r21, 0x3F	; 63
     876:	62 e5       	ldi	r22, 0x52	; 82
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	90 e0       	ldi	r25, 0x00	; 0
     87c:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
     880:	c0 2e       	mov	r12, r16
     882:	d1 2e       	mov	r13, r17
     884:	ed 2e       	mov	r14, r29
     886:	fc 2e       	mov	r15, r28
	for(int i = 0; i < sizeOfOrder + 1; i ++){
     888:	a1 2c       	mov	r10, r1
     88a:	b1 2c       	mov	r11, r1
		}
	}
}

void fetchOrder(int OrderX[], int orderY[], int route[2][20]){
	int crossCountX = 0, crossCountY = 0, flagY = 0, flagX = 0, endX = 5, endY = 0, endFlag = 0;
     88c:	00 e0       	ldi	r16, 0x00	; 0
     88e:	10 e0       	ldi	r17, 0x00	; 0
	motorControl(70, 'R', 0.89);
	delay(50);
	motorControl(0, 'R', 0.89);
	for(int i = 0; i < sizeOfOrder + 1; i ++){
		if(i == sizeOfOrder){
			endFlag = 1;
     890:	44 24       	eor	r4, r4
     892:	43 94       	inc	r4
     894:	51 2c       	mov	r5, r1
     896:	0c c0       	rjmp	.+24     	; 0x8b0 <fetchOrder+0x9e>
	driveRoute(route, 1, 0, amountOfIntersects);    //Drive to grid entrance
	motorControl(70, 'R', 0.89);
	delay(50);
	motorControl(0, 'R', 0.89);
	for(int i = 0; i < sizeOfOrder + 1; i ++){
		if(i == sizeOfOrder){
     898:	84 e0       	ldi	r24, 0x04	; 4
     89a:	a8 16       	cp	r10, r24
     89c:	b1 04       	cpc	r11, r1
     89e:	11 f4       	brne	.+4      	; 0x8a4 <fetchOrder+0x92>
			endFlag = 1;
     8a0:	04 2d       	mov	r16, r4
     8a2:	15 2d       	mov	r17, r5
     8a4:	e2 e0       	ldi	r30, 0x02	; 2
     8a6:	ce 0e       	add	r12, r30
     8a8:	d1 1c       	adc	r13, r1
     8aa:	f2 e0       	ldi	r31, 0x02	; 2
     8ac:	ef 0e       	add	r14, r31
     8ae:	f1 1c       	adc	r15, r1
     8b0:	e6 01       	movw	r28, r12
		}
		if((crossCountX > OrderX[i]) || (endFlag == 1 && (crossCountX > endX))){
     8b2:	88 81       	ld	r24, Y
     8b4:	99 81       	ldd	r25, Y+1	; 0x01
     8b6:	99 23       	and	r25, r25
     8b8:	54 f4       	brge	.+20     	; 0x8ce <fetchOrder+0xbc>
			motorControl(70, 'L', 0.89);
     8ba:	2a e0       	ldi	r18, 0x0A	; 10
     8bc:	37 ed       	ldi	r19, 0xD7	; 215
     8be:	43 e6       	ldi	r20, 0x63	; 99
     8c0:	5f e3       	ldi	r21, 0x3F	; 63
     8c2:	6c e4       	ldi	r22, 0x4C	; 76
     8c4:	86 e4       	ldi	r24, 0x46	; 70
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>

			flagX = 1;
     8cc:	19 c0       	rjmp	.+50     	; 0x900 <__stack+0x1>
		}
		else if((crossCountX < OrderX[i]) || (endFlag == 1 && (crossCountX < endX))){
     8ce:	18 16       	cp	r1, r24
     8d0:	19 06       	cpc	r1, r25
     8d2:	1c f0       	brlt	.+6      	; 0x8da <fetchOrder+0xc8>
     8d4:	01 30       	cpi	r16, 0x01	; 1
     8d6:	11 05       	cpc	r17, r1
     8d8:	99 f4       	brne	.+38     	; 0x900 <__stack+0x1>
			motorControl(70, 'R', 0.89);
     8da:	2a e0       	ldi	r18, 0x0A	; 10
     8dc:	37 ed       	ldi	r19, 0xD7	; 215
     8de:	43 e6       	ldi	r20, 0x63	; 99
     8e0:	5f e3       	ldi	r21, 0x3F	; 63
     8e2:	62 e5       	ldi	r22, 0x52	; 82
     8e4:	86 e4       	ldi	r24, 0x46	; 70
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
     8ec:	09 c0       	rjmp	.+18     	; 0x900 <__stack+0x1>
				//if intersection detected crossCountX++
			}
			else if(flagX == 2){
				//if intersection detected crossCountX--
			}
			motorControl(90, 'F', 0.89);
     8ee:	2a e0       	ldi	r18, 0x0A	; 10
     8f0:	37 ed       	ldi	r19, 0xD7	; 215
     8f2:	43 e6       	ldi	r20, 0x63	; 99
     8f4:	5f e3       	ldi	r21, 0x3F	; 63
     8f6:	66 e4       	ldi	r22, 0x46	; 70
     8f8:	8a e5       	ldi	r24, 0x5A	; 90
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
		}
		else if((crossCountX < OrderX[i]) || (endFlag == 1 && (crossCountX < endX))){
			motorControl(70, 'R', 0.89);
			flagX = 2;
		}
		while((crossCountX != OrderX[i]) || (endFlag == 1 && (crossCountX != endX))){
     900:	88 81       	ld	r24, Y
     902:	99 81       	ldd	r25, Y+1	; 0x01
     904:	89 2b       	or	r24, r25
     906:	99 f7       	brne	.-26     	; 0x8ee <fetchOrder+0xdc>
     908:	01 30       	cpi	r16, 0x01	; 1
     90a:	11 05       	cpc	r17, r1
     90c:	81 f3       	breq	.-32     	; 0x8ee <fetchOrder+0xdc>
				//if intersection detected crossCountX--
			}
			motorControl(90, 'F', 0.89);
			// if intersection detected crossCountX++
		}
		motorControl(0, 'F', 0.89);
     90e:	2a e0       	ldi	r18, 0x0A	; 10
     910:	37 ed       	ldi	r19, 0xD7	; 215
     912:	43 e6       	ldi	r20, 0x63	; 99
     914:	5f e3       	ldi	r21, 0x3F	; 63
     916:	66 e4       	ldi	r22, 0x46	; 70
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	90 e0       	ldi	r25, 0x00	; 0
     91c:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
     920:	e7 01       	movw	r28, r14
		if((crossCountY > orderY[i]) || (endFlag == 1 && (crossCountY > endY))){
     922:	88 81       	ld	r24, Y
     924:	99 81       	ldd	r25, Y+1	; 0x01
     926:	99 23       	and	r25, r25
     928:	74 f4       	brge	.+28     	; 0x946 <__stack+0x47>
			motorControl(70, 'L', 0.89);
     92a:	2a e0       	ldi	r18, 0x0A	; 10
     92c:	37 ed       	ldi	r19, 0xD7	; 215
     92e:	43 e6       	ldi	r20, 0x63	; 99
     930:	5f e3       	ldi	r21, 0x3F	; 63
     932:	6c e4       	ldi	r22, 0x4C	; 76
     934:	86 e4       	ldi	r24, 0x46	; 70
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
		}
		else if((crossCountY < orderY[i]) || (endFlag == 1 && (crossCountY < endY))){
			motorControl(70, 'R', 0.89);
			flagY = 2;
		}
		while((crossCountY != orderY[i]) || (endFlag == 1 && (crossCountY != endY))){
     93c:	88 81       	ld	r24, Y
     93e:	99 81       	ldd	r25, Y+1	; 0x01
     940:	89 2b       	or	r24, r25
     942:	71 f4       	brne	.+28     	; 0x960 <__stack+0x61>
     944:	1a c0       	rjmp	.+52     	; 0x97a <__stack+0x7b>
		motorControl(0, 'F', 0.89);
		if((crossCountY > orderY[i]) || (endFlag == 1 && (crossCountY > endY))){
			motorControl(70, 'L', 0.89);
			flagY = 1;
		}
		else if((crossCountY < orderY[i]) || (endFlag == 1 && (crossCountY < endY))){
     946:	18 16       	cp	r1, r24
     948:	19 06       	cpc	r1, r25
     94a:	c4 f7       	brge	.-16     	; 0x93c <__stack+0x3d>
			motorControl(70, 'R', 0.89);
     94c:	2a e0       	ldi	r18, 0x0A	; 10
     94e:	37 ed       	ldi	r19, 0xD7	; 215
     950:	43 e6       	ldi	r20, 0x63	; 99
     952:	5f e3       	ldi	r21, 0x3F	; 63
     954:	62 e5       	ldi	r22, 0x52	; 82
     956:	86 e4       	ldi	r24, 0x46	; 70
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
     95e:	ee cf       	rjmp	.-36     	; 0x93c <__stack+0x3d>
				//if intersection detected crossCountY++
			}
			else if(flagY == 2){
				//if intersection detected crossCountY--
			}
			motorControl(90, 'F', 0.89);
     960:	2a e0       	ldi	r18, 0x0A	; 10
     962:	37 ed       	ldi	r19, 0xD7	; 215
     964:	43 e6       	ldi	r20, 0x63	; 99
     966:	5f e3       	ldi	r21, 0x3F	; 63
     968:	66 e4       	ldi	r22, 0x46	; 70
     96a:	8a e5       	ldi	r24, 0x5A	; 90
     96c:	90 e0       	ldi	r25, 0x00	; 0
     96e:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
		}
		else if((crossCountY < orderY[i]) || (endFlag == 1 && (crossCountY < endY))){
			motorControl(70, 'R', 0.89);
			flagY = 2;
		}
		while((crossCountY != orderY[i]) || (endFlag == 1 && (crossCountY != endY))){
     972:	88 81       	ld	r24, Y
     974:	99 81       	ldd	r25, Y+1	; 0x01
     976:	89 2b       	or	r24, r25
     978:	99 f7       	brne	.-26     	; 0x960 <__stack+0x61>
			else if(flagY == 2){
				//if intersection detected crossCountY--
			}
			motorControl(90, 'F', 0.89);
		}
		play_from_program_space(PSTR(">g32>>c32"));
     97a:	82 eb       	ldi	r24, 0xB2	; 178
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	0e 94 24 12 	call	0x2448	; 0x2448 <play_from_program_space>
     982:	88 ec       	ldi	r24, 0xC8	; 200
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
	int amountOfIntersects = readGrid(route);
	driveRoute(route, 1, 0, amountOfIntersects);    //Drive to grid entrance
	motorControl(70, 'R', 0.89);
	delay(50);
	motorControl(0, 'R', 0.89);
	for(int i = 0; i < sizeOfOrder + 1; i ++){
     98a:	8f ef       	ldi	r24, 0xFF	; 255
     98c:	a8 1a       	sub	r10, r24
     98e:	b8 0a       	sbc	r11, r24
     990:	e5 e0       	ldi	r30, 0x05	; 5
     992:	ae 16       	cp	r10, r30
     994:	b1 04       	cpc	r11, r1
     996:	09 f0       	breq	.+2      	; 0x99a <__stack+0x9b>
     998:	7f cf       	rjmp	.-258    	; 0x898 <fetchOrder+0x86>
			motorControl(90, 'F', 0.89);
		}
		play_from_program_space(PSTR(">g32>>c32"));
		delay(200);
	}
	driveRoute(route, 1, 1, amountOfIntersects);    //Drive back to home
     99a:	93 01       	movw	r18, r6
     99c:	41 e0       	ldi	r20, 0x01	; 1
     99e:	50 e0       	ldi	r21, 0x00	; 0
     9a0:	61 e0       	ldi	r22, 0x01	; 1
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	c4 01       	movw	r24, r8
     9a6:	0e 94 93 03 	call	0x726	; 0x726 <driveRoute>
	play_from_program_space(PSTR(">g32>>c32"));
     9aa:	88 ea       	ldi	r24, 0xA8	; 168
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 24 12 	call	0x2448	; 0x2448 <play_from_program_space>
}
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	ff 90       	pop	r15
     9bc:	ef 90       	pop	r14
     9be:	df 90       	pop	r13
     9c0:	cf 90       	pop	r12
     9c2:	bf 90       	pop	r11
     9c4:	af 90       	pop	r10
     9c6:	9f 90       	pop	r9
     9c8:	8f 90       	pop	r8
     9ca:	7f 90       	pop	r7
     9cc:	6f 90       	pop	r6
     9ce:	5f 90       	pop	r5
     9d0:	4f 90       	pop	r4
     9d2:	08 95       	ret

000009d4 <main>:
#include <avr/pgmspace.h>
#include "wireless.h"
#include "sensoren.h"
#include "motoren.h"

int main(){
     9d4:	0f 93       	push	r16
     9d6:	1f 93       	push	r17
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	c0 56       	subi	r28, 0x60	; 96
     9e2:	d1 09       	sbc	r29, r1
     9e4:	0f b6       	in	r0, 0x3f	; 63
     9e6:	f8 94       	cli
     9e8:	de bf       	out	0x3e, r29	; 62
     9ea:	0f be       	out	0x3f, r0	; 63
     9ec:	cd bf       	out	0x3d, r28	; 61
	initialize();
     9ee:	0e 94 7d 09 	call	0x12fa	; 0x12fa <initialize>
	int amountOfIntersects = 0;
	int routes[2][20];
    amountOfIntersects = readGrid(routes);
     9f2:	ce 01       	movw	r24, r28
     9f4:	01 96       	adiw	r24, 0x01	; 1
     9f6:	0e 94 a2 01 	call	0x344	; 0x344 <readGrid>
     9fa:	8c 01       	movw	r16, r24
	int orderX[sizeOfOrder];
	int orderY[sizeOfOrder];
	wirMain(orderX, orderY);
     9fc:	be 01       	movw	r22, r28
     9fe:	67 5a       	subi	r22, 0xA7	; 167
     a00:	7f 4f       	sbci	r23, 0xFF	; 255
     a02:	ce 01       	movw	r24, r28
     a04:	8f 5a       	subi	r24, 0xAF	; 175
     a06:	9f 4f       	sbci	r25, 0xFF	; 255
     a08:	0e 94 8c 0b 	call	0x1718	; 0x1718 <wirMain>
	sortOrder(orderX, orderY);
     a0c:	be 01       	movw	r22, r28
     a0e:	67 5a       	subi	r22, 0xA7	; 167
     a10:	7f 4f       	sbci	r23, 0xFF	; 255
     a12:	ce 01       	movw	r24, r28
     a14:	8f 5a       	subi	r24, 0xAF	; 175
     a16:	9f 4f       	sbci	r25, 0xFF	; 255
     a18:	0e 94 a4 00 	call	0x148	; 0x148 <sortOrder>
	driveRoute(routes, 1, 0, amountOfIntersects);
     a1c:	98 01       	movw	r18, r16
     a1e:	40 e0       	ldi	r20, 0x00	; 0
     a20:	50 e0       	ldi	r21, 0x00	; 0
     a22:	61 e0       	ldi	r22, 0x01	; 1
     a24:	70 e0       	ldi	r23, 0x00	; 0
     a26:	ce 01       	movw	r24, r28
     a28:	01 96       	adiw	r24, 0x01	; 1
     a2a:	0e 94 93 03 	call	0x726	; 0x726 <driveRoute>
	fetchOrder(orderX, orderY, routes);	
     a2e:	ae 01       	movw	r20, r28
     a30:	4f 5f       	subi	r20, 0xFF	; 255
     a32:	5f 4f       	sbci	r21, 0xFF	; 255
     a34:	be 01       	movw	r22, r28
     a36:	67 5a       	subi	r22, 0xA7	; 167
     a38:	7f 4f       	sbci	r23, 0xFF	; 255
     a3a:	ce 01       	movw	r24, r28
     a3c:	8f 5a       	subi	r24, 0xAF	; 175
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	0e 94 09 04 	call	0x812	; 0x812 <fetchOrder>
				
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	c0 5a       	subi	r28, 0xA0	; 160
     a4a:	df 4f       	sbci	r29, 0xFF	; 255
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	de bf       	out	0x3e, r29	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	cd bf       	out	0x3d, r28	; 61
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	08 95       	ret

00000a60 <motorControl>:
     a60:	2f 92       	push	r2
     a62:	3f 92       	push	r3
     a64:	4f 92       	push	r4
     a66:	5f 92       	push	r5
     a68:	6f 92       	push	r6
     a6a:	7f 92       	push	r7
     a6c:	8f 92       	push	r8
     a6e:	9f 92       	push	r9
     a70:	af 92       	push	r10
     a72:	bf 92       	push	r11
     a74:	cf 92       	push	r12
     a76:	df 92       	push	r13
     a78:	ef 92       	push	r14
     a7a:	ff 92       	push	r15
     a7c:	0f 93       	push	r16
     a7e:	1f 93       	push	r17
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	cd b7       	in	r28, 0x3d	; 61
     a86:	de b7       	in	r29, 0x3e	; 62
     a88:	66 97       	sbiw	r28, 0x16	; 22
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	f8 94       	cli
     a8e:	de bf       	out	0x3e, r29	; 62
     a90:	0f be       	out	0x3f, r0	; 63
     a92:	cd bf       	out	0x3d, r28	; 61
     a94:	1c 01       	movw	r2, r24
     a96:	29 83       	std	Y+1, r18	; 0x01
     a98:	3a 83       	std	Y+2, r19	; 0x02
     a9a:	4b 83       	std	Y+3, r20	; 0x03
     a9c:	5c 83       	std	Y+4, r21	; 0x04
     a9e:	66 34       	cpi	r22, 0x46	; 70
     aa0:	61 f0       	breq	.+24     	; 0xaba <motorControl+0x5a>
     aa2:	20 f4       	brcc	.+8      	; 0xaac <motorControl+0x4c>
     aa4:	62 34       	cpi	r22, 0x42	; 66
     aa6:	09 f4       	brne	.+2      	; 0xaaa <motorControl+0x4a>
     aa8:	95 c0       	rjmp	.+298    	; 0xbd4 <motorControl+0x174>
     aaa:	08 c4       	rjmp	.+2064   	; 0x12bc <motorControl+0x85c>
     aac:	6c 34       	cpi	r22, 0x4C	; 76
     aae:	09 f4       	brne	.+2      	; 0xab2 <motorControl+0x52>
     ab0:	a9 c2       	rjmp	.+1362   	; 0x1004 <motorControl+0x5a4>
     ab2:	62 35       	cpi	r22, 0x52	; 82
     ab4:	09 f4       	brne	.+2      	; 0xab8 <motorControl+0x58>
     ab6:	1b c1       	rjmp	.+566    	; 0xcee <motorControl+0x28e>
     ab8:	01 c4       	rjmp	.+2050   	; 0x12bc <motorControl+0x85c>
     aba:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <speedCurrent>
     abe:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     ac2:	91 01       	movw	r18, r2
     ac4:	28 1b       	sub	r18, r24
     ac6:	39 0b       	sbc	r19, r25
     ac8:	45 e6       	ldi	r20, 0x65	; 101
     aca:	50 e0       	ldi	r21, 0x00	; 0
     acc:	5a 87       	std	Y+10, r21	; 0x0a
     ace:	49 87       	std	Y+9, r20	; 0x09
     ad0:	41 2c       	mov	r4, r1
     ad2:	51 2c       	mov	r5, r1
     ad4:	32 01       	movw	r6, r4
     ad6:	03 2e       	mov	r0, r19
     ad8:	00 0c       	add	r0, r0
     ada:	44 0b       	sbc	r20, r20
     adc:	55 0b       	sbc	r21, r21
     ade:	2d 83       	std	Y+5, r18	; 0x05
     ae0:	3e 83       	std	Y+6, r19	; 0x06
     ae2:	4f 83       	std	Y+7, r20	; 0x07
     ae4:	58 87       	std	Y+8, r21	; 0x08
     ae6:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     aea:	8b 01       	movw	r16, r22
     aec:	2b ed       	ldi	r18, 0xDB	; 219
     aee:	3f e0       	ldi	r19, 0x0F	; 15
     af0:	49 ec       	ldi	r20, 0xC9	; 201
     af2:	50 e4       	ldi	r21, 0x40	; 64
     af4:	c3 01       	movw	r24, r6
     af6:	b2 01       	movw	r22, r4
     af8:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     afc:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
     b00:	23 e8       	ldi	r18, 0x83	; 131
     b02:	39 ef       	ldi	r19, 0xF9	; 249
     b04:	42 e2       	ldi	r20, 0x22	; 34
     b06:	5e e3       	ldi	r21, 0x3E	; 62
     b08:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     b0c:	9b 01       	movw	r18, r22
     b0e:	ac 01       	movw	r20, r24
     b10:	c3 01       	movw	r24, r6
     b12:	b2 01       	movw	r22, r4
     b14:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
     b18:	4b 01       	movw	r8, r22
     b1a:	5c 01       	movw	r10, r24
     b1c:	6d 81       	ldd	r22, Y+5	; 0x05
     b1e:	7e 81       	ldd	r23, Y+6	; 0x06
     b20:	8f 81       	ldd	r24, Y+7	; 0x07
     b22:	98 85       	ldd	r25, Y+8	; 0x08
     b24:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     b28:	9b 01       	movw	r18, r22
     b2a:	ac 01       	movw	r20, r24
     b2c:	c5 01       	movw	r24, r10
     b2e:	b4 01       	movw	r22, r8
     b30:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     b34:	4b 01       	movw	r8, r22
     b36:	5c 01       	movw	r10, r24
     b38:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     b3c:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     b40:	07 2e       	mov	r0, r23
     b42:	00 0c       	add	r0, r0
     b44:	88 0b       	sbc	r24, r24
     b46:	99 0b       	sbc	r25, r25
     b48:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     b4c:	9b 01       	movw	r18, r22
     b4e:	ac 01       	movw	r20, r24
     b50:	c5 01       	movw	r24, r10
     b52:	b4 01       	movw	r22, r8
     b54:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     b58:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     b5c:	dc 01       	movw	r26, r24
     b5e:	cb 01       	movw	r24, r22
     b60:	bc 01       	movw	r22, r24
     b62:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
     b66:	48 01       	movw	r8, r16
     b68:	11 0f       	add	r17, r17
     b6a:	aa 08       	sbc	r10, r10
     b6c:	bb 08       	sbc	r11, r11
     b6e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     b72:	68 19       	sub	r22, r8
     b74:	79 09       	sbc	r23, r9
     b76:	8a 09       	sbc	r24, r10
     b78:	9b 09       	sbc	r25, r11
     b7a:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
     b7e:	6b 01       	movw	r12, r22
     b80:	7c 01       	movw	r14, r24
     b82:	20 e0       	ldi	r18, 0x00	; 0
     b84:	30 e0       	ldi	r19, 0x00	; 0
     b86:	40 e2       	ldi	r20, 0x20	; 32
     b88:	51 e4       	ldi	r21, 0x41	; 65
     b8a:	69 81       	ldd	r22, Y+1	; 0x01
     b8c:	7a 81       	ldd	r23, Y+2	; 0x02
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	9c 81       	ldd	r25, Y+4	; 0x04
     b92:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     b96:	9b 01       	movw	r18, r22
     b98:	ac 01       	movw	r20, r24
     b9a:	c7 01       	movw	r24, r14
     b9c:	b6 01       	movw	r22, r12
     b9e:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__cmpsf2>
     ba2:	88 23       	and	r24, r24
     ba4:	24 f3       	brlt	.-56     	; 0xb6e <motorControl+0x10e>
     ba6:	2a e0       	ldi	r18, 0x0A	; 10
     ba8:	37 ed       	ldi	r19, 0xD7	; 215
     baa:	43 e2       	ldi	r20, 0x23	; 35
     bac:	5c e3       	ldi	r21, 0x3C	; 60
     bae:	c3 01       	movw	r24, r6
     bb0:	b2 01       	movw	r22, r4
     bb2:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     bb6:	2b 01       	movw	r4, r22
     bb8:	3c 01       	movw	r6, r24
     bba:	a9 85       	ldd	r26, Y+9	; 0x09
     bbc:	ba 85       	ldd	r27, Y+10	; 0x0a
     bbe:	11 97       	sbiw	r26, 0x01	; 1
     bc0:	ba 87       	std	Y+10, r27	; 0x0a
     bc2:	a9 87       	std	Y+9, r26	; 0x09
     bc4:	ab 2b       	or	r26, r27
     bc6:	09 f0       	breq	.+2      	; 0xbca <motorControl+0x16a>
     bc8:	8e cf       	rjmp	.-228    	; 0xae6 <motorControl+0x86>
     bca:	30 92 d4 01 	sts	0x01D4, r3	; 0x8001d4 <speedCurrent+0x1>
     bce:	20 92 d3 01 	sts	0x01D3, r2	; 0x8001d3 <speedCurrent>
     bd2:	7a c3       	rjmp	.+1780   	; 0x12c8 <motorControl+0x868>
     bd4:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <speedCurrent>
     bd8:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     bdc:	91 01       	movw	r18, r2
     bde:	28 1b       	sub	r18, r24
     be0:	39 0b       	sbc	r19, r25
     be2:	45 e6       	ldi	r20, 0x65	; 101
     be4:	50 e0       	ldi	r21, 0x00	; 0
     be6:	5a 87       	std	Y+10, r21	; 0x0a
     be8:	49 87       	std	Y+9, r20	; 0x09
     bea:	41 2c       	mov	r4, r1
     bec:	51 2c       	mov	r5, r1
     bee:	32 01       	movw	r6, r4
     bf0:	03 2e       	mov	r0, r19
     bf2:	00 0c       	add	r0, r0
     bf4:	44 0b       	sbc	r20, r20
     bf6:	55 0b       	sbc	r21, r21
     bf8:	2d 83       	std	Y+5, r18	; 0x05
     bfa:	3e 83       	std	Y+6, r19	; 0x06
     bfc:	4f 83       	std	Y+7, r20	; 0x07
     bfe:	58 87       	std	Y+8, r21	; 0x08
     c00:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     c04:	8b 01       	movw	r16, r22
     c06:	2b ed       	ldi	r18, 0xDB	; 219
     c08:	3f e0       	ldi	r19, 0x0F	; 15
     c0a:	49 ec       	ldi	r20, 0xC9	; 201
     c0c:	50 e4       	ldi	r21, 0x40	; 64
     c0e:	c3 01       	movw	r24, r6
     c10:	b2 01       	movw	r22, r4
     c12:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     c16:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
     c1a:	23 e8       	ldi	r18, 0x83	; 131
     c1c:	39 ef       	ldi	r19, 0xF9	; 249
     c1e:	42 e2       	ldi	r20, 0x22	; 34
     c20:	5e e3       	ldi	r21, 0x3E	; 62
     c22:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     c26:	9b 01       	movw	r18, r22
     c28:	ac 01       	movw	r20, r24
     c2a:	c3 01       	movw	r24, r6
     c2c:	b2 01       	movw	r22, r4
     c2e:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
     c32:	4b 01       	movw	r8, r22
     c34:	5c 01       	movw	r10, r24
     c36:	6d 81       	ldd	r22, Y+5	; 0x05
     c38:	7e 81       	ldd	r23, Y+6	; 0x06
     c3a:	8f 81       	ldd	r24, Y+7	; 0x07
     c3c:	98 85       	ldd	r25, Y+8	; 0x08
     c3e:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     c42:	9b 01       	movw	r18, r22
     c44:	ac 01       	movw	r20, r24
     c46:	c5 01       	movw	r24, r10
     c48:	b4 01       	movw	r22, r8
     c4a:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     c4e:	4b 01       	movw	r8, r22
     c50:	5c 01       	movw	r10, r24
     c52:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     c56:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     c5a:	07 2e       	mov	r0, r23
     c5c:	00 0c       	add	r0, r0
     c5e:	88 0b       	sbc	r24, r24
     c60:	99 0b       	sbc	r25, r25
     c62:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     c66:	9b 01       	movw	r18, r22
     c68:	ac 01       	movw	r20, r24
     c6a:	c5 01       	movw	r24, r10
     c6c:	b4 01       	movw	r22, r8
     c6e:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     c72:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     c76:	dc 01       	movw	r26, r24
     c78:	cb 01       	movw	r24, r22
     c7a:	bc 01       	movw	r22, r24
     c7c:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
     c80:	48 01       	movw	r8, r16
     c82:	11 0f       	add	r17, r17
     c84:	aa 08       	sbc	r10, r10
     c86:	bb 08       	sbc	r11, r11
     c88:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     c8c:	68 19       	sub	r22, r8
     c8e:	79 09       	sbc	r23, r9
     c90:	8a 09       	sbc	r24, r10
     c92:	9b 09       	sbc	r25, r11
     c94:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
     c98:	6b 01       	movw	r12, r22
     c9a:	7c 01       	movw	r14, r24
     c9c:	20 e0       	ldi	r18, 0x00	; 0
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	40 e2       	ldi	r20, 0x20	; 32
     ca2:	51 e4       	ldi	r21, 0x41	; 65
     ca4:	69 81       	ldd	r22, Y+1	; 0x01
     ca6:	7a 81       	ldd	r23, Y+2	; 0x02
     ca8:	8b 81       	ldd	r24, Y+3	; 0x03
     caa:	9c 81       	ldd	r25, Y+4	; 0x04
     cac:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     cb0:	9b 01       	movw	r18, r22
     cb2:	ac 01       	movw	r20, r24
     cb4:	c7 01       	movw	r24, r14
     cb6:	b6 01       	movw	r22, r12
     cb8:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__cmpsf2>
     cbc:	88 23       	and	r24, r24
     cbe:	24 f3       	brlt	.-56     	; 0xc88 <motorControl+0x228>
     cc0:	2a e0       	ldi	r18, 0x0A	; 10
     cc2:	37 ed       	ldi	r19, 0xD7	; 215
     cc4:	43 e2       	ldi	r20, 0x23	; 35
     cc6:	5c e3       	ldi	r21, 0x3C	; 60
     cc8:	c3 01       	movw	r24, r6
     cca:	b2 01       	movw	r22, r4
     ccc:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     cd0:	2b 01       	movw	r4, r22
     cd2:	3c 01       	movw	r6, r24
     cd4:	a9 85       	ldd	r26, Y+9	; 0x09
     cd6:	ba 85       	ldd	r27, Y+10	; 0x0a
     cd8:	11 97       	sbiw	r26, 0x01	; 1
     cda:	ba 87       	std	Y+10, r27	; 0x0a
     cdc:	a9 87       	std	Y+9, r26	; 0x09
     cde:	ab 2b       	or	r26, r27
     ce0:	09 f0       	breq	.+2      	; 0xce4 <motorControl+0x284>
     ce2:	8e cf       	rjmp	.-228    	; 0xc00 <motorControl+0x1a0>
     ce4:	30 92 d4 01 	sts	0x01D4, r3	; 0x8001d4 <speedCurrent+0x1>
     ce8:	20 92 d3 01 	sts	0x01D3, r2	; 0x8001d3 <speedCurrent>
     cec:	ed c2       	rjmp	.+1498   	; 0x12c8 <motorControl+0x868>
     cee:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <speedCurrentRight>
     cf2:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     cf6:	82 0d       	add	r24, r2
     cf8:	93 1d       	adc	r25, r3
     cfa:	20 91 cf 01 	lds	r18, 0x01CF	; 0x8001cf <speedCurrentLeft>
     cfe:	30 91 d0 01 	lds	r19, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     d02:	a1 01       	movw	r20, r2
     d04:	42 1b       	sub	r20, r18
     d06:	53 0b       	sbc	r21, r19
     d08:	9a 01       	movw	r18, r20
     d0a:	05 e6       	ldi	r16, 0x65	; 101
     d0c:	10 e0       	ldi	r17, 0x00	; 0
     d0e:	1d 82       	std	Y+5, r1	; 0x05
     d10:	1e 82       	std	Y+6, r1	; 0x06
     d12:	1f 82       	std	Y+7, r1	; 0x07
     d14:	18 86       	std	Y+8, r1	; 0x08
     d16:	ac 01       	movw	r20, r24
     d18:	99 0f       	add	r25, r25
     d1a:	66 0b       	sbc	r22, r22
     d1c:	77 0b       	sbc	r23, r23
     d1e:	4d 87       	std	Y+13, r20	; 0x0d
     d20:	5e 87       	std	Y+14, r21	; 0x0e
     d22:	6f 87       	std	Y+15, r22	; 0x0f
     d24:	78 8b       	std	Y+16, r23	; 0x10
     d26:	b9 01       	movw	r22, r18
     d28:	33 0f       	add	r19, r19
     d2a:	88 0b       	sbc	r24, r24
     d2c:	99 0b       	sbc	r25, r25
     d2e:	69 8b       	std	Y+17, r22	; 0x11
     d30:	7a 8b       	std	Y+18, r23	; 0x12
     d32:	8b 8b       	std	Y+19, r24	; 0x13
     d34:	9c 8b       	std	Y+20, r25	; 0x14
     d36:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     d3a:	7e 8b       	std	Y+22, r23	; 0x16
     d3c:	6d 8b       	std	Y+21, r22	; 0x15
     d3e:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     d42:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     d46:	07 2e       	mov	r0, r23
     d48:	00 0c       	add	r0, r0
     d4a:	88 0b       	sbc	r24, r24
     d4c:	99 0b       	sbc	r25, r25
     d4e:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     d52:	69 87       	std	Y+9, r22	; 0x09
     d54:	7a 87       	std	Y+10, r23	; 0x0a
     d56:	8b 87       	std	Y+11, r24	; 0x0b
     d58:	9c 87       	std	Y+12, r25	; 0x0c
     d5a:	2b ed       	ldi	r18, 0xDB	; 219
     d5c:	3f e0       	ldi	r19, 0x0F	; 15
     d5e:	49 ec       	ldi	r20, 0xC9	; 201
     d60:	50 e4       	ldi	r21, 0x40	; 64
     d62:	6d 81       	ldd	r22, Y+5	; 0x05
     d64:	7e 81       	ldd	r23, Y+6	; 0x06
     d66:	8f 81       	ldd	r24, Y+7	; 0x07
     d68:	98 85       	ldd	r25, Y+8	; 0x08
     d6a:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     d6e:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
     d72:	23 e8       	ldi	r18, 0x83	; 131
     d74:	39 ef       	ldi	r19, 0xF9	; 249
     d76:	42 e2       	ldi	r20, 0x22	; 34
     d78:	5e e3       	ldi	r21, 0x3E	; 62
     d7a:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     d7e:	2d 81       	ldd	r18, Y+5	; 0x05
     d80:	3e 81       	ldd	r19, Y+6	; 0x06
     d82:	4f 81       	ldd	r20, Y+7	; 0x07
     d84:	58 85       	ldd	r21, Y+8	; 0x08
     d86:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     d8a:	4b 01       	movw	r8, r22
     d8c:	5c 01       	movw	r10, r24
     d8e:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     d92:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     d96:	07 2e       	mov	r0, r23
     d98:	00 0c       	add	r0, r0
     d9a:	88 0b       	sbc	r24, r24
     d9c:	99 0b       	sbc	r25, r25
     d9e:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     da2:	2b 01       	movw	r4, r22
     da4:	3c 01       	movw	r6, r24
     da6:	6d 85       	ldd	r22, Y+13	; 0x0d
     da8:	7e 85       	ldd	r23, Y+14	; 0x0e
     daa:	8f 85       	ldd	r24, Y+15	; 0x0f
     dac:	98 89       	ldd	r25, Y+16	; 0x10
     dae:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     db2:	a5 01       	movw	r20, r10
     db4:	94 01       	movw	r18, r8
     db6:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     dba:	9b 01       	movw	r18, r22
     dbc:	ac 01       	movw	r20, r24
     dbe:	c3 01       	movw	r24, r6
     dc0:	b2 01       	movw	r22, r4
     dc2:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
     dc6:	29 85       	ldd	r18, Y+9	; 0x09
     dc8:	3a 85       	ldd	r19, Y+10	; 0x0a
     dca:	4b 85       	ldd	r20, Y+11	; 0x0b
     dcc:	5c 85       	ldd	r21, Y+12	; 0x0c
     dce:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     dd2:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     dd6:	2b 01       	movw	r4, r22
     dd8:	3c 01       	movw	r6, r24
     dda:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     dde:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     de2:	07 2e       	mov	r0, r23
     de4:	00 0c       	add	r0, r0
     de6:	88 0b       	sbc	r24, r24
     de8:	99 0b       	sbc	r25, r25
     dea:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     dee:	6b 01       	movw	r12, r22
     df0:	7c 01       	movw	r14, r24
     df2:	69 89       	ldd	r22, Y+17	; 0x11
     df4:	7a 89       	ldd	r23, Y+18	; 0x12
     df6:	8b 89       	ldd	r24, Y+19	; 0x13
     df8:	9c 89       	ldd	r25, Y+20	; 0x14
     dfa:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     dfe:	a5 01       	movw	r20, r10
     e00:	94 01       	movw	r18, r8
     e02:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     e06:	9b 01       	movw	r18, r22
     e08:	ac 01       	movw	r20, r24
     e0a:	c7 01       	movw	r24, r14
     e0c:	b6 01       	movw	r22, r12
     e0e:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     e12:	29 85       	ldd	r18, Y+9	; 0x09
     e14:	3a 85       	ldd	r19, Y+10	; 0x0a
     e16:	4b 85       	ldd	r20, Y+11	; 0x0b
     e18:	5c 85       	ldd	r21, Y+12	; 0x0c
     e1a:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     e1e:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     e22:	dc 01       	movw	r26, r24
     e24:	cb 01       	movw	r24, r22
     e26:	b2 01       	movw	r22, r4
     e28:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
     e2c:	8d 89       	ldd	r24, Y+21	; 0x15
     e2e:	9e 89       	ldd	r25, Y+22	; 0x16
     e30:	4c 01       	movw	r8, r24
     e32:	99 0f       	add	r25, r25
     e34:	aa 08       	sbc	r10, r10
     e36:	bb 08       	sbc	r11, r11
     e38:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     e3c:	6b 01       	movw	r12, r22
     e3e:	7c 01       	movw	r14, r24
     e40:	20 e0       	ldi	r18, 0x00	; 0
     e42:	30 e0       	ldi	r19, 0x00	; 0
     e44:	40 e2       	ldi	r20, 0x20	; 32
     e46:	51 e4       	ldi	r21, 0x41	; 65
     e48:	69 81       	ldd	r22, Y+1	; 0x01
     e4a:	7a 81       	ldd	r23, Y+2	; 0x02
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	9c 81       	ldd	r25, Y+4	; 0x04
     e50:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     e54:	2b 01       	movw	r4, r22
     e56:	3c 01       	movw	r6, r24
     e58:	c7 01       	movw	r24, r14
     e5a:	b6 01       	movw	r22, r12
     e5c:	68 19       	sub	r22, r8
     e5e:	79 09       	sbc	r23, r9
     e60:	8a 09       	sbc	r24, r10
     e62:	9b 09       	sbc	r25, r11
     e64:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
     e68:	a3 01       	movw	r20, r6
     e6a:	92 01       	movw	r18, r4
     e6c:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__cmpsf2>
     e70:	88 23       	and	r24, r24
     e72:	14 f3       	brlt	.-60     	; 0xe38 <motorControl+0x3d8>
     e74:	2a e0       	ldi	r18, 0x0A	; 10
     e76:	37 ed       	ldi	r19, 0xD7	; 215
     e78:	43 e2       	ldi	r20, 0x23	; 35
     e7a:	5c e3       	ldi	r21, 0x3C	; 60
     e7c:	6d 81       	ldd	r22, Y+5	; 0x05
     e7e:	7e 81       	ldd	r23, Y+6	; 0x06
     e80:	8f 81       	ldd	r24, Y+7	; 0x07
     e82:	98 85       	ldd	r25, Y+8	; 0x08
     e84:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     e88:	6d 83       	std	Y+5, r22	; 0x05
     e8a:	7e 83       	std	Y+6, r23	; 0x06
     e8c:	8f 83       	std	Y+7, r24	; 0x07
     e8e:	98 87       	std	Y+8, r25	; 0x08
     e90:	01 50       	subi	r16, 0x01	; 1
     e92:	11 09       	sbc	r17, r1
     e94:	09 f0       	breq	.+2      	; 0xe98 <motorControl+0x438>
     e96:	4f cf       	rjmp	.-354    	; 0xd36 <motorControl+0x2d6>
     e98:	88 27       	eor	r24, r24
     e9a:	99 27       	eor	r25, r25
     e9c:	82 19       	sub	r24, r2
     e9e:	93 09       	sbc	r25, r3
     ea0:	90 93 d2 01 	sts	0x01D2, r25	; 0x8001d2 <speedCurrentRight+0x1>
     ea4:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <speedCurrentRight>
     ea8:	30 92 d0 01 	sts	0x01D0, r3	; 0x8001d0 <speedCurrentLeft+0x1>
     eac:	20 92 cf 01 	sts	0x01CF, r2	; 0x8001cf <speedCurrentLeft>
     eb0:	05 e6       	ldi	r16, 0x65	; 101
     eb2:	10 e0       	ldi	r17, 0x00	; 0
     eb4:	19 82       	std	Y+1, r1	; 0x01
     eb6:	1a 82       	std	Y+2, r1	; 0x02
     eb8:	1b 82       	std	Y+3, r1	; 0x03
     eba:	1c 82       	std	Y+4, r1	; 0x04
     ebc:	9c 01       	movw	r18, r24
     ebe:	99 0f       	add	r25, r25
     ec0:	44 0b       	sbc	r20, r20
     ec2:	55 0b       	sbc	r21, r21
     ec4:	29 87       	std	Y+9, r18	; 0x09
     ec6:	3a 87       	std	Y+10, r19	; 0x0a
     ec8:	4b 87       	std	Y+11, r20	; 0x0b
     eca:	5c 87       	std	Y+12, r21	; 0x0c
     ecc:	c1 2c       	mov	r12, r1
     ece:	d1 2c       	mov	r13, r1
     ed0:	76 01       	movw	r14, r12
     ed2:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     ed6:	7e 87       	std	Y+14, r23	; 0x0e
     ed8:	6d 87       	std	Y+13, r22	; 0x0d
     eda:	60 91 d3 01 	lds	r22, 0x01D3	; 0x8001d3 <speedCurrent>
     ede:	70 91 d4 01 	lds	r23, 0x01D4	; 0x8001d4 <speedCurrent+0x1>
     ee2:	07 2e       	mov	r0, r23
     ee4:	00 0c       	add	r0, r0
     ee6:	88 0b       	sbc	r24, r24
     ee8:	99 0b       	sbc	r25, r25
     eea:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     eee:	69 83       	std	Y+1, r22	; 0x01
     ef0:	7a 83       	std	Y+2, r23	; 0x02
     ef2:	8b 83       	std	Y+3, r24	; 0x03
     ef4:	9c 83       	std	Y+4, r25	; 0x04
     ef6:	2b ed       	ldi	r18, 0xDB	; 219
     ef8:	3f e0       	ldi	r19, 0x0F	; 15
     efa:	49 ec       	ldi	r20, 0xC9	; 201
     efc:	50 e4       	ldi	r21, 0x40	; 64
     efe:	c7 01       	movw	r24, r14
     f00:	b6 01       	movw	r22, r12
     f02:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     f06:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
     f0a:	23 e8       	ldi	r18, 0x83	; 131
     f0c:	39 ef       	ldi	r19, 0xF9	; 249
     f0e:	42 e2       	ldi	r20, 0x22	; 34
     f10:	5e e3       	ldi	r21, 0x3E	; 62
     f12:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     f16:	a7 01       	movw	r20, r14
     f18:	96 01       	movw	r18, r12
     f1a:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     f1e:	4b 01       	movw	r8, r22
     f20:	5c 01       	movw	r10, r24
     f22:	69 85       	ldd	r22, Y+9	; 0x09
     f24:	7a 85       	ldd	r23, Y+10	; 0x0a
     f26:	8b 85       	ldd	r24, Y+11	; 0x0b
     f28:	9c 85       	ldd	r25, Y+12	; 0x0c
     f2a:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     f2e:	9b 01       	movw	r18, r22
     f30:	ac 01       	movw	r20, r24
     f32:	c5 01       	movw	r24, r10
     f34:	b4 01       	movw	r22, r8
     f36:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
     f3a:	4b 01       	movw	r8, r22
     f3c:	5c 01       	movw	r10, r24
     f3e:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
     f42:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
     f46:	07 2e       	mov	r0, r23
     f48:	00 0c       	add	r0, r0
     f4a:	88 0b       	sbc	r24, r24
     f4c:	99 0b       	sbc	r25, r25
     f4e:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     f52:	a5 01       	movw	r20, r10
     f54:	94 01       	movw	r18, r8
     f56:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
     f5a:	29 81       	ldd	r18, Y+1	; 0x01
     f5c:	3a 81       	ldd	r19, Y+2	; 0x02
     f5e:	4b 81       	ldd	r20, Y+3	; 0x03
     f60:	5c 81       	ldd	r21, Y+4	; 0x04
     f62:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     f66:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     f6a:	6d 83       	std	Y+5, r22	; 0x05
     f6c:	7e 83       	std	Y+6, r23	; 0x06
     f6e:	8f 83       	std	Y+7, r24	; 0x07
     f70:	98 87       	std	Y+8, r25	; 0x08
     f72:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
     f76:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
     f7a:	07 2e       	mov	r0, r23
     f7c:	00 0c       	add	r0, r0
     f7e:	88 0b       	sbc	r24, r24
     f80:	99 0b       	sbc	r25, r25
     f82:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
     f86:	a5 01       	movw	r20, r10
     f88:	94 01       	movw	r18, r8
     f8a:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     f8e:	29 81       	ldd	r18, Y+1	; 0x01
     f90:	3a 81       	ldd	r19, Y+2	; 0x02
     f92:	4b 81       	ldd	r20, Y+3	; 0x03
     f94:	5c 81       	ldd	r21, Y+4	; 0x04
     f96:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     f9a:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
     f9e:	dc 01       	movw	r26, r24
     fa0:	cb 01       	movw	r24, r22
     fa2:	6d 81       	ldd	r22, Y+5	; 0x05
     fa4:	7e 81       	ldd	r23, Y+6	; 0x06
     fa6:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
     faa:	4d 85       	ldd	r20, Y+13	; 0x0d
     fac:	5e 85       	ldd	r21, Y+14	; 0x0e
     fae:	4a 01       	movw	r8, r20
     fb0:	55 0f       	add	r21, r21
     fb2:	aa 08       	sbc	r10, r10
     fb4:	bb 08       	sbc	r11, r11
     fb6:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
     fba:	68 19       	sub	r22, r8
     fbc:	79 09       	sbc	r23, r9
     fbe:	8a 09       	sbc	r24, r10
     fc0:	9b 09       	sbc	r25, r11
     fc2:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
     fc6:	9b 01       	movw	r18, r22
     fc8:	ac 01       	movw	r20, r24
     fca:	c3 01       	movw	r24, r6
     fcc:	b2 01       	movw	r22, r4
     fce:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <__gesf2>
     fd2:	18 16       	cp	r1, r24
     fd4:	84 f3       	brlt	.-32     	; 0xfb6 <motorControl+0x556>
     fd6:	2a e0       	ldi	r18, 0x0A	; 10
     fd8:	37 ed       	ldi	r19, 0xD7	; 215
     fda:	43 e2       	ldi	r20, 0x23	; 35
     fdc:	5c e3       	ldi	r21, 0x3C	; 60
     fde:	c7 01       	movw	r24, r14
     fe0:	b6 01       	movw	r22, r12
     fe2:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
     fe6:	6b 01       	movw	r12, r22
     fe8:	7c 01       	movw	r14, r24
     fea:	01 50       	subi	r16, 0x01	; 1
     fec:	11 09       	sbc	r17, r1
     fee:	09 f0       	breq	.+2      	; 0xff2 <motorControl+0x592>
     ff0:	70 cf       	rjmp	.-288    	; 0xed2 <motorControl+0x472>
     ff2:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <speedCurrentRight+0x1>
     ff6:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <speedCurrentRight>
     ffa:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <speedCurrentLeft+0x1>
     ffe:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <speedCurrentLeft>
    1002:	62 c1       	rjmp	.+708    	; 0x12c8 <motorControl+0x868>
    1004:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <speedCurrentRight>
    1008:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
    100c:	91 01       	movw	r18, r2
    100e:	28 1b       	sub	r18, r24
    1010:	39 0b       	sbc	r19, r25
    1012:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <speedCurrentLeft>
    1016:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
    101a:	82 0d       	add	r24, r2
    101c:	93 1d       	adc	r25, r3
    101e:	65 e6       	ldi	r22, 0x65	; 101
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	7a 8b       	std	Y+18, r23	; 0x12
    1024:	69 8b       	std	Y+17, r22	; 0x11
    1026:	1d 82       	std	Y+5, r1	; 0x05
    1028:	1e 82       	std	Y+6, r1	; 0x06
    102a:	1f 82       	std	Y+7, r1	; 0x07
    102c:	18 86       	std	Y+8, r1	; 0x08
    102e:	a9 01       	movw	r20, r18
    1030:	33 0f       	add	r19, r19
    1032:	66 0b       	sbc	r22, r22
    1034:	77 0b       	sbc	r23, r23
    1036:	49 87       	std	Y+9, r20	; 0x09
    1038:	5a 87       	std	Y+10, r21	; 0x0a
    103a:	6b 87       	std	Y+11, r22	; 0x0b
    103c:	7c 87       	std	Y+12, r23	; 0x0c
    103e:	9c 01       	movw	r18, r24
    1040:	99 0f       	add	r25, r25
    1042:	44 0b       	sbc	r20, r20
    1044:	55 0b       	sbc	r21, r21
    1046:	2d 87       	std	Y+13, r18	; 0x0d
    1048:	3e 87       	std	Y+14, r19	; 0x0e
    104a:	4f 87       	std	Y+15, r20	; 0x0f
    104c:	58 8b       	std	Y+16, r21	; 0x10
    104e:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
    1052:	8b 01       	movw	r16, r22
    1054:	2b ed       	ldi	r18, 0xDB	; 219
    1056:	3f e0       	ldi	r19, 0x0F	; 15
    1058:	49 ec       	ldi	r20, 0xC9	; 201
    105a:	50 e4       	ldi	r21, 0x40	; 64
    105c:	6d 81       	ldd	r22, Y+5	; 0x05
    105e:	7e 81       	ldd	r23, Y+6	; 0x06
    1060:	8f 81       	ldd	r24, Y+7	; 0x07
    1062:	98 85       	ldd	r25, Y+8	; 0x08
    1064:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    1068:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
    106c:	23 e8       	ldi	r18, 0x83	; 131
    106e:	39 ef       	ldi	r19, 0xF9	; 249
    1070:	42 e2       	ldi	r20, 0x22	; 34
    1072:	5e e3       	ldi	r21, 0x3E	; 62
    1074:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    1078:	2d 81       	ldd	r18, Y+5	; 0x05
    107a:	3e 81       	ldd	r19, Y+6	; 0x06
    107c:	4f 81       	ldd	r20, Y+7	; 0x07
    107e:	58 85       	ldd	r21, Y+8	; 0x08
    1080:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    1084:	6b 01       	movw	r12, r22
    1086:	7c 01       	movw	r14, r24
    1088:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
    108c:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
    1090:	07 2e       	mov	r0, r23
    1092:	00 0c       	add	r0, r0
    1094:	88 0b       	sbc	r24, r24
    1096:	99 0b       	sbc	r25, r25
    1098:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    109c:	4b 01       	movw	r8, r22
    109e:	5c 01       	movw	r10, r24
    10a0:	69 85       	ldd	r22, Y+9	; 0x09
    10a2:	7a 85       	ldd	r23, Y+10	; 0x0a
    10a4:	8b 85       	ldd	r24, Y+11	; 0x0b
    10a6:	9c 85       	ldd	r25, Y+12	; 0x0c
    10a8:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    10ac:	a7 01       	movw	r20, r14
    10ae:	96 01       	movw	r18, r12
    10b0:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    10b4:	9b 01       	movw	r18, r22
    10b6:	ac 01       	movw	r20, r24
    10b8:	c5 01       	movw	r24, r10
    10ba:	b4 01       	movw	r22, r8
    10bc:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    10c0:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
    10c4:	4b 01       	movw	r8, r22
    10c6:	5c 01       	movw	r10, r24
    10c8:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
    10cc:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
    10d0:	07 2e       	mov	r0, r23
    10d2:	00 0c       	add	r0, r0
    10d4:	88 0b       	sbc	r24, r24
    10d6:	99 0b       	sbc	r25, r25
    10d8:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    10dc:	2b 01       	movw	r4, r22
    10de:	3c 01       	movw	r6, r24
    10e0:	6d 85       	ldd	r22, Y+13	; 0x0d
    10e2:	7e 85       	ldd	r23, Y+14	; 0x0e
    10e4:	8f 85       	ldd	r24, Y+15	; 0x0f
    10e6:	98 89       	ldd	r25, Y+16	; 0x10
    10e8:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    10ec:	a7 01       	movw	r20, r14
    10ee:	96 01       	movw	r18, r12
    10f0:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    10f4:	9b 01       	movw	r18, r22
    10f6:	ac 01       	movw	r20, r24
    10f8:	c3 01       	movw	r24, r6
    10fa:	b2 01       	movw	r22, r4
    10fc:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
    1100:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
    1104:	dc 01       	movw	r26, r24
    1106:	cb 01       	movw	r24, r22
    1108:	b4 01       	movw	r22, r8
    110a:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    110e:	48 01       	movw	r8, r16
    1110:	11 0f       	add	r17, r17
    1112:	aa 08       	sbc	r10, r10
    1114:	bb 08       	sbc	r11, r11
    1116:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
    111a:	2b 01       	movw	r4, r22
    111c:	3c 01       	movw	r6, r24
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	40 e2       	ldi	r20, 0x20	; 32
    1124:	51 e4       	ldi	r21, 0x41	; 65
    1126:	69 81       	ldd	r22, Y+1	; 0x01
    1128:	7a 81       	ldd	r23, Y+2	; 0x02
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	9c 81       	ldd	r25, Y+4	; 0x04
    112e:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    1132:	6b 01       	movw	r12, r22
    1134:	7c 01       	movw	r14, r24
    1136:	c3 01       	movw	r24, r6
    1138:	b2 01       	movw	r22, r4
    113a:	68 19       	sub	r22, r8
    113c:	79 09       	sbc	r23, r9
    113e:	8a 09       	sbc	r24, r10
    1140:	9b 09       	sbc	r25, r11
    1142:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
    1146:	a7 01       	movw	r20, r14
    1148:	96 01       	movw	r18, r12
    114a:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__cmpsf2>
    114e:	88 23       	and	r24, r24
    1150:	14 f3       	brlt	.-60     	; 0x1116 <motorControl+0x6b6>
    1152:	2a e0       	ldi	r18, 0x0A	; 10
    1154:	37 ed       	ldi	r19, 0xD7	; 215
    1156:	43 e2       	ldi	r20, 0x23	; 35
    1158:	5c e3       	ldi	r21, 0x3C	; 60
    115a:	6d 81       	ldd	r22, Y+5	; 0x05
    115c:	7e 81       	ldd	r23, Y+6	; 0x06
    115e:	8f 81       	ldd	r24, Y+7	; 0x07
    1160:	98 85       	ldd	r25, Y+8	; 0x08
    1162:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    1166:	6d 83       	std	Y+5, r22	; 0x05
    1168:	7e 83       	std	Y+6, r23	; 0x06
    116a:	8f 83       	std	Y+7, r24	; 0x07
    116c:	98 87       	std	Y+8, r25	; 0x08
    116e:	a9 89       	ldd	r26, Y+17	; 0x11
    1170:	ba 89       	ldd	r27, Y+18	; 0x12
    1172:	11 97       	sbiw	r26, 0x01	; 1
    1174:	ba 8b       	std	Y+18, r27	; 0x12
    1176:	a9 8b       	std	Y+17, r26	; 0x11
    1178:	ab 2b       	or	r26, r27
    117a:	09 f0       	breq	.+2      	; 0x117e <motorControl+0x71e>
    117c:	68 cf       	rjmp	.-304    	; 0x104e <motorControl+0x5ee>
    117e:	30 92 d2 01 	sts	0x01D2, r3	; 0x8001d2 <speedCurrentRight+0x1>
    1182:	20 92 d1 01 	sts	0x01D1, r2	; 0x8001d1 <speedCurrentRight>
    1186:	31 94       	neg	r3
    1188:	21 94       	neg	r2
    118a:	31 08       	sbc	r3, r1
    118c:	30 92 d0 01 	sts	0x01D0, r3	; 0x8001d0 <speedCurrentLeft+0x1>
    1190:	20 92 cf 01 	sts	0x01CF, r2	; 0x8001cf <speedCurrentLeft>
    1194:	25 e6       	ldi	r18, 0x65	; 101
    1196:	30 e0       	ldi	r19, 0x00	; 0
    1198:	19 82       	std	Y+1, r1	; 0x01
    119a:	1a 82       	std	Y+2, r1	; 0x02
    119c:	1b 82       	std	Y+3, r1	; 0x03
    119e:	1c 82       	std	Y+4, r1	; 0x04
    11a0:	a1 01       	movw	r20, r2
    11a2:	33 0c       	add	r3, r3
    11a4:	66 0b       	sbc	r22, r22
    11a6:	77 0b       	sbc	r23, r23
    11a8:	4d 83       	std	Y+5, r20	; 0x05
    11aa:	5e 83       	std	Y+6, r21	; 0x06
    11ac:	6f 83       	std	Y+7, r22	; 0x07
    11ae:	78 87       	std	Y+8, r23	; 0x08
    11b0:	3a 87       	std	Y+10, r19	; 0x0a
    11b2:	29 87       	std	Y+9, r18	; 0x09
    11b4:	81 2c       	mov	r8, r1
    11b6:	91 2c       	mov	r9, r1
    11b8:	54 01       	movw	r10, r8
    11ba:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
    11be:	8b 01       	movw	r16, r22
    11c0:	2b ed       	ldi	r18, 0xDB	; 219
    11c2:	3f e0       	ldi	r19, 0x0F	; 15
    11c4:	49 ec       	ldi	r20, 0xC9	; 201
    11c6:	50 e4       	ldi	r21, 0x40	; 64
    11c8:	c5 01       	movw	r24, r10
    11ca:	b4 01       	movw	r22, r8
    11cc:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    11d0:	0e 94 5d 0d 	call	0x1aba	; 0x1aba <sin>
    11d4:	23 e8       	ldi	r18, 0x83	; 131
    11d6:	39 ef       	ldi	r19, 0xF9	; 249
    11d8:	42 e2       	ldi	r20, 0x22	; 34
    11da:	5e e3       	ldi	r21, 0x3E	; 62
    11dc:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    11e0:	a5 01       	movw	r20, r10
    11e2:	94 01       	movw	r18, r8
    11e4:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    11e8:	2b 01       	movw	r4, r22
    11ea:	3c 01       	movw	r6, r24
    11ec:	6d 81       	ldd	r22, Y+5	; 0x05
    11ee:	7e 81       	ldd	r23, Y+6	; 0x06
    11f0:	8f 81       	ldd	r24, Y+7	; 0x07
    11f2:	98 85       	ldd	r25, Y+8	; 0x08
    11f4:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    11f8:	9b 01       	movw	r18, r22
    11fa:	ac 01       	movw	r20, r24
    11fc:	c3 01       	movw	r24, r6
    11fe:	b2 01       	movw	r22, r4
    1200:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    1204:	2b 01       	movw	r4, r22
    1206:	3c 01       	movw	r6, r24
    1208:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <speedCurrentRight>
    120c:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <speedCurrentRight+0x1>
    1210:	07 2e       	mov	r0, r23
    1212:	00 0c       	add	r0, r0
    1214:	88 0b       	sbc	r24, r24
    1216:	99 0b       	sbc	r25, r25
    1218:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    121c:	a3 01       	movw	r20, r6
    121e:	92 01       	movw	r18, r4
    1220:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    1224:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
    1228:	69 83       	std	Y+1, r22	; 0x01
    122a:	7a 83       	std	Y+2, r23	; 0x02
    122c:	8b 83       	std	Y+3, r24	; 0x03
    122e:	9c 83       	std	Y+4, r25	; 0x04
    1230:	60 91 cf 01 	lds	r22, 0x01CF	; 0x8001cf <speedCurrentLeft>
    1234:	70 91 d0 01 	lds	r23, 0x01D0	; 0x8001d0 <speedCurrentLeft+0x1>
    1238:	07 2e       	mov	r0, r23
    123a:	00 0c       	add	r0, r0
    123c:	88 0b       	sbc	r24, r24
    123e:	99 0b       	sbc	r25, r25
    1240:	0e 94 3b 0c 	call	0x1876	; 0x1876 <__floatsisf>
    1244:	a3 01       	movw	r20, r6
    1246:	92 01       	movw	r18, r4
    1248:	0e 94 91 0b 	call	0x1722	; 0x1722 <__subsf3>
    124c:	0e 94 03 0c 	call	0x1806	; 0x1806 <__fixsfsi>
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	69 81       	ldd	r22, Y+1	; 0x01
    1256:	7a 81       	ldd	r23, Y+2	; 0x02
    1258:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    125c:	28 01       	movw	r4, r16
    125e:	11 0f       	add	r17, r17
    1260:	66 08       	sbc	r6, r6
    1262:	77 08       	sbc	r7, r7
    1264:	0e 94 e3 15 	call	0x2bc6	; 0x2bc6 <get_ms>
    1268:	64 19       	sub	r22, r4
    126a:	75 09       	sbc	r23, r5
    126c:	86 09       	sbc	r24, r6
    126e:	97 09       	sbc	r25, r7
    1270:	0e 94 39 0c 	call	0x1872	; 0x1872 <__floatunsisf>
    1274:	9b 01       	movw	r18, r22
    1276:	ac 01       	movw	r20, r24
    1278:	c7 01       	movw	r24, r14
    127a:	b6 01       	movw	r22, r12
    127c:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <__gesf2>
    1280:	18 16       	cp	r1, r24
    1282:	84 f3       	brlt	.-32     	; 0x1264 <motorControl+0x804>
    1284:	2a e0       	ldi	r18, 0x0A	; 10
    1286:	37 ed       	ldi	r19, 0xD7	; 215
    1288:	43 e2       	ldi	r20, 0x23	; 35
    128a:	5c e3       	ldi	r21, 0x3C	; 60
    128c:	c5 01       	movw	r24, r10
    128e:	b4 01       	movw	r22, r8
    1290:	0e 94 92 0b 	call	0x1724	; 0x1724 <__addsf3>
    1294:	4b 01       	movw	r8, r22
    1296:	5c 01       	movw	r10, r24
    1298:	69 85       	ldd	r22, Y+9	; 0x09
    129a:	7a 85       	ldd	r23, Y+10	; 0x0a
    129c:	61 50       	subi	r22, 0x01	; 1
    129e:	71 09       	sbc	r23, r1
    12a0:	7a 87       	std	Y+10, r23	; 0x0a
    12a2:	69 87       	std	Y+9, r22	; 0x09
    12a4:	67 2b       	or	r22, r23
    12a6:	09 f0       	breq	.+2      	; 0x12aa <motorControl+0x84a>
    12a8:	88 cf       	rjmp	.-240    	; 0x11ba <motorControl+0x75a>
    12aa:	10 92 d2 01 	sts	0x01D2, r1	; 0x8001d2 <speedCurrentRight+0x1>
    12ae:	10 92 d1 01 	sts	0x01D1, r1	; 0x8001d1 <speedCurrentRight>
    12b2:	10 92 d0 01 	sts	0x01D0, r1	; 0x8001d0 <speedCurrentLeft+0x1>
    12b6:	10 92 cf 01 	sts	0x01CF, r1	; 0x8001cf <speedCurrentLeft>
    12ba:	06 c0       	rjmp	.+12     	; 0x12c8 <motorControl+0x868>
    12bc:	60 e0       	ldi	r22, 0x00	; 0
    12be:	70 e0       	ldi	r23, 0x00	; 0
    12c0:	80 e0       	ldi	r24, 0x00	; 0
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    12c8:	66 96       	adiw	r28, 0x16	; 22
    12ca:	0f b6       	in	r0, 0x3f	; 63
    12cc:	f8 94       	cli
    12ce:	de bf       	out	0x3e, r29	; 62
    12d0:	0f be       	out	0x3f, r0	; 63
    12d2:	cd bf       	out	0x3d, r28	; 61
    12d4:	df 91       	pop	r29
    12d6:	cf 91       	pop	r28
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	df 90       	pop	r13
    12e2:	cf 90       	pop	r12
    12e4:	bf 90       	pop	r11
    12e6:	af 90       	pop	r10
    12e8:	9f 90       	pop	r9
    12ea:	8f 90       	pop	r8
    12ec:	7f 90       	pop	r7
    12ee:	6f 90       	pop	r6
    12f0:	5f 90       	pop	r5
    12f2:	4f 90       	pop	r4
    12f4:	3f 90       	pop	r3
    12f6:	2f 90       	pop	r2
    12f8:	08 95       	ret

000012fa <initialize>:
    12fa:	cf 93       	push	r28
    12fc:	df 93       	push	r29
    12fe:	80 ed       	ldi	r24, 0xD0	; 208
    1300:	97 e0       	ldi	r25, 0x07	; 7
    1302:	0e 94 39 16 	call	0x2c72	; 0x2c72 <pololu_3pi_init>
    1306:	1b c0       	rjmp	.+54     	; 0x133e <initialize+0x44>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
    1308:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <read_battery_millivolts_3pi>
    130c:	ec 01       	movw	r28, r24
    130e:	0e 94 2d 13 	call	0x265a	; 0x265a <clear>
    1312:	be 01       	movw	r22, r28
    1314:	dd 0f       	add	r29, r29
    1316:	88 0b       	sbc	r24, r24
    1318:	99 0b       	sbc	r25, r25
    131a:	0e 94 91 13 	call	0x2722	; 0x2722 <print_long>
    131e:	81 e3       	ldi	r24, 0x31	; 49
    1320:	91 e0       	ldi	r25, 0x01	; 1
    1322:	0e 94 3c 13 	call	0x2678	; 0x2678 <print>
    1326:	61 e0       	ldi	r22, 0x01	; 1
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	0e 94 b4 13 	call	0x2768	; 0x2768 <lcd_goto_xy>
    132e:	84 e3       	ldi	r24, 0x34	; 52
    1330:	91 e0       	ldi	r25, 0x01	; 1
    1332:	0e 94 3c 13 	call	0x2678	; 0x2678 <print>
    1336:	84 e6       	ldi	r24, 0x64	; 100
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    133e:	80 e1       	ldi	r24, 0x10	; 16
    1340:	0e 94 ad 14 	call	0x295a	; 0x295a <button_is_pressed>
    1344:	88 23       	and	r24, r24
    1346:	01 f3       	breq	.-64     	; 0x1308 <initialize+0xe>
    1348:	80 e1       	ldi	r24, 0x10	; 16
    134a:	0e 94 99 14 	call	0x2932	; 0x2932 <wait_for_button_release>
    134e:	88 ee       	ldi	r24, 0xE8	; 232
    1350:	93 e0       	ldi	r25, 0x03	; 3
    1352:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    1356:	cc ee       	ldi	r28, 0xEC	; 236
    1358:	df ef       	ldi	r29, 0xFF	; 255
    135a:	c8 32       	cpi	r28, 0x28	; 40
    135c:	d1 05       	cpc	r29, r1
    135e:	38 f0       	brcs	.+14     	; 0x136e <initialize+0x74>
    1360:	68 ed       	ldi	r22, 0xD8	; 216
    1362:	7f ef       	ldi	r23, 0xFF	; 255
    1364:	88 e2       	ldi	r24, 0x28	; 40
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    136c:	06 c0       	rjmp	.+12     	; 0x137a <initialize+0x80>
    136e:	68 e2       	ldi	r22, 0x28	; 40
    1370:	70 e0       	ldi	r23, 0x00	; 0
    1372:	88 ed       	ldi	r24, 0xD8	; 216
    1374:	9f ef       	ldi	r25, 0xFF	; 255
    1376:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    137a:	81 e0       	ldi	r24, 0x01	; 1
    137c:	0e 94 fd 15 	call	0x2bfa	; 0x2bfa <calibrate_line_sensors>
    1380:	84 e1       	ldi	r24, 0x14	; 20
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    1388:	21 96       	adiw	r28, 0x01	; 1
    138a:	cc 33       	cpi	r28, 0x3C	; 60
    138c:	d1 05       	cpc	r29, r1
    138e:	29 f7       	brne	.-54     	; 0x135a <initialize+0x60>
    1390:	60 e0       	ldi	r22, 0x00	; 0
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	80 e0       	ldi	r24, 0x00	; 0
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <set_motors>
    139c:	1f c0       	rjmp	.+62     	; 0x13dc <initialize+0xe2>
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
    139e:	59 9a       	sbi	0x0b, 1	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    13a0:	51 9a       	sbi	0x0a, 1	; 10
    13a2:	61 e0       	ldi	r22, 0x01	; 1
    13a4:	81 e3       	ldi	r24, 0x31	; 49
    13a6:	92 e0       	ldi	r25, 0x02	; 2
    13a8:	0e 94 03 16 	call	0x2c06	; 0x2c06 <read_line>
    13ac:	ec 01       	movw	r28, r24
    13ae:	0e 94 2d 13 	call	0x265a	; 0x265a <clear>
    13b2:	8b e3       	ldi	r24, 0x3B	; 59
    13b4:	91 e0       	ldi	r25, 0x01	; 1
    13b6:	0e 94 3c 13 	call	0x2678	; 0x2678 <print>
    13ba:	be 01       	movw	r22, r28
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	0e 94 91 13 	call	0x2722	; 0x2722 <print_long>
    13c4:	61 e0       	ldi	r22, 0x01	; 1
    13c6:	80 e0       	ldi	r24, 0x00	; 0
    13c8:	0e 94 b4 13 	call	0x2768	; 0x2768 <lcd_goto_xy>
    13cc:	8c e3       	ldi	r24, 0x3C	; 60
    13ce:	91 e0       	ldi	r25, 0x01	; 1
    13d0:	0e 94 3c 13 	call	0x2678	; 0x2678 <print>
    13d4:	84 e6       	ldi	r24, 0x64	; 100
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    13dc:	80 e1       	ldi	r24, 0x10	; 16
    13de:	0e 94 ad 14 	call	0x295a	; 0x295a <button_is_pressed>
    13e2:	88 23       	and	r24, r24
    13e4:	e1 f2       	breq	.-72     	; 0x139e <initialize+0xa4>
    13e6:	80 e1       	ldi	r24, 0x10	; 16
    13e8:	0e 94 99 14 	call	0x2932	; 0x2932 <wait_for_button_release>
    13ec:	0e 94 2d 13 	call	0x265a	; 0x265a <clear>
    13f0:	8e e3       	ldi	r24, 0x3E	; 62
    13f2:	91 e0       	ldi	r25, 0x01	; 1
    13f4:	0e 94 3c 13 	call	0x2678	; 0x2678 <print>
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
    13f8:	59 9a       	sbi	0x0b, 1	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    13fa:	51 9a       	sbi	0x0a, 1	; 10
    13fc:	df 91       	pop	r29
    13fe:	cf 91       	pop	r28
    1400:	08 95       	ret

00001402 <followLine>:
    1402:	cf 93       	push	r28
    1404:	df 93       	push	r29
    1406:	61 e0       	ldi	r22, 0x01	; 1
    1408:	81 e3       	ldi	r24, 0x31	; 49
    140a:	92 e0       	ldi	r25, 0x02	; 2
    140c:	0e 94 03 16 	call	0x2c06	; 0x2c06 <read_line>
    1410:	ec 01       	movw	r28, r24
    1412:	0e 94 2d 13 	call	0x265a	; 0x265a <clear>
    1416:	ce 39       	cpi	r28, 0x9E	; 158
    1418:	87 e0       	ldi	r24, 0x07	; 7
    141a:	d8 07       	cpc	r29, r24
    141c:	c8 f4       	brcc	.+50     	; 0x1450 <followLine+0x4e>
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
    141e:	5f 9a       	sbi	0x0b, 7	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    1420:	57 9a       	sbi	0x0a, 7	; 10
    1422:	c8 30       	cpi	r28, 0x08	; 8
    1424:	d7 40       	sbci	r29, 0x07	; 7
    1426:	50 f4       	brcc	.+20     	; 0x143c <followLine+0x3a>
    1428:	2a e0       	ldi	r18, 0x0A	; 10
    142a:	37 ed       	ldi	r19, 0xD7	; 215
    142c:	43 e6       	ldi	r20, 0x63	; 99
    142e:	5f e3       	ldi	r21, 0x3F	; 63
    1430:	6c e4       	ldi	r22, 0x4C	; 76
    1432:	8c e3       	ldi	r24, 0x3C	; 60
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
    143a:	34 c0       	rjmp	.+104    	; 0x14a4 <followLine+0xa2>
    143c:	2a e0       	ldi	r18, 0x0A	; 10
    143e:	37 ed       	ldi	r19, 0xD7	; 215
    1440:	43 e6       	ldi	r20, 0x63	; 99
    1442:	5f e3       	ldi	r21, 0x3F	; 63
    1444:	6c e4       	ldi	r22, 0x4C	; 76
    1446:	8d e2       	ldi	r24, 0x2D	; 45
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
    144e:	2a c0       	rjmp	.+84     	; 0x14a4 <followLine+0xa2>
    1450:	c3 30       	cpi	r28, 0x03	; 3
    1452:	88 e0       	ldi	r24, 0x08	; 8
    1454:	d8 07       	cpc	r29, r24
    1456:	c8 f0       	brcs	.+50     	; 0x148a <followLine+0x88>
static inline void set_digital_output_value(struct IOStruct* ioPin, unsigned char val)
{
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
    1458:	59 9a       	sbi	0x0b, 1	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    145a:	51 9a       	sbi	0x0a, 1	; 10
    145c:	c9 39       	cpi	r28, 0x99	; 153
    145e:	d8 40       	sbci	r29, 0x08	; 8
    1460:	50 f0       	brcs	.+20     	; 0x1476 <followLine+0x74>
    1462:	2a e0       	ldi	r18, 0x0A	; 10
    1464:	37 ed       	ldi	r19, 0xD7	; 215
    1466:	43 e6       	ldi	r20, 0x63	; 99
    1468:	5f e3       	ldi	r21, 0x3F	; 63
    146a:	62 e5       	ldi	r22, 0x52	; 82
    146c:	8c e3       	ldi	r24, 0x3C	; 60
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
    1474:	17 c0       	rjmp	.+46     	; 0x14a4 <followLine+0xa2>
    1476:	2a e0       	ldi	r18, 0x0A	; 10
    1478:	37 ed       	ldi	r19, 0xD7	; 215
    147a:	43 e6       	ldi	r20, 0x63	; 99
    147c:	5f e3       	ldi	r21, 0x3F	; 63
    147e:	62 e5       	ldi	r22, 0x52	; 82
    1480:	8d e2       	ldi	r24, 0x2D	; 45
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
    1488:	0d c0       	rjmp	.+26     	; 0x14a4 <followLine+0xa2>
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
	else
		*(ioPin->portRegister) &= ~ioPin->bitmask;
    148a:	59 98       	cbi	0x0b, 1	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    148c:	51 9a       	sbi	0x0a, 1	; 10
	if (val == 0xFF)
		*(ioPin->portRegister) ^= ioPin->bitmask;
	else if (val)
		*(ioPin->portRegister) |= ioPin->bitmask;
	else
		*(ioPin->portRegister) &= ~ioPin->bitmask;
    148e:	5f 98       	cbi	0x0b, 7	; 11
// low-level method for setting the data direction (i.e. input or output) of an pin or set of pins
// described by an IOStruct pointer.
static inline void set_data_direction(struct IOStruct* ioPin, unsigned char val)
{
	if (val)
		*(ioPin->ddrRegister) |= ioPin->bitmask;
    1490:	57 9a       	sbi	0x0a, 7	; 10
    1492:	2a e0       	ldi	r18, 0x0A	; 10
    1494:	37 ed       	ldi	r19, 0xD7	; 215
    1496:	43 e6       	ldi	r20, 0x63	; 99
    1498:	5f e3       	ldi	r21, 0x3F	; 63
    149a:	66 e4       	ldi	r22, 0x46	; 70
    149c:	8c e3       	ldi	r24, 0x3C	; 60
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	0e 94 30 05 	call	0xa60	; 0xa60 <motorControl>
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	08 95       	ret

000014aa <checkAfslag>:
    14aa:	61 e0       	ldi	r22, 0x01	; 1
    14ac:	81 e3       	ldi	r24, 0x31	; 49
    14ae:	92 e0       	ldi	r25, 0x02	; 2
    14b0:	0e 94 03 16 	call	0x2c06	; 0x2c06 <read_line>
    14b4:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <sensors>
    14b8:	90 91 32 02 	lds	r25, 0x0232	; 0x800232 <sensors+0x1>
    14bc:	89 30       	cpi	r24, 0x09	; 9
    14be:	27 e0       	ldi	r18, 0x07	; 7
    14c0:	92 07       	cpc	r25, r18
    14c2:	00 f1       	brcs	.+64     	; 0x1504 <checkAfslag+0x5a>
    14c4:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    14c8:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    14cc:	28 3e       	cpi	r18, 0xE8	; 232
    14ce:	33 40       	sbci	r19, 0x03	; 3
    14d0:	c8 f4       	brcc	.+50     	; 0x1504 <checkAfslag+0x5a>
    14d2:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <sensors+0x4>
    14d6:	30 91 36 02 	lds	r19, 0x0236	; 0x800236 <sensors+0x5>
    14da:	28 3e       	cpi	r18, 0xE8	; 232
    14dc:	33 40       	sbci	r19, 0x03	; 3
    14de:	08 f0       	brcs	.+2      	; 0x14e2 <checkAfslag+0x38>
    14e0:	fb c0       	rjmp	.+502    	; 0x16d8 <checkAfslag+0x22e>
    14e2:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <sensors+0x6>
    14e6:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <sensors+0x7>
    14ea:	28 3e       	cpi	r18, 0xE8	; 232
    14ec:	33 40       	sbci	r19, 0x03	; 3
    14ee:	08 f0       	brcs	.+2      	; 0x14f2 <checkAfslag+0x48>
    14f0:	f3 c0       	rjmp	.+486    	; 0x16d8 <checkAfslag+0x22e>
    14f2:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <sensors+0x8>
    14f6:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <sensors+0x9>
    14fa:	28 3e       	cpi	r18, 0xE8	; 232
    14fc:	33 40       	sbci	r19, 0x03	; 3
    14fe:	08 f4       	brcc	.+2      	; 0x1502 <checkAfslag+0x58>
    1500:	ca c0       	rjmp	.+404    	; 0x1696 <checkAfslag+0x1ec>
    1502:	ea c0       	rjmp	.+468    	; 0x16d8 <checkAfslag+0x22e>
    1504:	88 3e       	cpi	r24, 0xE8	; 232
    1506:	23 e0       	ldi	r18, 0x03	; 3
    1508:	92 07       	cpc	r25, r18
    150a:	00 f5       	brcc	.+64     	; 0x154c <checkAfslag+0xa2>
    150c:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    1510:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    1514:	28 3e       	cpi	r18, 0xE8	; 232
    1516:	33 40       	sbci	r19, 0x03	; 3
    1518:	c8 f4       	brcc	.+50     	; 0x154c <checkAfslag+0xa2>
    151a:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <sensors+0x4>
    151e:	30 91 36 02 	lds	r19, 0x0236	; 0x800236 <sensors+0x5>
    1522:	28 3e       	cpi	r18, 0xE8	; 232
    1524:	33 40       	sbci	r19, 0x03	; 3
    1526:	08 f0       	brcs	.+2      	; 0x152a <checkAfslag+0x80>
    1528:	dd c0       	rjmp	.+442    	; 0x16e4 <checkAfslag+0x23a>
    152a:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <sensors+0x6>
    152e:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <sensors+0x7>
    1532:	28 3e       	cpi	r18, 0xE8	; 232
    1534:	33 40       	sbci	r19, 0x03	; 3
    1536:	08 f0       	brcs	.+2      	; 0x153a <checkAfslag+0x90>
    1538:	d5 c0       	rjmp	.+426    	; 0x16e4 <checkAfslag+0x23a>
    153a:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <sensors+0x8>
    153e:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <sensors+0x9>
    1542:	29 30       	cpi	r18, 0x09	; 9
    1544:	37 40       	sbci	r19, 0x07	; 7
    1546:	08 f4       	brcc	.+2      	; 0x154a <checkAfslag+0xa0>
    1548:	cd c0       	rjmp	.+410    	; 0x16e4 <checkAfslag+0x23a>
    154a:	a8 c0       	rjmp	.+336    	; 0x169c <checkAfslag+0x1f2>
    154c:	89 30       	cpi	r24, 0x09	; 9
    154e:	27 e0       	ldi	r18, 0x07	; 7
    1550:	92 07       	cpc	r25, r18
    1552:	08 f4       	brcc	.+2      	; 0x1556 <checkAfslag+0xac>
    1554:	d3 c0       	rjmp	.+422    	; 0x16fc <checkAfslag+0x252>
    1556:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    155a:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    155e:	28 3e       	cpi	r18, 0xE8	; 232
    1560:	33 40       	sbci	r19, 0x03	; 3
    1562:	b0 f4       	brcc	.+44     	; 0x1590 <checkAfslag+0xe6>
    1564:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <sensors+0x4>
    1568:	30 91 36 02 	lds	r19, 0x0236	; 0x800236 <sensors+0x5>
    156c:	29 30       	cpi	r18, 0x09	; 9
    156e:	37 40       	sbci	r19, 0x07	; 7
    1570:	78 f0       	brcs	.+30     	; 0x1590 <checkAfslag+0xe6>
    1572:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <sensors+0x6>
    1576:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <sensors+0x7>
    157a:	28 3e       	cpi	r18, 0xE8	; 232
    157c:	33 40       	sbci	r19, 0x03	; 3
    157e:	40 f4       	brcc	.+16     	; 0x1590 <checkAfslag+0xe6>
    1580:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <sensors+0x8>
    1584:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <sensors+0x9>
    1588:	29 30       	cpi	r18, 0x09	; 9
    158a:	37 40       	sbci	r19, 0x07	; 7
    158c:	08 f0       	brcs	.+2      	; 0x1590 <checkAfslag+0xe6>
    158e:	89 c0       	rjmp	.+274    	; 0x16a2 <checkAfslag+0x1f8>
    1590:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    1594:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    1598:	29 30       	cpi	r18, 0x09	; 9
    159a:	47 e0       	ldi	r20, 0x07	; 7
    159c:	34 07       	cpc	r19, r20
    159e:	b0 f0       	brcs	.+44     	; 0x15cc <checkAfslag+0x122>
    15a0:	40 91 35 02 	lds	r20, 0x0235	; 0x800235 <sensors+0x4>
    15a4:	50 91 36 02 	lds	r21, 0x0236	; 0x800236 <sensors+0x5>
    15a8:	48 3e       	cpi	r20, 0xE8	; 232
    15aa:	53 40       	sbci	r21, 0x03	; 3
    15ac:	78 f4       	brcc	.+30     	; 0x15cc <checkAfslag+0x122>
    15ae:	40 91 37 02 	lds	r20, 0x0237	; 0x800237 <sensors+0x6>
    15b2:	50 91 38 02 	lds	r21, 0x0238	; 0x800238 <sensors+0x7>
    15b6:	49 30       	cpi	r20, 0x09	; 9
    15b8:	57 40       	sbci	r21, 0x07	; 7
    15ba:	40 f0       	brcs	.+16     	; 0x15cc <checkAfslag+0x122>
    15bc:	40 91 39 02 	lds	r20, 0x0239	; 0x800239 <sensors+0x8>
    15c0:	50 91 3a 02 	lds	r21, 0x023A	; 0x80023a <sensors+0x9>
    15c4:	49 30       	cpi	r20, 0x09	; 9
    15c6:	57 40       	sbci	r21, 0x07	; 7
    15c8:	08 f0       	brcs	.+2      	; 0x15cc <checkAfslag+0x122>
    15ca:	6e c0       	rjmp	.+220    	; 0x16a8 <checkAfslag+0x1fe>
    15cc:	28 3e       	cpi	r18, 0xE8	; 232
    15ce:	33 40       	sbci	r19, 0x03	; 3
    15d0:	c8 f4       	brcc	.+50     	; 0x1604 <checkAfslag+0x15a>
    15d2:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <sensors+0x4>
    15d6:	30 91 36 02 	lds	r19, 0x0236	; 0x800236 <sensors+0x5>
    15da:	29 30       	cpi	r18, 0x09	; 9
    15dc:	37 40       	sbci	r19, 0x07	; 7
    15de:	08 f4       	brcc	.+2      	; 0x15e2 <checkAfslag+0x138>
    15e0:	95 c0       	rjmp	.+298    	; 0x170c <checkAfslag+0x262>
    15e2:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <sensors+0x6>
    15e6:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <sensors+0x7>
    15ea:	28 3e       	cpi	r18, 0xE8	; 232
    15ec:	33 40       	sbci	r19, 0x03	; 3
    15ee:	08 f0       	brcs	.+2      	; 0x15f2 <checkAfslag+0x148>
    15f0:	7f c0       	rjmp	.+254    	; 0x16f0 <checkAfslag+0x246>
    15f2:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <sensors+0x8>
    15f6:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <sensors+0x9>
    15fa:	28 3e       	cpi	r18, 0xE8	; 232
    15fc:	33 40       	sbci	r19, 0x03	; 3
    15fe:	08 f4       	brcc	.+2      	; 0x1602 <checkAfslag+0x158>
    1600:	56 c0       	rjmp	.+172    	; 0x16ae <checkAfslag+0x204>
    1602:	76 c0       	rjmp	.+236    	; 0x16f0 <checkAfslag+0x246>
    1604:	88 3e       	cpi	r24, 0xE8	; 232
    1606:	23 e0       	ldi	r18, 0x03	; 3
    1608:	92 07       	cpc	r25, r18
    160a:	18 f5       	brcc	.+70     	; 0x1652 <checkAfslag+0x1a8>
    160c:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    1610:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    1614:	28 3e       	cpi	r18, 0xE8	; 232
    1616:	33 40       	sbci	r19, 0x03	; 3
    1618:	e0 f4       	brcc	.+56     	; 0x1652 <checkAfslag+0x1a8>
    161a:	20 91 33 02 	lds	r18, 0x0233	; 0x800233 <sensors+0x2>
    161e:	30 91 34 02 	lds	r19, 0x0234	; 0x800234 <sensors+0x3>
    1622:	28 3e       	cpi	r18, 0xE8	; 232
    1624:	33 40       	sbci	r19, 0x03	; 3
    1626:	a8 f4       	brcc	.+42     	; 0x1652 <checkAfslag+0x1a8>
    1628:	20 91 35 02 	lds	r18, 0x0235	; 0x800235 <sensors+0x4>
    162c:	30 91 36 02 	lds	r19, 0x0236	; 0x800236 <sensors+0x5>
    1630:	28 3e       	cpi	r18, 0xE8	; 232
    1632:	33 40       	sbci	r19, 0x03	; 3
    1634:	70 f4       	brcc	.+28     	; 0x1652 <checkAfslag+0x1a8>
    1636:	20 91 37 02 	lds	r18, 0x0237	; 0x800237 <sensors+0x6>
    163a:	30 91 38 02 	lds	r19, 0x0238	; 0x800238 <sensors+0x7>
    163e:	28 3e       	cpi	r18, 0xE8	; 232
    1640:	33 40       	sbci	r19, 0x03	; 3
    1642:	38 f4       	brcc	.+14     	; 0x1652 <checkAfslag+0x1a8>
    1644:	20 91 39 02 	lds	r18, 0x0239	; 0x800239 <sensors+0x8>
    1648:	30 91 3a 02 	lds	r19, 0x023A	; 0x80023a <sensors+0x9>
    164c:	28 3e       	cpi	r18, 0xE8	; 232
    164e:	33 40       	sbci	r19, 0x03	; 3
    1650:	88 f1       	brcs	.+98     	; 0x16b4 <checkAfslag+0x20a>
    1652:	89 30       	cpi	r24, 0x09	; 9
    1654:	97 40       	sbci	r25, 0x07	; 7
    1656:	88 f1       	brcs	.+98     	; 0x16ba <checkAfslag+0x210>
    1658:	80 91 33 02 	lds	r24, 0x0233	; 0x800233 <sensors+0x2>
    165c:	90 91 34 02 	lds	r25, 0x0234	; 0x800234 <sensors+0x3>
    1660:	89 30       	cpi	r24, 0x09	; 9
    1662:	97 40       	sbci	r25, 0x07	; 7
    1664:	68 f1       	brcs	.+90     	; 0x16c0 <checkAfslag+0x216>
    1666:	80 91 35 02 	lds	r24, 0x0235	; 0x800235 <sensors+0x4>
    166a:	90 91 36 02 	lds	r25, 0x0236	; 0x800236 <sensors+0x5>
    166e:	89 30       	cpi	r24, 0x09	; 9
    1670:	97 40       	sbci	r25, 0x07	; 7
    1672:	48 f1       	brcs	.+82     	; 0x16c6 <checkAfslag+0x21c>
    1674:	80 91 37 02 	lds	r24, 0x0237	; 0x800237 <sensors+0x6>
    1678:	90 91 38 02 	lds	r25, 0x0238	; 0x800238 <sensors+0x7>
    167c:	89 30       	cpi	r24, 0x09	; 9
    167e:	97 40       	sbci	r25, 0x07	; 7
    1680:	28 f1       	brcs	.+74     	; 0x16cc <checkAfslag+0x222>
    1682:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <sensors+0x8>
    1686:	90 91 3a 02 	lds	r25, 0x023A	; 0x80023a <sensors+0x9>
    168a:	89 30       	cpi	r24, 0x09	; 9
    168c:	97 40       	sbci	r25, 0x07	; 7
    168e:	08 f1       	brcs	.+66     	; 0x16d2 <checkAfslag+0x228>
    1690:	88 e0       	ldi	r24, 0x08	; 8
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	08 95       	ret
    1696:	82 e0       	ldi	r24, 0x02	; 2
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	08 95       	ret
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	08 95       	ret
    16a2:	86 e0       	ldi	r24, 0x06	; 6
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	08 95       	ret
    16a8:	83 e0       	ldi	r24, 0x03	; 3
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	08 95       	ret
    16ae:	85 e0       	ldi	r24, 0x05	; 5
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	08 95       	ret
    16b4:	87 e0       	ldi	r24, 0x07	; 7
    16b6:	90 e0       	ldi	r25, 0x00	; 0
    16b8:	08 95       	ret
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	08 95       	ret
    16c0:	80 e0       	ldi	r24, 0x00	; 0
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	08 95       	ret
    16c6:	80 e0       	ldi	r24, 0x00	; 0
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	08 95       	ret
    16cc:	80 e0       	ldi	r24, 0x00	; 0
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	08 95       	ret
    16d2:	80 e0       	ldi	r24, 0x00	; 0
    16d4:	90 e0       	ldi	r25, 0x00	; 0
    16d6:	08 95       	ret
    16d8:	88 3e       	cpi	r24, 0xE8	; 232
    16da:	43 e0       	ldi	r20, 0x03	; 3
    16dc:	94 07       	cpc	r25, r20
    16de:	08 f0       	brcs	.+2      	; 0x16e2 <checkAfslag+0x238>
    16e0:	3a cf       	rjmp	.-396    	; 0x1556 <checkAfslag+0xac>
    16e2:	1b cf       	rjmp	.-458    	; 0x151a <checkAfslag+0x70>
    16e4:	89 30       	cpi	r24, 0x09	; 9
    16e6:	67 e0       	ldi	r22, 0x07	; 7
    16e8:	96 07       	cpc	r25, r22
    16ea:	08 f0       	brcs	.+2      	; 0x16ee <checkAfslag+0x244>
    16ec:	3b cf       	rjmp	.-394    	; 0x1564 <checkAfslag+0xba>
    16ee:	06 c0       	rjmp	.+12     	; 0x16fc <checkAfslag+0x252>
    16f0:	88 3e       	cpi	r24, 0xE8	; 232
    16f2:	23 e0       	ldi	r18, 0x03	; 3
    16f4:	92 07       	cpc	r25, r18
    16f6:	08 f4       	brcc	.+2      	; 0x16fa <checkAfslag+0x250>
    16f8:	90 cf       	rjmp	.-224    	; 0x161a <checkAfslag+0x170>
    16fa:	ab cf       	rjmp	.-170    	; 0x1652 <checkAfslag+0x1a8>
    16fc:	88 3e       	cpi	r24, 0xE8	; 232
    16fe:	43 e0       	ldi	r20, 0x03	; 3
    1700:	94 07       	cpc	r25, r20
    1702:	08 f4       	brcc	.+2      	; 0x1706 <checkAfslag+0x25c>
    1704:	83 cf       	rjmp	.-250    	; 0x160c <checkAfslag+0x162>
    1706:	80 e0       	ldi	r24, 0x00	; 0
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	08 95       	ret
    170c:	88 3e       	cpi	r24, 0xE8	; 232
    170e:	63 e0       	ldi	r22, 0x03	; 3
    1710:	96 07       	cpc	r25, r22
    1712:	08 f4       	brcc	.+2      	; 0x1716 <checkAfslag+0x26c>
    1714:	82 cf       	rjmp	.-252    	; 0x161a <checkAfslag+0x170>
    1716:	9d cf       	rjmp	.-198    	; 0x1652 <checkAfslag+0x1a8>

00001718 <wirMain>:
    1718:	8c eb       	ldi	r24, 0xBC	; 188
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 24 12 	call	0x2448	; 0x2448 <play_from_program_space>
    1720:	08 95       	ret

00001722 <__subsf3>:
    1722:	50 58       	subi	r21, 0x80	; 128

00001724 <__addsf3>:
    1724:	bb 27       	eor	r27, r27
    1726:	aa 27       	eor	r26, r26
    1728:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3x>
    172c:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_round>
    1730:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__fp_pscA>
    1734:	38 f0       	brcs	.+14     	; 0x1744 <__addsf3+0x20>
    1736:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__fp_pscB>
    173a:	20 f0       	brcs	.+8      	; 0x1744 <__addsf3+0x20>
    173c:	39 f4       	brne	.+14     	; 0x174c <__addsf3+0x28>
    173e:	9f 3f       	cpi	r25, 0xFF	; 255
    1740:	19 f4       	brne	.+6      	; 0x1748 <__addsf3+0x24>
    1742:	26 f4       	brtc	.+8      	; 0x174c <__addsf3+0x28>
    1744:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_nan>
    1748:	0e f4       	brtc	.+2      	; 0x174c <__addsf3+0x28>
    174a:	e0 95       	com	r30
    174c:	e7 fb       	bst	r30, 7
    174e:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__fp_inf>

00001752 <__addsf3x>:
    1752:	e9 2f       	mov	r30, r25
    1754:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__fp_split3>
    1758:	58 f3       	brcs	.-42     	; 0x1730 <__addsf3+0xc>
    175a:	ba 17       	cp	r27, r26
    175c:	62 07       	cpc	r22, r18
    175e:	73 07       	cpc	r23, r19
    1760:	84 07       	cpc	r24, r20
    1762:	95 07       	cpc	r25, r21
    1764:	20 f0       	brcs	.+8      	; 0x176e <__addsf3x+0x1c>
    1766:	79 f4       	brne	.+30     	; 0x1786 <__addsf3x+0x34>
    1768:	a6 f5       	brtc	.+104    	; 0x17d2 <__addsf3x+0x80>
    176a:	0c 94 e4 0c 	jmp	0x19c8	; 0x19c8 <__fp_zero>
    176e:	0e f4       	brtc	.+2      	; 0x1772 <__addsf3x+0x20>
    1770:	e0 95       	com	r30
    1772:	0b 2e       	mov	r0, r27
    1774:	ba 2f       	mov	r27, r26
    1776:	a0 2d       	mov	r26, r0
    1778:	0b 01       	movw	r0, r22
    177a:	b9 01       	movw	r22, r18
    177c:	90 01       	movw	r18, r0
    177e:	0c 01       	movw	r0, r24
    1780:	ca 01       	movw	r24, r20
    1782:	a0 01       	movw	r20, r0
    1784:	11 24       	eor	r1, r1
    1786:	ff 27       	eor	r31, r31
    1788:	59 1b       	sub	r21, r25
    178a:	99 f0       	breq	.+38     	; 0x17b2 <__addsf3x+0x60>
    178c:	59 3f       	cpi	r21, 0xF9	; 249
    178e:	50 f4       	brcc	.+20     	; 0x17a4 <__addsf3x+0x52>
    1790:	50 3e       	cpi	r21, 0xE0	; 224
    1792:	68 f1       	brcs	.+90     	; 0x17ee <__addsf3x+0x9c>
    1794:	1a 16       	cp	r1, r26
    1796:	f0 40       	sbci	r31, 0x00	; 0
    1798:	a2 2f       	mov	r26, r18
    179a:	23 2f       	mov	r18, r19
    179c:	34 2f       	mov	r19, r20
    179e:	44 27       	eor	r20, r20
    17a0:	58 5f       	subi	r21, 0xF8	; 248
    17a2:	f3 cf       	rjmp	.-26     	; 0x178a <__addsf3x+0x38>
    17a4:	46 95       	lsr	r20
    17a6:	37 95       	ror	r19
    17a8:	27 95       	ror	r18
    17aa:	a7 95       	ror	r26
    17ac:	f0 40       	sbci	r31, 0x00	; 0
    17ae:	53 95       	inc	r21
    17b0:	c9 f7       	brne	.-14     	; 0x17a4 <__addsf3x+0x52>
    17b2:	7e f4       	brtc	.+30     	; 0x17d2 <__addsf3x+0x80>
    17b4:	1f 16       	cp	r1, r31
    17b6:	ba 0b       	sbc	r27, r26
    17b8:	62 0b       	sbc	r22, r18
    17ba:	73 0b       	sbc	r23, r19
    17bc:	84 0b       	sbc	r24, r20
    17be:	ba f0       	brmi	.+46     	; 0x17ee <__addsf3x+0x9c>
    17c0:	91 50       	subi	r25, 0x01	; 1
    17c2:	a1 f0       	breq	.+40     	; 0x17ec <__addsf3x+0x9a>
    17c4:	ff 0f       	add	r31, r31
    17c6:	bb 1f       	adc	r27, r27
    17c8:	66 1f       	adc	r22, r22
    17ca:	77 1f       	adc	r23, r23
    17cc:	88 1f       	adc	r24, r24
    17ce:	c2 f7       	brpl	.-16     	; 0x17c0 <__addsf3x+0x6e>
    17d0:	0e c0       	rjmp	.+28     	; 0x17ee <__addsf3x+0x9c>
    17d2:	ba 0f       	add	r27, r26
    17d4:	62 1f       	adc	r22, r18
    17d6:	73 1f       	adc	r23, r19
    17d8:	84 1f       	adc	r24, r20
    17da:	48 f4       	brcc	.+18     	; 0x17ee <__addsf3x+0x9c>
    17dc:	87 95       	ror	r24
    17de:	77 95       	ror	r23
    17e0:	67 95       	ror	r22
    17e2:	b7 95       	ror	r27
    17e4:	f7 95       	ror	r31
    17e6:	9e 3f       	cpi	r25, 0xFE	; 254
    17e8:	08 f0       	brcs	.+2      	; 0x17ec <__addsf3x+0x9a>
    17ea:	b0 cf       	rjmp	.-160    	; 0x174c <__addsf3+0x28>
    17ec:	93 95       	inc	r25
    17ee:	88 0f       	add	r24, r24
    17f0:	08 f0       	brcs	.+2      	; 0x17f4 <__addsf3x+0xa2>
    17f2:	99 27       	eor	r25, r25
    17f4:	ee 0f       	add	r30, r30
    17f6:	97 95       	ror	r25
    17f8:	87 95       	ror	r24
    17fa:	08 95       	ret

000017fc <__cmpsf2>:
    17fc:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_cmp>
    1800:	08 f4       	brcc	.+2      	; 0x1804 <__cmpsf2+0x8>
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	08 95       	ret

00001806 <__fixsfsi>:
    1806:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__fixunssfsi>
    180a:	68 94       	set
    180c:	b1 11       	cpse	r27, r1
    180e:	0c 94 e5 0c 	jmp	0x19ca	; 0x19ca <__fp_szero>
    1812:	08 95       	ret

00001814 <__fixunssfsi>:
    1814:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fp_splitA>
    1818:	88 f0       	brcs	.+34     	; 0x183c <__fixunssfsi+0x28>
    181a:	9f 57       	subi	r25, 0x7F	; 127
    181c:	98 f0       	brcs	.+38     	; 0x1844 <__fixunssfsi+0x30>
    181e:	b9 2f       	mov	r27, r25
    1820:	99 27       	eor	r25, r25
    1822:	b7 51       	subi	r27, 0x17	; 23
    1824:	b0 f0       	brcs	.+44     	; 0x1852 <__fixunssfsi+0x3e>
    1826:	e1 f0       	breq	.+56     	; 0x1860 <__fixunssfsi+0x4c>
    1828:	66 0f       	add	r22, r22
    182a:	77 1f       	adc	r23, r23
    182c:	88 1f       	adc	r24, r24
    182e:	99 1f       	adc	r25, r25
    1830:	1a f0       	brmi	.+6      	; 0x1838 <__fixunssfsi+0x24>
    1832:	ba 95       	dec	r27
    1834:	c9 f7       	brne	.-14     	; 0x1828 <__fixunssfsi+0x14>
    1836:	14 c0       	rjmp	.+40     	; 0x1860 <__fixunssfsi+0x4c>
    1838:	b1 30       	cpi	r27, 0x01	; 1
    183a:	91 f0       	breq	.+36     	; 0x1860 <__fixunssfsi+0x4c>
    183c:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <__fp_zero>
    1840:	b1 e0       	ldi	r27, 0x01	; 1
    1842:	08 95       	ret
    1844:	0c 94 e4 0c 	jmp	0x19c8	; 0x19c8 <__fp_zero>
    1848:	67 2f       	mov	r22, r23
    184a:	78 2f       	mov	r23, r24
    184c:	88 27       	eor	r24, r24
    184e:	b8 5f       	subi	r27, 0xF8	; 248
    1850:	39 f0       	breq	.+14     	; 0x1860 <__fixunssfsi+0x4c>
    1852:	b9 3f       	cpi	r27, 0xF9	; 249
    1854:	cc f3       	brlt	.-14     	; 0x1848 <__fixunssfsi+0x34>
    1856:	86 95       	lsr	r24
    1858:	77 95       	ror	r23
    185a:	67 95       	ror	r22
    185c:	b3 95       	inc	r27
    185e:	d9 f7       	brne	.-10     	; 0x1856 <__fixunssfsi+0x42>
    1860:	3e f4       	brtc	.+14     	; 0x1870 <__fixunssfsi+0x5c>
    1862:	90 95       	com	r25
    1864:	80 95       	com	r24
    1866:	70 95       	com	r23
    1868:	61 95       	neg	r22
    186a:	7f 4f       	sbci	r23, 0xFF	; 255
    186c:	8f 4f       	sbci	r24, 0xFF	; 255
    186e:	9f 4f       	sbci	r25, 0xFF	; 255
    1870:	08 95       	ret

00001872 <__floatunsisf>:
    1872:	e8 94       	clt
    1874:	09 c0       	rjmp	.+18     	; 0x1888 <__floatsisf+0x12>

00001876 <__floatsisf>:
    1876:	97 fb       	bst	r25, 7
    1878:	3e f4       	brtc	.+14     	; 0x1888 <__floatsisf+0x12>
    187a:	90 95       	com	r25
    187c:	80 95       	com	r24
    187e:	70 95       	com	r23
    1880:	61 95       	neg	r22
    1882:	7f 4f       	sbci	r23, 0xFF	; 255
    1884:	8f 4f       	sbci	r24, 0xFF	; 255
    1886:	9f 4f       	sbci	r25, 0xFF	; 255
    1888:	99 23       	and	r25, r25
    188a:	a9 f0       	breq	.+42     	; 0x18b6 <__floatsisf+0x40>
    188c:	f9 2f       	mov	r31, r25
    188e:	96 e9       	ldi	r25, 0x96	; 150
    1890:	bb 27       	eor	r27, r27
    1892:	93 95       	inc	r25
    1894:	f6 95       	lsr	r31
    1896:	87 95       	ror	r24
    1898:	77 95       	ror	r23
    189a:	67 95       	ror	r22
    189c:	b7 95       	ror	r27
    189e:	f1 11       	cpse	r31, r1
    18a0:	f8 cf       	rjmp	.-16     	; 0x1892 <__floatsisf+0x1c>
    18a2:	fa f4       	brpl	.+62     	; 0x18e2 <__floatsisf+0x6c>
    18a4:	bb 0f       	add	r27, r27
    18a6:	11 f4       	brne	.+4      	; 0x18ac <__floatsisf+0x36>
    18a8:	60 ff       	sbrs	r22, 0
    18aa:	1b c0       	rjmp	.+54     	; 0x18e2 <__floatsisf+0x6c>
    18ac:	6f 5f       	subi	r22, 0xFF	; 255
    18ae:	7f 4f       	sbci	r23, 0xFF	; 255
    18b0:	8f 4f       	sbci	r24, 0xFF	; 255
    18b2:	9f 4f       	sbci	r25, 0xFF	; 255
    18b4:	16 c0       	rjmp	.+44     	; 0x18e2 <__floatsisf+0x6c>
    18b6:	88 23       	and	r24, r24
    18b8:	11 f0       	breq	.+4      	; 0x18be <__floatsisf+0x48>
    18ba:	96 e9       	ldi	r25, 0x96	; 150
    18bc:	11 c0       	rjmp	.+34     	; 0x18e0 <__floatsisf+0x6a>
    18be:	77 23       	and	r23, r23
    18c0:	21 f0       	breq	.+8      	; 0x18ca <__floatsisf+0x54>
    18c2:	9e e8       	ldi	r25, 0x8E	; 142
    18c4:	87 2f       	mov	r24, r23
    18c6:	76 2f       	mov	r23, r22
    18c8:	05 c0       	rjmp	.+10     	; 0x18d4 <__floatsisf+0x5e>
    18ca:	66 23       	and	r22, r22
    18cc:	71 f0       	breq	.+28     	; 0x18ea <__floatsisf+0x74>
    18ce:	96 e8       	ldi	r25, 0x86	; 134
    18d0:	86 2f       	mov	r24, r22
    18d2:	70 e0       	ldi	r23, 0x00	; 0
    18d4:	60 e0       	ldi	r22, 0x00	; 0
    18d6:	2a f0       	brmi	.+10     	; 0x18e2 <__floatsisf+0x6c>
    18d8:	9a 95       	dec	r25
    18da:	66 0f       	add	r22, r22
    18dc:	77 1f       	adc	r23, r23
    18de:	88 1f       	adc	r24, r24
    18e0:	da f7       	brpl	.-10     	; 0x18d8 <__floatsisf+0x62>
    18e2:	88 0f       	add	r24, r24
    18e4:	96 95       	lsr	r25
    18e6:	87 95       	ror	r24
    18e8:	97 f9       	bld	r25, 7
    18ea:	08 95       	ret

000018ec <__fp_cmp>:
    18ec:	99 0f       	add	r25, r25
    18ee:	00 08       	sbc	r0, r0
    18f0:	55 0f       	add	r21, r21
    18f2:	aa 0b       	sbc	r26, r26
    18f4:	e0 e8       	ldi	r30, 0x80	; 128
    18f6:	fe ef       	ldi	r31, 0xFE	; 254
    18f8:	16 16       	cp	r1, r22
    18fa:	17 06       	cpc	r1, r23
    18fc:	e8 07       	cpc	r30, r24
    18fe:	f9 07       	cpc	r31, r25
    1900:	c0 f0       	brcs	.+48     	; 0x1932 <__fp_cmp+0x46>
    1902:	12 16       	cp	r1, r18
    1904:	13 06       	cpc	r1, r19
    1906:	e4 07       	cpc	r30, r20
    1908:	f5 07       	cpc	r31, r21
    190a:	98 f0       	brcs	.+38     	; 0x1932 <__fp_cmp+0x46>
    190c:	62 1b       	sub	r22, r18
    190e:	73 0b       	sbc	r23, r19
    1910:	84 0b       	sbc	r24, r20
    1912:	95 0b       	sbc	r25, r21
    1914:	39 f4       	brne	.+14     	; 0x1924 <__fp_cmp+0x38>
    1916:	0a 26       	eor	r0, r26
    1918:	61 f0       	breq	.+24     	; 0x1932 <__fp_cmp+0x46>
    191a:	23 2b       	or	r18, r19
    191c:	24 2b       	or	r18, r20
    191e:	25 2b       	or	r18, r21
    1920:	21 f4       	brne	.+8      	; 0x192a <__fp_cmp+0x3e>
    1922:	08 95       	ret
    1924:	0a 26       	eor	r0, r26
    1926:	09 f4       	brne	.+2      	; 0x192a <__fp_cmp+0x3e>
    1928:	a1 40       	sbci	r26, 0x01	; 1
    192a:	a6 95       	lsr	r26
    192c:	8f ef       	ldi	r24, 0xFF	; 255
    192e:	81 1d       	adc	r24, r1
    1930:	81 1d       	adc	r24, r1
    1932:	08 95       	ret

00001934 <__fp_inf>:
    1934:	97 f9       	bld	r25, 7
    1936:	9f 67       	ori	r25, 0x7F	; 127
    1938:	80 e8       	ldi	r24, 0x80	; 128
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	60 e0       	ldi	r22, 0x00	; 0
    193e:	08 95       	ret

00001940 <__fp_nan>:
    1940:	9f ef       	ldi	r25, 0xFF	; 255
    1942:	80 ec       	ldi	r24, 0xC0	; 192
    1944:	08 95       	ret

00001946 <__fp_pscA>:
    1946:	00 24       	eor	r0, r0
    1948:	0a 94       	dec	r0
    194a:	16 16       	cp	r1, r22
    194c:	17 06       	cpc	r1, r23
    194e:	18 06       	cpc	r1, r24
    1950:	09 06       	cpc	r0, r25
    1952:	08 95       	ret

00001954 <__fp_pscB>:
    1954:	00 24       	eor	r0, r0
    1956:	0a 94       	dec	r0
    1958:	12 16       	cp	r1, r18
    195a:	13 06       	cpc	r1, r19
    195c:	14 06       	cpc	r1, r20
    195e:	05 06       	cpc	r0, r21
    1960:	08 95       	ret

00001962 <__fp_round>:
    1962:	09 2e       	mov	r0, r25
    1964:	03 94       	inc	r0
    1966:	00 0c       	add	r0, r0
    1968:	11 f4       	brne	.+4      	; 0x196e <__fp_round+0xc>
    196a:	88 23       	and	r24, r24
    196c:	52 f0       	brmi	.+20     	; 0x1982 <__fp_round+0x20>
    196e:	bb 0f       	add	r27, r27
    1970:	40 f4       	brcc	.+16     	; 0x1982 <__fp_round+0x20>
    1972:	bf 2b       	or	r27, r31
    1974:	11 f4       	brne	.+4      	; 0x197a <__fp_round+0x18>
    1976:	60 ff       	sbrs	r22, 0
    1978:	04 c0       	rjmp	.+8      	; 0x1982 <__fp_round+0x20>
    197a:	6f 5f       	subi	r22, 0xFF	; 255
    197c:	7f 4f       	sbci	r23, 0xFF	; 255
    197e:	8f 4f       	sbci	r24, 0xFF	; 255
    1980:	9f 4f       	sbci	r25, 0xFF	; 255
    1982:	08 95       	ret

00001984 <__fp_split3>:
    1984:	57 fd       	sbrc	r21, 7
    1986:	90 58       	subi	r25, 0x80	; 128
    1988:	44 0f       	add	r20, r20
    198a:	55 1f       	adc	r21, r21
    198c:	59 f0       	breq	.+22     	; 0x19a4 <__fp_splitA+0x10>
    198e:	5f 3f       	cpi	r21, 0xFF	; 255
    1990:	71 f0       	breq	.+28     	; 0x19ae <__fp_splitA+0x1a>
    1992:	47 95       	ror	r20

00001994 <__fp_splitA>:
    1994:	88 0f       	add	r24, r24
    1996:	97 fb       	bst	r25, 7
    1998:	99 1f       	adc	r25, r25
    199a:	61 f0       	breq	.+24     	; 0x19b4 <__fp_splitA+0x20>
    199c:	9f 3f       	cpi	r25, 0xFF	; 255
    199e:	79 f0       	breq	.+30     	; 0x19be <__fp_splitA+0x2a>
    19a0:	87 95       	ror	r24
    19a2:	08 95       	ret
    19a4:	12 16       	cp	r1, r18
    19a6:	13 06       	cpc	r1, r19
    19a8:	14 06       	cpc	r1, r20
    19aa:	55 1f       	adc	r21, r21
    19ac:	f2 cf       	rjmp	.-28     	; 0x1992 <__fp_split3+0xe>
    19ae:	46 95       	lsr	r20
    19b0:	f1 df       	rcall	.-30     	; 0x1994 <__fp_splitA>
    19b2:	08 c0       	rjmp	.+16     	; 0x19c4 <__fp_splitA+0x30>
    19b4:	16 16       	cp	r1, r22
    19b6:	17 06       	cpc	r1, r23
    19b8:	18 06       	cpc	r1, r24
    19ba:	99 1f       	adc	r25, r25
    19bc:	f1 cf       	rjmp	.-30     	; 0x19a0 <__fp_splitA+0xc>
    19be:	86 95       	lsr	r24
    19c0:	71 05       	cpc	r23, r1
    19c2:	61 05       	cpc	r22, r1
    19c4:	08 94       	sec
    19c6:	08 95       	ret

000019c8 <__fp_zero>:
    19c8:	e8 94       	clt

000019ca <__fp_szero>:
    19ca:	bb 27       	eor	r27, r27
    19cc:	66 27       	eor	r22, r22
    19ce:	77 27       	eor	r23, r23
    19d0:	cb 01       	movw	r24, r22
    19d2:	97 f9       	bld	r25, 7
    19d4:	08 95       	ret

000019d6 <__gesf2>:
    19d6:	0e 94 76 0c 	call	0x18ec	; 0x18ec <__fp_cmp>
    19da:	08 f4       	brcc	.+2      	; 0x19de <__gesf2+0x8>
    19dc:	8f ef       	ldi	r24, 0xFF	; 255
    19de:	08 95       	ret

000019e0 <__mulsf3>:
    19e0:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__mulsf3x>
    19e4:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_round>
    19e8:	0e 94 a3 0c 	call	0x1946	; 0x1946 <__fp_pscA>
    19ec:	38 f0       	brcs	.+14     	; 0x19fc <__mulsf3+0x1c>
    19ee:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__fp_pscB>
    19f2:	20 f0       	brcs	.+8      	; 0x19fc <__mulsf3+0x1c>
    19f4:	95 23       	and	r25, r21
    19f6:	11 f0       	breq	.+4      	; 0x19fc <__mulsf3+0x1c>
    19f8:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__fp_inf>
    19fc:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_nan>
    1a00:	11 24       	eor	r1, r1
    1a02:	0c 94 e5 0c 	jmp	0x19ca	; 0x19ca <__fp_szero>

00001a06 <__mulsf3x>:
    1a06:	0e 94 c2 0c 	call	0x1984	; 0x1984 <__fp_split3>
    1a0a:	70 f3       	brcs	.-36     	; 0x19e8 <__mulsf3+0x8>

00001a0c <__mulsf3_pse>:
    1a0c:	95 9f       	mul	r25, r21
    1a0e:	c1 f3       	breq	.-16     	; 0x1a00 <__mulsf3+0x20>
    1a10:	95 0f       	add	r25, r21
    1a12:	50 e0       	ldi	r21, 0x00	; 0
    1a14:	55 1f       	adc	r21, r21
    1a16:	62 9f       	mul	r22, r18
    1a18:	f0 01       	movw	r30, r0
    1a1a:	72 9f       	mul	r23, r18
    1a1c:	bb 27       	eor	r27, r27
    1a1e:	f0 0d       	add	r31, r0
    1a20:	b1 1d       	adc	r27, r1
    1a22:	63 9f       	mul	r22, r19
    1a24:	aa 27       	eor	r26, r26
    1a26:	f0 0d       	add	r31, r0
    1a28:	b1 1d       	adc	r27, r1
    1a2a:	aa 1f       	adc	r26, r26
    1a2c:	64 9f       	mul	r22, r20
    1a2e:	66 27       	eor	r22, r22
    1a30:	b0 0d       	add	r27, r0
    1a32:	a1 1d       	adc	r26, r1
    1a34:	66 1f       	adc	r22, r22
    1a36:	82 9f       	mul	r24, r18
    1a38:	22 27       	eor	r18, r18
    1a3a:	b0 0d       	add	r27, r0
    1a3c:	a1 1d       	adc	r26, r1
    1a3e:	62 1f       	adc	r22, r18
    1a40:	73 9f       	mul	r23, r19
    1a42:	b0 0d       	add	r27, r0
    1a44:	a1 1d       	adc	r26, r1
    1a46:	62 1f       	adc	r22, r18
    1a48:	83 9f       	mul	r24, r19
    1a4a:	a0 0d       	add	r26, r0
    1a4c:	61 1d       	adc	r22, r1
    1a4e:	22 1f       	adc	r18, r18
    1a50:	74 9f       	mul	r23, r20
    1a52:	33 27       	eor	r19, r19
    1a54:	a0 0d       	add	r26, r0
    1a56:	61 1d       	adc	r22, r1
    1a58:	23 1f       	adc	r18, r19
    1a5a:	84 9f       	mul	r24, r20
    1a5c:	60 0d       	add	r22, r0
    1a5e:	21 1d       	adc	r18, r1
    1a60:	82 2f       	mov	r24, r18
    1a62:	76 2f       	mov	r23, r22
    1a64:	6a 2f       	mov	r22, r26
    1a66:	11 24       	eor	r1, r1
    1a68:	9f 57       	subi	r25, 0x7F	; 127
    1a6a:	50 40       	sbci	r21, 0x00	; 0
    1a6c:	9a f0       	brmi	.+38     	; 0x1a94 <__mulsf3_pse+0x88>
    1a6e:	f1 f0       	breq	.+60     	; 0x1aac <__mulsf3_pse+0xa0>
    1a70:	88 23       	and	r24, r24
    1a72:	4a f0       	brmi	.+18     	; 0x1a86 <__mulsf3_pse+0x7a>
    1a74:	ee 0f       	add	r30, r30
    1a76:	ff 1f       	adc	r31, r31
    1a78:	bb 1f       	adc	r27, r27
    1a7a:	66 1f       	adc	r22, r22
    1a7c:	77 1f       	adc	r23, r23
    1a7e:	88 1f       	adc	r24, r24
    1a80:	91 50       	subi	r25, 0x01	; 1
    1a82:	50 40       	sbci	r21, 0x00	; 0
    1a84:	a9 f7       	brne	.-22     	; 0x1a70 <__mulsf3_pse+0x64>
    1a86:	9e 3f       	cpi	r25, 0xFE	; 254
    1a88:	51 05       	cpc	r21, r1
    1a8a:	80 f0       	brcs	.+32     	; 0x1aac <__mulsf3_pse+0xa0>
    1a8c:	0c 94 9a 0c 	jmp	0x1934	; 0x1934 <__fp_inf>
    1a90:	0c 94 e5 0c 	jmp	0x19ca	; 0x19ca <__fp_szero>
    1a94:	5f 3f       	cpi	r21, 0xFF	; 255
    1a96:	e4 f3       	brlt	.-8      	; 0x1a90 <__mulsf3_pse+0x84>
    1a98:	98 3e       	cpi	r25, 0xE8	; 232
    1a9a:	d4 f3       	brlt	.-12     	; 0x1a90 <__mulsf3_pse+0x84>
    1a9c:	86 95       	lsr	r24
    1a9e:	77 95       	ror	r23
    1aa0:	67 95       	ror	r22
    1aa2:	b7 95       	ror	r27
    1aa4:	f7 95       	ror	r31
    1aa6:	e7 95       	ror	r30
    1aa8:	9f 5f       	subi	r25, 0xFF	; 255
    1aaa:	c1 f7       	brne	.-16     	; 0x1a9c <__mulsf3_pse+0x90>
    1aac:	fe 2b       	or	r31, r30
    1aae:	88 0f       	add	r24, r24
    1ab0:	91 1d       	adc	r25, r1
    1ab2:	96 95       	lsr	r25
    1ab4:	87 95       	ror	r24
    1ab6:	97 f9       	bld	r25, 7
    1ab8:	08 95       	ret

00001aba <sin>:
    1aba:	9f 93       	push	r25
    1abc:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__fp_rempio2>
    1ac0:	0f 90       	pop	r0
    1ac2:	07 fc       	sbrc	r0, 7
    1ac4:	ee 5f       	subi	r30, 0xFE	; 254
    1ac6:	0c 94 eb 0d 	jmp	0x1bd6	; 0x1bd6 <__fp_sinus>
    1aca:	19 f4       	brne	.+6      	; 0x1ad2 <sin+0x18>
    1acc:	16 f4       	brtc	.+4      	; 0x1ad2 <sin+0x18>
    1ace:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_nan>
    1ad2:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__fp_mpack>

00001ad6 <sqrt>:
    1ad6:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fp_splitA>
    1ada:	b8 f3       	brcs	.-18     	; 0x1aca <sin+0x10>
    1adc:	99 23       	and	r25, r25
    1ade:	c9 f3       	breq	.-14     	; 0x1ad2 <sin+0x18>
    1ae0:	b6 f3       	brts	.-20     	; 0x1ace <sin+0x14>
    1ae2:	9f 57       	subi	r25, 0x7F	; 127
    1ae4:	55 0b       	sbc	r21, r21
    1ae6:	87 ff       	sbrs	r24, 7
    1ae8:	0e 94 b9 0d 	call	0x1b72	; 0x1b72 <__fp_norm2>
    1aec:	00 24       	eor	r0, r0
    1aee:	a0 e6       	ldi	r26, 0x60	; 96
    1af0:	40 ea       	ldi	r20, 0xA0	; 160
    1af2:	90 01       	movw	r18, r0
    1af4:	80 58       	subi	r24, 0x80	; 128
    1af6:	56 95       	lsr	r21
    1af8:	97 95       	ror	r25
    1afa:	28 f4       	brcc	.+10     	; 0x1b06 <sqrt+0x30>
    1afc:	80 5c       	subi	r24, 0xC0	; 192
    1afe:	66 0f       	add	r22, r22
    1b00:	77 1f       	adc	r23, r23
    1b02:	88 1f       	adc	r24, r24
    1b04:	20 f0       	brcs	.+8      	; 0x1b0e <sqrt+0x38>
    1b06:	26 17       	cp	r18, r22
    1b08:	37 07       	cpc	r19, r23
    1b0a:	48 07       	cpc	r20, r24
    1b0c:	30 f4       	brcc	.+12     	; 0x1b1a <sqrt+0x44>
    1b0e:	62 1b       	sub	r22, r18
    1b10:	73 0b       	sbc	r23, r19
    1b12:	84 0b       	sbc	r24, r20
    1b14:	20 29       	or	r18, r0
    1b16:	31 29       	or	r19, r1
    1b18:	4a 2b       	or	r20, r26
    1b1a:	a6 95       	lsr	r26
    1b1c:	17 94       	ror	r1
    1b1e:	07 94       	ror	r0
    1b20:	20 25       	eor	r18, r0
    1b22:	31 25       	eor	r19, r1
    1b24:	4a 27       	eor	r20, r26
    1b26:	58 f7       	brcc	.-42     	; 0x1afe <sqrt+0x28>
    1b28:	66 0f       	add	r22, r22
    1b2a:	77 1f       	adc	r23, r23
    1b2c:	88 1f       	adc	r24, r24
    1b2e:	20 f0       	brcs	.+8      	; 0x1b38 <sqrt+0x62>
    1b30:	26 17       	cp	r18, r22
    1b32:	37 07       	cpc	r19, r23
    1b34:	48 07       	cpc	r20, r24
    1b36:	30 f4       	brcc	.+12     	; 0x1b44 <sqrt+0x6e>
    1b38:	62 0b       	sbc	r22, r18
    1b3a:	73 0b       	sbc	r23, r19
    1b3c:	84 0b       	sbc	r24, r20
    1b3e:	20 0d       	add	r18, r0
    1b40:	31 1d       	adc	r19, r1
    1b42:	41 1d       	adc	r20, r1
    1b44:	a0 95       	com	r26
    1b46:	81 f7       	brne	.-32     	; 0x1b28 <sqrt+0x52>
    1b48:	b9 01       	movw	r22, r18
    1b4a:	84 2f       	mov	r24, r20
    1b4c:	91 58       	subi	r25, 0x81	; 129
    1b4e:	88 0f       	add	r24, r24
    1b50:	96 95       	lsr	r25
    1b52:	87 95       	ror	r24
    1b54:	08 95       	ret

00001b56 <__fp_mpack>:
    1b56:	9f 3f       	cpi	r25, 0xFF	; 255
    1b58:	31 f0       	breq	.+12     	; 0x1b66 <__fp_mpack_finite+0xc>

00001b5a <__fp_mpack_finite>:
    1b5a:	91 50       	subi	r25, 0x01	; 1
    1b5c:	20 f4       	brcc	.+8      	; 0x1b66 <__fp_mpack_finite+0xc>
    1b5e:	87 95       	ror	r24
    1b60:	77 95       	ror	r23
    1b62:	67 95       	ror	r22
    1b64:	b7 95       	ror	r27
    1b66:	88 0f       	add	r24, r24
    1b68:	91 1d       	adc	r25, r1
    1b6a:	96 95       	lsr	r25
    1b6c:	87 95       	ror	r24
    1b6e:	97 f9       	bld	r25, 7
    1b70:	08 95       	ret

00001b72 <__fp_norm2>:
    1b72:	91 50       	subi	r25, 0x01	; 1
    1b74:	50 40       	sbci	r21, 0x00	; 0
    1b76:	66 0f       	add	r22, r22
    1b78:	77 1f       	adc	r23, r23
    1b7a:	88 1f       	adc	r24, r24
    1b7c:	d2 f7       	brpl	.-12     	; 0x1b72 <__fp_norm2>
    1b7e:	08 95       	ret
    1b80:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__fp_nan>

00001b84 <__fp_rempio2>:
    1b84:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fp_splitA>
    1b88:	d8 f3       	brcs	.-10     	; 0x1b80 <__fp_norm2+0xe>
    1b8a:	e8 94       	clt
    1b8c:	e0 e0       	ldi	r30, 0x00	; 0
    1b8e:	bb 27       	eor	r27, r27
    1b90:	9f 57       	subi	r25, 0x7F	; 127
    1b92:	f0 f0       	brcs	.+60     	; 0x1bd0 <__fp_rempio2+0x4c>
    1b94:	2a ed       	ldi	r18, 0xDA	; 218
    1b96:	3f e0       	ldi	r19, 0x0F	; 15
    1b98:	49 ec       	ldi	r20, 0xC9	; 201
    1b9a:	06 c0       	rjmp	.+12     	; 0x1ba8 <__fp_rempio2+0x24>
    1b9c:	ee 0f       	add	r30, r30
    1b9e:	bb 0f       	add	r27, r27
    1ba0:	66 1f       	adc	r22, r22
    1ba2:	77 1f       	adc	r23, r23
    1ba4:	88 1f       	adc	r24, r24
    1ba6:	28 f0       	brcs	.+10     	; 0x1bb2 <__fp_rempio2+0x2e>
    1ba8:	b2 3a       	cpi	r27, 0xA2	; 162
    1baa:	62 07       	cpc	r22, r18
    1bac:	73 07       	cpc	r23, r19
    1bae:	84 07       	cpc	r24, r20
    1bb0:	28 f0       	brcs	.+10     	; 0x1bbc <__fp_rempio2+0x38>
    1bb2:	b2 5a       	subi	r27, 0xA2	; 162
    1bb4:	62 0b       	sbc	r22, r18
    1bb6:	73 0b       	sbc	r23, r19
    1bb8:	84 0b       	sbc	r24, r20
    1bba:	e3 95       	inc	r30
    1bbc:	9a 95       	dec	r25
    1bbe:	72 f7       	brpl	.-36     	; 0x1b9c <__fp_rempio2+0x18>
    1bc0:	80 38       	cpi	r24, 0x80	; 128
    1bc2:	30 f4       	brcc	.+12     	; 0x1bd0 <__fp_rempio2+0x4c>
    1bc4:	9a 95       	dec	r25
    1bc6:	bb 0f       	add	r27, r27
    1bc8:	66 1f       	adc	r22, r22
    1bca:	77 1f       	adc	r23, r23
    1bcc:	88 1f       	adc	r24, r24
    1bce:	d2 f7       	brpl	.-12     	; 0x1bc4 <__fp_rempio2+0x40>
    1bd0:	90 48       	sbci	r25, 0x80	; 128
    1bd2:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_mpack_finite>

00001bd6 <__fp_sinus>:
    1bd6:	ef 93       	push	r30
    1bd8:	e0 ff       	sbrs	r30, 0
    1bda:	07 c0       	rjmp	.+14     	; 0x1bea <__fp_sinus+0x14>
    1bdc:	a2 ea       	ldi	r26, 0xA2	; 162
    1bde:	2a ed       	ldi	r18, 0xDA	; 218
    1be0:	3f e0       	ldi	r19, 0x0F	; 15
    1be2:	49 ec       	ldi	r20, 0xC9	; 201
    1be4:	5f eb       	ldi	r21, 0xBF	; 191
    1be6:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3x>
    1bea:	0e 94 b1 0c 	call	0x1962	; 0x1962 <__fp_round>
    1bee:	0f 90       	pop	r0
    1bf0:	03 94       	inc	r0
    1bf2:	01 fc       	sbrc	r0, 1
    1bf4:	90 58       	subi	r25, 0x80	; 128
    1bf6:	ea e8       	ldi	r30, 0x8A	; 138
    1bf8:	f0 e0       	ldi	r31, 0x00	; 0
    1bfa:	0c 94 ff 0d 	jmp	0x1bfe	; 0x1bfe <__fp_powsodd>

00001bfe <__fp_powsodd>:
    1bfe:	9f 93       	push	r25
    1c00:	8f 93       	push	r24
    1c02:	7f 93       	push	r23
    1c04:	6f 93       	push	r22
    1c06:	ff 93       	push	r31
    1c08:	ef 93       	push	r30
    1c0a:	9b 01       	movw	r18, r22
    1c0c:	ac 01       	movw	r20, r24
    1c0e:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__mulsf3>
    1c12:	ef 91       	pop	r30
    1c14:	ff 91       	pop	r31
    1c16:	0e 94 13 0e 	call	0x1c26	; 0x1c26 <__fp_powser>
    1c1a:	2f 91       	pop	r18
    1c1c:	3f 91       	pop	r19
    1c1e:	4f 91       	pop	r20
    1c20:	5f 91       	pop	r21
    1c22:	0c 94 f0 0c 	jmp	0x19e0	; 0x19e0 <__mulsf3>

00001c26 <__fp_powser>:
    1c26:	df 93       	push	r29
    1c28:	cf 93       	push	r28
    1c2a:	1f 93       	push	r17
    1c2c:	0f 93       	push	r16
    1c2e:	ff 92       	push	r15
    1c30:	ef 92       	push	r14
    1c32:	df 92       	push	r13
    1c34:	7b 01       	movw	r14, r22
    1c36:	8c 01       	movw	r16, r24
    1c38:	68 94       	set
    1c3a:	06 c0       	rjmp	.+12     	; 0x1c48 <__fp_powser+0x22>
    1c3c:	da 2e       	mov	r13, r26
    1c3e:	ef 01       	movw	r28, r30
    1c40:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__mulsf3x>
    1c44:	fe 01       	movw	r30, r28
    1c46:	e8 94       	clt
    1c48:	a5 91       	lpm	r26, Z+
    1c4a:	25 91       	lpm	r18, Z+
    1c4c:	35 91       	lpm	r19, Z+
    1c4e:	45 91       	lpm	r20, Z+
    1c50:	55 91       	lpm	r21, Z+
    1c52:	a6 f3       	brts	.-24     	; 0x1c3c <__fp_powser+0x16>
    1c54:	ef 01       	movw	r28, r30
    1c56:	0e 94 a9 0b 	call	0x1752	; 0x1752 <__addsf3x>
    1c5a:	fe 01       	movw	r30, r28
    1c5c:	97 01       	movw	r18, r14
    1c5e:	a8 01       	movw	r20, r16
    1c60:	da 94       	dec	r13
    1c62:	69 f7       	brne	.-38     	; 0x1c3e <__fp_powser+0x18>
    1c64:	df 90       	pop	r13
    1c66:	ef 90       	pop	r14
    1c68:	ff 90       	pop	r15
    1c6a:	0f 91       	pop	r16
    1c6c:	1f 91       	pop	r17
    1c6e:	cf 91       	pop	r28
    1c70:	df 91       	pop	r29
    1c72:	08 95       	ret

00001c74 <_ZN15OrangutanAnalog7setModeEh.part.0>:
    1c74:	ec e7       	ldi	r30, 0x7C	; 124
    1c76:	f0 e0       	ldi	r31, 0x00	; 0
    1c78:	80 81       	ld	r24, Z
    1c7a:	8f 7d       	andi	r24, 0xDF	; 223
    1c7c:	80 83       	st	Z, r24
    1c7e:	08 95       	ret

00001c80 <_ZN15OrangutanAnalog7setModeEh>:
    1c80:	81 11       	cpse	r24, r1
    1c82:	03 c0       	rjmp	.+6      	; 0x1c8a <_ZN15OrangutanAnalog7setModeEh+0xa>
    1c84:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1c88:	08 95       	ret
    1c8a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1c8e:	80 62       	ori	r24, 0x20	; 32
    1c90:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1c94:	08 95       	ret

00001c96 <_ZN15OrangutanAnalog7getModeEv>:
    1c96:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1c9a:	85 fb       	bst	r24, 5
    1c9c:	88 27       	eor	r24, r24
    1c9e:	80 f9       	bld	r24, 0
    1ca0:	08 95       	ret

00001ca2 <_ZN15OrangutanAnalog16conversionResultEv>:
    1ca2:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <_ZN15OrangutanAnalog7getModeEv>
    1ca6:	88 23       	and	r24, r24
    1ca8:	21 f0       	breq	.+8      	; 0x1cb2 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
    1caa:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	08 95       	ret
    1cb2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    1cb6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1cba:	08 95       	ret

00001cbc <_ZN15OrangutanAnalog15startConversionEhh>:
    1cbc:	80 32       	cpi	r24, 0x20	; 32
    1cbe:	a0 f4       	brcc	.+40     	; 0x1ce8 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
    1cc0:	97 e8       	ldi	r25, 0x87	; 135
    1cc2:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1cc6:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1cca:	66 23       	and	r22, r22
    1ccc:	11 f0       	breq	.+4      	; 0x1cd2 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
    1cce:	90 6c       	ori	r25, 0xC0	; 192
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
    1cd2:	9f 77       	andi	r25, 0x7F	; 127
    1cd4:	90 64       	ori	r25, 0x40	; 64
    1cd6:	90 7e       	andi	r25, 0xE0	; 224
    1cd8:	98 2b       	or	r25, r24
    1cda:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1cde:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1ce2:	80 64       	ori	r24, 0x40	; 64
    1ce4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1ce8:	08 95       	ret

00001cea <_ZN15OrangutanAnalog11readAverageEhj>:
    1cea:	a0 e0       	ldi	r26, 0x00	; 0
    1cec:	b0 e0       	ldi	r27, 0x00	; 0
    1cee:	eb e7       	ldi	r30, 0x7B	; 123
    1cf0:	fe e0       	ldi	r31, 0x0E	; 14
    1cf2:	0c 94 dc 1b 	jmp	0x37b8	; 0x37b8 <__prologue_saves__+0x14>
    1cf6:	eb 01       	movw	r28, r22
    1cf8:	60 e0       	ldi	r22, 0x00	; 0
    1cfa:	0e 94 5e 0e 	call	0x1cbc	; 0x1cbc <_ZN15OrangutanAnalog15startConversionEhh>
    1cfe:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1d02:	86 fd       	sbrc	r24, 6
    1d04:	fc cf       	rjmp	.-8      	; 0x1cfe <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1d06:	8e 01       	movw	r16, r28
    1d08:	c1 2c       	mov	r12, r1
    1d0a:	d1 2c       	mov	r13, r1
    1d0c:	76 01       	movw	r14, r12
    1d0e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1d12:	80 64       	ori	r24, 0x40	; 64
    1d14:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1d18:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1d1c:	86 fd       	sbrc	r24, 6
    1d1e:	fc cf       	rjmp	.-8      	; 0x1d18 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    1d20:	0e 94 51 0e 	call	0x1ca2	; 0x1ca2 <_ZN15OrangutanAnalog16conversionResultEv>
    1d24:	c8 0e       	add	r12, r24
    1d26:	d9 1e       	adc	r13, r25
    1d28:	e1 1c       	adc	r14, r1
    1d2a:	f1 1c       	adc	r15, r1
    1d2c:	01 50       	subi	r16, 0x01	; 1
    1d2e:	11 09       	sbc	r17, r1
    1d30:	01 15       	cp	r16, r1
    1d32:	11 05       	cpc	r17, r1
    1d34:	61 f7       	brne	.-40     	; 0x1d0e <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1d36:	ce 01       	movw	r24, r28
    1d38:	96 95       	lsr	r25
    1d3a:	87 95       	ror	r24
    1d3c:	c0 34       	cpi	r28, 0x40	; 64
    1d3e:	d1 05       	cpc	r29, r1
    1d40:	38 f4       	brcc	.+14     	; 0x1d50 <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1d42:	8c 0d       	add	r24, r12
    1d44:	9d 1d       	adc	r25, r13
    1d46:	be 01       	movw	r22, r28
    1d48:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    1d4c:	cb 01       	movw	r24, r22
    1d4e:	0e c0       	rjmp	.+28     	; 0x1d6c <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    1d50:	a7 01       	movw	r20, r14
    1d52:	96 01       	movw	r18, r12
    1d54:	28 0f       	add	r18, r24
    1d56:	39 1f       	adc	r19, r25
    1d58:	41 1d       	adc	r20, r1
    1d5a:	51 1d       	adc	r21, r1
    1d5c:	ca 01       	movw	r24, r20
    1d5e:	b9 01       	movw	r22, r18
    1d60:	9e 01       	movw	r18, r28
    1d62:	40 e0       	ldi	r20, 0x00	; 0
    1d64:	50 e0       	ldi	r21, 0x00	; 0
    1d66:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    1d6a:	c9 01       	movw	r24, r18
    1d6c:	cd b7       	in	r28, 0x3d	; 61
    1d6e:	de b7       	in	r29, 0x3e	; 62
    1d70:	e8 e0       	ldi	r30, 0x08	; 8
    1d72:	0c 94 f8 1b 	jmp	0x37f0	; 0x37f0 <__epilogue_restores__+0x14>

00001d76 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1d76:	cf 92       	push	r12
    1d78:	df 92       	push	r13
    1d7a:	ef 92       	push	r14
    1d7c:	ff 92       	push	r15
    1d7e:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
    1d82:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
    1d86:	9c 01       	movw	r18, r24
    1d88:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__umulhisi3>
    1d8c:	6b 01       	movw	r12, r22
    1d8e:	7c 01       	movw	r14, r24
    1d90:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <_ZN15OrangutanAnalog7getModeEv>
    1d94:	88 23       	and	r24, r24
    1d96:	59 f0       	breq	.+22     	; 0x1dae <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    1d98:	c7 01       	movw	r24, r14
    1d9a:	b6 01       	movw	r22, r12
    1d9c:	61 58       	subi	r22, 0x81	; 129
    1d9e:	7f 4f       	sbci	r23, 0xFF	; 255
    1da0:	8f 4f       	sbci	r24, 0xFF	; 255
    1da2:	9f 4f       	sbci	r25, 0xFF	; 255
    1da4:	2f ef       	ldi	r18, 0xFF	; 255
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	40 e0       	ldi	r20, 0x00	; 0
    1daa:	50 e0       	ldi	r21, 0x00	; 0
    1dac:	0a c0       	rjmp	.+20     	; 0x1dc2 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    1dae:	c7 01       	movw	r24, r14
    1db0:	b6 01       	movw	r22, r12
    1db2:	61 50       	subi	r22, 0x01	; 1
    1db4:	7e 4f       	sbci	r23, 0xFE	; 254
    1db6:	8f 4f       	sbci	r24, 0xFF	; 255
    1db8:	9f 4f       	sbci	r25, 0xFF	; 255
    1dba:	2f ef       	ldi	r18, 0xFF	; 255
    1dbc:	33 e0       	ldi	r19, 0x03	; 3
    1dbe:	40 e0       	ldi	r20, 0x00	; 0
    1dc0:	50 e0       	ldi	r21, 0x00	; 0
    1dc2:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    1dc6:	c9 01       	movw	r24, r18
    1dc8:	ff 90       	pop	r15
    1dca:	ef 90       	pop	r14
    1dcc:	df 90       	pop	r13
    1dce:	cf 90       	pop	r12
    1dd0:	08 95       	ret

00001dd2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    1dd2:	0e 94 75 0e 	call	0x1cea	; 0x1cea <_ZN15OrangutanAnalog11readAverageEhj>
    1dd6:	0e 94 bb 0e 	call	0x1d76	; 0x1d76 <_ZN15OrangutanAnalog12toMillivoltsEj>
    1dda:	08 95       	ret

00001ddc <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    1ddc:	1f 93       	push	r17
    1dde:	cf 93       	push	r28
    1de0:	df 93       	push	r29
    1de2:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <_ZN15OrangutanAnalog7getModeEv>
    1de6:	18 2f       	mov	r17, r24
    1de8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <_ZN15OrangutanAnalog7setModeEh.part.0>
    1dec:	6a e0       	ldi	r22, 0x0A	; 10
    1dee:	70 e0       	ldi	r23, 0x00	; 0
    1df0:	86 e0       	ldi	r24, 0x06	; 6
    1df2:	0e 94 e9 0e 	call	0x1dd2	; 0x1dd2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1df6:	ec 01       	movw	r28, r24
    1df8:	81 2f       	mov	r24, r17
    1dfa:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <_ZN15OrangutanAnalog7setModeEh>
    1dfe:	ce 01       	movw	r24, r28
    1e00:	88 0f       	add	r24, r24
    1e02:	99 1f       	adc	r25, r25
    1e04:	8c 0f       	add	r24, r28
    1e06:	9d 1f       	adc	r25, r29
    1e08:	01 96       	adiw	r24, 0x01	; 1
    1e0a:	96 95       	lsr	r25
    1e0c:	87 95       	ror	r24
    1e0e:	df 91       	pop	r29
    1e10:	cf 91       	pop	r28
    1e12:	1f 91       	pop	r17
    1e14:	08 95       	ret

00001e16 <read_battery_millivolts_3pi>:
    1e16:	0e 94 ee 0e 	call	0x1ddc	; 0x1ddc <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1e1a:	08 95       	ret

00001e1c <_ZL16currentCharacterv>:
    1e1c:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <_ZL17use_program_space>
    1e20:	e0 91 62 01 	lds	r30, 0x0162	; 0x800162 <__data_end>
    1e24:	f0 91 63 01 	lds	r31, 0x0163	; 0x800163 <__data_end+0x1>
    1e28:	99 23       	and	r25, r25
    1e2a:	11 f0       	breq	.+4      	; 0x1e30 <_ZL16currentCharacterv+0x14>
    1e2c:	84 91       	lpm	r24, Z
    1e2e:	01 c0       	rjmp	.+2      	; 0x1e32 <_ZL16currentCharacterv+0x16>
    1e30:	80 81       	ld	r24, Z
    1e32:	2f eb       	ldi	r18, 0xBF	; 191
    1e34:	28 0f       	add	r18, r24
    1e36:	2a 31       	cpi	r18, 0x1A	; 26
    1e38:	10 f4       	brcc	.+4      	; 0x1e3e <_ZL16currentCharacterv+0x22>
    1e3a:	80 5e       	subi	r24, 0xE0	; 224
    1e3c:	08 95       	ret
    1e3e:	80 32       	cpi	r24, 0x20	; 32
    1e40:	49 f4       	brne	.+18     	; 0x1e54 <_ZL16currentCharacterv+0x38>
    1e42:	9f 01       	movw	r18, r30
    1e44:	2f 5f       	subi	r18, 0xFF	; 255
    1e46:	3f 4f       	sbci	r19, 0xFF	; 255
    1e48:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    1e4c:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    1e50:	ef 2b       	or	r30, r31
    1e52:	31 f7       	brne	.-52     	; 0x1e20 <_ZL16currentCharacterv+0x4>
    1e54:	08 95       	ret

00001e56 <_ZL9getNumberv>:
    1e56:	1f 93       	push	r17
    1e58:	cf 93       	push	r28
    1e5a:	df 93       	push	r29
    1e5c:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    1e60:	c0 e0       	ldi	r28, 0x00	; 0
    1e62:	d0 e0       	ldi	r29, 0x00	; 0
    1e64:	1a e0       	ldi	r17, 0x0A	; 10
    1e66:	90 ed       	ldi	r25, 0xD0	; 208
    1e68:	98 0f       	add	r25, r24
    1e6a:	9a 30       	cpi	r25, 0x0A	; 10
    1e6c:	b8 f4       	brcc	.+46     	; 0x1e9c <_ZL9getNumberv+0x46>
    1e6e:	9e 01       	movw	r18, r28
    1e70:	12 9f       	mul	r17, r18
    1e72:	e0 01       	movw	r28, r0
    1e74:	13 9f       	mul	r17, r19
    1e76:	d0 0d       	add	r29, r0
    1e78:	11 24       	eor	r1, r1
    1e7a:	c8 0f       	add	r28, r24
    1e7c:	d1 1d       	adc	r29, r1
    1e7e:	87 fd       	sbrc	r24, 7
    1e80:	da 95       	dec	r29
    1e82:	e0 97       	sbiw	r28, 0x30	; 48
    1e84:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
    1e88:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
    1e8c:	01 96       	adiw	r24, 0x01	; 1
    1e8e:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <__data_end+0x1>
    1e92:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
    1e96:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    1e9a:	e5 cf       	rjmp	.-54     	; 0x1e66 <_ZL9getNumberv+0x10>
    1e9c:	ce 01       	movw	r24, r28
    1e9e:	df 91       	pop	r29
    1ea0:	cf 91       	pop	r28
    1ea2:	1f 91       	pop	r17
    1ea4:	08 95       	ret

00001ea6 <_ZN15OrangutanBuzzer5init2Ev>:
    1ea6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1eaa:	83 e2       	ldi	r24, 0x23	; 35
    1eac:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1eb0:	81 e1       	ldi	r24, 0x11	; 17
    1eb2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1eb6:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    1eba:	80 e1       	ldi	r24, 0x10	; 16
    1ebc:	97 e2       	ldi	r25, 0x27	; 39
    1ebe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1ec2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1ec6:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    1eca:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    1ece:	22 9a       	sbi	0x04, 2	; 4
    1ed0:	78 94       	sei
    1ed2:	08 95       	ret

00001ed4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    1ed4:	8f 92       	push	r8
    1ed6:	9f 92       	push	r9
    1ed8:	af 92       	push	r10
    1eda:	bf 92       	push	r11
    1edc:	df 92       	push	r13
    1ede:	ef 92       	push	r14
    1ee0:	ff 92       	push	r15
    1ee2:	0f 93       	push	r16
    1ee4:	1f 93       	push	r17
    1ee6:	cf 93       	push	r28
    1ee8:	df 93       	push	r29
    1eea:	5c 01       	movw	r10, r24
    1eec:	8b 01       	movw	r16, r22
    1eee:	d4 2e       	mov	r13, r20
    1ef0:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <buzzerInitialized>
    1ef4:	81 11       	cpse	r24, r1
    1ef6:	05 c0       	rjmp	.+10     	; 0x1f02 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1ef8:	81 e0       	ldi	r24, 0x01	; 1
    1efa:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <buzzerInitialized>
    1efe:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <_ZN15OrangutanBuzzer5init2Ev>
    1f02:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1f06:	b7 fe       	sbrs	r11, 7
    1f08:	05 c0       	rjmp	.+10     	; 0x1f14 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1f0a:	e8 94       	clt
    1f0c:	b7 f8       	bld	r11, 7
    1f0e:	2a e0       	ldi	r18, 0x0A	; 10
    1f10:	f2 2e       	mov	r15, r18
    1f12:	02 c0       	rjmp	.+4      	; 0x1f18 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1f14:	ff 24       	eor	r15, r15
    1f16:	f3 94       	inc	r15
    1f18:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1f1c:	2e 2d       	mov	r18, r14
    1f1e:	28 7f       	andi	r18, 0xF8	; 248
    1f20:	e2 2e       	mov	r14, r18
    1f22:	48 ec       	ldi	r20, 0xC8	; 200
    1f24:	f4 9e       	mul	r15, r20
    1f26:	c0 01       	movw	r24, r0
    1f28:	11 24       	eor	r1, r1
    1f2a:	8a 15       	cp	r24, r10
    1f2c:	9b 05       	cpc	r25, r11
    1f2e:	e0 f4       	brcc	.+56     	; 0x1f68 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    1f30:	e5 01       	movw	r28, r10
    1f32:	51 e1       	ldi	r21, 0x11	; 17
    1f34:	a5 16       	cp	r10, r21
    1f36:	57 e2       	ldi	r21, 0x27	; 39
    1f38:	b5 06       	cpc	r11, r21
    1f3a:	10 f0       	brcs	.+4      	; 0x1f40 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    1f3c:	c0 e1       	ldi	r28, 0x10	; 16
    1f3e:	d7 e2       	ldi	r29, 0x27	; 39
    1f40:	be 01       	movw	r22, r28
    1f42:	76 95       	lsr	r23
    1f44:	67 95       	ror	r22
    1f46:	80 e0       	ldi	r24, 0x00	; 0
    1f48:	90 e0       	ldi	r25, 0x00	; 0
    1f4a:	60 58       	subi	r22, 0x80	; 128
    1f4c:	79 46       	sbci	r23, 0x69	; 105
    1f4e:	87 46       	sbci	r24, 0x67	; 103
    1f50:	9f 4f       	sbci	r25, 0xFF	; 255
    1f52:	4e 01       	movw	r8, r28
    1f54:	a1 2c       	mov	r10, r1
    1f56:	b1 2c       	mov	r11, r1
    1f58:	a5 01       	movw	r20, r10
    1f5a:	94 01       	movw	r18, r8
    1f5c:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    1f60:	59 01       	movw	r10, r18
    1f62:	8e 2d       	mov	r24, r14
    1f64:	81 60       	ori	r24, 0x01	; 1
    1f66:	24 c0       	rjmp	.+72     	; 0x1fb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1f68:	c8 e2       	ldi	r28, 0x28	; 40
    1f6a:	fc 9e       	mul	r15, r28
    1f6c:	c0 2d       	mov	r28, r0
    1f6e:	11 24       	eor	r1, r1
    1f70:	d0 e0       	ldi	r29, 0x00	; 0
    1f72:	ca 15       	cp	r28, r10
    1f74:	db 05       	cpc	r29, r11
    1f76:	08 f4       	brcc	.+2      	; 0x1f7a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1f78:	e5 01       	movw	r28, r10
    1f7a:	be 01       	movw	r22, r28
    1f7c:	76 95       	lsr	r23
    1f7e:	67 95       	ror	r22
    1f80:	9e 01       	movw	r18, r28
    1f82:	40 e0       	ldi	r20, 0x00	; 0
    1f84:	50 e0       	ldi	r21, 0x00	; 0
    1f86:	8a e0       	ldi	r24, 0x0A	; 10
    1f88:	f8 12       	cpse	r15, r24
    1f8a:	07 c0       	rjmp	.+14     	; 0x1f9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	60 5e       	subi	r22, 0xE0	; 224
    1f92:	73 44       	sbci	r23, 0x43	; 67
    1f94:	81 44       	sbci	r24, 0x41	; 65
    1f96:	9f 4f       	sbci	r25, 0xFF	; 255
    1f98:	06 c0       	rjmp	.+12     	; 0x1fa6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    1f9a:	80 e0       	ldi	r24, 0x00	; 0
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	60 53       	subi	r22, 0x30	; 48
    1fa0:	7d 4e       	sbci	r23, 0xED	; 237
    1fa2:	8c 4e       	sbci	r24, 0xEC	; 236
    1fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa6:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    1faa:	59 01       	movw	r10, r18
    1fac:	8e 2d       	mov	r24, r14
    1fae:	82 60       	ori	r24, 0x02	; 2
    1fb0:	88 2e       	mov	r8, r24
    1fb2:	2a e0       	ldi	r18, 0x0A	; 10
    1fb4:	f2 12       	cpse	r15, r18
    1fb6:	07 c0       	rjmp	.+14     	; 0x1fc6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    1fb8:	ce 01       	movw	r24, r28
    1fba:	05 96       	adiw	r24, 0x05	; 5
    1fbc:	6a e0       	ldi	r22, 0x0A	; 10
    1fbe:	70 e0       	ldi	r23, 0x00	; 0
    1fc0:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    1fc4:	eb 01       	movw	r28, r22
    1fc6:	c8 3e       	cpi	r28, 0xE8	; 232
    1fc8:	43 e0       	ldi	r20, 0x03	; 3
    1fca:	d4 07       	cpc	r29, r20
    1fcc:	59 f0       	breq	.+22     	; 0x1fe4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1fce:	98 01       	movw	r18, r16
    1fd0:	de 01       	movw	r26, r28
    1fd2:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__umulhisi3>
    1fd6:	28 ee       	ldi	r18, 0xE8	; 232
    1fd8:	33 e0       	ldi	r19, 0x03	; 3
    1fda:	40 e0       	ldi	r20, 0x00	; 0
    1fdc:	50 e0       	ldi	r21, 0x00	; 0
    1fde:	0e 94 8b 1b 	call	0x3716	; 0x3716 <__divmodsi4>
    1fe2:	89 01       	movw	r16, r18
    1fe4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1fe8:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1fec:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1ff0:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1ff4:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1ff8:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1ffc:	4d 2d       	mov	r20, r13
    1ffe:	40 31       	cpi	r20, 0x10	; 16
    2000:	08 f0       	brcs	.+2      	; 0x2004 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    2002:	4f e0       	ldi	r20, 0x0F	; 15
    2004:	80 e1       	ldi	r24, 0x10	; 16
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	84 1b       	sub	r24, r20
    200a:	91 09       	sbc	r25, r1
    200c:	a9 01       	movw	r20, r18
    200e:	02 c0       	rjmp	.+4      	; 0x2014 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    2010:	56 95       	lsr	r21
    2012:	47 95       	ror	r20
    2014:	8a 95       	dec	r24
    2016:	e2 f7       	brpl	.-8      	; 0x2010 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    2018:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    201c:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    2020:	10 93 6a 01 	sts	0x016A, r17	; 0x80016a <_ZL13buzzerTimeout+0x1>
    2024:	00 93 69 01 	sts	0x0169, r16	; 0x800169 <_ZL13buzzerTimeout>
    2028:	86 b3       	in	r24, 0x16	; 22
    202a:	8f ef       	ldi	r24, 0xFF	; 255
    202c:	86 bb       	out	0x16, r24	; 22
    202e:	81 e0       	ldi	r24, 0x01	; 1
    2030:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    2034:	df 91       	pop	r29
    2036:	cf 91       	pop	r28
    2038:	1f 91       	pop	r17
    203a:	0f 91       	pop	r16
    203c:	ff 90       	pop	r15
    203e:	ef 90       	pop	r14
    2040:	df 90       	pop	r13
    2042:	bf 90       	pop	r11
    2044:	af 90       	pop	r10
    2046:	9f 90       	pop	r9
    2048:	8f 90       	pop	r8
    204a:	08 95       	ret

0000204c <_ZN15OrangutanBuzzer8playNoteEhjh>:
    204c:	cf 93       	push	r28
    204e:	df 93       	push	r29
    2050:	eb 01       	movw	r28, r22
    2052:	8f 3f       	cpi	r24, 0xFF	; 255
    2054:	11 f0       	breq	.+4      	; 0x205a <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    2056:	41 11       	cpse	r20, r1
    2058:	05 c0       	rjmp	.+10     	; 0x2064 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    205a:	40 e0       	ldi	r20, 0x00	; 0
    205c:	be 01       	movw	r22, r28
    205e:	88 ee       	ldi	r24, 0xE8	; 232
    2060:	93 e0       	ldi	r25, 0x03	; 3
    2062:	43 c0       	rjmp	.+134    	; 0x20ea <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    2064:	81 31       	cpi	r24, 0x11	; 17
    2066:	30 f0       	brcs	.+12     	; 0x2074 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    2068:	50 ef       	ldi	r21, 0xF0	; 240
    206a:	58 0f       	add	r21, r24
    206c:	50 36       	cpi	r21, 0x60	; 96
    206e:	18 f0       	brcs	.+6      	; 0x2076 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2070:	5f e5       	ldi	r21, 0x5F	; 95
    2072:	01 c0       	rjmp	.+2      	; 0x2076 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    2074:	50 e0       	ldi	r21, 0x00	; 0
    2076:	85 2f       	mov	r24, r21
    2078:	6c e0       	ldi	r22, 0x0C	; 12
    207a:	0e 94 49 1b 	call	0x3692	; 0x3692 <__udivmodqi4>
    207e:	68 2f       	mov	r22, r24
    2080:	74 ef       	ldi	r23, 0xF4	; 244
    2082:	76 03       	mulsu	r23, r22
    2084:	90 01       	movw	r18, r0
    2086:	11 24       	eor	r1, r1
    2088:	25 0f       	add	r18, r21
    208a:	31 1d       	adc	r19, r1
    208c:	2c 30       	cpi	r18, 0x0C	; 12
    208e:	31 05       	cpc	r19, r1
    2090:	40 f4       	brcc	.+16     	; 0x20a2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    2092:	f9 01       	movw	r30, r18
    2094:	ee 0f       	add	r30, r30
    2096:	ff 1f       	adc	r31, r31
    2098:	ec 5e       	subi	r30, 0xEC	; 236
    209a:	fe 4f       	sbci	r31, 0xFE	; 254
    209c:	20 81       	ld	r18, Z
    209e:	31 81       	ldd	r19, Z+1	; 0x01
    20a0:	02 c0       	rjmp	.+4      	; 0x20a6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    20a2:	20 e0       	ldi	r18, 0x00	; 0
    20a4:	30 e0       	ldi	r19, 0x00	; 0
    20a6:	87 30       	cpi	r24, 0x07	; 7
    20a8:	81 f0       	breq	.+32     	; 0x20ca <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    20aa:	08 2e       	mov	r0, r24
    20ac:	02 c0       	rjmp	.+4      	; 0x20b2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    20ae:	22 0f       	add	r18, r18
    20b0:	33 1f       	adc	r19, r19
    20b2:	0a 94       	dec	r0
    20b4:	e2 f7       	brpl	.-8      	; 0x20ae <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    20b6:	82 30       	cpi	r24, 0x02	; 2
    20b8:	28 f0       	brcs	.+10     	; 0x20c4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    20ba:	c9 01       	movw	r24, r18
    20bc:	05 96       	adiw	r24, 0x05	; 5
    20be:	6a e0       	ldi	r22, 0x0A	; 10
    20c0:	70 e0       	ldi	r23, 0x00	; 0
    20c2:	0c c0       	rjmp	.+24     	; 0x20dc <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    20c4:	c9 01       	movw	r24, r18
    20c6:	90 58       	subi	r25, 0x80	; 128
    20c8:	0c c0       	rjmp	.+24     	; 0x20e2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    20ca:	c9 01       	movw	r24, r18
    20cc:	36 e0       	ldi	r19, 0x06	; 6
    20ce:	88 0f       	add	r24, r24
    20d0:	99 1f       	adc	r25, r25
    20d2:	3a 95       	dec	r19
    20d4:	e1 f7       	brne	.-8      	; 0x20ce <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    20d6:	02 96       	adiw	r24, 0x02	; 2
    20d8:	65 e0       	ldi	r22, 0x05	; 5
    20da:	70 e0       	ldi	r23, 0x00	; 0
    20dc:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    20e0:	cb 01       	movw	r24, r22
    20e2:	40 31       	cpi	r20, 0x10	; 16
    20e4:	08 f0       	brcs	.+2      	; 0x20e8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    20e6:	4f e0       	ldi	r20, 0x0F	; 15
    20e8:	be 01       	movw	r22, r28
    20ea:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    20ee:	df 91       	pop	r29
    20f0:	cf 91       	pop	r28
    20f2:	08 95       	ret

000020f4 <_ZL8nextNotev>:
    20f4:	a2 e0       	ldi	r26, 0x02	; 2
    20f6:	b0 e0       	ldi	r27, 0x00	; 0
    20f8:	e0 e8       	ldi	r30, 0x80	; 128
    20fa:	f0 e1       	ldi	r31, 0x10	; 16
    20fc:	0c 94 d4 1b 	jmp	0x37a8	; 0x37a8 <__prologue_saves__+0x4>
    2100:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    2104:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <_ZL8staccato>
    2108:	88 23       	and	r24, r24
    210a:	21 f0       	breq	.+8      	; 0x2114 <_ZL8nextNotev+0x20>
    210c:	60 91 65 01 	lds	r22, 0x0165	; 0x800165 <_ZL22staccato_rest_duration>
    2110:	61 11       	cpse	r22, r1
    2112:	17 c0       	rjmp	.+46     	; 0x2142 <_ZL8nextNotev+0x4e>
    2114:	77 24       	eor	r7, r7
    2116:	73 94       	inc	r7
    2118:	b0 ec       	ldi	r27, 0xC0	; 192
    211a:	ab 2e       	mov	r10, r27
    211c:	bd e5       	ldi	r27, 0x5D	; 93
    211e:	bb 2e       	mov	r11, r27
    2120:	1a e0       	ldi	r17, 0x0A	; 10
    2122:	61 2e       	mov	r6, r17
    2124:	04 e0       	ldi	r16, 0x04	; 4
    2126:	80 2e       	mov	r8, r16
    2128:	80 ed       	ldi	r24, 0xD0	; 208
    212a:	c8 2e       	mov	r12, r24
    212c:	87 e0       	ldi	r24, 0x07	; 7
    212e:	d8 2e       	mov	r13, r24
    2130:	94 e0       	ldi	r25, 0x04	; 4
    2132:	e9 2e       	mov	r14, r25
    2134:	f1 2c       	mov	r15, r1
    2136:	04 ef       	ldi	r16, 0xF4	; 244
    2138:	11 e0       	ldi	r17, 0x01	; 1
    213a:	2f e0       	ldi	r18, 0x0F	; 15
    213c:	42 2e       	mov	r4, r18
    213e:	51 2c       	mov	r5, r1
    2140:	15 c0       	rjmp	.+42     	; 0x216c <_ZL8nextNotev+0x78>
    2142:	70 e0       	ldi	r23, 0x00	; 0
    2144:	40 e0       	ldi	r20, 0x00	; 0
    2146:	88 ee       	ldi	r24, 0xE8	; 232
    2148:	93 e0       	ldi	r25, 0x03	; 3
    214a:	0e 94 6a 0f 	call	0x1ed4	; 0x1ed4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    214e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_ZL22staccato_rest_duration>
    2152:	17 c1       	rjmp	.+558    	; 0x2382 <_ZL8nextNotev+0x28e>
    2154:	86 36       	cpi	r24, 0x66	; 102
    2156:	d4 f5       	brge	.+116    	; 0x21cc <_ZL8nextNotev+0xd8>
    2158:	81 36       	cpi	r24, 0x61	; 97
    215a:	09 f4       	brne	.+2      	; 0x215e <_ZL8nextNotev+0x6a>
    215c:	a9 c0       	rjmp	.+338    	; 0x22b0 <_ZL8nextNotev+0x1bc>
    215e:	7c f5       	brge	.+94     	; 0x21be <_ZL8nextNotev+0xca>
    2160:	8c 33       	cpi	r24, 0x3C	; 60
    2162:	09 f4       	brne	.+2      	; 0x2166 <_ZL8nextNotev+0x72>
    2164:	60 c0       	rjmp	.+192    	; 0x2226 <_ZL8nextNotev+0x132>
    2166:	8e 33       	cpi	r24, 0x3E	; 62
    2168:	81 f4       	brne	.+32     	; 0x218a <_ZL8nextNotev+0x96>
    216a:	93 94       	inc	r9
    216c:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    2170:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    2174:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    2178:	2f 5f       	subi	r18, 0xFF	; 255
    217a:	3f 4f       	sbci	r19, 0xFF	; 255
    217c:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    2180:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    2184:	85 36       	cpi	r24, 0x65	; 101
    2186:	31 f7       	brne	.-52     	; 0x2154 <_ZL8nextNotev+0x60>
    2188:	52 c0       	rjmp	.+164    	; 0x222e <_ZL8nextNotev+0x13a>
    218a:	81 32       	cpi	r24, 0x21	; 33
    218c:	09 f0       	breq	.+2      	; 0x2190 <_ZL8nextNotev+0x9c>
    218e:	8b c0       	rjmp	.+278    	; 0x22a6 <_ZL8nextNotev+0x1b2>
    2190:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    2194:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    2198:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    219c:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    21a0:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    21a4:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    21a8:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    21ac:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    21b0:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    21b4:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <_ZL8staccato>
    21b8:	a4 e0       	ldi	r26, 0x04	; 4
    21ba:	9a 2e       	mov	r9, r26
    21bc:	d7 cf       	rjmp	.-82     	; 0x216c <_ZL8nextNotev+0x78>
    21be:	83 36       	cpi	r24, 0x63	; 99
    21c0:	a1 f1       	breq	.+104    	; 0x222a <_ZL8nextNotev+0x136>
    21c2:	0c f4       	brge	.+2      	; 0x21c6 <_ZL8nextNotev+0xd2>
    21c4:	78 c0       	rjmp	.+240    	; 0x22b6 <_ZL8nextNotev+0x1c2>
    21c6:	10 e0       	ldi	r17, 0x00	; 0
    21c8:	82 e0       	ldi	r24, 0x02	; 2
    21ca:	77 c0       	rjmp	.+238    	; 0x22ba <_ZL8nextNotev+0x1c6>
    21cc:	8d 36       	cpi	r24, 0x6D	; 109
    21ce:	c1 f1       	breq	.+112    	; 0x2240 <_ZL8nextNotev+0x14c>
    21d0:	94 f4       	brge	.+36     	; 0x21f6 <_ZL8nextNotev+0x102>
    21d2:	87 36       	cpi	r24, 0x67	; 103
    21d4:	91 f1       	breq	.+100    	; 0x223a <_ZL8nextNotev+0x146>
    21d6:	74 f1       	brlt	.+92     	; 0x2234 <_ZL8nextNotev+0x140>
    21d8:	8c 36       	cpi	r24, 0x6C	; 108
    21da:	09 f0       	breq	.+2      	; 0x21de <_ZL8nextNotev+0xea>
    21dc:	64 c0       	rjmp	.+200    	; 0x22a6 <_ZL8nextNotev+0x1b2>
    21de:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZL9getNumberv>
    21e2:	bc 01       	movw	r22, r24
    21e4:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    21e8:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    21ec:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    21f0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    21f4:	51 c0       	rjmp	.+162    	; 0x2298 <_ZL8nextNotev+0x1a4>
    21f6:	82 37       	cpi	r24, 0x72	; 114
    21f8:	c9 f1       	breq	.+114    	; 0x226c <_ZL8nextNotev+0x178>
    21fa:	4c f4       	brge	.+18     	; 0x220e <_ZL8nextNotev+0x11a>
    21fc:	8f 36       	cpi	r24, 0x6F	; 111
    21fe:	09 f0       	breq	.+2      	; 0x2202 <_ZL8nextNotev+0x10e>
    2200:	52 c0       	rjmp	.+164    	; 0x22a6 <_ZL8nextNotev+0x1b2>
    2202:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZL9getNumberv>
    2206:	98 2e       	mov	r9, r24
    2208:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    220c:	af cf       	rjmp	.-162    	; 0x216c <_ZL8nextNotev+0x78>
    220e:	84 37       	cpi	r24, 0x74	; 116
    2210:	81 f1       	breq	.+96     	; 0x2272 <_ZL8nextNotev+0x17e>
    2212:	86 37       	cpi	r24, 0x76	; 118
    2214:	09 f0       	breq	.+2      	; 0x2218 <_ZL8nextNotev+0x124>
    2216:	47 c0       	rjmp	.+142    	; 0x22a6 <_ZL8nextNotev+0x1b2>
    2218:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZL9getNumberv>
    221c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    2220:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    2224:	a3 cf       	rjmp	.-186    	; 0x216c <_ZL8nextNotev+0x78>
    2226:	9a 94       	dec	r9
    2228:	a1 cf       	rjmp	.-190    	; 0x216c <_ZL8nextNotev+0x78>
    222a:	10 e0       	ldi	r17, 0x00	; 0
    222c:	20 c0       	rjmp	.+64     	; 0x226e <_ZL8nextNotev+0x17a>
    222e:	10 e0       	ldi	r17, 0x00	; 0
    2230:	84 e0       	ldi	r24, 0x04	; 4
    2232:	43 c0       	rjmp	.+134    	; 0x22ba <_ZL8nextNotev+0x1c6>
    2234:	10 e0       	ldi	r17, 0x00	; 0
    2236:	85 e0       	ldi	r24, 0x05	; 5
    2238:	40 c0       	rjmp	.+128    	; 0x22ba <_ZL8nextNotev+0x1c6>
    223a:	10 e0       	ldi	r17, 0x00	; 0
    223c:	87 e0       	ldi	r24, 0x07	; 7
    223e:	3d c0       	rjmp	.+122    	; 0x22ba <_ZL8nextNotev+0x1c6>
    2240:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    2244:	8c 36       	cpi	r24, 0x6C	; 108
    2246:	19 f4       	brne	.+6      	; 0x224e <_ZL8nextNotev+0x15a>
    2248:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <_ZL8staccato>
    224c:	04 c0       	rjmp	.+8      	; 0x2256 <_ZL8nextNotev+0x162>
    224e:	70 92 66 01 	sts	0x0166, r7	; 0x800166 <_ZL8staccato>
    2252:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_ZL22staccato_rest_duration>
    2256:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    225a:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    225e:	2f 5f       	subi	r18, 0xFF	; 255
    2260:	3f 4f       	sbci	r19, 0xFF	; 255
    2262:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    2266:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    226a:	80 cf       	rjmp	.-256    	; 0x216c <_ZL8nextNotev+0x78>
    226c:	11 e0       	ldi	r17, 0x01	; 1
    226e:	80 e0       	ldi	r24, 0x00	; 0
    2270:	24 c0       	rjmp	.+72     	; 0x22ba <_ZL8nextNotev+0x1c6>
    2272:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZL9getNumberv>
    2276:	bc 01       	movw	r22, r24
    2278:	c5 01       	movw	r24, r10
    227a:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    227e:	66 9e       	mul	r6, r22
    2280:	c0 01       	movw	r24, r0
    2282:	67 9e       	mul	r6, r23
    2284:	90 0d       	add	r25, r0
    2286:	11 24       	eor	r1, r1
    2288:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    228c:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    2290:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    2294:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    2298:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    229c:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    22a0:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    22a4:	63 cf       	rjmp	.-314    	; 0x216c <_ZL8nextNotev+0x78>
    22a6:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <__data_end+0x1>
    22aa:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
    22ae:	69 c0       	rjmp	.+210    	; 0x2382 <_ZL8nextNotev+0x28e>
    22b0:	10 e0       	ldi	r17, 0x00	; 0
    22b2:	89 e0       	ldi	r24, 0x09	; 9
    22b4:	02 c0       	rjmp	.+4      	; 0x22ba <_ZL8nextNotev+0x1c6>
    22b6:	10 e0       	ldi	r17, 0x00	; 0
    22b8:	8b e0       	ldi	r24, 0x0B	; 11
    22ba:	08 2f       	mov	r16, r24
    22bc:	9c e0       	ldi	r25, 0x0C	; 12
    22be:	99 9e       	mul	r9, r25
    22c0:	00 0d       	add	r16, r0
    22c2:	11 24       	eor	r1, r1
    22c4:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    22c8:	98 2f       	mov	r25, r24
    22ca:	97 7f       	andi	r25, 0xF7	; 247
    22cc:	93 32       	cpi	r25, 0x23	; 35
    22ce:	61 f4       	brne	.+24     	; 0x22e8 <_ZL8nextNotev+0x1f4>
    22d0:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    22d4:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    22d8:	2f 5f       	subi	r18, 0xFF	; 255
    22da:	3f 4f       	sbci	r19, 0xFF	; 255
    22dc:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    22e0:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    22e4:	0f 5f       	subi	r16, 0xFF	; 255
    22e6:	ee cf       	rjmp	.-36     	; 0x22c4 <_ZL8nextNotev+0x1d0>
    22e8:	8d 32       	cpi	r24, 0x2D	; 45
    22ea:	71 f4       	brne	.+28     	; 0x2308 <_ZL8nextNotev+0x214>
    22ec:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    22f0:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    22f4:	2f 5f       	subi	r18, 0xFF	; 255
    22f6:	3f 4f       	sbci	r19, 0xFF	; 255
    22f8:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    22fc:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    2300:	01 50       	subi	r16, 0x01	; 1
    2302:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    2306:	f0 cf       	rjmp	.-32     	; 0x22e8 <_ZL8nextNotev+0x1f4>
    2308:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    230c:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    2310:	81 53       	subi	r24, 0x31	; 49
    2312:	88 30       	cpi	r24, 0x08	; 8
    2314:	50 f4       	brcc	.+20     	; 0x232a <_ZL8nextNotev+0x236>
    2316:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    231a:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    231e:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <_ZL9getNumberv>
    2322:	bc 01       	movw	r22, r24
    2324:	c7 01       	movw	r24, r14
    2326:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    232a:	7b 01       	movw	r14, r22
    232c:	f6 94       	lsr	r15
    232e:	e7 94       	ror	r14
    2330:	69 83       	std	Y+1, r22	; 0x01
    2332:	7a 83       	std	Y+2, r23	; 0x02
    2334:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <_ZL16currentCharacterv>
    2338:	69 81       	ldd	r22, Y+1	; 0x01
    233a:	7a 81       	ldd	r23, Y+2	; 0x02
    233c:	8e 32       	cpi	r24, 0x2E	; 46
    233e:	69 f4       	brne	.+26     	; 0x235a <_ZL8nextNotev+0x266>
    2340:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
    2344:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__data_end+0x1>
    2348:	2f 5f       	subi	r18, 0xFF	; 255
    234a:	3f 4f       	sbci	r19, 0xFF	; 255
    234c:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__data_end+0x1>
    2350:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__data_end>
    2354:	6e 0d       	add	r22, r14
    2356:	7f 1d       	adc	r23, r15
    2358:	e9 cf       	rjmp	.-46     	; 0x232c <_ZL8nextNotev+0x238>
    235a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <_ZL8staccato>
    235e:	88 23       	and	r24, r24
    2360:	39 f0       	breq	.+14     	; 0x2370 <_ZL8nextNotev+0x27c>
    2362:	9b 01       	movw	r18, r22
    2364:	36 95       	lsr	r19
    2366:	27 95       	ror	r18
    2368:	20 93 65 01 	sts	0x0165, r18	; 0x800165 <_ZL22staccato_rest_duration>
    236c:	62 1b       	sub	r22, r18
    236e:	71 09       	sbc	r23, r1
    2370:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    2374:	11 23       	and	r17, r17
    2376:	11 f0       	breq	.+4      	; 0x237c <_ZL8nextNotev+0x288>
    2378:	8f ef       	ldi	r24, 0xFF	; 255
    237a:	01 c0       	rjmp	.+2      	; 0x237e <_ZL8nextNotev+0x28a>
    237c:	80 2f       	mov	r24, r16
    237e:	0e 94 26 10 	call	0x204c	; 0x204c <_ZN15OrangutanBuzzer8playNoteEhjh>
    2382:	22 96       	adiw	r28, 0x02	; 2
    2384:	e0 e1       	ldi	r30, 0x10	; 16
    2386:	0c 94 f0 1b 	jmp	0x37e0	; 0x37e0 <__epilogue_restores__+0x4>

0000238a <__vector_13>:
    238a:	1f 92       	push	r1
    238c:	0f 92       	push	r0
    238e:	0f b6       	in	r0, 0x3f	; 63
    2390:	0f 92       	push	r0
    2392:	11 24       	eor	r1, r1
    2394:	2f 93       	push	r18
    2396:	3f 93       	push	r19
    2398:	4f 93       	push	r20
    239a:	5f 93       	push	r21
    239c:	6f 93       	push	r22
    239e:	7f 93       	push	r23
    23a0:	8f 93       	push	r24
    23a2:	9f 93       	push	r25
    23a4:	af 93       	push	r26
    23a6:	bf 93       	push	r27
    23a8:	ef 93       	push	r30
    23aa:	ff 93       	push	r31
    23ac:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <_ZL13buzzerTimeout>
    23b0:	90 91 6a 01 	lds	r25, 0x016A	; 0x80016a <_ZL13buzzerTimeout+0x1>
    23b4:	9c 01       	movw	r18, r24
    23b6:	21 50       	subi	r18, 0x01	; 1
    23b8:	31 09       	sbc	r19, r1
    23ba:	30 93 6a 01 	sts	0x016A, r19	; 0x80016a <_ZL13buzzerTimeout+0x1>
    23be:	20 93 69 01 	sts	0x0169, r18	; 0x800169 <_ZL13buzzerTimeout>
    23c2:	89 2b       	or	r24, r25
    23c4:	11 f5       	brne	.+68     	; 0x240a <__vector_13+0x80>
    23c6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    23ca:	78 94       	sei
    23cc:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    23d0:	88 7f       	andi	r24, 0xF8	; 248
    23d2:	81 60       	ori	r24, 0x01	; 1
    23d4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    23d8:	80 e1       	ldi	r24, 0x10	; 16
    23da:	97 e2       	ldi	r25, 0x27	; 39
    23dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    23e0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    23e4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    23e8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    23ec:	81 e0       	ldi	r24, 0x01	; 1
    23ee:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    23f2:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
    23f6:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <__data_end+0x1>
    23fa:	89 2b       	or	r24, r25
    23fc:	31 f0       	breq	.+12     	; 0x240a <__vector_13+0x80>
    23fe:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <_ZL17play_mode_setting>
    2402:	81 11       	cpse	r24, r1
    2404:	02 c0       	rjmp	.+4      	; 0x240a <__vector_13+0x80>
    2406:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <_ZL8nextNotev>
    240a:	ff 91       	pop	r31
    240c:	ef 91       	pop	r30
    240e:	bf 91       	pop	r27
    2410:	af 91       	pop	r26
    2412:	9f 91       	pop	r25
    2414:	8f 91       	pop	r24
    2416:	7f 91       	pop	r23
    2418:	6f 91       	pop	r22
    241a:	5f 91       	pop	r21
    241c:	4f 91       	pop	r20
    241e:	3f 91       	pop	r19
    2420:	2f 91       	pop	r18
    2422:	0f 90       	pop	r0
    2424:	0f be       	out	0x3f, r0	; 63
    2426:	0f 90       	pop	r0
    2428:	1f 90       	pop	r1
    242a:	18 95       	reti

0000242c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    242c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    2430:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <__data_end+0x1>
    2434:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
    2438:	81 e0       	ldi	r24, 0x01	; 1
    243a:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <_ZL17use_program_space>
    243e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <_ZL22staccato_rest_duration>
    2442:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <_ZL8nextNotev>
    2446:	08 95       	ret

00002448 <play_from_program_space>:
    2448:	0e 94 16 12 	call	0x242c	; 0x242c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    244c:	08 95       	ret

0000244e <delay_us.constprop.0>:
    244e:	81 e0       	ldi	r24, 0x01	; 1
    2450:	90 e0       	ldi	r25, 0x00	; 0
    2452:	6f 93       	push	r22
    2454:	64 e0       	ldi	r22, 0x04	; 4
    2456:	6a 95       	dec	r22
    2458:	f1 f7       	brne	.-4      	; 0x2456 <delay_us.constprop.0+0x8>
    245a:	6f 91       	pop	r22
    245c:	01 97       	sbiw	r24, 0x01	; 1
    245e:	c9 f7       	brne	.-14     	; 0x2452 <delay_us.constprop.0+0x4>
    2460:	08 95       	ret

00002462 <_ZN12OrangutanLCD8busyWaitEv>:
    2462:	0f 93       	push	r16
    2464:	1f 93       	push	r17
    2466:	cf 93       	push	r28
    2468:	df 93       	push	r29
    246a:	1a b1       	in	r17, 0x0a	; 10
    246c:	57 98       	cbi	0x0a, 7	; 10
    246e:	5a 98       	cbi	0x0b, 2	; 11
    2470:	28 9a       	sbi	0x05, 0	; 5
    2472:	c0 e0       	ldi	r28, 0x00	; 0
    2474:	d0 e0       	ldi	r29, 0x00	; 0
    2476:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    247a:	5c 9a       	sbi	0x0b, 4	; 11
    247c:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    2480:	09 b1       	in	r16, 0x09	; 9
    2482:	5c 98       	cbi	0x0b, 4	; 11
    2484:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    2488:	5c 9a       	sbi	0x0b, 4	; 11
    248a:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    248e:	5c 98       	cbi	0x0b, 4	; 11
    2490:	24 96       	adiw	r28, 0x04	; 4
    2492:	07 ff       	sbrs	r16, 7
    2494:	10 c0       	rjmp	.+32     	; 0x24b6 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    2496:	ae 01       	movw	r20, r28
    2498:	60 e0       	ldi	r22, 0x00	; 0
    249a:	70 e0       	ldi	r23, 0x00	; 0
    249c:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <lcdTimeout>
    24a0:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <lcdTimeout+0x1>
    24a4:	a0 91 6d 01 	lds	r26, 0x016D	; 0x80016d <lcdTimeout+0x2>
    24a8:	b0 91 6e 01 	lds	r27, 0x016E	; 0x80016e <lcdTimeout+0x3>
    24ac:	48 17       	cp	r20, r24
    24ae:	59 07       	cpc	r21, r25
    24b0:	6a 07       	cpc	r22, r26
    24b2:	7b 07       	cpc	r23, r27
    24b4:	00 f3       	brcs	.-64     	; 0x2476 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    24b6:	1a b9       	out	0x0a, r17	; 10
    24b8:	df 91       	pop	r29
    24ba:	cf 91       	pop	r28
    24bc:	1f 91       	pop	r17
    24be:	0f 91       	pop	r16
    24c0:	08 95       	ret

000024c2 <_ZN12OrangutanLCD8sendDataEh>:
    24c2:	95 b1       	in	r25, 0x05	; 5
    24c4:	28 2f       	mov	r18, r24
    24c6:	21 70       	andi	r18, 0x01	; 1
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	22 0f       	add	r18, r18
    24cc:	33 1f       	adc	r19, r19
    24ce:	48 2f       	mov	r20, r24
    24d0:	46 70       	andi	r20, 0x06	; 6
    24d2:	68 e0       	ldi	r22, 0x08	; 8
    24d4:	46 9f       	mul	r20, r22
    24d6:	a0 01       	movw	r20, r0
    24d8:	11 24       	eor	r1, r1
    24da:	24 2b       	or	r18, r20
    24dc:	9d 7c       	andi	r25, 0xCD	; 205
    24de:	29 2b       	or	r18, r25
    24e0:	25 b9       	out	0x05, r18	; 5
    24e2:	9b b1       	in	r25, 0x0b	; 11
    24e4:	88 70       	andi	r24, 0x08	; 8
    24e6:	82 95       	swap	r24
    24e8:	80 7f       	andi	r24, 0xF0	; 240
    24ea:	9f 77       	andi	r25, 0x7F	; 127
    24ec:	89 2b       	or	r24, r25
    24ee:	8b b9       	out	0x0b, r24	; 11
    24f0:	5c 9a       	sbi	0x0b, 4	; 11
    24f2:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    24f6:	5c 98       	cbi	0x0b, 4	; 11
    24f8:	0e 94 27 12 	call	0x244e	; 0x244e <delay_us.constprop.0>
    24fc:	08 95       	ret

000024fe <_ZN12OrangutanLCD4sendEhhh>:
    24fe:	a0 e0       	ldi	r26, 0x00	; 0
    2500:	b0 e0       	ldi	r27, 0x00	; 0
    2502:	e5 e8       	ldi	r30, 0x85	; 133
    2504:	f2 e1       	ldi	r31, 0x12	; 18
    2506:	0c 94 dd 1b 	jmp	0x37ba	; 0x37ba <__prologue_saves__+0x16>
    250a:	c8 2f       	mov	r28, r24
    250c:	d6 2e       	mov	r13, r22
    250e:	e4 2e       	mov	r14, r20
    2510:	80 91 d5 01 	lds	r24, 0x01D5	; 0x8001d5 <_ZZN12OrangutanLCD4initEvE11initialized>
    2514:	81 11       	cpse	r24, r1
    2516:	05 c0       	rjmp	.+10     	; 0x2522 <_ZN12OrangutanLCD4sendEhhh+0x24>
    2518:	81 e0       	ldi	r24, 0x01	; 1
    251a:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <_ZZN12OrangutanLCD4initEvE11initialized>
    251e:	0e 94 c5 12 	call	0x258a	; 0x258a <_ZN12OrangutanLCD5init2Ev>
    2522:	0e 94 31 12 	call	0x2462	; 0x2462 <_ZN12OrangutanLCD8busyWaitEv>
    2526:	14 b1       	in	r17, 0x04	; 4
    2528:	d5 b1       	in	r29, 0x05	; 5
    252a:	fa b0       	in	r15, 0x0a	; 10
    252c:	0b b1       	in	r16, 0x0b	; 11
    252e:	28 98       	cbi	0x05, 0	; 5
    2530:	dd 20       	and	r13, r13
    2532:	11 f0       	breq	.+4      	; 0x2538 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    2534:	5a 9a       	sbi	0x0b, 2	; 11
    2536:	01 c0       	rjmp	.+2      	; 0x253a <_ZN12OrangutanLCD4sendEhhh+0x3c>
    2538:	5a 98       	cbi	0x0b, 2	; 11
    253a:	94 b1       	in	r25, 0x04	; 4
    253c:	92 63       	ori	r25, 0x32	; 50
    253e:	94 b9       	out	0x04, r25	; 4
    2540:	57 9a       	sbi	0x0a, 7	; 10
    2542:	81 e0       	ldi	r24, 0x01	; 1
    2544:	e8 16       	cp	r14, r24
    2546:	29 f0       	breq	.+10     	; 0x2552 <_ZN12OrangutanLCD4sendEhhh+0x54>
    2548:	8c 2f       	mov	r24, r28
    254a:	82 95       	swap	r24
    254c:	8f 70       	andi	r24, 0x0F	; 15
    254e:	0e 94 61 12 	call	0x24c2	; 0x24c2 <_ZN12OrangutanLCD8sendDataEh>
    2552:	8c 2f       	mov	r24, r28
    2554:	8f 70       	andi	r24, 0x0F	; 15
    2556:	0e 94 61 12 	call	0x24c2	; 0x24c2 <_ZN12OrangutanLCD8sendDataEh>
    255a:	fa b8       	out	0x0a, r15	; 10
    255c:	0b b9       	out	0x0b, r16	; 11
    255e:	14 b9       	out	0x04, r17	; 4
    2560:	d5 b9       	out	0x05, r29	; 5
    2562:	cd b7       	in	r28, 0x3d	; 61
    2564:	de b7       	in	r29, 0x3e	; 62
    2566:	e7 e0       	ldi	r30, 0x07	; 7
    2568:	0c 94 f9 1b 	jmp	0x37f2	; 0x37f2 <__epilogue_restores__+0x16>

0000256c <_ZN12OrangutanLCD8send_cmdEh>:
    256c:	42 e0       	ldi	r20, 0x02	; 2
    256e:	60 e0       	ldi	r22, 0x00	; 0
    2570:	0e 94 7f 12 	call	0x24fe	; 0x24fe <_ZN12OrangutanLCD4sendEhhh>
    2574:	08 95       	ret

00002576 <_ZN12OrangutanLCD9send_dataEh>:
    2576:	42 e0       	ldi	r20, 0x02	; 2
    2578:	61 e0       	ldi	r22, 0x01	; 1
    257a:	0e 94 7f 12 	call	0x24fe	; 0x24fe <_ZN12OrangutanLCD4sendEhhh>
    257e:	08 95       	ret

00002580 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    2580:	41 e0       	ldi	r20, 0x01	; 1
    2582:	60 e0       	ldi	r22, 0x00	; 0
    2584:	0e 94 7f 12 	call	0x24fe	; 0x24fe <_ZN12OrangutanLCD4sendEhhh>
    2588:	08 95       	ret

0000258a <_ZN12OrangutanLCD5init2Ev>:
    258a:	80 e1       	ldi	r24, 0x10	; 16
    258c:	97 e2       	ldi	r25, 0x27	; 39
    258e:	a0 e0       	ldi	r26, 0x00	; 0
    2590:	b0 e0       	ldi	r27, 0x00	; 0
    2592:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <lcdTimeout>
    2596:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <lcdTimeout+0x1>
    259a:	a0 93 6d 01 	sts	0x016D, r26	; 0x80016d <lcdTimeout+0x2>
    259e:	b0 93 6e 01 	sts	0x016E, r27	; 0x80016e <lcdTimeout+0x3>
    25a2:	52 9a       	sbi	0x0a, 2	; 10
    25a4:	20 9a       	sbi	0x04, 0	; 4
    25a6:	54 9a       	sbi	0x0a, 4	; 10
    25a8:	8e e1       	ldi	r24, 0x1E	; 30
    25aa:	90 e0       	ldi	r25, 0x00	; 0
    25ac:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    25b0:	83 e0       	ldi	r24, 0x03	; 3
    25b2:	0e 94 c0 12 	call	0x2580	; 0x2580 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25b6:	86 e0       	ldi	r24, 0x06	; 6
    25b8:	90 e0       	ldi	r25, 0x00	; 0
    25ba:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    25be:	83 e0       	ldi	r24, 0x03	; 3
    25c0:	0e 94 c0 12 	call	0x2580	; 0x2580 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25c4:	82 e0       	ldi	r24, 0x02	; 2
    25c6:	90 e0       	ldi	r25, 0x00	; 0
    25c8:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    25cc:	83 e0       	ldi	r24, 0x03	; 3
    25ce:	0e 94 c0 12 	call	0x2580	; 0x2580 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25d2:	82 e0       	ldi	r24, 0x02	; 2
    25d4:	90 e0       	ldi	r25, 0x00	; 0
    25d6:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    25da:	82 e0       	ldi	r24, 0x02	; 2
    25dc:	0e 94 c0 12 	call	0x2580	; 0x2580 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    25e0:	82 e0       	ldi	r24, 0x02	; 2
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    25e8:	88 e2       	ldi	r24, 0x28	; 40
    25ea:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    25ee:	88 e0       	ldi	r24, 0x08	; 8
    25f0:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    25f4:	81 e0       	ldi	r24, 0x01	; 1
    25f6:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    25fa:	86 e0       	ldi	r24, 0x06	; 6
    25fc:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    2600:	8c e0       	ldi	r24, 0x0C	; 12
    2602:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    2606:	08 95       	ret

00002608 <_ZN12OrangutanLCD5clearEv>:
    2608:	81 e0       	ldi	r24, 0x01	; 1
    260a:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    260e:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <printf_chars>
    2612:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <printf_chars+0x1>
    2616:	89 2b       	or	r24, r25
    2618:	f9 f0       	breq	.+62     	; 0x2658 <_ZN12OrangutanLCD5clearEv+0x50>
    261a:	60 e0       	ldi	r22, 0x00	; 0
    261c:	a0 e2       	ldi	r26, 0x20	; 32
    261e:	26 2f       	mov	r18, r22
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    2626:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    262a:	90 e0       	ldi	r25, 0x00	; 0
    262c:	01 97       	sbiw	r24, 0x01	; 1
    262e:	78 9f       	mul	r23, r24
    2630:	a0 01       	movw	r20, r0
    2632:	79 9f       	mul	r23, r25
    2634:	50 0d       	add	r21, r0
    2636:	11 24       	eor	r1, r1
    2638:	24 17       	cp	r18, r20
    263a:	35 07       	cpc	r19, r21
    263c:	4c f4       	brge	.+18     	; 0x2650 <_ZN12OrangutanLCD5clearEv+0x48>
    263e:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <printf_chars>
    2642:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <printf_chars+0x1>
    2646:	e2 0f       	add	r30, r18
    2648:	f3 1f       	adc	r31, r19
    264a:	a0 83       	st	Z, r26
    264c:	6f 5f       	subi	r22, 0xFF	; 255
    264e:	e7 cf       	rjmp	.-50     	; 0x261e <_ZN12OrangutanLCD5clearEv+0x16>
    2650:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <col>
    2654:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <row>
    2658:	08 95       	ret

0000265a <clear>:
    265a:	0e 94 04 13 	call	0x2608	; 0x2608 <_ZN12OrangutanLCD5clearEv>
    265e:	08 95       	ret

00002660 <_ZN12OrangutanLCD5printEPKc>:
    2660:	cf 93       	push	r28
    2662:	df 93       	push	r29
    2664:	ec 01       	movw	r28, r24
    2666:	89 91       	ld	r24, Y+
    2668:	88 23       	and	r24, r24
    266a:	19 f0       	breq	.+6      	; 0x2672 <_ZN12OrangutanLCD5printEPKc+0x12>
    266c:	0e 94 bb 12 	call	0x2576	; 0x2576 <_ZN12OrangutanLCD9send_dataEh>
    2670:	fa cf       	rjmp	.-12     	; 0x2666 <_ZN12OrangutanLCD5printEPKc+0x6>
    2672:	df 91       	pop	r29
    2674:	cf 91       	pop	r28
    2676:	08 95       	ret

00002678 <print>:
    2678:	0e 94 30 13 	call	0x2660	; 0x2660 <_ZN12OrangutanLCD5printEPKc>
    267c:	08 95       	ret

0000267e <_ZN12OrangutanLCD5printEm>:
    267e:	aa e0       	ldi	r26, 0x0A	; 10
    2680:	b0 e0       	ldi	r27, 0x00	; 0
    2682:	e5 e4       	ldi	r30, 0x45	; 69
    2684:	f3 e1       	ldi	r31, 0x13	; 19
    2686:	0c 94 dc 1b 	jmp	0x37b8	; 0x37b8 <__prologue_saves__+0x14>
    268a:	1a e0       	ldi	r17, 0x0A	; 10
    268c:	5a e0       	ldi	r21, 0x0A	; 10
    268e:	c5 2e       	mov	r12, r21
    2690:	d1 2c       	mov	r13, r1
    2692:	e1 2c       	mov	r14, r1
    2694:	f1 2c       	mov	r15, r1
    2696:	06 2f       	mov	r16, r22
    2698:	a7 01       	movw	r20, r14
    269a:	96 01       	movw	r18, r12
    269c:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    26a0:	ca 01       	movw	r24, r20
    26a2:	b9 01       	movw	r22, r18
    26a4:	11 50       	subi	r17, 0x01	; 1
    26a6:	e1 e0       	ldi	r30, 0x01	; 1
    26a8:	f0 e0       	ldi	r31, 0x00	; 0
    26aa:	ec 0f       	add	r30, r28
    26ac:	fd 1f       	adc	r31, r29
    26ae:	e1 0f       	add	r30, r17
    26b0:	f1 1d       	adc	r31, r1
    26b2:	00 5d       	subi	r16, 0xD0	; 208
    26b4:	2a e0       	ldi	r18, 0x0A	; 10
    26b6:	62 9f       	mul	r22, r18
    26b8:	00 19       	sub	r16, r0
    26ba:	11 24       	eor	r1, r1
    26bc:	00 83       	st	Z, r16
    26be:	61 15       	cp	r22, r1
    26c0:	71 05       	cpc	r23, r1
    26c2:	81 05       	cpc	r24, r1
    26c4:	91 05       	cpc	r25, r1
    26c6:	39 f7       	brne	.-50     	; 0x2696 <_ZN12OrangutanLCD5printEm+0x18>
    26c8:	1a 30       	cpi	r17, 0x0A	; 10
    26ca:	58 f4       	brcc	.+22     	; 0x26e2 <_ZN12OrangutanLCD5printEm+0x64>
    26cc:	e1 e0       	ldi	r30, 0x01	; 1
    26ce:	f0 e0       	ldi	r31, 0x00	; 0
    26d0:	ec 0f       	add	r30, r28
    26d2:	fd 1f       	adc	r31, r29
    26d4:	e1 0f       	add	r30, r17
    26d6:	f1 1d       	adc	r31, r1
    26d8:	80 81       	ld	r24, Z
    26da:	0e 94 bb 12 	call	0x2576	; 0x2576 <_ZN12OrangutanLCD9send_dataEh>
    26de:	1f 5f       	subi	r17, 0xFF	; 255
    26e0:	f3 cf       	rjmp	.-26     	; 0x26c8 <_ZN12OrangutanLCD5printEm+0x4a>
    26e2:	2a 96       	adiw	r28, 0x0a	; 10
    26e4:	e8 e0       	ldi	r30, 0x08	; 8
    26e6:	0c 94 f8 1b 	jmp	0x37f0	; 0x37f0 <__epilogue_restores__+0x14>

000026ea <_ZN12OrangutanLCD5printEl>:
    26ea:	cf 92       	push	r12
    26ec:	df 92       	push	r13
    26ee:	ef 92       	push	r14
    26f0:	ff 92       	push	r15
    26f2:	6b 01       	movw	r12, r22
    26f4:	7c 01       	movw	r14, r24
    26f6:	97 ff       	sbrs	r25, 7
    26f8:	0b c0       	rjmp	.+22     	; 0x2710 <_ZN12OrangutanLCD5printEl+0x26>
    26fa:	f0 94       	com	r15
    26fc:	e0 94       	com	r14
    26fe:	d0 94       	com	r13
    2700:	c0 94       	com	r12
    2702:	c1 1c       	adc	r12, r1
    2704:	d1 1c       	adc	r13, r1
    2706:	e1 1c       	adc	r14, r1
    2708:	f1 1c       	adc	r15, r1
    270a:	8d e2       	ldi	r24, 0x2D	; 45
    270c:	0e 94 bb 12 	call	0x2576	; 0x2576 <_ZN12OrangutanLCD9send_dataEh>
    2710:	c7 01       	movw	r24, r14
    2712:	b6 01       	movw	r22, r12
    2714:	0e 94 3f 13 	call	0x267e	; 0x267e <_ZN12OrangutanLCD5printEm>
    2718:	ff 90       	pop	r15
    271a:	ef 90       	pop	r14
    271c:	df 90       	pop	r13
    271e:	cf 90       	pop	r12
    2720:	08 95       	ret

00002722 <print_long>:
    2722:	0e 94 75 13 	call	0x26ea	; 0x26ea <_ZN12OrangutanLCD5printEl>
    2726:	08 95       	ret

00002728 <_ZN12OrangutanLCD6gotoXYEhh>:
    2728:	a5 e0       	ldi	r26, 0x05	; 5
    272a:	b0 e0       	ldi	r27, 0x00	; 0
    272c:	ea e9       	ldi	r30, 0x9A	; 154
    272e:	f3 e1       	ldi	r31, 0x13	; 19
    2730:	0c 94 e1 1b 	jmp	0x37c2	; 0x37c2 <__prologue_saves__+0x1e>
    2734:	18 2f       	mov	r17, r24
    2736:	80 e8       	ldi	r24, 0x80	; 128
    2738:	89 83       	std	Y+1, r24	; 0x01
    273a:	80 ec       	ldi	r24, 0xC0	; 192
    273c:	8a 83       	std	Y+2, r24	; 0x02
    273e:	84 e9       	ldi	r24, 0x94	; 148
    2740:	8b 83       	std	Y+3, r24	; 0x03
    2742:	84 ed       	ldi	r24, 0xD4	; 212
    2744:	8c 83       	std	Y+4, r24	; 0x04
    2746:	fe 01       	movw	r30, r28
    2748:	e6 0f       	add	r30, r22
    274a:	f1 1d       	adc	r31, r1
    274c:	81 81       	ldd	r24, Z+1	; 0x01
    274e:	81 0f       	add	r24, r17
    2750:	6d 83       	std	Y+5, r22	; 0x05
    2752:	0e 94 b6 12 	call	0x256c	; 0x256c <_ZN12OrangutanLCD8send_cmdEh>
    2756:	10 93 6f 01 	sts	0x016F, r17	; 0x80016f <col>
    275a:	6d 81       	ldd	r22, Y+5	; 0x05
    275c:	60 93 70 01 	sts	0x0170, r22	; 0x800170 <row>
    2760:	25 96       	adiw	r28, 0x05	; 5
    2762:	e3 e0       	ldi	r30, 0x03	; 3
    2764:	0c 94 fd 1b 	jmp	0x37fa	; 0x37fa <__epilogue_restores__+0x1e>

00002768 <lcd_goto_xy>:
    2768:	0e 94 94 13 	call	0x2728	; 0x2728 <_ZN12OrangutanLCD6gotoXYEhh>
    276c:	08 95       	ret

0000276e <_ZN16OrangutanDigital9setOutputEhh>:
    276e:	88 30       	cpi	r24, 0x08	; 8
    2770:	58 f4       	brcc	.+22     	; 0x2788 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    2772:	91 e0       	ldi	r25, 0x01	; 1
    2774:	01 c0       	rjmp	.+2      	; 0x2778 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    2776:	99 0f       	add	r25, r25
    2778:	8a 95       	dec	r24
    277a:	ea f7       	brpl	.-6      	; 0x2776 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    277c:	89 2f       	mov	r24, r25
    277e:	aa e2       	ldi	r26, 0x2A	; 42
    2780:	b0 e0       	ldi	r27, 0x00	; 0
    2782:	eb e2       	ldi	r30, 0x2B	; 43
    2784:	f0 e0       	ldi	r31, 0x00	; 0
    2786:	21 c0       	rjmp	.+66     	; 0x27ca <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    2788:	8e 30       	cpi	r24, 0x0E	; 14
    278a:	60 f4       	brcc	.+24     	; 0x27a4 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    278c:	98 ef       	ldi	r25, 0xF8	; 248
    278e:	98 0f       	add	r25, r24
    2790:	81 e0       	ldi	r24, 0x01	; 1
    2792:	01 c0       	rjmp	.+2      	; 0x2796 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    2794:	88 0f       	add	r24, r24
    2796:	9a 95       	dec	r25
    2798:	ea f7       	brpl	.-6      	; 0x2794 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    279a:	a4 e2       	ldi	r26, 0x24	; 36
    279c:	b0 e0       	ldi	r27, 0x00	; 0
    279e:	e5 e2       	ldi	r30, 0x25	; 37
    27a0:	f0 e0       	ldi	r31, 0x00	; 0
    27a2:	13 c0       	rjmp	.+38     	; 0x27ca <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    27a4:	85 31       	cpi	r24, 0x15	; 21
    27a6:	60 f4       	brcc	.+24     	; 0x27c0 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    27a8:	92 ef       	ldi	r25, 0xF2	; 242
    27aa:	98 0f       	add	r25, r24
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	01 c0       	rjmp	.+2      	; 0x27b2 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    27b0:	88 0f       	add	r24, r24
    27b2:	9a 95       	dec	r25
    27b4:	ea f7       	brpl	.-6      	; 0x27b0 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    27b6:	a7 e2       	ldi	r26, 0x27	; 39
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	e8 e2       	ldi	r30, 0x28	; 40
    27bc:	f0 e0       	ldi	r31, 0x00	; 0
    27be:	05 c0       	rjmp	.+10     	; 0x27ca <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    27c0:	80 e0       	ldi	r24, 0x00	; 0
    27c2:	a0 e0       	ldi	r26, 0x00	; 0
    27c4:	b0 e0       	ldi	r27, 0x00	; 0
    27c6:	e0 e0       	ldi	r30, 0x00	; 0
    27c8:	f0 e0       	ldi	r31, 0x00	; 0
    27ca:	6f 3f       	cpi	r22, 0xFF	; 255
    27cc:	19 f4       	brne	.+6      	; 0x27d4 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    27ce:	90 81       	ld	r25, Z
    27d0:	98 27       	eor	r25, r24
    27d2:	09 c0       	rjmp	.+18     	; 0x27e6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    27d4:	66 23       	and	r22, r22
    27d6:	19 f0       	breq	.+6      	; 0x27de <_ZN16OrangutanDigital9setOutputEhh+0x70>
    27d8:	90 81       	ld	r25, Z
    27da:	98 2b       	or	r25, r24
    27dc:	04 c0       	rjmp	.+8      	; 0x27e6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    27de:	20 81       	ld	r18, Z
    27e0:	98 2f       	mov	r25, r24
    27e2:	90 95       	com	r25
    27e4:	92 23       	and	r25, r18
    27e6:	90 83       	st	Z, r25
    27e8:	9c 91       	ld	r25, X
    27ea:	98 2b       	or	r25, r24
    27ec:	9c 93       	st	X, r25
    27ee:	08 95       	ret

000027f0 <_ZN15OrangutanMotors5init2Ev>:
    27f0:	83 ef       	ldi	r24, 0xF3	; 243
    27f2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    27f6:	84 bd       	out	0x24, r24	; 36
    27f8:	82 e0       	ldi	r24, 0x02	; 2
    27fa:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    27fe:	85 bd       	out	0x25, r24	; 37
    2800:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    2804:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    2808:	18 bc       	out	0x28, r1	; 40
    280a:	17 bc       	out	0x27, r1	; 39
    280c:	60 e0       	ldi	r22, 0x00	; 0
    280e:	86 e0       	ldi	r24, 0x06	; 6
    2810:	0e 94 b7 13 	call	0x276e	; 0x276e <_ZN16OrangutanDigital9setOutputEhh>
    2814:	60 e0       	ldi	r22, 0x00	; 0
    2816:	85 e0       	ldi	r24, 0x05	; 5
    2818:	0e 94 b7 13 	call	0x276e	; 0x276e <_ZN16OrangutanDigital9setOutputEhh>
    281c:	60 e0       	ldi	r22, 0x00	; 0
    281e:	8b e0       	ldi	r24, 0x0B	; 11
    2820:	0e 94 b7 13 	call	0x276e	; 0x276e <_ZN16OrangutanDigital9setOutputEhh>
    2824:	60 e0       	ldi	r22, 0x00	; 0
    2826:	83 e0       	ldi	r24, 0x03	; 3
    2828:	0e 94 b7 13 	call	0x276e	; 0x276e <_ZN16OrangutanDigital9setOutputEhh>
    282c:	08 95       	ret

0000282e <_ZN15OrangutanMotors4initEv>:
    282e:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <_ZZN15OrangutanMotors4initEvE11initialized>
    2832:	81 11       	cpse	r24, r1
    2834:	05 c0       	rjmp	.+10     	; 0x2840 <_ZN15OrangutanMotors4initEv+0x12>
    2836:	81 e0       	ldi	r24, 0x01	; 1
    2838:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <_ZZN15OrangutanMotors4initEvE11initialized>
    283c:	0e 94 f8 13 	call	0x27f0	; 0x27f0 <_ZN15OrangutanMotors5init2Ev>
    2840:	08 95       	ret

00002842 <_ZN15OrangutanMotors10setM1SpeedEi>:
    2842:	cf 93       	push	r28
    2844:	df 93       	push	r29
    2846:	ec 01       	movw	r28, r24
    2848:	0e 94 17 14 	call	0x282e	; 0x282e <_ZN15OrangutanMotors4initEv>
    284c:	d7 ff       	sbrs	r29, 7
    284e:	05 c0       	rjmp	.+10     	; 0x285a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    2850:	d1 95       	neg	r29
    2852:	c1 95       	neg	r28
    2854:	d1 09       	sbc	r29, r1
    2856:	81 e0       	ldi	r24, 0x01	; 1
    2858:	01 c0       	rjmp	.+2      	; 0x285c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    285a:	80 e0       	ldi	r24, 0x00	; 0
    285c:	cf 3f       	cpi	r28, 0xFF	; 255
    285e:	d1 05       	cpc	r29, r1
    2860:	19 f0       	breq	.+6      	; 0x2868 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2862:	14 f0       	brlt	.+4      	; 0x2868 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    2864:	cf ef       	ldi	r28, 0xFF	; 255
    2866:	d0 e0       	ldi	r29, 0x00	; 0
    2868:	88 23       	and	r24, r24
    286a:	19 f0       	breq	.+6      	; 0x2872 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    286c:	18 bc       	out	0x28, r1	; 40
    286e:	c7 bd       	out	0x27, r28	; 39
    2870:	02 c0       	rjmp	.+4      	; 0x2876 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    2872:	c8 bd       	out	0x28, r28	; 40
    2874:	17 bc       	out	0x27, r1	; 39
    2876:	df 91       	pop	r29
    2878:	cf 91       	pop	r28
    287a:	08 95       	ret

0000287c <_ZN15OrangutanMotors10setM2SpeedEi>:
    287c:	cf 93       	push	r28
    287e:	df 93       	push	r29
    2880:	ec 01       	movw	r28, r24
    2882:	0e 94 17 14 	call	0x282e	; 0x282e <_ZN15OrangutanMotors4initEv>
    2886:	d7 ff       	sbrs	r29, 7
    2888:	05 c0       	rjmp	.+10     	; 0x2894 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    288a:	d1 95       	neg	r29
    288c:	c1 95       	neg	r28
    288e:	d1 09       	sbc	r29, r1
    2890:	81 e0       	ldi	r24, 0x01	; 1
    2892:	01 c0       	rjmp	.+2      	; 0x2896 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    2894:	80 e0       	ldi	r24, 0x00	; 0
    2896:	cf 3f       	cpi	r28, 0xFF	; 255
    2898:	d1 05       	cpc	r29, r1
    289a:	19 f0       	breq	.+6      	; 0x28a2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    289c:	14 f0       	brlt	.+4      	; 0x28a2 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    289e:	cf ef       	ldi	r28, 0xFF	; 255
    28a0:	d0 e0       	ldi	r29, 0x00	; 0
    28a2:	88 23       	and	r24, r24
    28a4:	29 f0       	breq	.+10     	; 0x28b0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    28a6:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    28aa:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    28ae:	04 c0       	rjmp	.+8      	; 0x28b8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    28b0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    28b4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    28b8:	df 91       	pop	r29
    28ba:	cf 91       	pop	r28
    28bc:	08 95       	ret

000028be <_ZN15OrangutanMotors9setSpeedsEii>:
    28be:	cf 93       	push	r28
    28c0:	df 93       	push	r29
    28c2:	eb 01       	movw	r28, r22
    28c4:	0e 94 21 14 	call	0x2842	; 0x2842 <_ZN15OrangutanMotors10setM1SpeedEi>
    28c8:	ce 01       	movw	r24, r28
    28ca:	0e 94 3e 14 	call	0x287c	; 0x287c <_ZN15OrangutanMotors10setM2SpeedEi>
    28ce:	df 91       	pop	r29
    28d0:	cf 91       	pop	r28
    28d2:	08 95       	ret

000028d4 <set_motors>:
    28d4:	0e 94 5f 14 	call	0x28be	; 0x28be <_ZN15OrangutanMotors9setSpeedsEii>
    28d8:	08 95       	ret

000028da <_ZN20OrangutanPushbuttons5init2Ev>:
    28da:	84 b1       	in	r24, 0x04	; 4
    28dc:	8d 7c       	andi	r24, 0xCD	; 205
    28de:	84 b9       	out	0x04, r24	; 4
    28e0:	85 b1       	in	r24, 0x05	; 5
    28e2:	82 63       	ori	r24, 0x32	; 50
    28e4:	85 b9       	out	0x05, r24	; 5
    28e6:	85 e0       	ldi	r24, 0x05	; 5
    28e8:	90 e0       	ldi	r25, 0x00	; 0
    28ea:	6f 93       	push	r22
    28ec:	64 e0       	ldi	r22, 0x04	; 4
    28ee:	6a 95       	dec	r22
    28f0:	f1 f7       	brne	.-4      	; 0x28ee <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    28f2:	6f 91       	pop	r22
    28f4:	01 97       	sbiw	r24, 0x01	; 1
    28f6:	c9 f7       	brne	.-14     	; 0x28ea <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    28f8:	08 95       	ret

000028fa <_ZN20OrangutanPushbuttons4initEv>:
    28fa:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    28fe:	81 11       	cpse	r24, r1
    2900:	05 c0       	rjmp	.+10     	; 0x290c <_ZN20OrangutanPushbuttons4initEv+0x12>
    2902:	81 e0       	ldi	r24, 0x01	; 1
    2904:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    2908:	0e 94 6d 14 	call	0x28da	; 0x28da <_ZN20OrangutanPushbuttons5init2Ev>
    290c:	08 95       	ret

0000290e <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    290e:	cf 93       	push	r28
    2910:	c8 2f       	mov	r28, r24
    2912:	0e 94 7d 14 	call	0x28fa	; 0x28fa <_ZN20OrangutanPushbuttons4initEv>
    2916:	83 b1       	in	r24, 0x03	; 3
    2918:	8c 23       	and	r24, r28
    291a:	e9 f3       	breq	.-6      	; 0x2916 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    291c:	8a e0       	ldi	r24, 0x0A	; 10
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	0e 94 ab 15 	call	0x2b56	; 0x2b56 <delay_ms>
    2924:	83 b1       	in	r24, 0x03	; 3
    2926:	8c 23       	and	r24, r28
    2928:	b1 f3       	breq	.-20     	; 0x2916 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    292a:	83 b1       	in	r24, 0x03	; 3
    292c:	8c 23       	and	r24, r28
    292e:	cf 91       	pop	r28
    2930:	08 95       	ret

00002932 <wait_for_button_release>:
    2932:	0e 94 87 14 	call	0x290e	; 0x290e <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    2936:	08 95       	ret

00002938 <_ZN20OrangutanPushbuttons9isPressedEh>:
    2938:	a1 e0       	ldi	r26, 0x01	; 1
    293a:	b0 e0       	ldi	r27, 0x00	; 0
    293c:	e2 ea       	ldi	r30, 0xA2	; 162
    293e:	f4 e1       	ldi	r31, 0x14	; 20
    2940:	0c 94 e2 1b 	jmp	0x37c4	; 0x37c4 <__prologue_saves__+0x20>
    2944:	89 83       	std	Y+1, r24	; 0x01
    2946:	0e 94 7d 14 	call	0x28fa	; 0x28fa <_ZN20OrangutanPushbuttons4initEv>
    294a:	93 b1       	in	r25, 0x03	; 3
    294c:	90 95       	com	r25
    294e:	89 81       	ldd	r24, Y+1	; 0x01
    2950:	89 23       	and	r24, r25
    2952:	21 96       	adiw	r28, 0x01	; 1
    2954:	e2 e0       	ldi	r30, 0x02	; 2
    2956:	0c 94 fe 1b 	jmp	0x37fc	; 0x37fc <__epilogue_restores__+0x20>

0000295a <button_is_pressed>:
    295a:	0e 94 9c 14 	call	0x2938	; 0x2938 <_ZN20OrangutanPushbuttons9isPressedEh>
    295e:	08 95       	ret

00002960 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    2960:	28 2f       	mov	r18, r24
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	9a e0       	ldi	r25, 0x0A	; 10
    2966:	89 9f       	mul	r24, r25
    2968:	f0 01       	movw	r30, r0
    296a:	11 24       	eor	r1, r1
    296c:	ed 58       	subi	r30, 0x8D	; 141
    296e:	fe 4f       	sbci	r31, 0xFE	; 254
    2970:	80 85       	ldd	r24, Z+8	; 0x08
    2972:	91 85       	ldd	r25, Z+9	; 0x09
    2974:	00 97       	sbiw	r24, 0x00	; 0
    2976:	21 f0       	breq	.+8      	; 0x2980 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    2978:	52 81       	ldd	r21, Z+2	; 0x02
    297a:	44 81       	ldd	r20, Z+4	; 0x04
    297c:	54 17       	cp	r21, r20
    297e:	80 f0       	brcs	.+32     	; 0x29a0 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    2980:	8a e0       	ldi	r24, 0x0A	; 10
    2982:	82 9f       	mul	r24, r18
    2984:	f0 01       	movw	r30, r0
    2986:	83 9f       	mul	r24, r19
    2988:	f0 0d       	add	r31, r0
    298a:	11 24       	eor	r1, r1
    298c:	ed 58       	subi	r30, 0x8D	; 141
    298e:	fe 4f       	sbci	r31, 0xFE	; 254
    2990:	92 81       	ldd	r25, Z+2	; 0x02
    2992:	84 81       	ldd	r24, Z+4	; 0x04
    2994:	98 13       	cpse	r25, r24
    2996:	0e c0       	rjmp	.+28     	; 0x29b4 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    2998:	85 81       	ldd	r24, Z+5	; 0x05
    299a:	81 11       	cpse	r24, r1
    299c:	0a c0       	rjmp	.+20     	; 0x29b2 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    299e:	08 95       	ret
    29a0:	42 81       	ldd	r20, Z+2	; 0x02
    29a2:	dc 01       	movw	r26, r24
    29a4:	a4 0f       	add	r26, r20
    29a6:	b1 1d       	adc	r27, r1
    29a8:	6c 93       	st	X, r22
    29aa:	82 81       	ldd	r24, Z+2	; 0x02
    29ac:	8f 5f       	subi	r24, 0xFF	; 255
    29ae:	82 83       	std	Z+2, r24	; 0x02
    29b0:	e7 cf       	rjmp	.-50     	; 0x2980 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    29b2:	12 82       	std	Z+2, r1	; 0x02
    29b4:	08 95       	ret

000029b6 <__vector_18>:
    29b6:	1f 92       	push	r1
    29b8:	0f 92       	push	r0
    29ba:	0f b6       	in	r0, 0x3f	; 63
    29bc:	0f 92       	push	r0
    29be:	11 24       	eor	r1, r1
    29c0:	2f 93       	push	r18
    29c2:	3f 93       	push	r19
    29c4:	4f 93       	push	r20
    29c6:	5f 93       	push	r21
    29c8:	6f 93       	push	r22
    29ca:	7f 93       	push	r23
    29cc:	8f 93       	push	r24
    29ce:	9f 93       	push	r25
    29d0:	af 93       	push	r26
    29d2:	bf 93       	push	r27
    29d4:	ef 93       	push	r30
    29d6:	ff 93       	push	r31
    29d8:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    29dc:	80 e0       	ldi	r24, 0x00	; 0
    29de:	0e 94 b0 14 	call	0x2960	; 0x2960 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    29e2:	ff 91       	pop	r31
    29e4:	ef 91       	pop	r30
    29e6:	bf 91       	pop	r27
    29e8:	af 91       	pop	r26
    29ea:	9f 91       	pop	r25
    29ec:	8f 91       	pop	r24
    29ee:	7f 91       	pop	r23
    29f0:	6f 91       	pop	r22
    29f2:	5f 91       	pop	r21
    29f4:	4f 91       	pop	r20
    29f6:	3f 91       	pop	r19
    29f8:	2f 91       	pop	r18
    29fa:	0f 90       	pop	r0
    29fc:	0f be       	out	0x3f, r0	; 63
    29fe:	0f 90       	pop	r0
    2a00:	1f 90       	pop	r1
    2a02:	18 95       	reti

00002a04 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    2a04:	9a e0       	ldi	r25, 0x0A	; 10
    2a06:	89 9f       	mul	r24, r25
    2a08:	f0 01       	movw	r30, r0
    2a0a:	11 24       	eor	r1, r1
    2a0c:	ed 58       	subi	r30, 0x8D	; 141
    2a0e:	fe 4f       	sbci	r31, 0xFE	; 254
    2a10:	86 81       	ldd	r24, Z+6	; 0x06
    2a12:	97 81       	ldd	r25, Z+7	; 0x07
    2a14:	89 2b       	or	r24, r25
    2a16:	59 f0       	breq	.+22     	; 0x2a2e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2a18:	91 81       	ldd	r25, Z+1	; 0x01
    2a1a:	83 81       	ldd	r24, Z+3	; 0x03
    2a1c:	98 17       	cp	r25, r24
    2a1e:	38 f4       	brcc	.+14     	; 0x2a2e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2a20:	80 81       	ld	r24, Z
    2a22:	81 11       	cpse	r24, r1
    2a24:	04 c0       	rjmp	.+8      	; 0x2a2e <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    2a26:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    2a2a:	80 62       	ori	r24, 0x20	; 32
    2a2c:	03 c0       	rjmp	.+6      	; 0x2a34 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    2a2e:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    2a32:	8f 7d       	andi	r24, 0xDF	; 223
    2a34:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    2a38:	08 95       	ret

00002a3a <_ZN15OrangutanSerial11uart_tx_isrEh>:
    2a3a:	9a e0       	ldi	r25, 0x0A	; 10
    2a3c:	89 9f       	mul	r24, r25
    2a3e:	f0 01       	movw	r30, r0
    2a40:	11 24       	eor	r1, r1
    2a42:	ed 58       	subi	r30, 0x8D	; 141
    2a44:	fe 4f       	sbci	r31, 0xFE	; 254
    2a46:	26 81       	ldd	r18, Z+6	; 0x06
    2a48:	37 81       	ldd	r19, Z+7	; 0x07
    2a4a:	21 15       	cp	r18, r1
    2a4c:	31 05       	cpc	r19, r1
    2a4e:	41 f0       	breq	.+16     	; 0x2a60 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2a50:	41 81       	ldd	r20, Z+1	; 0x01
    2a52:	93 81       	ldd	r25, Z+3	; 0x03
    2a54:	49 17       	cp	r20, r25
    2a56:	20 f4       	brcc	.+8      	; 0x2a60 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    2a58:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    2a5c:	95 fd       	sbrc	r25, 5
    2a5e:	03 c0       	rjmp	.+6      	; 0x2a66 <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    2a60:	0e 94 02 15 	call	0x2a04	; 0x2a04 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    2a64:	08 95       	ret
    2a66:	91 81       	ldd	r25, Z+1	; 0x01
    2a68:	d9 01       	movw	r26, r18
    2a6a:	a9 0f       	add	r26, r25
    2a6c:	b1 1d       	adc	r27, r1
    2a6e:	9c 91       	ld	r25, X
    2a70:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    2a74:	91 81       	ldd	r25, Z+1	; 0x01
    2a76:	9f 5f       	subi	r25, 0xFF	; 255
    2a78:	91 83       	std	Z+1, r25	; 0x01
    2a7a:	f2 cf       	rjmp	.-28     	; 0x2a60 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00002a7c <__vector_19>:
    2a7c:	1f 92       	push	r1
    2a7e:	0f 92       	push	r0
    2a80:	0f b6       	in	r0, 0x3f	; 63
    2a82:	0f 92       	push	r0
    2a84:	11 24       	eor	r1, r1
    2a86:	2f 93       	push	r18
    2a88:	3f 93       	push	r19
    2a8a:	4f 93       	push	r20
    2a8c:	5f 93       	push	r21
    2a8e:	6f 93       	push	r22
    2a90:	7f 93       	push	r23
    2a92:	8f 93       	push	r24
    2a94:	9f 93       	push	r25
    2a96:	af 93       	push	r26
    2a98:	bf 93       	push	r27
    2a9a:	ef 93       	push	r30
    2a9c:	ff 93       	push	r31
    2a9e:	80 e0       	ldi	r24, 0x00	; 0
    2aa0:	0e 94 1d 15 	call	0x2a3a	; 0x2a3a <_ZN15OrangutanSerial11uart_tx_isrEh>
    2aa4:	ff 91       	pop	r31
    2aa6:	ef 91       	pop	r30
    2aa8:	bf 91       	pop	r27
    2aaa:	af 91       	pop	r26
    2aac:	9f 91       	pop	r25
    2aae:	8f 91       	pop	r24
    2ab0:	7f 91       	pop	r23
    2ab2:	6f 91       	pop	r22
    2ab4:	5f 91       	pop	r21
    2ab6:	4f 91       	pop	r20
    2ab8:	3f 91       	pop	r19
    2aba:	2f 91       	pop	r18
    2abc:	0f 90       	pop	r0
    2abe:	0f be       	out	0x3f, r0	; 63
    2ac0:	0f 90       	pop	r0
    2ac2:	1f 90       	pop	r1
    2ac4:	18 95       	reti

00002ac6 <__vector_9>:
    2ac6:	2f 92       	push	r2
    2ac8:	8f 93       	push	r24
    2aca:	9f 93       	push	r25
    2acc:	2f b6       	in	r2, 0x3f	; 63
    2ace:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <tickCount+0x1>
    2ad2:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <tickCount+0x2>
    2ad6:	01 96       	adiw	r24, 0x01	; 1
    2ad8:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <tickCount+0x1>
    2adc:	90 93 85 01 	sts	0x0185, r25	; 0x800185 <tickCount+0x2>
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <tickCount+0x3>
    2ae6:	89 1f       	adc	r24, r25
    2ae8:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <tickCount+0x3>
    2aec:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <us_over_10+0x1>
    2af0:	9c 5f       	subi	r25, 0xFC	; 252
    2af2:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <us_over_10+0x1>
    2af6:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <us_over_10>
    2afa:	80 51       	subi	r24, 0x10	; 16
    2afc:	97 42       	sbci	r25, 0x27	; 39
    2afe:	c0 f0       	brcs	.+48     	; 0x2b30 <end>
    2b00:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <us_over_10+0x1>
    2b04:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <us_over_10>
    2b08:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <msCounter>
    2b0c:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <msCounter+0x1>
    2b10:	01 96       	adiw	r24, 0x01	; 1
    2b12:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <msCounter>
    2b16:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <msCounter+0x1>
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <msCounter+0x2>
    2b20:	89 1f       	adc	r24, r25
    2b22:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <msCounter+0x2>
    2b26:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <msCounter+0x3>
    2b2a:	89 1f       	adc	r24, r25
    2b2c:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <msCounter+0x3>

00002b30 <end>:
    2b30:	2f be       	out	0x3f, r2	; 63
    2b32:	9f 91       	pop	r25
    2b34:	8f 91       	pop	r24
    2b36:	2f 90       	pop	r2
    2b38:	18 95       	reti

00002b3a <_ZN13OrangutanTime17delayMillisecondsEj>:
    2b3a:	28 ee       	ldi	r18, 0xE8	; 232
    2b3c:	33 e0       	ldi	r19, 0x03	; 3
    2b3e:	01 97       	sbiw	r24, 0x01	; 1
    2b40:	48 f0       	brcs	.+18     	; 0x2b54 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    2b42:	f9 01       	movw	r30, r18
    2b44:	6f 93       	push	r22
    2b46:	64 e0       	ldi	r22, 0x04	; 4
    2b48:	6a 95       	dec	r22
    2b4a:	f1 f7       	brne	.-4      	; 0x2b48 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    2b4c:	6f 91       	pop	r22
    2b4e:	31 97       	sbiw	r30, 0x01	; 1
    2b50:	c9 f7       	brne	.-14     	; 0x2b44 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    2b52:	f5 cf       	rjmp	.-22     	; 0x2b3e <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    2b54:	08 95       	ret

00002b56 <delay_ms>:
    2b56:	0e 94 9d 15 	call	0x2b3a	; 0x2b3a <_ZN13OrangutanTime17delayMillisecondsEj>
    2b5a:	08 95       	ret

00002b5c <_ZN13OrangutanTime5init2Ev>:
    2b5c:	e0 e7       	ldi	r30, 0x70	; 112
    2b5e:	f0 e0       	ldi	r31, 0x00	; 0
    2b60:	80 81       	ld	r24, Z
    2b62:	8e 7f       	andi	r24, 0xFE	; 254
    2b64:	80 83       	st	Z, r24
    2b66:	a0 eb       	ldi	r26, 0xB0	; 176
    2b68:	b0 e0       	ldi	r27, 0x00	; 0
    2b6a:	8c 91       	ld	r24, X
    2b6c:	83 60       	ori	r24, 0x03	; 3
    2b6e:	8c 93       	st	X, r24
    2b70:	a1 eb       	ldi	r26, 0xB1	; 177
    2b72:	b0 e0       	ldi	r27, 0x00	; 0
    2b74:	8c 91       	ld	r24, X
    2b76:	80 7f       	andi	r24, 0xF0	; 240
    2b78:	8c 93       	st	X, r24
    2b7a:	8c 91       	ld	r24, X
    2b7c:	82 60       	ori	r24, 0x02	; 2
    2b7e:	8c 93       	st	X, r24
    2b80:	b8 9a       	sbi	0x17, 0	; 23
    2b82:	80 81       	ld	r24, Z
    2b84:	81 60       	ori	r24, 0x01	; 1
    2b86:	80 83       	st	Z, r24
    2b88:	78 94       	sei
    2b8a:	08 95       	ret

00002b8c <_ZN13OrangutanTime4initEv>:
    2b8c:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <_ZZN13OrangutanTime4initEvE11initialized>
    2b90:	81 11       	cpse	r24, r1
    2b92:	05 c0       	rjmp	.+10     	; 0x2b9e <_ZN13OrangutanTime4initEv+0x12>
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <_ZZN13OrangutanTime4initEvE11initialized>
    2b9a:	0e 94 ae 15 	call	0x2b5c	; 0x2b5c <_ZN13OrangutanTime5init2Ev>
    2b9e:	08 95       	ret

00002ba0 <_ZN13OrangutanTime2msEv>:
    2ba0:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN13OrangutanTime4initEv>
    2ba4:	e0 e7       	ldi	r30, 0x70	; 112
    2ba6:	f0 e0       	ldi	r31, 0x00	; 0
    2ba8:	80 81       	ld	r24, Z
    2baa:	8e 7f       	andi	r24, 0xFE	; 254
    2bac:	80 83       	st	Z, r24
    2bae:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <msCounter>
    2bb2:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <msCounter+0x1>
    2bb6:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <msCounter+0x2>
    2bba:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <msCounter+0x3>
    2bbe:	20 81       	ld	r18, Z
    2bc0:	21 60       	ori	r18, 0x01	; 1
    2bc2:	20 83       	st	Z, r18
    2bc4:	08 95       	ret

00002bc6 <get_ms>:
    2bc6:	0e 94 d0 15 	call	0x2ba0	; 0x2ba0 <_ZN13OrangutanTime2msEv>
    2bca:	08 95       	ret

00002bcc <_ZN13OrangutanTime5resetEv>:
    2bcc:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <_ZN13OrangutanTime4initEv>
    2bd0:	e0 e7       	ldi	r30, 0x70	; 112
    2bd2:	f0 e0       	ldi	r31, 0x00	; 0
    2bd4:	80 81       	ld	r24, Z
    2bd6:	8e 7f       	andi	r24, 0xFE	; 254
    2bd8:	80 83       	st	Z, r24
    2bda:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <msCounter>
    2bde:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <msCounter+0x1>
    2be2:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <msCounter+0x2>
    2be6:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <msCounter+0x3>
    2bea:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <us_over_10+0x1>
    2bee:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <us_over_10>
    2bf2:	80 81       	ld	r24, Z
    2bf4:	81 60       	ori	r24, 0x01	; 1
    2bf6:	80 83       	st	Z, r24
    2bf8:	08 95       	ret

00002bfa <calibrate_line_sensors>:
    2bfa:	68 2f       	mov	r22, r24
    2bfc:	87 e8       	ldi	r24, 0x87	; 135
    2bfe:	91 e0       	ldi	r25, 0x01	; 1
    2c00:	0e 94 e5 19 	call	0x33ca	; 0x33ca <_ZN16PololuQTRSensors9calibrateEh>
    2c04:	08 95       	ret

00002c06 <read_line>:
    2c06:	46 2f       	mov	r20, r22
    2c08:	20 e0       	ldi	r18, 0x00	; 0
    2c0a:	bc 01       	movw	r22, r24
    2c0c:	87 e8       	ldi	r24, 0x87	; 135
    2c0e:	91 e0       	ldi	r25, 0x01	; 1
    2c10:	0e 94 b6 1a 	call	0x356c	; 0x356c <_ZN16PololuQTRSensors8readLineEPjhh>
    2c14:	08 95       	ret

00002c16 <_ZN9Pololu3pi4initEjh>:
    2c16:	0f 93       	push	r16
    2c18:	cf 93       	push	r28
    2c1a:	df 93       	push	r29
    2c1c:	00 d0       	rcall	.+0      	; 0x2c1e <_ZN9Pololu3pi4initEjh+0x8>
    2c1e:	00 d0       	rcall	.+0      	; 0x2c20 <_ZN9Pololu3pi4initEjh+0xa>
    2c20:	1f 92       	push	r1
    2c22:	cd b7       	in	r28, 0x3d	; 61
    2c24:	de b7       	in	r29, 0x3e	; 62
    2c26:	9c 01       	movw	r18, r24
    2c28:	85 e0       	ldi	r24, 0x05	; 5
    2c2a:	ec e2       	ldi	r30, 0x2C	; 44
    2c2c:	f1 e0       	ldi	r31, 0x01	; 1
    2c2e:	de 01       	movw	r26, r28
    2c30:	11 96       	adiw	r26, 0x01	; 1
    2c32:	01 90       	ld	r0, Z+
    2c34:	0d 92       	st	X+, r0
    2c36:	8a 95       	dec	r24
    2c38:	e1 f7       	brne	.-8      	; 0x2c32 <_ZN9Pololu3pi4initEjh+0x1c>
    2c3a:	66 23       	and	r22, r22
    2c3c:	11 f0       	breq	.+4      	; 0x2c42 <_ZN9Pololu3pi4initEjh+0x2c>
    2c3e:	0f ef       	ldi	r16, 0xFF	; 255
    2c40:	01 c0       	rjmp	.+2      	; 0x2c44 <_ZN9Pololu3pi4initEjh+0x2e>
    2c42:	03 e1       	ldi	r16, 0x13	; 19
    2c44:	45 e0       	ldi	r20, 0x05	; 5
    2c46:	be 01       	movw	r22, r28
    2c48:	6f 5f       	subi	r22, 0xFF	; 255
    2c4a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c4c:	87 e8       	ldi	r24, 0x87	; 135
    2c4e:	91 e0       	ldi	r25, 0x01	; 1
    2c50:	0e 94 dd 16 	call	0x2dba	; 0x2dba <_ZN18PololuQTRSensorsRC4initEPhhjh>
    2c54:	87 e8       	ldi	r24, 0x87	; 135
    2c56:	91 e0       	ldi	r25, 0x01	; 1
    2c58:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <_ZN16PololuQTRSensors11emittersOffEv>
    2c5c:	0e 94 e6 15 	call	0x2bcc	; 0x2bcc <_ZN13OrangutanTime5resetEv>
    2c60:	0f 90       	pop	r0
    2c62:	0f 90       	pop	r0
    2c64:	0f 90       	pop	r0
    2c66:	0f 90       	pop	r0
    2c68:	0f 90       	pop	r0
    2c6a:	df 91       	pop	r29
    2c6c:	cf 91       	pop	r28
    2c6e:	0f 91       	pop	r16
    2c70:	08 95       	ret

00002c72 <pololu_3pi_init>:
    2c72:	60 e0       	ldi	r22, 0x00	; 0
    2c74:	0e 94 0b 16 	call	0x2c16	; 0x2c16 <_ZN9Pololu3pi4initEjh>
    2c78:	08 95       	ret

00002c7a <_GLOBAL__sub_D_pololu_3pi_init>:
    2c7a:	87 e8       	ldi	r24, 0x87	; 135
    2c7c:	91 e0       	ldi	r25, 0x01	; 1
    2c7e:	0e 94 2b 1b 	call	0x3656	; 0x3656 <_ZN16PololuQTRSensorsD1Ev>
    2c82:	08 95       	ret

00002c84 <delay_us>:
    2c84:	6f 93       	push	r22
    2c86:	64 e0       	ldi	r22, 0x04	; 4
    2c88:	6a 95       	dec	r22
    2c8a:	f1 f7       	brne	.-4      	; 0x2c88 <delay_us+0x4>
    2c8c:	6f 91       	pop	r22
    2c8e:	01 97       	sbiw	r24, 0x01	; 1
    2c90:	c9 f7       	brne	.-14     	; 0x2c84 <delay_us>
    2c92:	08 95       	ret

00002c94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    2c94:	fc 01       	movw	r30, r24
    2c96:	11 82       	std	Z+1, r1	; 0x01
    2c98:	10 82       	st	Z, r1
    2c9a:	13 82       	std	Z+3, r1	; 0x03
    2c9c:	12 82       	std	Z+2, r1	; 0x02
    2c9e:	15 82       	std	Z+5, r1	; 0x05
    2ca0:	14 82       	std	Z+4, r1	; 0x04
    2ca2:	16 82       	std	Z+6, r1	; 0x06
    2ca4:	68 30       	cpi	r22, 0x08	; 8
    2ca6:	68 f4       	brcc	.+26     	; 0x2cc2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    2ca8:	89 e2       	ldi	r24, 0x29	; 41
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	91 83       	std	Z+1, r25	; 0x01
    2cae:	80 83       	st	Z, r24
    2cb0:	8b e2       	ldi	r24, 0x2B	; 43
    2cb2:	90 e0       	ldi	r25, 0x00	; 0
    2cb4:	93 83       	std	Z+3, r25	; 0x03
    2cb6:	82 83       	std	Z+2, r24	; 0x02
    2cb8:	8a e2       	ldi	r24, 0x2A	; 42
    2cba:	90 e0       	ldi	r25, 0x00	; 0
    2cbc:	95 83       	std	Z+5, r25	; 0x05
    2cbe:	84 83       	std	Z+4, r24	; 0x04
    2cc0:	1f c0       	rjmp	.+62     	; 0x2d00 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2cc2:	6e 30       	cpi	r22, 0x0E	; 14
    2cc4:	70 f4       	brcc	.+28     	; 0x2ce2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    2cc6:	83 e2       	ldi	r24, 0x23	; 35
    2cc8:	90 e0       	ldi	r25, 0x00	; 0
    2cca:	91 83       	std	Z+1, r25	; 0x01
    2ccc:	80 83       	st	Z, r24
    2cce:	85 e2       	ldi	r24, 0x25	; 37
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	93 83       	std	Z+3, r25	; 0x03
    2cd4:	82 83       	std	Z+2, r24	; 0x02
    2cd6:	84 e2       	ldi	r24, 0x24	; 36
    2cd8:	90 e0       	ldi	r25, 0x00	; 0
    2cda:	95 83       	std	Z+5, r25	; 0x05
    2cdc:	84 83       	std	Z+4, r24	; 0x04
    2cde:	68 50       	subi	r22, 0x08	; 8
    2ce0:	0f c0       	rjmp	.+30     	; 0x2d00 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    2ce2:	65 31       	cpi	r22, 0x15	; 21
    2ce4:	98 f4       	brcc	.+38     	; 0x2d0c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    2ce6:	86 e2       	ldi	r24, 0x26	; 38
    2ce8:	90 e0       	ldi	r25, 0x00	; 0
    2cea:	91 83       	std	Z+1, r25	; 0x01
    2cec:	80 83       	st	Z, r24
    2cee:	88 e2       	ldi	r24, 0x28	; 40
    2cf0:	90 e0       	ldi	r25, 0x00	; 0
    2cf2:	93 83       	std	Z+3, r25	; 0x03
    2cf4:	82 83       	std	Z+2, r24	; 0x02
    2cf6:	87 e2       	ldi	r24, 0x27	; 39
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	95 83       	std	Z+5, r25	; 0x05
    2cfc:	84 83       	std	Z+4, r24	; 0x04
    2cfe:	6e 50       	subi	r22, 0x0E	; 14
    2d00:	81 e0       	ldi	r24, 0x01	; 1
    2d02:	01 c0       	rjmp	.+2      	; 0x2d06 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    2d04:	88 0f       	add	r24, r24
    2d06:	6a 95       	dec	r22
    2d08:	ea f7       	brpl	.-6      	; 0x2d04 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    2d0a:	86 83       	std	Z+6, r24	; 0x06
    2d0c:	08 95       	ret

00002d0e <_ZN16PololuQTRSensors4initEhhh>:
    2d0e:	a7 e0       	ldi	r26, 0x07	; 7
    2d10:	b0 e0       	ldi	r27, 0x00	; 0
    2d12:	ed e8       	ldi	r30, 0x8D	; 141
    2d14:	f6 e1       	ldi	r31, 0x16	; 22
    2d16:	0c 94 e0 1b 	jmp	0x37c0	; 0x37c0 <__prologue_saves__+0x1c>
    2d1a:	8c 01       	movw	r16, r24
    2d1c:	fc 01       	movw	r30, r24
    2d1e:	11 82       	std	Z+1, r1	; 0x01
    2d20:	10 82       	st	Z, r1
    2d22:	13 82       	std	Z+3, r1	; 0x03
    2d24:	12 82       	std	Z+2, r1	; 0x02
    2d26:	15 82       	std	Z+5, r1	; 0x05
    2d28:	14 82       	std	Z+4, r1	; 0x04
    2d2a:	17 82       	std	Z+7, r1	; 0x07
    2d2c:	16 82       	std	Z+6, r1	; 0x06
    2d2e:	61 31       	cpi	r22, 0x11	; 17
    2d30:	18 f0       	brcs	.+6      	; 0x2d38 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    2d32:	80 e1       	ldi	r24, 0x10	; 16
    2d34:	80 87       	std	Z+8, r24	; 0x08
    2d36:	02 c0       	rjmp	.+4      	; 0x2d3c <_ZN16PololuQTRSensors4initEhhh+0x2e>
    2d38:	fc 01       	movw	r30, r24
    2d3a:	60 87       	std	Z+8, r22	; 0x08
    2d3c:	f8 01       	movw	r30, r16
    2d3e:	20 8b       	std	Z+16, r18	; 0x10
    2d40:	64 2f       	mov	r22, r20
    2d42:	ce 01       	movw	r24, r28
    2d44:	01 96       	adiw	r24, 0x01	; 1
    2d46:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2d4a:	8f 81       	ldd	r24, Y+7	; 0x07
    2d4c:	f8 01       	movw	r30, r16
    2d4e:	81 87       	std	Z+9, r24	; 0x09
    2d50:	8b 81       	ldd	r24, Y+3	; 0x03
    2d52:	9c 81       	ldd	r25, Y+4	; 0x04
    2d54:	93 87       	std	Z+11, r25	; 0x0b
    2d56:	82 87       	std	Z+10, r24	; 0x0a
    2d58:	8d 81       	ldd	r24, Y+5	; 0x05
    2d5a:	9e 81       	ldd	r25, Y+6	; 0x06
    2d5c:	95 87       	std	Z+13, r25	; 0x0d
    2d5e:	84 87       	std	Z+12, r24	; 0x0c
    2d60:	27 96       	adiw	r28, 0x07	; 7
    2d62:	e4 e0       	ldi	r30, 0x04	; 4
    2d64:	0c 94 fc 1b 	jmp	0x37f8	; 0x37f8 <__epilogue_restores__+0x1c>

00002d68 <_ZN16PololuQTRSensors11emittersOffEv>:
    2d68:	fc 01       	movw	r30, r24
    2d6a:	a4 85       	ldd	r26, Z+12	; 0x0c
    2d6c:	b5 85       	ldd	r27, Z+13	; 0x0d
    2d6e:	10 97       	sbiw	r26, 0x00	; 0
    2d70:	79 f0       	breq	.+30     	; 0x2d90 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    2d72:	8c 91       	ld	r24, X
    2d74:	91 85       	ldd	r25, Z+9	; 0x09
    2d76:	89 2b       	or	r24, r25
    2d78:	8c 93       	st	X, r24
    2d7a:	a2 85       	ldd	r26, Z+10	; 0x0a
    2d7c:	b3 85       	ldd	r27, Z+11	; 0x0b
    2d7e:	9c 91       	ld	r25, X
    2d80:	81 85       	ldd	r24, Z+9	; 0x09
    2d82:	80 95       	com	r24
    2d84:	89 23       	and	r24, r25
    2d86:	8c 93       	st	X, r24
    2d88:	88 ec       	ldi	r24, 0xC8	; 200
    2d8a:	90 e0       	ldi	r25, 0x00	; 0
    2d8c:	0e 94 42 16 	call	0x2c84	; 0x2c84 <delay_us>
    2d90:	08 95       	ret

00002d92 <_ZN16PololuQTRSensors10emittersOnEv>:
    2d92:	fc 01       	movw	r30, r24
    2d94:	a4 85       	ldd	r26, Z+12	; 0x0c
    2d96:	b5 85       	ldd	r27, Z+13	; 0x0d
    2d98:	10 97       	sbiw	r26, 0x00	; 0
    2d9a:	71 f0       	breq	.+28     	; 0x2db8 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    2d9c:	8c 91       	ld	r24, X
    2d9e:	91 85       	ldd	r25, Z+9	; 0x09
    2da0:	89 2b       	or	r24, r25
    2da2:	8c 93       	st	X, r24
    2da4:	a2 85       	ldd	r26, Z+10	; 0x0a
    2da6:	b3 85       	ldd	r27, Z+11	; 0x0b
    2da8:	8c 91       	ld	r24, X
    2daa:	91 85       	ldd	r25, Z+9	; 0x09
    2dac:	89 2b       	or	r24, r25
    2dae:	8c 93       	st	X, r24
    2db0:	88 ec       	ldi	r24, 0xC8	; 200
    2db2:	90 e0       	ldi	r25, 0x00	; 0
    2db4:	0e 94 42 16 	call	0x2c84	; 0x2c84 <delay_us>
    2db8:	08 95       	ret

00002dba <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    2dba:	a7 e0       	ldi	r26, 0x07	; 7
    2dbc:	b0 e0       	ldi	r27, 0x00	; 0
    2dbe:	e3 ee       	ldi	r30, 0xE3	; 227
    2dc0:	f6 e1       	ldi	r31, 0x16	; 22
    2dc2:	0c 94 d5 1b 	jmp	0x37aa	; 0x37aa <__prologue_saves__+0x6>
    2dc6:	7c 01       	movw	r14, r24
    2dc8:	4b 01       	movw	r8, r22
    2dca:	64 2f       	mov	r22, r20
    2dcc:	39 01       	movw	r6, r18
    2dce:	40 2f       	mov	r20, r16
    2dd0:	20 e0       	ldi	r18, 0x00	; 0
    2dd2:	0e 94 87 16 	call	0x2d0e	; 0x2d0e <_ZN16PololuQTRSensors4initEhhh>
    2dd6:	87 01       	movw	r16, r14
    2dd8:	0f 5b       	subi	r16, 0xBF	; 191
    2dda:	1f 4f       	sbci	r17, 0xFF	; 255
    2ddc:	f8 01       	movw	r30, r16
    2dde:	10 82       	st	Z, r1
    2de0:	67 01       	movw	r12, r14
    2de2:	f2 e4       	ldi	r31, 0x42	; 66
    2de4:	cf 0e       	add	r12, r31
    2de6:	d1 1c       	adc	r13, r1
    2de8:	f6 01       	movw	r30, r12
    2dea:	10 82       	st	Z, r1
    2dec:	57 01       	movw	r10, r14
    2dee:	f3 e4       	ldi	r31, 0x43	; 67
    2df0:	af 0e       	add	r10, r31
    2df2:	b1 1c       	adc	r11, r1
    2df4:	f5 01       	movw	r30, r10
    2df6:	10 82       	st	Z, r1
    2df8:	f7 01       	movw	r30, r14
    2dfa:	77 86       	std	Z+15, r7	; 0x0f
    2dfc:	66 86       	std	Z+14, r6	; 0x0e
    2dfe:	51 2c       	mov	r5, r1
    2e00:	f7 01       	movw	r30, r14
    2e02:	80 85       	ldd	r24, Z+8	; 0x08
    2e04:	58 16       	cp	r5, r24
    2e06:	50 f5       	brcc	.+84     	; 0x2e5c <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    2e08:	65 2c       	mov	r6, r5
    2e0a:	71 2c       	mov	r7, r1
    2e0c:	f4 01       	movw	r30, r8
    2e0e:	e6 0d       	add	r30, r6
    2e10:	f7 1d       	adc	r31, r7
    2e12:	60 81       	ld	r22, Z
    2e14:	ce 01       	movw	r24, r28
    2e16:	01 96       	adiw	r24, 0x01	; 1
    2e18:	0e 94 4a 16 	call	0x2c94	; 0x2c94 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    2e1c:	2f 81       	ldd	r18, Y+7	; 0x07
    2e1e:	f7 01       	movw	r30, r14
    2e20:	e6 0d       	add	r30, r6
    2e22:	f7 1d       	adc	r31, r7
    2e24:	21 8b       	std	Z+17, r18	; 0x11
    2e26:	89 81       	ldd	r24, Y+1	; 0x01
    2e28:	9a 81       	ldd	r25, Y+2	; 0x02
    2e2a:	f3 01       	movw	r30, r6
    2e2c:	ee 0f       	add	r30, r30
    2e2e:	ff 1f       	adc	r31, r31
    2e30:	ee 0d       	add	r30, r14
    2e32:	ff 1d       	adc	r31, r15
    2e34:	92 a3       	std	Z+34, r25	; 0x22
    2e36:	81 a3       	std	Z+33, r24	; 0x21
    2e38:	83 32       	cpi	r24, 0x23	; 35
    2e3a:	91 05       	cpc	r25, r1
    2e3c:	11 f4       	brne	.+4      	; 0x2e42 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    2e3e:	f8 01       	movw	r30, r16
    2e40:	08 c0       	rjmp	.+16     	; 0x2e52 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2e42:	86 32       	cpi	r24, 0x26	; 38
    2e44:	91 05       	cpc	r25, r1
    2e46:	11 f4       	brne	.+4      	; 0x2e4c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    2e48:	f6 01       	movw	r30, r12
    2e4a:	03 c0       	rjmp	.+6      	; 0x2e52 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    2e4c:	89 97       	sbiw	r24, 0x29	; 41
    2e4e:	21 f4       	brne	.+8      	; 0x2e58 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    2e50:	f5 01       	movw	r30, r10
    2e52:	80 81       	ld	r24, Z
    2e54:	82 2b       	or	r24, r18
    2e56:	80 83       	st	Z, r24
    2e58:	53 94       	inc	r5
    2e5a:	d2 cf       	rjmp	.-92     	; 0x2e00 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    2e5c:	27 96       	adiw	r28, 0x07	; 7
    2e5e:	ef e0       	ldi	r30, 0x0F	; 15
    2e60:	0c 94 f1 1b 	jmp	0x37e2	; 0x37e2 <__epilogue_restores__+0x6>

00002e64 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    2e64:	a0 e0       	ldi	r26, 0x00	; 0
    2e66:	b0 e0       	ldi	r27, 0x00	; 0
    2e68:	e8 e3       	ldi	r30, 0x38	; 56
    2e6a:	f7 e1       	ldi	r31, 0x17	; 23
    2e6c:	0c 94 d7 1b 	jmp	0x37ae	; 0x37ae <__prologue_saves__+0xa>
    2e70:	ec 01       	movw	r28, r24
    2e72:	5b 01       	movw	r10, r22
    2e74:	6c 01       	movw	r12, r24
    2e76:	81 e4       	ldi	r24, 0x41	; 65
    2e78:	c8 0e       	add	r12, r24
    2e7a:	d1 1c       	adc	r13, r1
    2e7c:	f6 01       	movw	r30, r12
    2e7e:	80 80       	ld	r8, Z
    2e80:	7e 01       	movw	r14, r28
    2e82:	f2 e4       	ldi	r31, 0x42	; 66
    2e84:	ef 0e       	add	r14, r31
    2e86:	f1 1c       	adc	r15, r1
    2e88:	f7 01       	movw	r30, r14
    2e8a:	70 80       	ld	r7, Z
    2e8c:	8e 01       	movw	r16, r28
    2e8e:	0d 5b       	subi	r16, 0xBD	; 189
    2e90:	1f 4f       	sbci	r17, 0xFF	; 255
    2e92:	f8 01       	movw	r30, r16
    2e94:	90 80       	ld	r9, Z
    2e96:	80 e0       	ldi	r24, 0x00	; 0
    2e98:	98 85       	ldd	r25, Y+8	; 0x08
    2e9a:	89 17       	cp	r24, r25
    2e9c:	48 f4       	brcc	.+18     	; 0x2eb0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    2e9e:	f5 01       	movw	r30, r10
    2ea0:	e8 0f       	add	r30, r24
    2ea2:	f1 1d       	adc	r31, r1
    2ea4:	e8 0f       	add	r30, r24
    2ea6:	f1 1d       	adc	r31, r1
    2ea8:	11 82       	std	Z+1, r1	; 0x01
    2eaa:	10 82       	st	Z, r1
    2eac:	8f 5f       	subi	r24, 0xFF	; 255
    2eae:	f4 cf       	rjmp	.-24     	; 0x2e98 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    2eb0:	84 b1       	in	r24, 0x04	; 4
    2eb2:	f6 01       	movw	r30, r12
    2eb4:	90 81       	ld	r25, Z
    2eb6:	89 2b       	or	r24, r25
    2eb8:	84 b9       	out	0x04, r24	; 4
    2eba:	87 b1       	in	r24, 0x07	; 7
    2ebc:	f7 01       	movw	r30, r14
    2ebe:	90 81       	ld	r25, Z
    2ec0:	89 2b       	or	r24, r25
    2ec2:	87 b9       	out	0x07, r24	; 7
    2ec4:	8a b1       	in	r24, 0x0a	; 10
    2ec6:	f8 01       	movw	r30, r16
    2ec8:	90 81       	ld	r25, Z
    2eca:	89 2b       	or	r24, r25
    2ecc:	8a b9       	out	0x0a, r24	; 10
    2ece:	85 b1       	in	r24, 0x05	; 5
    2ed0:	f6 01       	movw	r30, r12
    2ed2:	90 81       	ld	r25, Z
    2ed4:	89 2b       	or	r24, r25
    2ed6:	85 b9       	out	0x05, r24	; 5
    2ed8:	88 b1       	in	r24, 0x08	; 8
    2eda:	f7 01       	movw	r30, r14
    2edc:	90 81       	ld	r25, Z
    2ede:	89 2b       	or	r24, r25
    2ee0:	88 b9       	out	0x08, r24	; 8
    2ee2:	8b b1       	in	r24, 0x0b	; 11
    2ee4:	f8 01       	movw	r30, r16
    2ee6:	90 81       	ld	r25, Z
    2ee8:	89 2b       	or	r24, r25
    2eea:	8b b9       	out	0x0b, r24	; 11
    2eec:	8a e0       	ldi	r24, 0x0A	; 10
    2eee:	90 e0       	ldi	r25, 0x00	; 0
    2ef0:	0e 94 42 16 	call	0x2c84	; 0x2c84 <delay_us>
    2ef4:	94 b1       	in	r25, 0x04	; 4
    2ef6:	f6 01       	movw	r30, r12
    2ef8:	80 81       	ld	r24, Z
    2efa:	80 95       	com	r24
    2efc:	89 23       	and	r24, r25
    2efe:	84 b9       	out	0x04, r24	; 4
    2f00:	97 b1       	in	r25, 0x07	; 7
    2f02:	f7 01       	movw	r30, r14
    2f04:	80 81       	ld	r24, Z
    2f06:	80 95       	com	r24
    2f08:	89 23       	and	r24, r25
    2f0a:	87 b9       	out	0x07, r24	; 7
    2f0c:	9a b1       	in	r25, 0x0a	; 10
    2f0e:	f8 01       	movw	r30, r16
    2f10:	80 81       	ld	r24, Z
    2f12:	80 95       	com	r24
    2f14:	89 23       	and	r24, r25
    2f16:	8a b9       	out	0x0a, r24	; 10
    2f18:	95 b1       	in	r25, 0x05	; 5
    2f1a:	f6 01       	movw	r30, r12
    2f1c:	80 81       	ld	r24, Z
    2f1e:	80 95       	com	r24
    2f20:	89 23       	and	r24, r25
    2f22:	85 b9       	out	0x05, r24	; 5
    2f24:	98 b1       	in	r25, 0x08	; 8
    2f26:	f7 01       	movw	r30, r14
    2f28:	80 81       	ld	r24, Z
    2f2a:	80 95       	com	r24
    2f2c:	89 23       	and	r24, r25
    2f2e:	88 b9       	out	0x08, r24	; 8
    2f30:	9b b1       	in	r25, 0x0b	; 11
    2f32:	f8 01       	movw	r30, r16
    2f34:	80 81       	ld	r24, Z
    2f36:	80 95       	com	r24
    2f38:	89 23       	and	r24, r25
    2f3a:	8b b9       	out	0x0b, r24	; 11
    2f3c:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2f40:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    2f44:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2f48:	83 60       	ori	r24, 0x03	; 3
    2f4a:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2f4e:	82 e0       	ldi	r24, 0x02	; 2
    2f50:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    2f54:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    2f58:	80 e0       	ldi	r24, 0x00	; 0
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	2e 85       	ldd	r18, Y+14	; 0x0e
    2f5e:	3f 85       	ldd	r19, Y+15	; 0x0f
    2f60:	82 17       	cp	r24, r18
    2f62:	93 07       	cpc	r25, r19
    2f64:	20 f5       	brcc	.+72     	; 0x2fae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    2f66:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    2f6a:	2c 2d       	mov	r18, r12
    2f6c:	24 1b       	sub	r18, r20
    2f6e:	82 0f       	add	r24, r18
    2f70:	91 1d       	adc	r25, r1
    2f72:	03 b1       	in	r16, 0x03	; 3
    2f74:	08 11       	cpse	r16, r8
    2f76:	32 c0       	rjmp	.+100    	; 0x2fdc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f78:	f6 b0       	in	r15, 0x06	; 6
    2f7a:	f7 10       	cpse	r15, r7
    2f7c:	2f c0       	rjmp	.+94     	; 0x2fdc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f7e:	29 b1       	in	r18, 0x09	; 9
    2f80:	29 11       	cpse	r18, r9
    2f82:	2c c0       	rjmp	.+88     	; 0x2fdc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2f84:	10 c0       	rjmp	.+32     	; 0x2fa6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    2f86:	21 2f       	mov	r18, r17
    2f88:	30 e0       	ldi	r19, 0x00	; 0
    2f8a:	a9 01       	movw	r20, r18
    2f8c:	44 0f       	add	r20, r20
    2f8e:	55 1f       	adc	r21, r21
    2f90:	f5 01       	movw	r30, r10
    2f92:	e4 0f       	add	r30, r20
    2f94:	f5 1f       	adc	r31, r21
    2f96:	60 81       	ld	r22, Z
    2f98:	71 81       	ldd	r23, Z+1	; 0x01
    2f9a:	67 2b       	or	r22, r23
    2f9c:	21 f1       	breq	.+72     	; 0x2fe6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    2f9e:	1f 5f       	subi	r17, 0xFF	; 255
    2fa0:	28 85       	ldd	r18, Y+8	; 0x08
    2fa2:	12 17       	cp	r17, r18
    2fa4:	80 f3       	brcs	.-32     	; 0x2f86 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    2fa6:	7f 2c       	mov	r7, r15
    2fa8:	80 2e       	mov	r8, r16
    2faa:	4c 2d       	mov	r20, r12
    2fac:	d7 cf       	rjmp	.-82     	; 0x2f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    2fae:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    2fb2:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    2fb6:	20 e0       	ldi	r18, 0x00	; 0
    2fb8:	88 85       	ldd	r24, Y+8	; 0x08
    2fba:	28 17       	cp	r18, r24
    2fbc:	30 f5       	brcc	.+76     	; 0x300a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    2fbe:	f5 01       	movw	r30, r10
    2fc0:	e2 0f       	add	r30, r18
    2fc2:	f1 1d       	adc	r31, r1
    2fc4:	e2 0f       	add	r30, r18
    2fc6:	f1 1d       	adc	r31, r1
    2fc8:	80 81       	ld	r24, Z
    2fca:	91 81       	ldd	r25, Z+1	; 0x01
    2fcc:	89 2b       	or	r24, r25
    2fce:	21 f4       	brne	.+8      	; 0x2fd8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    2fd0:	8e 85       	ldd	r24, Y+14	; 0x0e
    2fd2:	9f 85       	ldd	r25, Y+15	; 0x0f
    2fd4:	91 83       	std	Z+1, r25	; 0x01
    2fd6:	80 83       	st	Z, r24
    2fd8:	2f 5f       	subi	r18, 0xFF	; 255
    2fda:	ee cf       	rjmp	.-36     	; 0x2fb8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    2fdc:	03 b1       	in	r16, 0x03	; 3
    2fde:	f6 b0       	in	r15, 0x06	; 6
    2fe0:	99 b0       	in	r9, 0x09	; 9
    2fe2:	10 e0       	ldi	r17, 0x00	; 0
    2fe4:	dd cf       	rjmp	.-70     	; 0x2fa0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    2fe6:	de 01       	movw	r26, r28
    2fe8:	a4 0f       	add	r26, r20
    2fea:	b5 1f       	adc	r27, r21
    2fec:	91 96       	adiw	r26, 0x21	; 33
    2fee:	0d 90       	ld	r0, X+
    2ff0:	bc 91       	ld	r27, X
    2ff2:	a0 2d       	mov	r26, r0
    2ff4:	4c 91       	ld	r20, X
    2ff6:	de 01       	movw	r26, r28
    2ff8:	a2 0f       	add	r26, r18
    2ffa:	b3 1f       	adc	r27, r19
    2ffc:	51 96       	adiw	r26, 0x11	; 17
    2ffe:	2c 91       	ld	r18, X
    3000:	42 23       	and	r20, r18
    3002:	69 f6       	brne	.-102    	; 0x2f9e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    3004:	91 83       	std	Z+1, r25	; 0x01
    3006:	80 83       	st	Z, r24
    3008:	ca cf       	rjmp	.-108    	; 0x2f9e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    300a:	cd b7       	in	r28, 0x3d	; 61
    300c:	de b7       	in	r29, 0x3e	; 62
    300e:	ed e0       	ldi	r30, 0x0D	; 13
    3010:	0c 94 f3 1b 	jmp	0x37e6	; 0x37e6 <__epilogue_restores__+0xa>

00003014 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    3014:	ef 92       	push	r14
    3016:	ff 92       	push	r15
    3018:	0f 93       	push	r16
    301a:	1f 93       	push	r17
    301c:	cf 93       	push	r28
    301e:	df 93       	push	r29
    3020:	fc 01       	movw	r30, r24
    3022:	9b 01       	movw	r18, r22
    3024:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3028:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    302c:	47 b1       	in	r20, 0x07	; 7
    302e:	18 b1       	in	r17, 0x08	; 8
    3030:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3034:	86 fd       	sbrc	r24, 6
    3036:	fc cf       	rjmp	.-8      	; 0x3030 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    3038:	80 e0       	ldi	r24, 0x00	; 0
    303a:	90 85       	ldd	r25, Z+8	; 0x08
    303c:	89 17       	cp	r24, r25
    303e:	48 f4       	brcc	.+18     	; 0x3052 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    3040:	d9 01       	movw	r26, r18
    3042:	a8 0f       	add	r26, r24
    3044:	b1 1d       	adc	r27, r1
    3046:	a8 0f       	add	r26, r24
    3048:	b1 1d       	adc	r27, r1
    304a:	1d 92       	st	X+, r1
    304c:	1c 92       	st	X, r1
    304e:	8f 5f       	subi	r24, 0xFF	; 255
    3050:	f4 cf       	rjmp	.-24     	; 0x303a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    3052:	97 b1       	in	r25, 0x07	; 7
    3054:	82 a1       	ldd	r24, Z+34	; 0x22
    3056:	80 95       	com	r24
    3058:	89 23       	and	r24, r25
    305a:	87 b9       	out	0x07, r24	; 7
    305c:	98 b1       	in	r25, 0x08	; 8
    305e:	82 a1       	ldd	r24, Z+34	; 0x22
    3060:	80 95       	com	r24
    3062:	89 23       	and	r24, r25
    3064:	88 b9       	out	0x08, r24	; 8
    3066:	87 e8       	ldi	r24, 0x87	; 135
    3068:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    306c:	e1 2c       	mov	r14, r1
    306e:	81 a1       	ldd	r24, Z+33	; 0x21
    3070:	e8 16       	cp	r14, r24
    3072:	10 f0       	brcs	.+4      	; 0x3078 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    3074:	e1 2c       	mov	r14, r1
    3076:	29 c0       	rjmp	.+82     	; 0x30ca <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    3078:	50 e0       	ldi	r21, 0x00	; 0
    307a:	80 85       	ldd	r24, Z+8	; 0x08
    307c:	58 17       	cp	r21, r24
    307e:	18 f5       	brcc	.+70     	; 0x30c6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    3080:	a5 2f       	mov	r26, r21
    3082:	b0 e0       	ldi	r27, 0x00	; 0
    3084:	ef 01       	movw	r28, r30
    3086:	ca 0f       	add	r28, r26
    3088:	db 1f       	adc	r29, r27
    308a:	89 89       	ldd	r24, Y+17	; 0x11
    308c:	80 64       	ori	r24, 0x40	; 64
    308e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    3092:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3096:	80 64       	ori	r24, 0x40	; 64
    3098:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    309c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    30a0:	86 fd       	sbrc	r24, 6
    30a2:	fc cf       	rjmp	.-8      	; 0x309c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    30a4:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    30a8:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    30ac:	aa 0f       	add	r26, r26
    30ae:	bb 1f       	adc	r27, r27
    30b0:	a2 0f       	add	r26, r18
    30b2:	b3 1f       	adc	r27, r19
    30b4:	8d 91       	ld	r24, X+
    30b6:	9c 91       	ld	r25, X
    30b8:	11 97       	sbiw	r26, 0x01	; 1
    30ba:	86 0f       	add	r24, r22
    30bc:	97 1f       	adc	r25, r23
    30be:	8d 93       	st	X+, r24
    30c0:	9c 93       	st	X, r25
    30c2:	5f 5f       	subi	r21, 0xFF	; 255
    30c4:	da cf       	rjmp	.-76     	; 0x307a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    30c6:	e3 94       	inc	r14
    30c8:	d2 cf       	rjmp	.-92     	; 0x306e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    30ca:	80 85       	ldd	r24, Z+8	; 0x08
    30cc:	e8 16       	cp	r14, r24
    30ce:	a0 f4       	brcc	.+40     	; 0x30f8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    30d0:	e9 01       	movw	r28, r18
    30d2:	ce 0d       	add	r28, r14
    30d4:	d1 1d       	adc	r29, r1
    30d6:	ce 0d       	add	r28, r14
    30d8:	d1 1d       	adc	r29, r1
    30da:	61 a1       	ldd	r22, Z+33	; 0x21
    30dc:	70 e0       	ldi	r23, 0x00	; 0
    30de:	cb 01       	movw	r24, r22
    30e0:	95 95       	asr	r25
    30e2:	87 95       	ror	r24
    30e4:	a8 81       	ld	r26, Y
    30e6:	b9 81       	ldd	r27, Y+1	; 0x01
    30e8:	8a 0f       	add	r24, r26
    30ea:	9b 1f       	adc	r25, r27
    30ec:	0e 94 55 1b 	call	0x36aa	; 0x36aa <__udivmodhi4>
    30f0:	79 83       	std	Y+1, r23	; 0x01
    30f2:	68 83       	st	Y, r22
    30f4:	e3 94       	inc	r14
    30f6:	e9 cf       	rjmp	.-46     	; 0x30ca <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    30f8:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    30fc:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    3100:	18 b9       	out	0x08, r17	; 8
    3102:	47 b9       	out	0x07, r20	; 7
    3104:	cd b7       	in	r28, 0x3d	; 61
    3106:	de b7       	in	r29, 0x3e	; 62
    3108:	e6 e0       	ldi	r30, 0x06	; 6
    310a:	0c 94 fa 1b 	jmp	0x37f4	; 0x37f4 <__epilogue_restores__+0x18>

0000310e <_ZN16PololuQTRSensors4readEPjh>:
    310e:	a0 e2       	ldi	r26, 0x20	; 32
    3110:	b0 e0       	ldi	r27, 0x00	; 0
    3112:	ed e8       	ldi	r30, 0x8D	; 141
    3114:	f8 e1       	ldi	r31, 0x18	; 24
    3116:	0c 94 dd 1b 	jmp	0x37ba	; 0x37ba <__prologue_saves__+0x16>
    311a:	8c 01       	movw	r16, r24
    311c:	7b 01       	movw	r14, r22
    311e:	d4 2e       	mov	r13, r20
    3120:	8f ef       	ldi	r24, 0xFF	; 255
    3122:	84 0f       	add	r24, r20
    3124:	82 30       	cpi	r24, 0x02	; 2
    3126:	18 f4       	brcc	.+6      	; 0x312e <_ZN16PololuQTRSensors4readEPjh+0x20>
    3128:	c8 01       	movw	r24, r16
    312a:	0e 94 c9 16 	call	0x2d92	; 0x2d92 <_ZN16PololuQTRSensors10emittersOnEv>
    312e:	d8 01       	movw	r26, r16
    3130:	50 96       	adiw	r26, 0x10	; 16
    3132:	8c 91       	ld	r24, X
    3134:	b7 01       	movw	r22, r14
    3136:	81 11       	cpse	r24, r1
    3138:	10 c0       	rjmp	.+32     	; 0x315a <_ZN16PololuQTRSensors4readEPjh+0x4c>
    313a:	c8 01       	movw	r24, r16
    313c:	0e 94 32 17 	call	0x2e64	; 0x2e64 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3140:	c8 01       	movw	r24, r16
    3142:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <_ZN16PololuQTRSensors11emittersOffEv>
    3146:	b2 e0       	ldi	r27, 0x02	; 2
    3148:	db 12       	cpse	r13, r27
    314a:	3a c0       	rjmp	.+116    	; 0x31c0 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    314c:	be 01       	movw	r22, r28
    314e:	6f 5f       	subi	r22, 0xFF	; 255
    3150:	7f 4f       	sbci	r23, 0xFF	; 255
    3152:	c8 01       	movw	r24, r16
    3154:	0e 94 32 17 	call	0x2e64	; 0x2e64 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    3158:	0f c0       	rjmp	.+30     	; 0x3178 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    315a:	c8 01       	movw	r24, r16
    315c:	0e 94 0a 18 	call	0x3014	; 0x3014 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3160:	c8 01       	movw	r24, r16
    3162:	0e 94 b4 16 	call	0x2d68	; 0x2d68 <_ZN16PololuQTRSensors11emittersOffEv>
    3166:	e2 e0       	ldi	r30, 0x02	; 2
    3168:	de 12       	cpse	r13, r30
    316a:	2a c0       	rjmp	.+84     	; 0x31c0 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    316c:	be 01       	movw	r22, r28
    316e:	6f 5f       	subi	r22, 0xFF	; 255
    3170:	7f 4f       	sbci	r23, 0xFF	; 255
    3172:	c8 01       	movw	r24, r16
    3174:	0e 94 0a 18 	call	0x3014	; 0x3014 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    3178:	40 e0       	ldi	r20, 0x00	; 0
    317a:	f8 01       	movw	r30, r16
    317c:	80 85       	ldd	r24, Z+8	; 0x08
    317e:	48 17       	cp	r20, r24
    3180:	f8 f4       	brcc	.+62     	; 0x31c0 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    3182:	84 2f       	mov	r24, r20
    3184:	90 e0       	ldi	r25, 0x00	; 0
    3186:	88 0f       	add	r24, r24
    3188:	99 1f       	adc	r25, r25
    318a:	f7 01       	movw	r30, r14
    318c:	e8 0f       	add	r30, r24
    318e:	f9 1f       	adc	r31, r25
    3190:	21 e0       	ldi	r18, 0x01	; 1
    3192:	30 e0       	ldi	r19, 0x00	; 0
    3194:	2c 0f       	add	r18, r28
    3196:	3d 1f       	adc	r19, r29
    3198:	82 0f       	add	r24, r18
    319a:	93 1f       	adc	r25, r19
    319c:	d8 01       	movw	r26, r16
    319e:	1e 96       	adiw	r26, 0x0e	; 14
    31a0:	2d 91       	ld	r18, X+
    31a2:	3c 91       	ld	r19, X
    31a4:	1f 97       	sbiw	r26, 0x0f	; 15
    31a6:	dc 01       	movw	r26, r24
    31a8:	8d 91       	ld	r24, X+
    31aa:	9c 91       	ld	r25, X
    31ac:	28 1b       	sub	r18, r24
    31ae:	39 0b       	sbc	r19, r25
    31b0:	80 81       	ld	r24, Z
    31b2:	91 81       	ldd	r25, Z+1	; 0x01
    31b4:	82 0f       	add	r24, r18
    31b6:	93 1f       	adc	r25, r19
    31b8:	91 83       	std	Z+1, r25	; 0x01
    31ba:	80 83       	st	Z, r24
    31bc:	4f 5f       	subi	r20, 0xFF	; 255
    31be:	dd cf       	rjmp	.-70     	; 0x317a <_ZN16PololuQTRSensors4readEPjh+0x6c>
    31c0:	a0 96       	adiw	r28, 0x20	; 32
    31c2:	e7 e0       	ldi	r30, 0x07	; 7
    31c4:	0c 94 f9 1b 	jmp	0x37f2	; 0x37f2 <__epilogue_restores__+0x16>

000031c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    31c8:	2f 92       	push	r2
    31ca:	3f 92       	push	r3
    31cc:	5f 92       	push	r5
    31ce:	6f 92       	push	r6
    31d0:	7f 92       	push	r7
    31d2:	8f 92       	push	r8
    31d4:	9f 92       	push	r9
    31d6:	af 92       	push	r10
    31d8:	bf 92       	push	r11
    31da:	cf 92       	push	r12
    31dc:	df 92       	push	r13
    31de:	ef 92       	push	r14
    31e0:	ff 92       	push	r15
    31e2:	0f 93       	push	r16
    31e4:	1f 93       	push	r17
    31e6:	cf 93       	push	r28
    31e8:	df 93       	push	r29
    31ea:	cd b7       	in	r28, 0x3d	; 61
    31ec:	de b7       	in	r29, 0x3e	; 62
    31ee:	c0 56       	subi	r28, 0x60	; 96
    31f0:	d1 09       	sbc	r29, r1
    31f2:	0f b6       	in	r0, 0x3f	; 63
    31f4:	f8 94       	cli
    31f6:	de bf       	out	0x3e, r29	; 62
    31f8:	0f be       	out	0x3f, r0	; 63
    31fa:	cd bf       	out	0x3d, r28	; 61
    31fc:	8c 01       	movw	r16, r24
    31fe:	4b 01       	movw	r8, r22
    3200:	5a 01       	movw	r10, r20
    3202:	52 2e       	mov	r5, r18
    3204:	da 01       	movw	r26, r20
    3206:	8d 91       	ld	r24, X+
    3208:	9c 91       	ld	r25, X
    320a:	89 2b       	or	r24, r25
    320c:	31 f0       	breq	.+12     	; 0x321a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    320e:	f4 01       	movw	r30, r8
    3210:	80 81       	ld	r24, Z
    3212:	91 81       	ldd	r25, Z+1	; 0x01
    3214:	89 2b       	or	r24, r25
    3216:	f1 f4       	brne	.+60     	; 0x3254 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3218:	24 c0       	rjmp	.+72     	; 0x3262 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    321a:	d8 01       	movw	r26, r16
    321c:	18 96       	adiw	r26, 0x08	; 8
    321e:	8c 91       	ld	r24, X
    3220:	90 e0       	ldi	r25, 0x00	; 0
    3222:	88 0f       	add	r24, r24
    3224:	99 1f       	adc	r25, r25
    3226:	0e 94 09 1c 	call	0x3812	; 0x3812 <malloc>
    322a:	f5 01       	movw	r30, r10
    322c:	91 83       	std	Z+1, r25	; 0x01
    322e:	80 83       	st	Z, r24
    3230:	00 97       	sbiw	r24, 0x00	; 0
    3232:	09 f4       	brne	.+2      	; 0x3236 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    3234:	b1 c0       	rjmp	.+354    	; 0x3398 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    3236:	fc 01       	movw	r30, r24
    3238:	20 e0       	ldi	r18, 0x00	; 0
    323a:	30 e0       	ldi	r19, 0x00	; 0
    323c:	d8 01       	movw	r26, r16
    323e:	18 96       	adiw	r26, 0x08	; 8
    3240:	8c 91       	ld	r24, X
    3242:	90 e0       	ldi	r25, 0x00	; 0
    3244:	28 17       	cp	r18, r24
    3246:	39 07       	cpc	r19, r25
    3248:	14 f7       	brge	.-60     	; 0x320e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    324a:	11 92       	st	Z+, r1
    324c:	11 92       	st	Z+, r1
    324e:	2f 5f       	subi	r18, 0xFF	; 255
    3250:	3f 4f       	sbci	r19, 0xFF	; 255
    3252:	f4 cf       	rjmp	.-24     	; 0x323c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    3254:	e1 2c       	mov	r14, r1
    3256:	f1 2c       	mov	r15, r1
    3258:	6e 01       	movw	r12, r28
    325a:	b1 e2       	ldi	r27, 0x21	; 33
    325c:	cb 0e       	add	r12, r27
    325e:	d1 1c       	adc	r13, r1
    3260:	21 c0       	rjmp	.+66     	; 0x32a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3262:	f8 01       	movw	r30, r16
    3264:	80 85       	ldd	r24, Z+8	; 0x08
    3266:	90 e0       	ldi	r25, 0x00	; 0
    3268:	88 0f       	add	r24, r24
    326a:	99 1f       	adc	r25, r25
    326c:	0e 94 09 1c 	call	0x3812	; 0x3812 <malloc>
    3270:	d4 01       	movw	r26, r8
    3272:	8d 93       	st	X+, r24
    3274:	9c 93       	st	X, r25
    3276:	00 97       	sbiw	r24, 0x00	; 0
    3278:	09 f4       	brne	.+2      	; 0x327c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    327a:	8e c0       	rjmp	.+284    	; 0x3398 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    327c:	fc 01       	movw	r30, r24
    327e:	20 e0       	ldi	r18, 0x00	; 0
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	d8 01       	movw	r26, r16
    3284:	18 96       	adiw	r26, 0x08	; 8
    3286:	8c 91       	ld	r24, X
    3288:	90 e0       	ldi	r25, 0x00	; 0
    328a:	28 17       	cp	r18, r24
    328c:	39 07       	cpc	r19, r25
    328e:	14 f7       	brge	.-60     	; 0x3254 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    3290:	d8 01       	movw	r26, r16
    3292:	1e 96       	adiw	r26, 0x0e	; 14
    3294:	8d 91       	ld	r24, X+
    3296:	9c 91       	ld	r25, X
    3298:	1f 97       	sbiw	r26, 0x0f	; 15
    329a:	81 93       	st	Z+, r24
    329c:	91 93       	st	Z+, r25
    329e:	2f 5f       	subi	r18, 0xFF	; 255
    32a0:	3f 4f       	sbci	r19, 0xFF	; 255
    32a2:	ef cf       	rjmp	.-34     	; 0x3282 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    32a4:	45 2d       	mov	r20, r5
    32a6:	be 01       	movw	r22, r28
    32a8:	6f 5b       	subi	r22, 0xBF	; 191
    32aa:	7f 4f       	sbci	r23, 0xFF	; 255
    32ac:	c8 01       	movw	r24, r16
    32ae:	0e 94 87 18 	call	0x310e	; 0x310e <_ZN16PololuQTRSensors4readEPjh>
    32b2:	f8 01       	movw	r30, r16
    32b4:	60 84       	ldd	r6, Z+8	; 0x08
    32b6:	71 2c       	mov	r7, r1
    32b8:	fe 01       	movw	r30, r28
    32ba:	ef 5b       	subi	r30, 0xBF	; 191
    32bc:	ff 4f       	sbci	r31, 0xFF	; 255
    32be:	c6 01       	movw	r24, r12
    32c0:	9e 01       	movw	r18, r28
    32c2:	2f 5f       	subi	r18, 0xFF	; 255
    32c4:	3f 4f       	sbci	r19, 0xFF	; 255
    32c6:	19 01       	movw	r2, r18
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	30 e0       	ldi	r19, 0x00	; 0
    32cc:	26 15       	cp	r18, r6
    32ce:	37 05       	cpc	r19, r7
    32d0:	4c f5       	brge	.+82     	; 0x3324 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    32d2:	e1 14       	cp	r14, r1
    32d4:	f1 04       	cpc	r15, r1
    32d6:	89 f0       	breq	.+34     	; 0x32fa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    32d8:	dc 01       	movw	r26, r24
    32da:	6d 91       	ld	r22, X+
    32dc:	7c 91       	ld	r23, X
    32de:	40 81       	ld	r20, Z
    32e0:	51 81       	ldd	r21, Z+1	; 0x01
    32e2:	64 17       	cp	r22, r20
    32e4:	75 07       	cpc	r23, r21
    32e6:	48 f0       	brcs	.+18     	; 0x32fa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    32e8:	d1 01       	movw	r26, r2
    32ea:	6d 91       	ld	r22, X+
    32ec:	7c 91       	ld	r23, X
    32ee:	40 81       	ld	r20, Z
    32f0:	51 81       	ldd	r21, Z+1	; 0x01
    32f2:	46 17       	cp	r20, r22
    32f4:	57 07       	cpc	r21, r23
    32f6:	48 f0       	brcs	.+18     	; 0x330a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    32f8:	0d c0       	rjmp	.+26     	; 0x3314 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    32fa:	40 81       	ld	r20, Z
    32fc:	51 81       	ldd	r21, Z+1	; 0x01
    32fe:	dc 01       	movw	r26, r24
    3300:	4d 93       	st	X+, r20
    3302:	5c 93       	st	X, r21
    3304:	e1 14       	cp	r14, r1
    3306:	f1 04       	cpc	r15, r1
    3308:	79 f7       	brne	.-34     	; 0x32e8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    330a:	40 81       	ld	r20, Z
    330c:	51 81       	ldd	r21, Z+1	; 0x01
    330e:	d1 01       	movw	r26, r2
    3310:	4d 93       	st	X+, r20
    3312:	5c 93       	st	X, r21
    3314:	2f 5f       	subi	r18, 0xFF	; 255
    3316:	3f 4f       	sbci	r19, 0xFF	; 255
    3318:	b2 e0       	ldi	r27, 0x02	; 2
    331a:	2b 0e       	add	r2, r27
    331c:	31 1c       	adc	r3, r1
    331e:	32 96       	adiw	r30, 0x02	; 2
    3320:	02 96       	adiw	r24, 0x02	; 2
    3322:	d4 cf       	rjmp	.-88     	; 0x32cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    3324:	ef ef       	ldi	r30, 0xFF	; 255
    3326:	ee 1a       	sub	r14, r30
    3328:	fe 0a       	sbc	r15, r30
    332a:	fa e0       	ldi	r31, 0x0A	; 10
    332c:	ef 16       	cp	r14, r31
    332e:	f1 04       	cpc	r15, r1
    3330:	09 f0       	breq	.+2      	; 0x3334 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    3332:	b8 cf       	rjmp	.-144    	; 0x32a4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    3334:	9e 01       	movw	r18, r28
    3336:	2f 5f       	subi	r18, 0xFF	; 255
    3338:	3f 4f       	sbci	r19, 0xFF	; 255
    333a:	79 01       	movw	r14, r18
    333c:	36 01       	movw	r6, r12
    333e:	80 e0       	ldi	r24, 0x00	; 0
    3340:	90 e0       	ldi	r25, 0x00	; 0
    3342:	f8 01       	movw	r30, r16
    3344:	20 85       	ldd	r18, Z+8	; 0x08
    3346:	30 e0       	ldi	r19, 0x00	; 0
    3348:	82 17       	cp	r24, r18
    334a:	93 07       	cpc	r25, r19
    334c:	2c f5       	brge	.+74     	; 0x3398 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    334e:	d7 01       	movw	r26, r14
    3350:	2d 91       	ld	r18, X+
    3352:	3d 91       	ld	r19, X+
    3354:	7d 01       	movw	r14, r26
    3356:	b3 01       	movw	r22, r6
    3358:	6c 19       	sub	r22, r12
    335a:	7d 09       	sbc	r23, r13
    335c:	d5 01       	movw	r26, r10
    335e:	ed 91       	ld	r30, X+
    3360:	fc 91       	ld	r31, X
    3362:	e6 0f       	add	r30, r22
    3364:	f7 1f       	adc	r31, r23
    3366:	40 81       	ld	r20, Z
    3368:	51 81       	ldd	r21, Z+1	; 0x01
    336a:	42 17       	cp	r20, r18
    336c:	53 07       	cpc	r21, r19
    336e:	10 f4       	brcc	.+4      	; 0x3374 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    3370:	31 83       	std	Z+1, r19	; 0x01
    3372:	20 83       	st	Z, r18
    3374:	f3 01       	movw	r30, r6
    3376:	21 91       	ld	r18, Z+
    3378:	31 91       	ld	r19, Z+
    337a:	3f 01       	movw	r6, r30
    337c:	d4 01       	movw	r26, r8
    337e:	ed 91       	ld	r30, X+
    3380:	fc 91       	ld	r31, X
    3382:	e6 0f       	add	r30, r22
    3384:	f7 1f       	adc	r31, r23
    3386:	40 81       	ld	r20, Z
    3388:	51 81       	ldd	r21, Z+1	; 0x01
    338a:	24 17       	cp	r18, r20
    338c:	35 07       	cpc	r19, r21
    338e:	10 f4       	brcc	.+4      	; 0x3394 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    3390:	31 83       	std	Z+1, r19	; 0x01
    3392:	20 83       	st	Z, r18
    3394:	01 96       	adiw	r24, 0x01	; 1
    3396:	d5 cf       	rjmp	.-86     	; 0x3342 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    3398:	c0 5a       	subi	r28, 0xA0	; 160
    339a:	df 4f       	sbci	r29, 0xFF	; 255
    339c:	0f b6       	in	r0, 0x3f	; 63
    339e:	f8 94       	cli
    33a0:	de bf       	out	0x3e, r29	; 62
    33a2:	0f be       	out	0x3f, r0	; 63
    33a4:	cd bf       	out	0x3d, r28	; 61
    33a6:	df 91       	pop	r29
    33a8:	cf 91       	pop	r28
    33aa:	1f 91       	pop	r17
    33ac:	0f 91       	pop	r16
    33ae:	ff 90       	pop	r15
    33b0:	ef 90       	pop	r14
    33b2:	df 90       	pop	r13
    33b4:	cf 90       	pop	r12
    33b6:	bf 90       	pop	r11
    33b8:	af 90       	pop	r10
    33ba:	9f 90       	pop	r9
    33bc:	8f 90       	pop	r8
    33be:	7f 90       	pop	r7
    33c0:	6f 90       	pop	r6
    33c2:	5f 90       	pop	r5
    33c4:	3f 90       	pop	r3
    33c6:	2f 90       	pop	r2
    33c8:	08 95       	ret

000033ca <_ZN16PololuQTRSensors9calibrateEh>:
    33ca:	1f 93       	push	r17
    33cc:	cf 93       	push	r28
    33ce:	df 93       	push	r29
    33d0:	ec 01       	movw	r28, r24
    33d2:	16 2f       	mov	r17, r22
    33d4:	8f ef       	ldi	r24, 0xFF	; 255
    33d6:	86 0f       	add	r24, r22
    33d8:	82 30       	cpi	r24, 0x02	; 2
    33da:	18 f0       	brcs	.+6      	; 0x33e2 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    33dc:	66 23       	and	r22, r22
    33de:	59 f0       	breq	.+22     	; 0x33f6 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    33e0:	14 c0       	rjmp	.+40     	; 0x340a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    33e2:	21 e0       	ldi	r18, 0x01	; 1
    33e4:	ae 01       	movw	r20, r28
    33e6:	4e 5f       	subi	r20, 0xFE	; 254
    33e8:	5f 4f       	sbci	r21, 0xFF	; 255
    33ea:	be 01       	movw	r22, r28
    33ec:	ce 01       	movw	r24, r28
    33ee:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    33f2:	12 30       	cpi	r17, 0x02	; 2
    33f4:	51 f4       	brne	.+20     	; 0x340a <_ZN16PololuQTRSensors9calibrateEh+0x40>
    33f6:	ae 01       	movw	r20, r28
    33f8:	4a 5f       	subi	r20, 0xFA	; 250
    33fa:	5f 4f       	sbci	r21, 0xFF	; 255
    33fc:	be 01       	movw	r22, r28
    33fe:	6c 5f       	subi	r22, 0xFC	; 252
    3400:	7f 4f       	sbci	r23, 0xFF	; 255
    3402:	20 e0       	ldi	r18, 0x00	; 0
    3404:	ce 01       	movw	r24, r28
    3406:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    340a:	df 91       	pop	r29
    340c:	cf 91       	pop	r28
    340e:	1f 91       	pop	r17
    3410:	08 95       	ret

00003412 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    3412:	a0 e0       	ldi	r26, 0x00	; 0
    3414:	b0 e0       	ldi	r27, 0x00	; 0
    3416:	ef e0       	ldi	r30, 0x0F	; 15
    3418:	fa e1       	ldi	r31, 0x1A	; 26
    341a:	0c 94 db 1b 	jmp	0x37b6	; 0x37b6 <__prologue_saves__+0x12>
    341e:	ec 01       	movw	r28, r24
    3420:	8b 01       	movw	r16, r22
    3422:	b4 2e       	mov	r11, r20
    3424:	84 2f       	mov	r24, r20
    3426:	8d 7f       	andi	r24, 0xFD	; 253
    3428:	51 f4       	brne	.+20     	; 0x343e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    342a:	8c 81       	ldd	r24, Y+4	; 0x04
    342c:	9d 81       	ldd	r25, Y+5	; 0x05
    342e:	89 2b       	or	r24, r25
    3430:	09 f4       	brne	.+2      	; 0x3434 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    3432:	97 c0       	rjmp	.+302    	; 0x3562 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3434:	8e 81       	ldd	r24, Y+6	; 0x06
    3436:	9f 81       	ldd	r25, Y+7	; 0x07
    3438:	89 2b       	or	r24, r25
    343a:	09 f4       	brne	.+2      	; 0x343e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    343c:	92 c0       	rjmp	.+292    	; 0x3562 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    343e:	8f ef       	ldi	r24, 0xFF	; 255
    3440:	8b 0d       	add	r24, r11
    3442:	82 30       	cpi	r24, 0x02	; 2
    3444:	50 f4       	brcc	.+20     	; 0x345a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3446:	88 81       	ld	r24, Y
    3448:	99 81       	ldd	r25, Y+1	; 0x01
    344a:	89 2b       	or	r24, r25
    344c:	09 f4       	brne	.+2      	; 0x3450 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    344e:	89 c0       	rjmp	.+274    	; 0x3562 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    3450:	8a 81       	ldd	r24, Y+2	; 0x02
    3452:	9b 81       	ldd	r25, Y+3	; 0x03
    3454:	89 2b       	or	r24, r25
    3456:	09 f4       	brne	.+2      	; 0x345a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    3458:	84 c0       	rjmp	.+264    	; 0x3562 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    345a:	4b 2d       	mov	r20, r11
    345c:	b8 01       	movw	r22, r16
    345e:	ce 01       	movw	r24, r28
    3460:	0e 94 87 18 	call	0x310e	; 0x310e <_ZN16PololuQTRSensors4readEPjh>
    3464:	78 01       	movw	r14, r16
    3466:	00 e0       	ldi	r16, 0x00	; 0
    3468:	10 e0       	ldi	r17, 0x00	; 0
    346a:	c1 2c       	mov	r12, r1
    346c:	d1 2c       	mov	r13, r1
    346e:	88 85       	ldd	r24, Y+8	; 0x08
    3470:	90 e0       	ldi	r25, 0x00	; 0
    3472:	c8 16       	cp	r12, r24
    3474:	d9 06       	cpc	r13, r25
    3476:	0c f0       	brlt	.+2      	; 0x347a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    3478:	74 c0       	rjmp	.+232    	; 0x3562 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    347a:	81 e0       	ldi	r24, 0x01	; 1
    347c:	b8 12       	cpse	r11, r24
    347e:	0a c0       	rjmp	.+20     	; 0x3494 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    3480:	ea 81       	ldd	r30, Y+2	; 0x02
    3482:	fb 81       	ldd	r31, Y+3	; 0x03
    3484:	e0 0f       	add	r30, r16
    3486:	f1 1f       	adc	r31, r17
    3488:	01 90       	ld	r0, Z+
    348a:	f0 81       	ld	r31, Z
    348c:	e0 2d       	mov	r30, r0
    348e:	a8 81       	ld	r26, Y
    3490:	b9 81       	ldd	r27, Y+1	; 0x01
    3492:	0d c0       	rjmp	.+26     	; 0x34ae <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    3494:	8c 81       	ldd	r24, Y+4	; 0x04
    3496:	9d 81       	ldd	r25, Y+5	; 0x05
    3498:	2e 81       	ldd	r18, Y+6	; 0x06
    349a:	3f 81       	ldd	r19, Y+7	; 0x07
    349c:	b1 10       	cpse	r11, r1
    349e:	0c c0       	rjmp	.+24     	; 0x34b8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    34a0:	f9 01       	movw	r30, r18
    34a2:	e0 0f       	add	r30, r16
    34a4:	f1 1f       	adc	r31, r17
    34a6:	01 90       	ld	r0, Z+
    34a8:	f0 81       	ld	r31, Z
    34aa:	e0 2d       	mov	r30, r0
    34ac:	dc 01       	movw	r26, r24
    34ae:	a0 0f       	add	r26, r16
    34b0:	b1 1f       	adc	r27, r17
    34b2:	8d 91       	ld	r24, X+
    34b4:	9c 91       	ld	r25, X
    34b6:	28 c0       	rjmp	.+80     	; 0x3508 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    34b8:	fc 01       	movw	r30, r24
    34ba:	e0 0f       	add	r30, r16
    34bc:	f1 1f       	adc	r31, r17
    34be:	40 81       	ld	r20, Z
    34c0:	51 81       	ldd	r21, Z+1	; 0x01
    34c2:	e8 81       	ld	r30, Y
    34c4:	f9 81       	ldd	r31, Y+1	; 0x01
    34c6:	e0 0f       	add	r30, r16
    34c8:	f1 1f       	adc	r31, r17
    34ca:	80 81       	ld	r24, Z
    34cc:	91 81       	ldd	r25, Z+1	; 0x01
    34ce:	ee 85       	ldd	r30, Y+14	; 0x0e
    34d0:	ff 85       	ldd	r31, Y+15	; 0x0f
    34d2:	48 17       	cp	r20, r24
    34d4:	59 07       	cpc	r21, r25
    34d6:	10 f4       	brcc	.+4      	; 0x34dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    34d8:	cf 01       	movw	r24, r30
    34da:	04 c0       	rjmp	.+8      	; 0x34e4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    34dc:	8e 0f       	add	r24, r30
    34de:	9f 1f       	adc	r25, r31
    34e0:	84 1b       	sub	r24, r20
    34e2:	95 0b       	sbc	r25, r21
    34e4:	d9 01       	movw	r26, r18
    34e6:	a0 0f       	add	r26, r16
    34e8:	b1 1f       	adc	r27, r17
    34ea:	2d 91       	ld	r18, X+
    34ec:	3c 91       	ld	r19, X
    34ee:	aa 81       	ldd	r26, Y+2	; 0x02
    34f0:	bb 81       	ldd	r27, Y+3	; 0x03
    34f2:	a0 0f       	add	r26, r16
    34f4:	b1 1f       	adc	r27, r17
    34f6:	4d 91       	ld	r20, X+
    34f8:	5c 91       	ld	r21, X
    34fa:	24 17       	cp	r18, r20
    34fc:	35 07       	cpc	r19, r21
    34fe:	20 f0       	brcs	.+8      	; 0x3508 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    3500:	e4 0f       	add	r30, r20
    3502:	f5 1f       	adc	r31, r21
    3504:	e2 1b       	sub	r30, r18
    3506:	f3 0b       	sbc	r31, r19
    3508:	e8 1b       	sub	r30, r24
    350a:	f9 0b       	sbc	r31, r25
    350c:	a9 f0       	breq	.+42     	; 0x3538 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    350e:	d7 01       	movw	r26, r14
    3510:	2d 91       	ld	r18, X+
    3512:	3c 91       	ld	r19, X
    3514:	40 e0       	ldi	r20, 0x00	; 0
    3516:	50 e0       	ldi	r21, 0x00	; 0
    3518:	28 1b       	sub	r18, r24
    351a:	39 0b       	sbc	r19, r25
    351c:	41 09       	sbc	r20, r1
    351e:	51 09       	sbc	r21, r1
    3520:	a8 ee       	ldi	r26, 0xE8	; 232
    3522:	b3 e0       	ldi	r27, 0x03	; 3
    3524:	0e 94 bf 1b 	call	0x377e	; 0x377e <__muluhisi3>
    3528:	9f 01       	movw	r18, r30
    352a:	40 e0       	ldi	r20, 0x00	; 0
    352c:	50 e0       	ldi	r21, 0x00	; 0
    352e:	0e 94 8b 1b 	call	0x3716	; 0x3716 <__divmodsi4>
    3532:	37 fd       	sbrc	r19, 7
    3534:	0a c0       	rjmp	.+20     	; 0x354a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    3536:	02 c0       	rjmp	.+4      	; 0x353c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    3538:	20 e0       	ldi	r18, 0x00	; 0
    353a:	30 e0       	ldi	r19, 0x00	; 0
    353c:	29 3e       	cpi	r18, 0xE9	; 233
    353e:	b3 e0       	ldi	r27, 0x03	; 3
    3540:	3b 07       	cpc	r19, r27
    3542:	2c f0       	brlt	.+10     	; 0x354e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    3544:	28 ee       	ldi	r18, 0xE8	; 232
    3546:	33 e0       	ldi	r19, 0x03	; 3
    3548:	02 c0       	rjmp	.+4      	; 0x354e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    354a:	20 e0       	ldi	r18, 0x00	; 0
    354c:	30 e0       	ldi	r19, 0x00	; 0
    354e:	f7 01       	movw	r30, r14
    3550:	21 93       	st	Z+, r18
    3552:	31 93       	st	Z+, r19
    3554:	7f 01       	movw	r14, r30
    3556:	ff ef       	ldi	r31, 0xFF	; 255
    3558:	cf 1a       	sub	r12, r31
    355a:	df 0a       	sbc	r13, r31
    355c:	0e 5f       	subi	r16, 0xFE	; 254
    355e:	1f 4f       	sbci	r17, 0xFF	; 255
    3560:	86 cf       	rjmp	.-244    	; 0x346e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    3562:	cd b7       	in	r28, 0x3d	; 61
    3564:	de b7       	in	r29, 0x3e	; 62
    3566:	e9 e0       	ldi	r30, 0x09	; 9
    3568:	0c 94 f7 1b 	jmp	0x37ee	; 0x37ee <__epilogue_restores__+0x12>

0000356c <_ZN16PololuQTRSensors8readLineEPjhh>:
    356c:	a0 e0       	ldi	r26, 0x00	; 0
    356e:	b0 e0       	ldi	r27, 0x00	; 0
    3570:	ec eb       	ldi	r30, 0xBC	; 188
    3572:	fa e1       	ldi	r31, 0x1A	; 26
    3574:	0c 94 d2 1b 	jmp	0x37a4	; 0x37a4 <__prologue_saves__>
    3578:	ec 01       	movw	r28, r24
    357a:	8b 01       	movw	r16, r22
    357c:	82 2e       	mov	r8, r18
    357e:	0e 94 09 1a 	call	0x3412	; 0x3412 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    3582:	28 84       	ldd	r2, Y+8	; 0x08
    3584:	e8 01       	movw	r28, r16
    3586:	41 2c       	mov	r4, r1
    3588:	51 2c       	mov	r5, r1
    358a:	32 01       	movw	r6, r4
    358c:	00 e0       	ldi	r16, 0x00	; 0
    358e:	10 e0       	ldi	r17, 0x00	; 0
    3590:	c1 2c       	mov	r12, r1
    3592:	d1 2c       	mov	r13, r1
    3594:	76 01       	movw	r14, r12
    3596:	31 2c       	mov	r3, r1
    3598:	91 2c       	mov	r9, r1
    359a:	58 ee       	ldi	r21, 0xE8	; 232
    359c:	a5 2e       	mov	r10, r21
    359e:	53 e0       	ldi	r21, 0x03	; 3
    35a0:	b5 2e       	mov	r11, r21
    35a2:	92 14       	cp	r9, r2
    35a4:	21 f1       	breq	.+72     	; 0x35ee <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    35a6:	e9 91       	ld	r30, Y+
    35a8:	f9 91       	ld	r31, Y+
    35aa:	88 20       	and	r8, r8
    35ac:	21 f0       	breq	.+8      	; 0x35b6 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    35ae:	c5 01       	movw	r24, r10
    35b0:	8e 1b       	sub	r24, r30
    35b2:	9f 0b       	sbc	r25, r31
    35b4:	fc 01       	movw	r30, r24
    35b6:	e9 3c       	cpi	r30, 0xC9	; 201
    35b8:	f1 05       	cpc	r31, r1
    35ba:	24 f4       	brge	.+8      	; 0x35c4 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    35bc:	e3 33       	cpi	r30, 0x33	; 51
    35be:	f1 05       	cpc	r31, r1
    35c0:	74 f0       	brlt	.+28     	; 0x35de <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    35c2:	02 c0       	rjmp	.+4      	; 0x35c8 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    35c4:	33 24       	eor	r3, r3
    35c6:	33 94       	inc	r3
    35c8:	df 01       	movw	r26, r30
    35ca:	a3 01       	movw	r20, r6
    35cc:	92 01       	movw	r18, r4
    35ce:	0e 94 ca 1b 	call	0x3794	; 0x3794 <__mulshisi3>
    35d2:	c6 0e       	add	r12, r22
    35d4:	d7 1e       	adc	r13, r23
    35d6:	e8 1e       	adc	r14, r24
    35d8:	f9 1e       	adc	r15, r25
    35da:	0e 0f       	add	r16, r30
    35dc:	1f 1f       	adc	r17, r31
    35de:	93 94       	inc	r9
    35e0:	98 ee       	ldi	r25, 0xE8	; 232
    35e2:	49 0e       	add	r4, r25
    35e4:	93 e0       	ldi	r25, 0x03	; 3
    35e6:	59 1e       	adc	r5, r25
    35e8:	61 1c       	adc	r6, r1
    35ea:	71 1c       	adc	r7, r1
    35ec:	da cf       	rjmp	.-76     	; 0x35a2 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    35ee:	31 10       	cpse	r3, r1
    35f0:	1e c0       	rjmp	.+60     	; 0x362e <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    35f2:	49 2d       	mov	r20, r9
    35f4:	50 e0       	ldi	r21, 0x00	; 0
    35f6:	41 50       	subi	r20, 0x01	; 1
    35f8:	51 09       	sbc	r21, r1
    35fa:	24 ef       	ldi	r18, 0xF4	; 244
    35fc:	31 e0       	ldi	r19, 0x01	; 1
    35fe:	42 9f       	mul	r20, r18
    3600:	c0 01       	movw	r24, r0
    3602:	43 9f       	mul	r20, r19
    3604:	90 0d       	add	r25, r0
    3606:	52 9f       	mul	r21, r18
    3608:	90 0d       	add	r25, r0
    360a:	11 24       	eor	r1, r1
    360c:	20 91 cb 01 	lds	r18, 0x01CB	; 0x8001cb <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3610:	30 91 cc 01 	lds	r19, 0x01CC	; 0x8001cc <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3614:	28 17       	cp	r18, r24
    3616:	39 07       	cpc	r19, r25
    3618:	b4 f0       	brlt	.+44     	; 0x3646 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    361a:	88 ee       	ldi	r24, 0xE8	; 232
    361c:	93 e0       	ldi	r25, 0x03	; 3
    361e:	48 9f       	mul	r20, r24
    3620:	90 01       	movw	r18, r0
    3622:	49 9f       	mul	r20, r25
    3624:	30 0d       	add	r19, r0
    3626:	58 9f       	mul	r21, r24
    3628:	30 0d       	add	r19, r0
    362a:	11 24       	eor	r1, r1
    362c:	0e c0       	rjmp	.+28     	; 0x364a <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    362e:	98 01       	movw	r18, r16
    3630:	40 e0       	ldi	r20, 0x00	; 0
    3632:	50 e0       	ldi	r21, 0x00	; 0
    3634:	c7 01       	movw	r24, r14
    3636:	b6 01       	movw	r22, r12
    3638:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    363c:	30 93 cc 01 	sts	0x01CC, r19	; 0x8001cc <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    3640:	20 93 cb 01 	sts	0x01CB, r18	; 0x8001cb <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    3644:	02 c0       	rjmp	.+4      	; 0x364a <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    3646:	20 e0       	ldi	r18, 0x00	; 0
    3648:	30 e0       	ldi	r19, 0x00	; 0
    364a:	c9 01       	movw	r24, r18
    364c:	cd b7       	in	r28, 0x3d	; 61
    364e:	de b7       	in	r29, 0x3e	; 62
    3650:	e2 e1       	ldi	r30, 0x12	; 18
    3652:	0c 94 ee 1b 	jmp	0x37dc	; 0x37dc <__epilogue_restores__>

00003656 <_ZN16PololuQTRSensorsD1Ev>:
    3656:	cf 93       	push	r28
    3658:	df 93       	push	r29
    365a:	ec 01       	movw	r28, r24
    365c:	8a 81       	ldd	r24, Y+2	; 0x02
    365e:	9b 81       	ldd	r25, Y+3	; 0x03
    3660:	00 97       	sbiw	r24, 0x00	; 0
    3662:	11 f0       	breq	.+4      	; 0x3668 <_ZN16PololuQTRSensorsD1Ev+0x12>
    3664:	0e 94 a1 1c 	call	0x3942	; 0x3942 <free>
    3668:	8e 81       	ldd	r24, Y+6	; 0x06
    366a:	9f 81       	ldd	r25, Y+7	; 0x07
    366c:	00 97       	sbiw	r24, 0x00	; 0
    366e:	11 f0       	breq	.+4      	; 0x3674 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    3670:	0e 94 a1 1c 	call	0x3942	; 0x3942 <free>
    3674:	88 81       	ld	r24, Y
    3676:	99 81       	ldd	r25, Y+1	; 0x01
    3678:	00 97       	sbiw	r24, 0x00	; 0
    367a:	11 f0       	breq	.+4      	; 0x3680 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    367c:	0e 94 a1 1c 	call	0x3942	; 0x3942 <free>
    3680:	8c 81       	ldd	r24, Y+4	; 0x04
    3682:	9d 81       	ldd	r25, Y+5	; 0x05
    3684:	00 97       	sbiw	r24, 0x00	; 0
    3686:	11 f0       	breq	.+4      	; 0x368c <_ZN16PololuQTRSensorsD1Ev+0x36>
    3688:	0e 94 a1 1c 	call	0x3942	; 0x3942 <free>
    368c:	df 91       	pop	r29
    368e:	cf 91       	pop	r28
    3690:	08 95       	ret

00003692 <__udivmodqi4>:
    3692:	99 1b       	sub	r25, r25
    3694:	79 e0       	ldi	r23, 0x09	; 9
    3696:	04 c0       	rjmp	.+8      	; 0x36a0 <__udivmodqi4_ep>

00003698 <__udivmodqi4_loop>:
    3698:	99 1f       	adc	r25, r25
    369a:	96 17       	cp	r25, r22
    369c:	08 f0       	brcs	.+2      	; 0x36a0 <__udivmodqi4_ep>
    369e:	96 1b       	sub	r25, r22

000036a0 <__udivmodqi4_ep>:
    36a0:	88 1f       	adc	r24, r24
    36a2:	7a 95       	dec	r23
    36a4:	c9 f7       	brne	.-14     	; 0x3698 <__udivmodqi4_loop>
    36a6:	80 95       	com	r24
    36a8:	08 95       	ret

000036aa <__udivmodhi4>:
    36aa:	aa 1b       	sub	r26, r26
    36ac:	bb 1b       	sub	r27, r27
    36ae:	51 e1       	ldi	r21, 0x11	; 17
    36b0:	07 c0       	rjmp	.+14     	; 0x36c0 <__udivmodhi4_ep>

000036b2 <__udivmodhi4_loop>:
    36b2:	aa 1f       	adc	r26, r26
    36b4:	bb 1f       	adc	r27, r27
    36b6:	a6 17       	cp	r26, r22
    36b8:	b7 07       	cpc	r27, r23
    36ba:	10 f0       	brcs	.+4      	; 0x36c0 <__udivmodhi4_ep>
    36bc:	a6 1b       	sub	r26, r22
    36be:	b7 0b       	sbc	r27, r23

000036c0 <__udivmodhi4_ep>:
    36c0:	88 1f       	adc	r24, r24
    36c2:	99 1f       	adc	r25, r25
    36c4:	5a 95       	dec	r21
    36c6:	a9 f7       	brne	.-22     	; 0x36b2 <__udivmodhi4_loop>
    36c8:	80 95       	com	r24
    36ca:	90 95       	com	r25
    36cc:	bc 01       	movw	r22, r24
    36ce:	cd 01       	movw	r24, r26
    36d0:	08 95       	ret

000036d2 <__udivmodsi4>:
    36d2:	a1 e2       	ldi	r26, 0x21	; 33
    36d4:	1a 2e       	mov	r1, r26
    36d6:	aa 1b       	sub	r26, r26
    36d8:	bb 1b       	sub	r27, r27
    36da:	fd 01       	movw	r30, r26
    36dc:	0d c0       	rjmp	.+26     	; 0x36f8 <__udivmodsi4_ep>

000036de <__udivmodsi4_loop>:
    36de:	aa 1f       	adc	r26, r26
    36e0:	bb 1f       	adc	r27, r27
    36e2:	ee 1f       	adc	r30, r30
    36e4:	ff 1f       	adc	r31, r31
    36e6:	a2 17       	cp	r26, r18
    36e8:	b3 07       	cpc	r27, r19
    36ea:	e4 07       	cpc	r30, r20
    36ec:	f5 07       	cpc	r31, r21
    36ee:	20 f0       	brcs	.+8      	; 0x36f8 <__udivmodsi4_ep>
    36f0:	a2 1b       	sub	r26, r18
    36f2:	b3 0b       	sbc	r27, r19
    36f4:	e4 0b       	sbc	r30, r20
    36f6:	f5 0b       	sbc	r31, r21

000036f8 <__udivmodsi4_ep>:
    36f8:	66 1f       	adc	r22, r22
    36fa:	77 1f       	adc	r23, r23
    36fc:	88 1f       	adc	r24, r24
    36fe:	99 1f       	adc	r25, r25
    3700:	1a 94       	dec	r1
    3702:	69 f7       	brne	.-38     	; 0x36de <__udivmodsi4_loop>
    3704:	60 95       	com	r22
    3706:	70 95       	com	r23
    3708:	80 95       	com	r24
    370a:	90 95       	com	r25
    370c:	9b 01       	movw	r18, r22
    370e:	ac 01       	movw	r20, r24
    3710:	bd 01       	movw	r22, r26
    3712:	cf 01       	movw	r24, r30
    3714:	08 95       	ret

00003716 <__divmodsi4>:
    3716:	05 2e       	mov	r0, r21
    3718:	97 fb       	bst	r25, 7
    371a:	1e f4       	brtc	.+6      	; 0x3722 <__divmodsi4+0xc>
    371c:	00 94       	com	r0
    371e:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__negsi2>
    3722:	57 fd       	sbrc	r21, 7
    3724:	07 d0       	rcall	.+14     	; 0x3734 <__divmodsi4_neg2>
    3726:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <__udivmodsi4>
    372a:	07 fc       	sbrc	r0, 7
    372c:	03 d0       	rcall	.+6      	; 0x3734 <__divmodsi4_neg2>
    372e:	4e f4       	brtc	.+18     	; 0x3742 <__divmodsi4_exit>
    3730:	0c 94 a2 1b 	jmp	0x3744	; 0x3744 <__negsi2>

00003734 <__divmodsi4_neg2>:
    3734:	50 95       	com	r21
    3736:	40 95       	com	r20
    3738:	30 95       	com	r19
    373a:	21 95       	neg	r18
    373c:	3f 4f       	sbci	r19, 0xFF	; 255
    373e:	4f 4f       	sbci	r20, 0xFF	; 255
    3740:	5f 4f       	sbci	r21, 0xFF	; 255

00003742 <__divmodsi4_exit>:
    3742:	08 95       	ret

00003744 <__negsi2>:
    3744:	90 95       	com	r25
    3746:	80 95       	com	r24
    3748:	70 95       	com	r23
    374a:	61 95       	neg	r22
    374c:	7f 4f       	sbci	r23, 0xFF	; 255
    374e:	8f 4f       	sbci	r24, 0xFF	; 255
    3750:	9f 4f       	sbci	r25, 0xFF	; 255
    3752:	08 95       	ret

00003754 <__tablejump2__>:
    3754:	ee 0f       	add	r30, r30
    3756:	ff 1f       	adc	r31, r31
    3758:	05 90       	lpm	r0, Z+
    375a:	f4 91       	lpm	r31, Z
    375c:	e0 2d       	mov	r30, r0
    375e:	09 94       	ijmp

00003760 <__umulhisi3>:
    3760:	a2 9f       	mul	r26, r18
    3762:	b0 01       	movw	r22, r0
    3764:	b3 9f       	mul	r27, r19
    3766:	c0 01       	movw	r24, r0
    3768:	a3 9f       	mul	r26, r19
    376a:	70 0d       	add	r23, r0
    376c:	81 1d       	adc	r24, r1
    376e:	11 24       	eor	r1, r1
    3770:	91 1d       	adc	r25, r1
    3772:	b2 9f       	mul	r27, r18
    3774:	70 0d       	add	r23, r0
    3776:	81 1d       	adc	r24, r1
    3778:	11 24       	eor	r1, r1
    377a:	91 1d       	adc	r25, r1
    377c:	08 95       	ret

0000377e <__muluhisi3>:
    377e:	0e 94 b0 1b 	call	0x3760	; 0x3760 <__umulhisi3>
    3782:	a5 9f       	mul	r26, r21
    3784:	90 0d       	add	r25, r0
    3786:	b4 9f       	mul	r27, r20
    3788:	90 0d       	add	r25, r0
    378a:	a4 9f       	mul	r26, r20
    378c:	80 0d       	add	r24, r0
    378e:	91 1d       	adc	r25, r1
    3790:	11 24       	eor	r1, r1
    3792:	08 95       	ret

00003794 <__mulshisi3>:
    3794:	b7 ff       	sbrs	r27, 7
    3796:	0c 94 bf 1b 	jmp	0x377e	; 0x377e <__muluhisi3>

0000379a <__mulohisi3>:
    379a:	0e 94 bf 1b 	call	0x377e	; 0x377e <__muluhisi3>
    379e:	82 1b       	sub	r24, r18
    37a0:	93 0b       	sbc	r25, r19
    37a2:	08 95       	ret

000037a4 <__prologue_saves__>:
    37a4:	2f 92       	push	r2
    37a6:	3f 92       	push	r3
    37a8:	4f 92       	push	r4
    37aa:	5f 92       	push	r5
    37ac:	6f 92       	push	r6
    37ae:	7f 92       	push	r7
    37b0:	8f 92       	push	r8
    37b2:	9f 92       	push	r9
    37b4:	af 92       	push	r10
    37b6:	bf 92       	push	r11
    37b8:	cf 92       	push	r12
    37ba:	df 92       	push	r13
    37bc:	ef 92       	push	r14
    37be:	ff 92       	push	r15
    37c0:	0f 93       	push	r16
    37c2:	1f 93       	push	r17
    37c4:	cf 93       	push	r28
    37c6:	df 93       	push	r29
    37c8:	cd b7       	in	r28, 0x3d	; 61
    37ca:	de b7       	in	r29, 0x3e	; 62
    37cc:	ca 1b       	sub	r28, r26
    37ce:	db 0b       	sbc	r29, r27
    37d0:	0f b6       	in	r0, 0x3f	; 63
    37d2:	f8 94       	cli
    37d4:	de bf       	out	0x3e, r29	; 62
    37d6:	0f be       	out	0x3f, r0	; 63
    37d8:	cd bf       	out	0x3d, r28	; 61
    37da:	09 94       	ijmp

000037dc <__epilogue_restores__>:
    37dc:	2a 88       	ldd	r2, Y+18	; 0x12
    37de:	39 88       	ldd	r3, Y+17	; 0x11
    37e0:	48 88       	ldd	r4, Y+16	; 0x10
    37e2:	5f 84       	ldd	r5, Y+15	; 0x0f
    37e4:	6e 84       	ldd	r6, Y+14	; 0x0e
    37e6:	7d 84       	ldd	r7, Y+13	; 0x0d
    37e8:	8c 84       	ldd	r8, Y+12	; 0x0c
    37ea:	9b 84       	ldd	r9, Y+11	; 0x0b
    37ec:	aa 84       	ldd	r10, Y+10	; 0x0a
    37ee:	b9 84       	ldd	r11, Y+9	; 0x09
    37f0:	c8 84       	ldd	r12, Y+8	; 0x08
    37f2:	df 80       	ldd	r13, Y+7	; 0x07
    37f4:	ee 80       	ldd	r14, Y+6	; 0x06
    37f6:	fd 80       	ldd	r15, Y+5	; 0x05
    37f8:	0c 81       	ldd	r16, Y+4	; 0x04
    37fa:	1b 81       	ldd	r17, Y+3	; 0x03
    37fc:	aa 81       	ldd	r26, Y+2	; 0x02
    37fe:	b9 81       	ldd	r27, Y+1	; 0x01
    3800:	ce 0f       	add	r28, r30
    3802:	d1 1d       	adc	r29, r1
    3804:	0f b6       	in	r0, 0x3f	; 63
    3806:	f8 94       	cli
    3808:	de bf       	out	0x3e, r29	; 62
    380a:	0f be       	out	0x3f, r0	; 63
    380c:	cd bf       	out	0x3d, r28	; 61
    380e:	ed 01       	movw	r28, r26
    3810:	08 95       	ret

00003812 <malloc>:
    3812:	0f 93       	push	r16
    3814:	1f 93       	push	r17
    3816:	cf 93       	push	r28
    3818:	df 93       	push	r29
    381a:	82 30       	cpi	r24, 0x02	; 2
    381c:	91 05       	cpc	r25, r1
    381e:	10 f4       	brcc	.+4      	; 0x3824 <malloc+0x12>
    3820:	82 e0       	ldi	r24, 0x02	; 2
    3822:	90 e0       	ldi	r25, 0x00	; 0
    3824:	e0 91 3d 02 	lds	r30, 0x023D	; 0x80023d <__flp>
    3828:	f0 91 3e 02 	lds	r31, 0x023E	; 0x80023e <__flp+0x1>
    382c:	20 e0       	ldi	r18, 0x00	; 0
    382e:	30 e0       	ldi	r19, 0x00	; 0
    3830:	a0 e0       	ldi	r26, 0x00	; 0
    3832:	b0 e0       	ldi	r27, 0x00	; 0
    3834:	30 97       	sbiw	r30, 0x00	; 0
    3836:	19 f1       	breq	.+70     	; 0x387e <malloc+0x6c>
    3838:	40 81       	ld	r20, Z
    383a:	51 81       	ldd	r21, Z+1	; 0x01
    383c:	02 81       	ldd	r16, Z+2	; 0x02
    383e:	13 81       	ldd	r17, Z+3	; 0x03
    3840:	48 17       	cp	r20, r24
    3842:	59 07       	cpc	r21, r25
    3844:	c8 f0       	brcs	.+50     	; 0x3878 <malloc+0x66>
    3846:	84 17       	cp	r24, r20
    3848:	95 07       	cpc	r25, r21
    384a:	69 f4       	brne	.+26     	; 0x3866 <malloc+0x54>
    384c:	10 97       	sbiw	r26, 0x00	; 0
    384e:	31 f0       	breq	.+12     	; 0x385c <malloc+0x4a>
    3850:	12 96       	adiw	r26, 0x02	; 2
    3852:	0c 93       	st	X, r16
    3854:	12 97       	sbiw	r26, 0x02	; 2
    3856:	13 96       	adiw	r26, 0x03	; 3
    3858:	1c 93       	st	X, r17
    385a:	27 c0       	rjmp	.+78     	; 0x38aa <malloc+0x98>
    385c:	00 93 3d 02 	sts	0x023D, r16	; 0x80023d <__flp>
    3860:	10 93 3e 02 	sts	0x023E, r17	; 0x80023e <__flp+0x1>
    3864:	22 c0       	rjmp	.+68     	; 0x38aa <malloc+0x98>
    3866:	21 15       	cp	r18, r1
    3868:	31 05       	cpc	r19, r1
    386a:	19 f0       	breq	.+6      	; 0x3872 <malloc+0x60>
    386c:	42 17       	cp	r20, r18
    386e:	53 07       	cpc	r21, r19
    3870:	18 f4       	brcc	.+6      	; 0x3878 <malloc+0x66>
    3872:	9a 01       	movw	r18, r20
    3874:	bd 01       	movw	r22, r26
    3876:	ef 01       	movw	r28, r30
    3878:	df 01       	movw	r26, r30
    387a:	f8 01       	movw	r30, r16
    387c:	db cf       	rjmp	.-74     	; 0x3834 <malloc+0x22>
    387e:	21 15       	cp	r18, r1
    3880:	31 05       	cpc	r19, r1
    3882:	f9 f0       	breq	.+62     	; 0x38c2 <malloc+0xb0>
    3884:	28 1b       	sub	r18, r24
    3886:	39 0b       	sbc	r19, r25
    3888:	24 30       	cpi	r18, 0x04	; 4
    388a:	31 05       	cpc	r19, r1
    388c:	80 f4       	brcc	.+32     	; 0x38ae <malloc+0x9c>
    388e:	8a 81       	ldd	r24, Y+2	; 0x02
    3890:	9b 81       	ldd	r25, Y+3	; 0x03
    3892:	61 15       	cp	r22, r1
    3894:	71 05       	cpc	r23, r1
    3896:	21 f0       	breq	.+8      	; 0x38a0 <malloc+0x8e>
    3898:	fb 01       	movw	r30, r22
    389a:	93 83       	std	Z+3, r25	; 0x03
    389c:	82 83       	std	Z+2, r24	; 0x02
    389e:	04 c0       	rjmp	.+8      	; 0x38a8 <malloc+0x96>
    38a0:	90 93 3e 02 	sts	0x023E, r25	; 0x80023e <__flp+0x1>
    38a4:	80 93 3d 02 	sts	0x023D, r24	; 0x80023d <__flp>
    38a8:	fe 01       	movw	r30, r28
    38aa:	32 96       	adiw	r30, 0x02	; 2
    38ac:	44 c0       	rjmp	.+136    	; 0x3936 <malloc+0x124>
    38ae:	fe 01       	movw	r30, r28
    38b0:	e2 0f       	add	r30, r18
    38b2:	f3 1f       	adc	r31, r19
    38b4:	81 93       	st	Z+, r24
    38b6:	91 93       	st	Z+, r25
    38b8:	22 50       	subi	r18, 0x02	; 2
    38ba:	31 09       	sbc	r19, r1
    38bc:	39 83       	std	Y+1, r19	; 0x01
    38be:	28 83       	st	Y, r18
    38c0:	3a c0       	rjmp	.+116    	; 0x3936 <malloc+0x124>
    38c2:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    38c6:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    38ca:	23 2b       	or	r18, r19
    38cc:	41 f4       	brne	.+16     	; 0x38de <malloc+0xcc>
    38ce:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    38d2:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    38d6:	30 93 3c 02 	sts	0x023C, r19	; 0x80023c <__brkval+0x1>
    38da:	20 93 3b 02 	sts	0x023B, r18	; 0x80023b <__brkval>
    38de:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    38e2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    38e6:	21 15       	cp	r18, r1
    38e8:	31 05       	cpc	r19, r1
    38ea:	41 f4       	brne	.+16     	; 0x38fc <malloc+0xea>
    38ec:	2d b7       	in	r18, 0x3d	; 61
    38ee:	3e b7       	in	r19, 0x3e	; 62
    38f0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    38f4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    38f8:	24 1b       	sub	r18, r20
    38fa:	35 0b       	sbc	r19, r21
    38fc:	e0 91 3b 02 	lds	r30, 0x023B	; 0x80023b <__brkval>
    3900:	f0 91 3c 02 	lds	r31, 0x023C	; 0x80023c <__brkval+0x1>
    3904:	e2 17       	cp	r30, r18
    3906:	f3 07       	cpc	r31, r19
    3908:	a0 f4       	brcc	.+40     	; 0x3932 <malloc+0x120>
    390a:	2e 1b       	sub	r18, r30
    390c:	3f 0b       	sbc	r19, r31
    390e:	28 17       	cp	r18, r24
    3910:	39 07       	cpc	r19, r25
    3912:	78 f0       	brcs	.+30     	; 0x3932 <malloc+0x120>
    3914:	ac 01       	movw	r20, r24
    3916:	4e 5f       	subi	r20, 0xFE	; 254
    3918:	5f 4f       	sbci	r21, 0xFF	; 255
    391a:	24 17       	cp	r18, r20
    391c:	35 07       	cpc	r19, r21
    391e:	48 f0       	brcs	.+18     	; 0x3932 <malloc+0x120>
    3920:	4e 0f       	add	r20, r30
    3922:	5f 1f       	adc	r21, r31
    3924:	50 93 3c 02 	sts	0x023C, r21	; 0x80023c <__brkval+0x1>
    3928:	40 93 3b 02 	sts	0x023B, r20	; 0x80023b <__brkval>
    392c:	81 93       	st	Z+, r24
    392e:	91 93       	st	Z+, r25
    3930:	02 c0       	rjmp	.+4      	; 0x3936 <malloc+0x124>
    3932:	e0 e0       	ldi	r30, 0x00	; 0
    3934:	f0 e0       	ldi	r31, 0x00	; 0
    3936:	cf 01       	movw	r24, r30
    3938:	df 91       	pop	r29
    393a:	cf 91       	pop	r28
    393c:	1f 91       	pop	r17
    393e:	0f 91       	pop	r16
    3940:	08 95       	ret

00003942 <free>:
    3942:	cf 93       	push	r28
    3944:	df 93       	push	r29
    3946:	00 97       	sbiw	r24, 0x00	; 0
    3948:	09 f4       	brne	.+2      	; 0x394c <free+0xa>
    394a:	81 c0       	rjmp	.+258    	; 0x3a4e <free+0x10c>
    394c:	fc 01       	movw	r30, r24
    394e:	32 97       	sbiw	r30, 0x02	; 2
    3950:	13 82       	std	Z+3, r1	; 0x03
    3952:	12 82       	std	Z+2, r1	; 0x02
    3954:	a0 91 3d 02 	lds	r26, 0x023D	; 0x80023d <__flp>
    3958:	b0 91 3e 02 	lds	r27, 0x023E	; 0x80023e <__flp+0x1>
    395c:	10 97       	sbiw	r26, 0x00	; 0
    395e:	81 f4       	brne	.+32     	; 0x3980 <free+0x3e>
    3960:	20 81       	ld	r18, Z
    3962:	31 81       	ldd	r19, Z+1	; 0x01
    3964:	82 0f       	add	r24, r18
    3966:	93 1f       	adc	r25, r19
    3968:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    396c:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    3970:	28 17       	cp	r18, r24
    3972:	39 07       	cpc	r19, r25
    3974:	51 f5       	brne	.+84     	; 0x39ca <free+0x88>
    3976:	f0 93 3c 02 	sts	0x023C, r31	; 0x80023c <__brkval+0x1>
    397a:	e0 93 3b 02 	sts	0x023B, r30	; 0x80023b <__brkval>
    397e:	67 c0       	rjmp	.+206    	; 0x3a4e <free+0x10c>
    3980:	ed 01       	movw	r28, r26
    3982:	20 e0       	ldi	r18, 0x00	; 0
    3984:	30 e0       	ldi	r19, 0x00	; 0
    3986:	ce 17       	cp	r28, r30
    3988:	df 07       	cpc	r29, r31
    398a:	40 f4       	brcc	.+16     	; 0x399c <free+0x5a>
    398c:	4a 81       	ldd	r20, Y+2	; 0x02
    398e:	5b 81       	ldd	r21, Y+3	; 0x03
    3990:	9e 01       	movw	r18, r28
    3992:	41 15       	cp	r20, r1
    3994:	51 05       	cpc	r21, r1
    3996:	f1 f0       	breq	.+60     	; 0x39d4 <free+0x92>
    3998:	ea 01       	movw	r28, r20
    399a:	f5 cf       	rjmp	.-22     	; 0x3986 <free+0x44>
    399c:	d3 83       	std	Z+3, r29	; 0x03
    399e:	c2 83       	std	Z+2, r28	; 0x02
    39a0:	40 81       	ld	r20, Z
    39a2:	51 81       	ldd	r21, Z+1	; 0x01
    39a4:	84 0f       	add	r24, r20
    39a6:	95 1f       	adc	r25, r21
    39a8:	c8 17       	cp	r28, r24
    39aa:	d9 07       	cpc	r29, r25
    39ac:	59 f4       	brne	.+22     	; 0x39c4 <free+0x82>
    39ae:	88 81       	ld	r24, Y
    39b0:	99 81       	ldd	r25, Y+1	; 0x01
    39b2:	84 0f       	add	r24, r20
    39b4:	95 1f       	adc	r25, r21
    39b6:	02 96       	adiw	r24, 0x02	; 2
    39b8:	91 83       	std	Z+1, r25	; 0x01
    39ba:	80 83       	st	Z, r24
    39bc:	8a 81       	ldd	r24, Y+2	; 0x02
    39be:	9b 81       	ldd	r25, Y+3	; 0x03
    39c0:	93 83       	std	Z+3, r25	; 0x03
    39c2:	82 83       	std	Z+2, r24	; 0x02
    39c4:	21 15       	cp	r18, r1
    39c6:	31 05       	cpc	r19, r1
    39c8:	29 f4       	brne	.+10     	; 0x39d4 <free+0x92>
    39ca:	f0 93 3e 02 	sts	0x023E, r31	; 0x80023e <__flp+0x1>
    39ce:	e0 93 3d 02 	sts	0x023D, r30	; 0x80023d <__flp>
    39d2:	3d c0       	rjmp	.+122    	; 0x3a4e <free+0x10c>
    39d4:	e9 01       	movw	r28, r18
    39d6:	fb 83       	std	Y+3, r31	; 0x03
    39d8:	ea 83       	std	Y+2, r30	; 0x02
    39da:	49 91       	ld	r20, Y+
    39dc:	59 91       	ld	r21, Y+
    39de:	c4 0f       	add	r28, r20
    39e0:	d5 1f       	adc	r29, r21
    39e2:	ec 17       	cp	r30, r28
    39e4:	fd 07       	cpc	r31, r29
    39e6:	61 f4       	brne	.+24     	; 0x3a00 <free+0xbe>
    39e8:	80 81       	ld	r24, Z
    39ea:	91 81       	ldd	r25, Z+1	; 0x01
    39ec:	84 0f       	add	r24, r20
    39ee:	95 1f       	adc	r25, r21
    39f0:	02 96       	adiw	r24, 0x02	; 2
    39f2:	e9 01       	movw	r28, r18
    39f4:	99 83       	std	Y+1, r25	; 0x01
    39f6:	88 83       	st	Y, r24
    39f8:	82 81       	ldd	r24, Z+2	; 0x02
    39fa:	93 81       	ldd	r25, Z+3	; 0x03
    39fc:	9b 83       	std	Y+3, r25	; 0x03
    39fe:	8a 83       	std	Y+2, r24	; 0x02
    3a00:	e0 e0       	ldi	r30, 0x00	; 0
    3a02:	f0 e0       	ldi	r31, 0x00	; 0
    3a04:	12 96       	adiw	r26, 0x02	; 2
    3a06:	8d 91       	ld	r24, X+
    3a08:	9c 91       	ld	r25, X
    3a0a:	13 97       	sbiw	r26, 0x03	; 3
    3a0c:	00 97       	sbiw	r24, 0x00	; 0
    3a0e:	19 f0       	breq	.+6      	; 0x3a16 <free+0xd4>
    3a10:	fd 01       	movw	r30, r26
    3a12:	dc 01       	movw	r26, r24
    3a14:	f7 cf       	rjmp	.-18     	; 0x3a04 <free+0xc2>
    3a16:	8d 91       	ld	r24, X+
    3a18:	9c 91       	ld	r25, X
    3a1a:	11 97       	sbiw	r26, 0x01	; 1
    3a1c:	9d 01       	movw	r18, r26
    3a1e:	2e 5f       	subi	r18, 0xFE	; 254
    3a20:	3f 4f       	sbci	r19, 0xFF	; 255
    3a22:	82 0f       	add	r24, r18
    3a24:	93 1f       	adc	r25, r19
    3a26:	20 91 3b 02 	lds	r18, 0x023B	; 0x80023b <__brkval>
    3a2a:	30 91 3c 02 	lds	r19, 0x023C	; 0x80023c <__brkval+0x1>
    3a2e:	28 17       	cp	r18, r24
    3a30:	39 07       	cpc	r19, r25
    3a32:	69 f4       	brne	.+26     	; 0x3a4e <free+0x10c>
    3a34:	30 97       	sbiw	r30, 0x00	; 0
    3a36:	29 f4       	brne	.+10     	; 0x3a42 <free+0x100>
    3a38:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <__flp+0x1>
    3a3c:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <__flp>
    3a40:	02 c0       	rjmp	.+4      	; 0x3a46 <free+0x104>
    3a42:	13 82       	std	Z+3, r1	; 0x03
    3a44:	12 82       	std	Z+2, r1	; 0x02
    3a46:	b0 93 3c 02 	sts	0x023C, r27	; 0x80023c <__brkval+0x1>
    3a4a:	a0 93 3b 02 	sts	0x023B, r26	; 0x80023b <__brkval>
    3a4e:	df 91       	pop	r29
    3a50:	cf 91       	pop	r28
    3a52:	08 95       	ret

00003a54 <__do_global_dtors>:
    3a54:	10 e0       	ldi	r17, 0x00	; 0
    3a56:	c3 e6       	ldi	r28, 0x63	; 99
    3a58:	d0 e0       	ldi	r29, 0x00	; 0
    3a5a:	04 c0       	rjmp	.+8      	; 0x3a64 <__do_global_dtors+0x10>
    3a5c:	fe 01       	movw	r30, r28
    3a5e:	0e 94 aa 1b 	call	0x3754	; 0x3754 <__tablejump2__>
    3a62:	21 96       	adiw	r28, 0x01	; 1
    3a64:	c4 36       	cpi	r28, 0x64	; 100
    3a66:	d1 07       	cpc	r29, r17
    3a68:	c9 f7       	brne	.-14     	; 0x3a5c <__do_global_dtors+0x8>
    3a6a:	f8 94       	cli

00003a6c <__stop_program>:
    3a6c:	ff cf       	rjmp	.-2      	; 0x3a6c <__stop_program>
