
RobotRunGrid.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00002a54  00002ae8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a54  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000eb  0080017a  0080017a  00002b62  2**0
                  ALLOC
  3 .stab         000073ec  00000000  00000000  00002b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000a086  00000000  00000000  00009f50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00013fd6  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00014018  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000000c8  00000000  00000000  00014058  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00001e71  00000000  00000000  00014120  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000ac7  00000000  00000000  00015f91  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001169  00000000  00000000  00016a58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000278  00000000  00000000  00017bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000734  00000000  00000000  00017e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000a4c  00000000  00000000  00018570  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000098  00000000  00000000  00018fbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__dtors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 51 0d 	jmp	0x1aa2	; 0x1aa2 <__vector_9>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__vector_13>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 c9 0c 	jmp	0x1992	; 0x1992 <__vector_18>
      4c:	0c 94 2c 0d 	jmp	0x1a58	; 0x1a58 <__vector_19>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	3e 66       	ori	r19, 0x6E	; 110
      6a:	33 32       	cpi	r19, 0x23	; 35
      6c:	3e 3e       	cpi	r19, 0xEE	; 238
      6e:	61 33       	cpi	r22, 0x31	; 49
      70:	32 00       	.word	0x0032	; ????

00000072 <__ctors_end>:
      72:	1c 0e       	add	r1, r28

00000074 <__dtors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e4 e5       	ldi	r30, 0x54	; 84
      88:	fa e2       	ldi	r31, 0x2A	; 42
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	aa 37       	cpi	r26, 0x7A	; 122
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	22 e0       	ldi	r18, 0x02	; 2
      98:	aa e7       	ldi	r26, 0x7A	; 122
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a5 36       	cpi	r26, 0x65	; 101
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 60 04 	call	0x8c0	; 0x8c0 <main>
      aa:	0c 94 1d 15 	jmp	0x2a3a	; 0x2a3a <__do_global_dtors>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <sortOrder>:
	temp = *secondValue;
	*secondValue = *firstValue;
	*firstValue = temp;
}

void sortOrder(int XC[sizeOfOrder], int YC[sizeOfOrder]) {                                                                   //Sorting algorithm, this sorts the coordinates of the given order
      b2:	2f 92       	push	r2
      b4:	3f 92       	push	r3
      b6:	4f 92       	push	r4
      b8:	5f 92       	push	r5
      ba:	6f 92       	push	r6
      bc:	7f 92       	push	r7
      be:	8f 92       	push	r8
      c0:	9f 92       	push	r9
      c2:	af 92       	push	r10
      c4:	bf 92       	push	r11
      c6:	cf 92       	push	r12
      c8:	df 92       	push	r13
      ca:	ef 92       	push	r14
      cc:	ff 92       	push	r15
      ce:	0f 93       	push	r16
      d0:	1f 93       	push	r17
      d2:	cf 93       	push	r28
      d4:	df 93       	push	r29
      d6:	cd b7       	in	r28, 0x3d	; 61
      d8:	de b7       	in	r29, 0x3e	; 62
      da:	2c 97       	sbiw	r28, 0x0c	; 12
      dc:	0f b6       	in	r0, 0x3f	; 63
      de:	f8 94       	cli
      e0:	de bf       	out	0x3e, r29	; 62
      e2:	0f be       	out	0x3f, r0	; 63
      e4:	cd bf       	out	0x3d, r28	; 61
      e6:	38 2e       	mov	r3, r24
      e8:	49 2e       	mov	r4, r25
      ea:	56 2e       	mov	r5, r22
      ec:	67 2e       	mov	r6, r23
      ee:	8e 01       	movw	r16, r28
      f0:	07 5f       	subi	r16, 0xF7	; 247
      f2:	1f 4f       	sbci	r17, 0xFF	; 255
      f4:	fe 01       	movw	r30, r28
      f6:	31 96       	adiw	r30, 0x01	; 1
      f8:	e6 2e       	mov	r14, r22
      fa:	f7 2e       	mov	r15, r23
      fc:	ac 01       	movw	r20, r24
	int check = 0, orderCorrect;
	int sum[sizeOfOrder];

	for (int j = 0; j < (sizeOfOrder-1); j++) {
		sum[j] = XC[j] + YC[j];
      fe:	da 01       	movw	r26, r20
     100:	6d 91       	ld	r22, X+
     102:	7d 91       	ld	r23, X+
     104:	ad 01       	movw	r20, r26
     106:	d7 01       	movw	r26, r14
     108:	2d 91       	ld	r18, X+
     10a:	3d 91       	ld	r19, X+
     10c:	7d 01       	movw	r14, r26
     10e:	26 0f       	add	r18, r22
     110:	37 1f       	adc	r19, r23
     112:	21 93       	st	Z+, r18
     114:	31 93       	st	Z+, r19

void sortOrder(int XC[sizeOfOrder], int YC[sizeOfOrder]) {                                                                   //Sorting algorithm, this sorts the coordinates of the given order
	int check = 0, orderCorrect;
	int sum[sizeOfOrder];

	for (int j = 0; j < (sizeOfOrder-1); j++) {
     116:	e0 17       	cp	r30, r16
     118:	f1 07       	cpc	r31, r17
     11a:	89 f7       	brne	.-30     	; 0xfe <sortOrder+0x4c>
     11c:	08 96       	adiw	r24, 0x08	; 8
	temp = *secondValue;
	*secondValue = *firstValue;
	*firstValue = temp;
}

void sortOrder(int XC[sizeOfOrder], int YC[sizeOfOrder]) {                                                                   //Sorting algorithm, this sorts the coordinates of the given order
     11e:	77 24       	eor	r7, r7
     120:	73 94       	inc	r7
     122:	21 2c       	mov	r2, r1
				orderCorrect = 0;
				} else if ((sum[i] == sum[i + 1]) && (YC[i] == YC[i + 1])) {
				if (XC[i] < XC[i + 1]) {
					swapOne(&sum[i], &sum[i + 1]);
					swapTwo(&XC[i], &XC[i + 1], &YC[i], &YC[i + 1]);
					orderCorrect = 0;
     124:	81 2c       	mov	r8, r1
     126:	91 2c       	mov	r9, r1
     128:	71 c0       	rjmp	.+226    	; 0x20c <sortOrder+0x15a>
		sum[j] = XC[j] + YC[j];
	}
	while (check != 1) {
		orderCorrect = 1;
		for (int i = 0; i < (sizeOfOrder-1); i++) {
			if (sum[i] > sum[i + 1]) {
     12a:	40 81       	ld	r20, Z
     12c:	51 81       	ldd	r21, Z+1	; 0x01
     12e:	e2 80       	ldd	r14, Z+2	; 0x02
     130:	f3 80       	ldd	r15, Z+3	; 0x03
     132:	e4 16       	cp	r14, r20
     134:	f5 06       	cpc	r15, r21
     136:	24 f5       	brge	.+72     	; 0x180 <sortOrder+0xce>

void swapOne(int *firstValue, int *secondValue) {                                                  //Swap function for the distance array
	int temp;

	temp = *secondValue;
	*secondValue = *firstValue;
     138:	53 83       	std	Z+3, r21	; 0x03
     13a:	42 83       	std	Z+2, r20	; 0x02
	*firstValue = temp;
     13c:	f1 82       	std	Z+1, r15	; 0x01
     13e:	e0 82       	st	Z, r14


void swapTwo( int *firstXValue, int *secondXValue, int *firstYValue, int *secondYValue){                //Swap function for the coordinates
	int temp;

	temp = *secondXValue;                                                                               //Swap X-Coordinates
     140:	ab 85       	ldd	r26, Y+11	; 0x0b
     142:	bc 85       	ldd	r27, Y+12	; 0x0c
     144:	12 96       	adiw	r26, 0x02	; 2
     146:	4d 91       	ld	r20, X+
     148:	5c 91       	ld	r21, X
     14a:	13 97       	sbiw	r26, 0x03	; 3
	*secondXValue = *firstXValue;
     14c:	6d 91       	ld	r22, X+
     14e:	7c 91       	ld	r23, X
     150:	11 97       	sbiw	r26, 0x01	; 1
     152:	13 96       	adiw	r26, 0x03	; 3
     154:	7c 93       	st	X, r23
     156:	6e 93       	st	-X, r22
     158:	12 97       	sbiw	r26, 0x02	; 2
	*firstXValue = temp;
     15a:	4d 93       	st	X+, r20
     15c:	5c 93       	st	X, r21

	temp = *secondYValue;                                                                               //Swap Y-Coordinates
     15e:	d9 01       	movw	r26, r18
     160:	12 96       	adiw	r26, 0x02	; 2
     162:	4d 91       	ld	r20, X+
     164:	5c 91       	ld	r21, X
     166:	13 97       	sbiw	r26, 0x03	; 3
	*secondYValue = *firstYValue;
     168:	6d 91       	ld	r22, X+
     16a:	7c 91       	ld	r23, X
     16c:	11 97       	sbiw	r26, 0x01	; 1
     16e:	13 96       	adiw	r26, 0x03	; 3
     170:	7c 93       	st	X, r23
     172:	6e 93       	st	-X, r22
     174:	12 97       	sbiw	r26, 0x02	; 2
	*firstYValue = temp;
     176:	4d 93       	st	X+, r20
     178:	5c 93       	st	X, r21
		orderCorrect = 1;
		for (int i = 0; i < (sizeOfOrder-1); i++) {
			if (sum[i] > sum[i + 1]) {
				swapOne(&sum[i], &sum[i + 1]);
				swapTwo(&XC[i], &XC[i + 1], &YC[i], &YC[i + 1]);
				orderCorrect = 0;
     17a:	68 2d       	mov	r22, r8
     17c:	79 2d       	mov	r23, r9
     17e:	36 c0       	rjmp	.+108    	; 0x1ec <sortOrder+0x13a>
				} else if ((sum[i] == sum[i + 1]) && (YC[i] == YC[i + 1])) {
     180:	4e 15       	cp	r20, r14
     182:	5f 05       	cpc	r21, r15
     184:	99 f5       	brne	.+102    	; 0x1ec <sortOrder+0x13a>
     186:	d9 01       	movw	r26, r18
     188:	cd 90       	ld	r12, X+
     18a:	dc 90       	ld	r13, X
     18c:	11 97       	sbiw	r26, 0x01	; 1
     18e:	12 96       	adiw	r26, 0x02	; 2
     190:	ed 90       	ld	r14, X+
     192:	fc 90       	ld	r15, X
     194:	13 97       	sbiw	r26, 0x03	; 3
     196:	ce 14       	cp	r12, r14
     198:	df 04       	cpc	r13, r15
     19a:	41 f5       	brne	.+80     	; 0x1ec <sortOrder+0x13a>
				if (XC[i] < XC[i + 1]) {
     19c:	ab 85       	ldd	r26, Y+11	; 0x0b
     19e:	bc 85       	ldd	r27, Y+12	; 0x0c
     1a0:	cd 90       	ld	r12, X+
     1a2:	dc 90       	ld	r13, X
     1a4:	11 97       	sbiw	r26, 0x01	; 1
     1a6:	12 96       	adiw	r26, 0x02	; 2
     1a8:	ed 90       	ld	r14, X+
     1aa:	fc 90       	ld	r15, X
     1ac:	13 97       	sbiw	r26, 0x03	; 3
     1ae:	ce 14       	cp	r12, r14
     1b0:	df 04       	cpc	r13, r15
     1b2:	e4 f4       	brge	.+56     	; 0x1ec <sortOrder+0x13a>

void swapOne(int *firstValue, int *secondValue) {                                                  //Swap function for the distance array
	int temp;

	temp = *secondValue;
	*secondValue = *firstValue;
     1b4:	53 83       	std	Z+3, r21	; 0x03
     1b6:	42 83       	std	Z+2, r20	; 0x02
	*firstValue = temp;
     1b8:	51 83       	std	Z+1, r21	; 0x01
     1ba:	40 83       	st	Z, r20

void swapTwo( int *firstXValue, int *secondXValue, int *firstYValue, int *secondYValue){                //Swap function for the coordinates
	int temp;

	temp = *secondXValue;                                                                               //Swap X-Coordinates
	*secondXValue = *firstXValue;
     1bc:	ab 85       	ldd	r26, Y+11	; 0x0b
     1be:	bc 85       	ldd	r27, Y+12	; 0x0c
     1c0:	13 96       	adiw	r26, 0x03	; 3
     1c2:	dc 92       	st	X, r13
     1c4:	ce 92       	st	-X, r12
     1c6:	12 97       	sbiw	r26, 0x02	; 2
	*firstXValue = temp;
     1c8:	ed 92       	st	X+, r14
     1ca:	fc 92       	st	X, r15

	temp = *secondYValue;                                                                               //Swap Y-Coordinates
     1cc:	d9 01       	movw	r26, r18
     1ce:	12 96       	adiw	r26, 0x02	; 2
     1d0:	6d 91       	ld	r22, X+
     1d2:	7c 91       	ld	r23, X
     1d4:	13 97       	sbiw	r26, 0x03	; 3
	*secondYValue = *firstYValue;
     1d6:	4d 91       	ld	r20, X+
     1d8:	5c 91       	ld	r21, X
     1da:	11 97       	sbiw	r26, 0x01	; 1
     1dc:	13 96       	adiw	r26, 0x03	; 3
     1de:	5c 93       	st	X, r21
     1e0:	4e 93       	st	-X, r20
     1e2:	12 97       	sbiw	r26, 0x02	; 2
	*firstYValue = temp;
     1e4:	6d 93       	st	X+, r22
     1e6:	7c 93       	st	X, r23
				orderCorrect = 0;
				} else if ((sum[i] == sum[i + 1]) && (YC[i] == YC[i + 1])) {
				if (XC[i] < XC[i + 1]) {
					swapOne(&sum[i], &sum[i + 1]);
					swapTwo(&XC[i], &XC[i + 1], &YC[i], &YC[i + 1]);
					orderCorrect = 0;
     1e8:	68 2d       	mov	r22, r8
     1ea:	79 2d       	mov	r23, r9
     1ec:	32 96       	adiw	r30, 0x02	; 2
     1ee:	4b 85       	ldd	r20, Y+11	; 0x0b
     1f0:	5c 85       	ldd	r21, Y+12	; 0x0c
     1f2:	4e 5f       	subi	r20, 0xFE	; 254
     1f4:	5f 4f       	sbci	r21, 0xFF	; 255
     1f6:	5c 87       	std	Y+12, r21	; 0x0c
     1f8:	4b 87       	std	Y+11, r20	; 0x0b
     1fa:	2e 5f       	subi	r18, 0xFE	; 254
     1fc:	3f 4f       	sbci	r19, 0xFF	; 255
	for (int j = 0; j < (sizeOfOrder-1); j++) {
		sum[j] = XC[j] + YC[j];
	}
	while (check != 1) {
		orderCorrect = 1;
		for (int i = 0; i < (sizeOfOrder-1); i++) {
     1fe:	84 17       	cp	r24, r20
     200:	95 07       	cpc	r25, r21
     202:	09 f0       	breq	.+2      	; 0x206 <sortOrder+0x154>
     204:	92 cf       	rjmp	.-220    	; 0x12a <sortOrder+0x78>
					swapTwo(&XC[i], &XC[i + 1], &YC[i], &YC[i + 1]);
					orderCorrect = 0;
				}
			}
		}
		if (orderCorrect == 1) {
     206:	61 30       	cpi	r22, 0x01	; 1
     208:	71 05       	cpc	r23, r1
     20a:	49 f0       	breq	.+18     	; 0x21e <sortOrder+0x16c>
	temp = *secondValue;
	*secondValue = *firstValue;
	*firstValue = temp;
}

void sortOrder(int XC[sizeOfOrder], int YC[sizeOfOrder]) {                                                                   //Sorting algorithm, this sorts the coordinates of the given order
     20c:	25 2d       	mov	r18, r5
     20e:	36 2d       	mov	r19, r6
     210:	3b 86       	std	Y+11, r3	; 0x0b
     212:	4c 86       	std	Y+12, r4	; 0x0c
     214:	fe 01       	movw	r30, r28
     216:	31 96       	adiw	r30, 0x01	; 1
     218:	67 2d       	mov	r22, r7
     21a:	72 2d       	mov	r23, r2
     21c:	86 cf       	rjmp	.-244    	; 0x12a <sortOrder+0x78>
			check = 1;
		}

	}

}
     21e:	2c 96       	adiw	r28, 0x0c	; 12
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	f8 94       	cli
     224:	de bf       	out	0x3e, r29	; 62
     226:	0f be       	out	0x3f, r0	; 63
     228:	cd bf       	out	0x3d, r28	; 61
     22a:	df 91       	pop	r29
     22c:	cf 91       	pop	r28
     22e:	1f 91       	pop	r17
     230:	0f 91       	pop	r16
     232:	ff 90       	pop	r15
     234:	ef 90       	pop	r14
     236:	df 90       	pop	r13
     238:	cf 90       	pop	r12
     23a:	bf 90       	pop	r11
     23c:	af 90       	pop	r10
     23e:	9f 90       	pop	r9
     240:	8f 90       	pop	r8
     242:	7f 90       	pop	r7
     244:	6f 90       	pop	r6
     246:	5f 90       	pop	r5
     248:	4f 90       	pop	r4
     24a:	3f 90       	pop	r3
     24c:	2f 90       	pop	r2
     24e:	08 95       	ret

00000250 <readGrid>:

void readGrid(int routes[5][8]){
     250:	fc 01       	movw	r30, r24
	
	routes[0][0] = 2;                                                                         //Home to grid
     252:	42 e0       	ldi	r20, 0x02	; 2
     254:	50 e0       	ldi	r21, 0x00	; 0
     256:	51 83       	std	Z+1, r21	; 0x01
     258:	40 83       	st	Z, r20
	routes[0][1] = 1;
     25a:	81 e0       	ldi	r24, 0x01	; 1
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	93 83       	std	Z+3, r25	; 0x03
     260:	82 83       	std	Z+2, r24	; 0x02
	routes[0][2] = 2;
     262:	55 83       	std	Z+5, r21	; 0x05
     264:	44 83       	std	Z+4, r20	; 0x04
	routes[0][3] = 1;
     266:	97 83       	std	Z+7, r25	; 0x07
     268:	86 83       	std	Z+6, r24	; 0x06
	routes[0][4] = 1;
     26a:	91 87       	std	Z+9, r25	; 0x09
     26c:	80 87       	std	Z+8, r24	; 0x08
	routes[0][5] = 3;
     26e:	23 e0       	ldi	r18, 0x03	; 3
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	33 87       	std	Z+11, r19	; 0x0b
     274:	22 87       	std	Z+10, r18	; 0x0a
	routes[0][6] = 2;
     276:	55 87       	std	Z+13, r21	; 0x0d
     278:	44 87       	std	Z+12, r20	; 0x0c
	routes[0][7] = 5;
     27a:	65 e0       	ldi	r22, 0x05	; 5
     27c:	70 e0       	ldi	r23, 0x00	; 0
     27e:	77 87       	std	Z+15, r23	; 0x0f
     280:	66 87       	std	Z+14, r22	; 0x0e
	
	routes[1][0] = 1;                                                                        //Home to charge point
     282:	91 8b       	std	Z+17, r25	; 0x11
     284:	80 8b       	std	Z+16, r24	; 0x10
	routes[1][1] = 1;
     286:	93 8b       	std	Z+19, r25	; 0x13
     288:	82 8b       	std	Z+18, r24	; 0x12
	routes[1][2] = 5;
     28a:	75 8b       	std	Z+21, r23	; 0x15
     28c:	64 8b       	std	Z+20, r22	; 0x14
	
	routes[2][0] = 3;                                                                        //Grid to charge point
     28e:	31 a3       	std	Z+33, r19	; 0x21
     290:	20 a3       	std	Z+32, r18	; 0x20
	routes[2][1] = 3;
     292:	33 a3       	std	Z+35, r19	; 0x23
     294:	22 a3       	std	Z+34, r18	; 0x22
	routes[2][2] = 5;
     296:	75 a3       	std	Z+37, r23	; 0x25
     298:	64 a3       	std	Z+36, r22	; 0x24
	
	routes[3][0] = 3;                                                                        //Grid to home
     29a:	31 ab       	std	Z+49, r19	; 0x31
     29c:	20 ab       	std	Z+48, r18	; 0x30
	routes[3][1] = 1;
     29e:	93 ab       	std	Z+51, r25	; 0x33
     2a0:	82 ab       	std	Z+50, r24	; 0x32
	routes[3][2] = 2;
     2a2:	55 ab       	std	Z+53, r21	; 0x35
     2a4:	44 ab       	std	Z+52, r20	; 0x34
	routes[3][3] = 1;
     2a6:	97 ab       	std	Z+55, r25	; 0x37
     2a8:	86 ab       	std	Z+54, r24	; 0x36
	routes[3][4] = 2;
     2aa:	51 af       	std	Z+57, r21	; 0x39
     2ac:	40 af       	std	Z+56, r20	; 0x38
	routes[3][5] = 5;
     2ae:	73 af       	std	Z+59, r23	; 0x3b
     2b0:	62 af       	std	Z+58, r22	; 0x3a
	
	routes[4][0] = 3;                                                                       //Charge point to grid
     2b2:	e0 5c       	subi	r30, 0xC0	; 192
     2b4:	ff 4f       	sbci	r31, 0xFF	; 255
     2b6:	31 83       	std	Z+1, r19	; 0x01
     2b8:	20 83       	st	Z, r18
	routes[4][1] = 2;
     2ba:	53 83       	std	Z+3, r21	; 0x03
     2bc:	42 83       	std	Z+2, r20	; 0x02
	routes[4][2] = 3;
     2be:	35 83       	std	Z+5, r19	; 0x05
     2c0:	24 83       	std	Z+4, r18	; 0x04
	routes[4][3] = 5;
     2c2:	77 83       	std	Z+7, r23	; 0x07
     2c4:	66 83       	std	Z+6, r22	; 0x06
     2c6:	08 95       	ret

000002c8 <setDirection>:
	
}

void setDirection(direction directionDesired, direction *directionCurrent){
     2c8:	ef 92       	push	r14
     2ca:	ff 92       	push	r15
     2cc:	1f 93       	push	r17
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	cd b7       	in	r28, 0x3d	; 61
     2d4:	de b7       	in	r29, 0x3e	; 62
     2d6:	60 97       	sbiw	r28, 0x10	; 16
     2d8:	0f b6       	in	r0, 0x3f	; 63
     2da:	f8 94       	cli
     2dc:	de bf       	out	0x3e, r29	; 62
     2de:	0f be       	out	0x3f, r0	; 63
     2e0:	cd bf       	out	0x3d, r28	; 61
	rotation orientation[4][4] ={{X, R, T, L},
     2e2:	90 e1       	ldi	r25, 0x10	; 16
     2e4:	e4 e1       	ldi	r30, 0x14	; 20
     2e6:	f1 e0       	ldi	r31, 0x01	; 1
     2e8:	de 01       	movw	r26, r28
     2ea:	11 96       	adiw	r26, 0x01	; 1
     2ec:	01 90       	ld	r0, Z+
     2ee:	0d 92       	st	X+, r0
     2f0:	9a 95       	dec	r25
     2f2:	e1 f7       	brne	.-8      	; 0x2ec <setDirection+0x24>
	{L, X, R, T},
	{T, L, X, R},
	{R, T, L, X}};
	
	if(*directionCurrent != directionDesired){
     2f4:	fb 01       	movw	r30, r22
     2f6:	90 81       	ld	r25, Z
     2f8:	98 17       	cp	r25, r24
     2fa:	09 f4       	brne	.+2      	; 0x2fe <setDirection+0x36>
     2fc:	4c c0       	rjmp	.+152    	; 0x396 <setDirection+0xce>
     2fe:	7b 01       	movw	r14, r22
     300:	18 2f       	mov	r17, r24
		switch(orientation[directionDesired][*directionCurrent]){
     302:	e1 e0       	ldi	r30, 0x01	; 1
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	ec 0f       	add	r30, r28
     308:	fd 1f       	adc	r31, r29
     30a:	84 e0       	ldi	r24, 0x04	; 4
     30c:	18 9f       	mul	r17, r24
     30e:	e0 0d       	add	r30, r0
     310:	f1 1d       	adc	r31, r1
     312:	11 24       	eor	r1, r1
     314:	e9 0f       	add	r30, r25
     316:	f1 1d       	adc	r31, r1
     318:	80 81       	ld	r24, Z
     31a:	81 30       	cpi	r24, 0x01	; 1
     31c:	21 f0       	breq	.+8      	; 0x326 <setDirection+0x5e>
     31e:	48 f1       	brcs	.+82     	; 0x372 <setDirection+0xaa>
     320:	82 30       	cpi	r24, 0x02	; 2
     322:	a1 f0       	breq	.+40     	; 0x34c <setDirection+0x84>
     324:	38 c0       	rjmp	.+112    	; 0x396 <setDirection+0xce>
			case R:
			
			set_motors(60,-60);
     326:	64 ec       	ldi	r22, 0xC4	; 196
     328:	7f ef       	ldi	r23, 0xFF	; 255
     32a:	8c e3       	ldi	r24, 0x3C	; 60
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			delay_ms(270);
     332:	8e e0       	ldi	r24, 0x0E	; 14
     334:	91 e0       	ldi	r25, 0x01	; 1
     336:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
			set_motors(0,0);
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	70 e0       	ldi	r23, 0x00	; 0
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			
			//motorControl(60, 'R', 0.25);

			*directionCurrent = directionDesired;
     346:	f7 01       	movw	r30, r14
     348:	10 83       	st	Z, r17
			break;
     34a:	25 c0       	rjmp	.+74     	; 0x396 <setDirection+0xce>
			case L:
			
			set_motors(-60,60);
     34c:	6c e3       	ldi	r22, 0x3C	; 60
     34e:	70 e0       	ldi	r23, 0x00	; 0
     350:	84 ec       	ldi	r24, 0xC4	; 196
     352:	9f ef       	ldi	r25, 0xFF	; 255
     354:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			delay_ms(270);
     358:	8e e0       	ldi	r24, 0x0E	; 14
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
			set_motors(0,0);
     360:	60 e0       	ldi	r22, 0x00	; 0
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			
			//motorControl(60, 'L', 0.25);

			*directionCurrent = directionDesired;
     36c:	f7 01       	movw	r30, r14
     36e:	10 83       	st	Z, r17
			break;
     370:	12 c0       	rjmp	.+36     	; 0x396 <setDirection+0xce>
			case T:
			
			set_motors(60,-60);
     372:	64 ec       	ldi	r22, 0xC4	; 196
     374:	7f ef       	ldi	r23, 0xFF	; 255
     376:	8c e3       	ldi	r24, 0x3C	; 60
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			delay_ms(540);
     37e:	8c e1       	ldi	r24, 0x1C	; 28
     380:	92 e0       	ldi	r25, 0x02	; 2
     382:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
			set_motors(0,0);
     386:	60 e0       	ldi	r22, 0x00	; 0
     388:	70 e0       	ldi	r23, 0x00	; 0
     38a:	80 e0       	ldi	r24, 0x00	; 0
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
			
			//motorControl(60, 'R', 0.25);
			//motorControl(60, 'R', 0.25);

			*directionCurrent = directionDesired;
     392:	f7 01       	movw	r30, r14
     394:	10 83       	st	Z, r17
			break;
			clear();
		}
	}
	
}
     396:	60 96       	adiw	r28, 0x10	; 16
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	f8 94       	cli
     39c:	de bf       	out	0x3e, r29	; 62
     39e:	0f be       	out	0x3f, r0	; 63
     3a0:	cd bf       	out	0x3d, r28	; 61
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	1f 91       	pop	r17
     3a8:	ff 90       	pop	r15
     3aa:	ef 90       	pop	r14
     3ac:	08 95       	ret

000003ae <driveRoute>:

void driveRoute(int routes[5][8], int route, int *intersectNum){
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
     3b2:	ea 01       	movw	r28, r20

	switch(routes[route][*intersectNum]){
     3b4:	62 95       	swap	r22
     3b6:	72 95       	swap	r23
     3b8:	70 7f       	andi	r23, 0xF0	; 240
     3ba:	76 27       	eor	r23, r22
     3bc:	60 7f       	andi	r22, 0xF0	; 240
     3be:	76 27       	eor	r23, r22
     3c0:	86 0f       	add	r24, r22
     3c2:	97 1f       	adc	r25, r23
     3c4:	28 81       	ld	r18, Y
     3c6:	39 81       	ldd	r19, Y+1	; 0x01
     3c8:	22 0f       	add	r18, r18
     3ca:	33 1f       	adc	r19, r19
     3cc:	fc 01       	movw	r30, r24
     3ce:	e2 0f       	add	r30, r18
     3d0:	f3 1f       	adc	r31, r19
     3d2:	80 81       	ld	r24, Z
     3d4:	91 81       	ldd	r25, Z+1	; 0x01
     3d6:	82 30       	cpi	r24, 0x02	; 2
     3d8:	91 05       	cpc	r25, r1
     3da:	91 f1       	breq	.+100    	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     3dc:	1c f4       	brge	.+6      	; 0x3e4 <driveRoute+0x36>
     3de:	01 97       	sbiw	r24, 0x01	; 1
     3e0:	49 f0       	breq	.+18     	; 0x3f4 <driveRoute+0x46>
     3e2:	80 c0       	rjmp	.+256    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
     3e4:	83 30       	cpi	r24, 0x03	; 3
     3e6:	91 05       	cpc	r25, r1
     3e8:	09 f4       	brne	.+2      	; 0x3ec <driveRoute+0x3e>
     3ea:	50 c0       	rjmp	.+160    	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     3ec:	05 97       	sbiw	r24, 0x05	; 5
     3ee:	09 f4       	brne	.+2      	; 0x3f2 <driveRoute+0x44>
     3f0:	63 c0       	rjmp	.+198    	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     3f2:	78 c0       	rjmp	.+240    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
		case 1:
		set_motors(60,60);
     3f4:	6c e3       	ldi	r22, 0x3C	; 60
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	8c e3       	ldi	r24, 0x3C	; 60
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		delay_ms(170);
     400:	8a ea       	ldi	r24, 0xAA	; 170
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		set_motors(0,0);
     408:	60 e0       	ldi	r22, 0x00	; 0
     40a:	70 e0       	ldi	r23, 0x00	; 0
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		
		//motorControl(60, 'R', 0.25);
		
		 				set_motors(60,-60);
     414:	64 ec       	ldi	r22, 0xC4	; 196
     416:	7f ef       	ldi	r23, 0xFF	; 255
     418:	8c e3       	ldi	r24, 0x3C	; 60
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
						delay_ms(270);
     420:	8e e0       	ldi	r24, 0x0E	; 14
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		 				set_motors(0,0);
     428:	60 e0       	ldi	r22, 0x00	; 0
     42a:	70 e0       	ldi	r23, 0x00	; 0
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		
		*intersectNum = *intersectNum + 1;
     434:	88 81       	ld	r24, Y
     436:	99 81       	ldd	r25, Y+1	; 0x01
     438:	01 96       	adiw	r24, 0x01	; 1
     43a:	99 83       	std	Y+1, r25	; 0x01
     43c:	88 83       	st	Y, r24
		break;
     43e:	52 c0       	rjmp	.+164    	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
		case 2:
		set_motors(60,60);
     440:	6c e3       	ldi	r22, 0x3C	; 60
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	8c e3       	ldi	r24, 0x3C	; 60
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		delay_ms(170);
     44c:	8a ea       	ldi	r24, 0xAA	; 170
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		set_motors(0,0);
     454:	60 e0       	ldi	r22, 0x00	; 0
     456:	70 e0       	ldi	r23, 0x00	; 0
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		
		//motorControl(60, 'L', 0.25);
		
		 				set_motors(-60,60);
     460:	6c e3       	ldi	r22, 0x3C	; 60
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	84 ec       	ldi	r24, 0xC4	; 196
     466:	9f ef       	ldi	r25, 0xFF	; 255
     468:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		 				delay_ms(270);
     46c:	8e e0       	ldi	r24, 0x0E	; 14
     46e:	91 e0       	ldi	r25, 0x01	; 1
     470:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		 				set_motors(0,0);
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	70 e0       	ldi	r23, 0x00	; 0
     478:	80 e0       	ldi	r24, 0x00	; 0
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		
		*intersectNum = *intersectNum + 1;
     480:	88 81       	ld	r24, Y
     482:	99 81       	ldd	r25, Y+1	; 0x01
     484:	01 96       	adiw	r24, 0x01	; 1
     486:	99 83       	std	Y+1, r25	; 0x01
     488:	88 83       	st	Y, r24
		break;
     48a:	2c c0       	rjmp	.+88     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
		case 3:
		set_motors(60,60);
     48c:	6c e3       	ldi	r22, 0x3C	; 60
     48e:	70 e0       	ldi	r23, 0x00	; 0
     490:	8c e3       	ldi	r24, 0x3C	; 60
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		delay_ms(170);
     498:	8a ea       	ldi	r24, 0xAA	; 170
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		set_motors(0,0);
     4a0:	60 e0       	ldi	r22, 0x00	; 0
     4a2:	70 e0       	ldi	r23, 0x00	; 0
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		*intersectNum = *intersectNum + 1;
     4ac:	88 81       	ld	r24, Y
     4ae:	99 81       	ldd	r25, Y+1	; 0x01
     4b0:	01 96       	adiw	r24, 0x01	; 1
     4b2:	99 83       	std	Y+1, r25	; 0x01
     4b4:	88 83       	st	Y, r24
		break;
     4b6:	16 c0       	rjmp	.+44     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
		case 5:
		set_motors(0,0);
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		endOfRouteFlag = 1;
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	90 93 f2 01 	sts	0x01F2, r25	; 0x8001f2 <endOfRouteFlag+0x1>
     4cc:	80 93 f1 01 	sts	0x01F1, r24	; 0x8001f1 <endOfRouteFlag>
		followLineFlag = 0;
     4d0:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     4d4:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
		*intersectNum = 0;
     4d8:	19 82       	std	Y+1, r1	; 0x01
     4da:	18 82       	st	Y, r1
		homeFlag = 1;
     4dc:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <homeFlag+0x1>
     4e0:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <homeFlag>

		break;
	}
}
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	08 95       	ret

000004ea <getProduct>:

void getProduct(int orderX[sizeOfOrder], int orderY[sizeOfOrder], int *orderNum, int *xCoordinate, int *yCoordinate, int *x, direction *directionCurrent, direction *directionLast){
     4ea:	6f 92       	push	r6
     4ec:	7f 92       	push	r7
     4ee:	8f 92       	push	r8
     4f0:	9f 92       	push	r9
     4f2:	af 92       	push	r10
     4f4:	bf 92       	push	r11
     4f6:	cf 92       	push	r12
     4f8:	df 92       	push	r13
     4fa:	ef 92       	push	r14
     4fc:	ff 92       	push	r15
     4fe:	0f 93       	push	r16
     500:	1f 93       	push	r17
     502:	cf 93       	push	r28
     504:	df 93       	push	r29
     506:	4c 01       	movw	r8, r24
     508:	3b 01       	movw	r6, r22
     50a:	5a 01       	movw	r10, r20
     50c:	e9 01       	movw	r28, r18
	
	clear();
     50e:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
	lcd_goto_xy(0,0);
     512:	60 e0       	ldi	r22, 0x00	; 0
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
	print_long(*xCoordinate);
     51a:	68 81       	ld	r22, Y
     51c:	79 81       	ldd	r23, Y+1	; 0x01
     51e:	07 2e       	mov	r0, r23
     520:	00 0c       	add	r0, r0
     522:	88 0b       	sbc	r24, r24
     524:	99 0b       	sbc	r25, r25
     526:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
	lcd_goto_xy(0,1);
     52a:	61 e0       	ldi	r22, 0x01	; 1
     52c:	80 e0       	ldi	r24, 0x00	; 0
     52e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
	print_long(*yCoordinate);
     532:	d8 01       	movw	r26, r16
     534:	6d 91       	ld	r22, X+
     536:	7c 91       	ld	r23, X
     538:	07 2e       	mov	r0, r23
     53a:	00 0c       	add	r0, r0
     53c:	88 0b       	sbc	r24, r24
     53e:	99 0b       	sbc	r25, r25
     540:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
	
	if (productCollectedFlag == 0){
     544:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <productCollectedFlag>
     548:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <productCollectedFlag+0x1>
     54c:	89 2b       	or	r24, r25
     54e:	81 f4       	brne	.+32     	; 0x570 <getProduct+0x86>
		set_motors(60,60);
     550:	6c e3       	ldi	r22, 0x3C	; 60
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	8c e3       	ldi	r24, 0x3C	; 60
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		delay_ms(170);
     55c:	8a ea       	ldi	r24, 0xAA	; 170
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		set_motors(0,0);
     564:	60 e0       	ldi	r22, 0x00	; 0
     566:	70 e0       	ldi	r23, 0x00	; 0
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
	}

	if (productCollectedFlag == 1){
     570:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <productCollectedFlag>
     574:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <productCollectedFlag+0x1>
     578:	01 97       	sbiw	r24, 0x01	; 1
     57a:	21 f4       	brne	.+8      	; 0x584 <getProduct+0x9a>
		productCollectedFlag = 0;
     57c:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <productCollectedFlag+0x1>
     580:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <productCollectedFlag>
	}

	if((orderX[*orderNum] != *xCoordinate) && (*x == 0)){
     584:	d5 01       	movw	r26, r10
     586:	ed 91       	ld	r30, X+
     588:	fc 91       	ld	r31, X
     58a:	ee 0f       	add	r30, r30
     58c:	ff 1f       	adc	r31, r31
     58e:	e8 0d       	add	r30, r8
     590:	f9 1d       	adc	r31, r9
     592:	20 81       	ld	r18, Z
     594:	31 81       	ldd	r19, Z+1	; 0x01
     596:	88 81       	ld	r24, Y
     598:	99 81       	ldd	r25, Y+1	; 0x01
     59a:	28 17       	cp	r18, r24
     59c:	39 07       	cpc	r19, r25
     59e:	09 f4       	brne	.+2      	; 0x5a2 <getProduct+0xb8>
     5a0:	81 c0       	rjmp	.+258    	; 0x6a4 <getProduct+0x1ba>
     5a2:	f7 01       	movw	r30, r14
     5a4:	40 81       	ld	r20, Z
     5a6:	51 81       	ldd	r21, Z+1	; 0x01
     5a8:	45 2b       	or	r20, r21
     5aa:	09 f0       	breq	.+2      	; 0x5ae <getProduct+0xc4>
     5ac:	90 c0       	rjmp	.+288    	; 0x6ce <getProduct+0x1e4>
		if(orderX[*orderNum] > *xCoordinate){
     5ae:	82 17       	cp	r24, r18
     5b0:	93 07       	cpc	r25, r19
     5b2:	74 f5       	brge	.+92     	; 0x610 <getProduct+0x126>
			directionLast = directionCurrent;
			setDirection(W, directionCurrent);
     5b4:	b6 01       	movw	r22, r12
     5b6:	83 e0       	ldi	r24, 0x03	; 3
     5b8:	0e 94 64 01 	call	0x2c8	; 0x2c8 <setDirection>
			if (followLineFlag == 1){
     5bc:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <followLineFlag>
     5c0:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <followLineFlag+0x1>
     5c4:	01 97       	sbiw	r24, 0x01	; 1
     5c6:	49 f4       	brne	.+18     	; 0x5da <getProduct+0xf0>
				*xCoordinate = *xCoordinate + 1;
     5c8:	88 81       	ld	r24, Y
     5ca:	99 81       	ldd	r25, Y+1	; 0x01
     5cc:	01 96       	adiw	r24, 0x01	; 1
     5ce:	99 83       	std	Y+1, r25	; 0x01
     5d0:	88 83       	st	Y, r24
				followLineFlag = 0;
     5d2:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     5d6:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
			}
			
			clear();
     5da:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
			lcd_goto_xy(0,0);
     5de:	60 e0       	ldi	r22, 0x00	; 0
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*xCoordinate);
     5e6:	68 81       	ld	r22, Y
     5e8:	79 81       	ldd	r23, Y+1	; 0x01
     5ea:	07 2e       	mov	r0, r23
     5ec:	00 0c       	add	r0, r0
     5ee:	88 0b       	sbc	r24, r24
     5f0:	99 0b       	sbc	r25, r25
     5f2:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
			lcd_goto_xy(0,1);
     5f6:	61 e0       	ldi	r22, 0x01	; 1
     5f8:	80 e0       	ldi	r24, 0x00	; 0
     5fa:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*yCoordinate);
     5fe:	d8 01       	movw	r26, r16
     600:	6d 91       	ld	r22, X+
     602:	7c 91       	ld	r23, X
     604:	07 2e       	mov	r0, r23
     606:	00 0c       	add	r0, r0
     608:	88 0b       	sbc	r24, r24
     60a:	99 0b       	sbc	r25, r25
     60c:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>

		}
		if(orderX[*orderNum] < *xCoordinate){
     610:	d5 01       	movw	r26, r10
     612:	ed 91       	ld	r30, X+
     614:	fc 91       	ld	r31, X
     616:	ee 0f       	add	r30, r30
     618:	ff 1f       	adc	r31, r31
     61a:	e8 0d       	add	r30, r8
     61c:	f9 1d       	adc	r31, r9
     61e:	20 81       	ld	r18, Z
     620:	31 81       	ldd	r19, Z+1	; 0x01
     622:	88 81       	ld	r24, Y
     624:	99 81       	ldd	r25, Y+1	; 0x01
     626:	28 17       	cp	r18, r24
     628:	39 07       	cpc	r19, r25
     62a:	74 f5       	brge	.+92     	; 0x688 <getProduct+0x19e>
			directionLast = directionCurrent;
			setDirection(E, directionCurrent);
     62c:	b6 01       	movw	r22, r12
     62e:	81 e0       	ldi	r24, 0x01	; 1
     630:	0e 94 64 01 	call	0x2c8	; 0x2c8 <setDirection>
			
			if (followLineFlag == 1){
     634:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <followLineFlag>
     638:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <followLineFlag+0x1>
     63c:	01 97       	sbiw	r24, 0x01	; 1
     63e:	49 f4       	brne	.+18     	; 0x652 <getProduct+0x168>
				*xCoordinate = *xCoordinate - 1;
     640:	88 81       	ld	r24, Y
     642:	99 81       	ldd	r25, Y+1	; 0x01
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	99 83       	std	Y+1, r25	; 0x01
     648:	88 83       	st	Y, r24
				followLineFlag = 0;
     64a:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     64e:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
			}
			clear();
     652:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
			lcd_goto_xy(0,0);
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*xCoordinate);
     65e:	68 81       	ld	r22, Y
     660:	79 81       	ldd	r23, Y+1	; 0x01
     662:	07 2e       	mov	r0, r23
     664:	00 0c       	add	r0, r0
     666:	88 0b       	sbc	r24, r24
     668:	99 0b       	sbc	r25, r25
     66a:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
			lcd_goto_xy(0,1);
     66e:	61 e0       	ldi	r22, 0x01	; 1
     670:	80 e0       	ldi	r24, 0x00	; 0
     672:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*yCoordinate);
     676:	f8 01       	movw	r30, r16
     678:	60 81       	ld	r22, Z
     67a:	71 81       	ldd	r23, Z+1	; 0x01
     67c:	07 2e       	mov	r0, r23
     67e:	00 0c       	add	r0, r0
     680:	88 0b       	sbc	r24, r24
     682:	99 0b       	sbc	r25, r25
     684:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>

		}
	}
	if(orderX[*orderNum] == *xCoordinate){
     688:	d5 01       	movw	r26, r10
     68a:	ed 91       	ld	r30, X+
     68c:	fc 91       	ld	r31, X
     68e:	ee 0f       	add	r30, r30
     690:	ff 1f       	adc	r31, r31
     692:	e8 0d       	add	r30, r8
     694:	f9 1d       	adc	r31, r9
     696:	20 81       	ld	r18, Z
     698:	31 81       	ldd	r19, Z+1	; 0x01
     69a:	88 81       	ld	r24, Y
     69c:	99 81       	ldd	r25, Y+1	; 0x01
     69e:	28 17       	cp	r18, r24
     6a0:	39 07       	cpc	r19, r25
     6a2:	a9 f4       	brne	.+42     	; 0x6ce <getProduct+0x1e4>
		*x = 1;
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	f7 01       	movw	r30, r14
     6aa:	91 83       	std	Z+1, r25	; 0x01
     6ac:	80 83       	st	Z, r24
	}
	if((orderY[*orderNum] != *yCoordinate) && (*x == 1)){
     6ae:	d5 01       	movw	r26, r10
     6b0:	ed 91       	ld	r30, X+
     6b2:	fc 91       	ld	r31, X
     6b4:	ee 0f       	add	r30, r30
     6b6:	ff 1f       	adc	r31, r31
     6b8:	e6 0d       	add	r30, r6
     6ba:	f7 1d       	adc	r31, r7
     6bc:	40 81       	ld	r20, Z
     6be:	51 81       	ldd	r21, Z+1	; 0x01
     6c0:	f8 01       	movw	r30, r16
     6c2:	20 81       	ld	r18, Z
     6c4:	31 81       	ldd	r19, Z+1	; 0x01
     6c6:	42 17       	cp	r20, r18
     6c8:	53 07       	cpc	r21, r19
     6ca:	c1 f4       	brne	.+48     	; 0x6fc <getProduct+0x212>
     6cc:	da c0       	rjmp	.+436    	; 0x882 <getProduct+0x398>
     6ce:	d5 01       	movw	r26, r10
     6d0:	8d 91       	ld	r24, X+
     6d2:	9c 91       	ld	r25, X
     6d4:	88 0f       	add	r24, r24
     6d6:	99 1f       	adc	r25, r25
     6d8:	f3 01       	movw	r30, r6
     6da:	e8 0f       	add	r30, r24
     6dc:	f9 1f       	adc	r31, r25
     6de:	40 81       	ld	r20, Z
     6e0:	51 81       	ldd	r21, Z+1	; 0x01
     6e2:	f8 01       	movw	r30, r16
     6e4:	20 81       	ld	r18, Z
     6e6:	31 81       	ldd	r19, Z+1	; 0x01
     6e8:	42 17       	cp	r20, r18
     6ea:	53 07       	cpc	r21, r19
     6ec:	09 f4       	brne	.+2      	; 0x6f0 <getProduct+0x206>
     6ee:	be c0       	rjmp	.+380    	; 0x86c <getProduct+0x382>
     6f0:	d7 01       	movw	r26, r14
     6f2:	8d 91       	ld	r24, X+
     6f4:	9c 91       	ld	r25, X
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	09 f0       	breq	.+2      	; 0x6fc <getProduct+0x212>
     6fa:	d3 c0       	rjmp	.+422    	; 0x8a2 <getProduct+0x3b8>
		if(orderY[*orderNum] > *yCoordinate){
     6fc:	24 17       	cp	r18, r20
     6fe:	35 07       	cpc	r19, r21
     700:	7c f5       	brge	.+94     	; 0x760 <getProduct+0x276>
			directionLast = directionCurrent;
			setDirection(N, directionCurrent);
     702:	b6 01       	movw	r22, r12
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	0e 94 64 01 	call	0x2c8	; 0x2c8 <setDirection>
			
			if (followLineFlag == 1){
     70a:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <followLineFlag>
     70e:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <followLineFlag+0x1>
     712:	01 97       	sbiw	r24, 0x01	; 1
     714:	51 f4       	brne	.+20     	; 0x72a <getProduct+0x240>
				*yCoordinate = *yCoordinate + 1;
     716:	f8 01       	movw	r30, r16
     718:	80 81       	ld	r24, Z
     71a:	91 81       	ldd	r25, Z+1	; 0x01
     71c:	01 96       	adiw	r24, 0x01	; 1
     71e:	91 83       	std	Z+1, r25	; 0x01
     720:	80 83       	st	Z, r24
				followLineFlag = 0;
     722:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     726:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
			}
			clear();
     72a:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
			lcd_goto_xy(0,0);
     72e:	60 e0       	ldi	r22, 0x00	; 0
     730:	80 e0       	ldi	r24, 0x00	; 0
     732:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*xCoordinate);
     736:	68 81       	ld	r22, Y
     738:	79 81       	ldd	r23, Y+1	; 0x01
     73a:	07 2e       	mov	r0, r23
     73c:	00 0c       	add	r0, r0
     73e:	88 0b       	sbc	r24, r24
     740:	99 0b       	sbc	r25, r25
     742:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
			lcd_goto_xy(0,1);
     746:	61 e0       	ldi	r22, 0x01	; 1
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*yCoordinate);
     74e:	d8 01       	movw	r26, r16
     750:	6d 91       	ld	r22, X+
     752:	7c 91       	ld	r23, X
     754:	07 2e       	mov	r0, r23
     756:	00 0c       	add	r0, r0
     758:	88 0b       	sbc	r24, r24
     75a:	99 0b       	sbc	r25, r25
     75c:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>

		}
		if(orderY[*orderNum] < *yCoordinate){
     760:	d5 01       	movw	r26, r10
     762:	ed 91       	ld	r30, X+
     764:	fc 91       	ld	r31, X
     766:	ee 0f       	add	r30, r30
     768:	ff 1f       	adc	r31, r31
     76a:	e6 0d       	add	r30, r6
     76c:	f7 1d       	adc	r31, r7
     76e:	20 81       	ld	r18, Z
     770:	31 81       	ldd	r19, Z+1	; 0x01
     772:	f8 01       	movw	r30, r16
     774:	80 81       	ld	r24, Z
     776:	91 81       	ldd	r25, Z+1	; 0x01
     778:	28 17       	cp	r18, r24
     77a:	39 07       	cpc	r19, r25
     77c:	84 f5       	brge	.+96     	; 0x7de <getProduct+0x2f4>
			directionLast = directionCurrent;
			setDirection(S, directionCurrent);
     77e:	b6 01       	movw	r22, r12
     780:	82 e0       	ldi	r24, 0x02	; 2
     782:	0e 94 64 01 	call	0x2c8	; 0x2c8 <setDirection>
			
			if (followLineFlag == 1){
     786:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <followLineFlag>
     78a:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <followLineFlag+0x1>
     78e:	01 97       	sbiw	r24, 0x01	; 1
     790:	59 f4       	brne	.+22     	; 0x7a8 <getProduct+0x2be>
				*yCoordinate = *yCoordinate- 1;
     792:	d8 01       	movw	r26, r16
     794:	8d 91       	ld	r24, X+
     796:	9c 91       	ld	r25, X
     798:	11 97       	sbiw	r26, 0x01	; 1
     79a:	01 97       	sbiw	r24, 0x01	; 1
     79c:	8d 93       	st	X+, r24
     79e:	9c 93       	st	X, r25
				followLineFlag = 0;
     7a0:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     7a4:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
			}
			clear();
     7a8:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
			lcd_goto_xy(0,0);
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*xCoordinate);
     7b4:	68 81       	ld	r22, Y
     7b6:	79 81       	ldd	r23, Y+1	; 0x01
     7b8:	07 2e       	mov	r0, r23
     7ba:	00 0c       	add	r0, r0
     7bc:	88 0b       	sbc	r24, r24
     7be:	99 0b       	sbc	r25, r25
     7c0:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
			lcd_goto_xy(0,1);
     7c4:	61 e0       	ldi	r22, 0x01	; 1
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
			print_long(*yCoordinate);
     7cc:	f8 01       	movw	r30, r16
     7ce:	60 81       	ld	r22, Z
     7d0:	71 81       	ldd	r23, Z+1	; 0x01
     7d2:	07 2e       	mov	r0, r23
     7d4:	00 0c       	add	r0, r0
     7d6:	88 0b       	sbc	r24, r24
     7d8:	99 0b       	sbc	r25, r25
     7da:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>

		}
	}

	if((orderX[*orderNum] == *xCoordinate) && (orderY[*orderNum] == *yCoordinate)){
     7de:	d5 01       	movw	r26, r10
     7e0:	8d 91       	ld	r24, X+
     7e2:	9c 91       	ld	r25, X
     7e4:	88 0f       	add	r24, r24
     7e6:	99 1f       	adc	r25, r25
     7e8:	f4 01       	movw	r30, r8
     7ea:	e8 0f       	add	r30, r24
     7ec:	f9 1f       	adc	r31, r25
     7ee:	40 81       	ld	r20, Z
     7f0:	51 81       	ldd	r21, Z+1	; 0x01
     7f2:	28 81       	ld	r18, Y
     7f4:	39 81       	ldd	r19, Y+1	; 0x01
     7f6:	42 17       	cp	r20, r18
     7f8:	53 07       	cpc	r21, r19
     7fa:	09 f0       	breq	.+2      	; 0x7fe <getProduct+0x314>
     7fc:	52 c0       	rjmp	.+164    	; 0x8a2 <getProduct+0x3b8>
     7fe:	f3 01       	movw	r30, r6
     800:	e8 0f       	add	r30, r24
     802:	f9 1f       	adc	r31, r25
     804:	20 81       	ld	r18, Z
     806:	31 81       	ldd	r19, Z+1	; 0x01
     808:	f8 01       	movw	r30, r16
     80a:	80 81       	ld	r24, Z
     80c:	91 81       	ldd	r25, Z+1	; 0x01
     80e:	28 17       	cp	r18, r24
     810:	39 07       	cpc	r19, r25
     812:	09 f0       	breq	.+2      	; 0x816 <getProduct+0x32c>
     814:	46 c0       	rjmp	.+140    	; 0x8a2 <getProduct+0x3b8>
		set_motors(0,0);               //moeten we nog even naar kijken, hij moet gelijk stilstaan
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	70 e0       	ldi	r23, 0x00	; 0
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		clear();
     822:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
		print("Product");
     826:	85 e5       	ldi	r24, 0x55	; 85
     828:	91 e0       	ldi	r25, 0x01	; 1
     82a:	0e 94 2a 0b 	call	0x1654	; 0x1654 <print>
		*orderNum = *orderNum + 1;
     82e:	d5 01       	movw	r26, r10
     830:	8d 91       	ld	r24, X+
     832:	9c 91       	ld	r25, X
     834:	11 97       	sbiw	r26, 0x01	; 1
     836:	01 96       	adiw	r24, 0x01	; 1
     838:	8d 93       	st	X+, r24
     83a:	9c 93       	st	X, r25

		if (*orderNum == sizeOfOrder){
     83c:	05 97       	sbiw	r24, 0x05	; 5
     83e:	21 f4       	brne	.+8      	; 0x848 <getProduct+0x35e>
			setDirection('S', directionCurrent);
     840:	b6 01       	movw	r22, r12
     842:	83 e5       	ldi	r24, 0x53	; 83
     844:	0e 94 64 01 	call	0x2c8	; 0x2c8 <setDirection>
		}
		play_from_program_space(PSTR(">f32>>a32"));
     848:	88 e6       	ldi	r24, 0x68	; 104
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	0e 94 12 0a 	call	0x1424	; 0x1424 <play_from_program_space>
		    : "0" ( microseconds )
		    );  
}

// These are alternative aliases:
static inline void delay(unsigned int milliseconds) { delay_ms(milliseconds); }
     850:	88 ee       	ldi	r24, 0xE8	; 232
     852:	93 e0       	ldi	r25, 0x03	; 3
     854:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		delay(1000);
		*x = 0;
     858:	f7 01       	movw	r30, r14
     85a:	11 82       	std	Z+1, r1	; 0x01
     85c:	10 82       	st	Z, r1
		productCollectedFlag = 1;
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	90 93 ee 01 	sts	0x01EE, r25	; 0x8001ee <productCollectedFlag+0x1>
     866:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <productCollectedFlag>
	}
}
     86a:	1b c0       	rjmp	.+54     	; 0x8a2 <getProduct+0x3b8>
			print_long(*yCoordinate);

		}
	}

	if((orderX[*orderNum] == *xCoordinate) && (orderY[*orderNum] == *yCoordinate)){
     86c:	f4 01       	movw	r30, r8
     86e:	e8 0f       	add	r30, r24
     870:	f9 1f       	adc	r31, r25
     872:	20 81       	ld	r18, Z
     874:	31 81       	ldd	r19, Z+1	; 0x01
     876:	88 81       	ld	r24, Y
     878:	99 81       	ldd	r25, Y+1	; 0x01
     87a:	28 17       	cp	r18, r24
     87c:	39 07       	cpc	r19, r25
     87e:	89 f4       	brne	.+34     	; 0x8a2 <getProduct+0x3b8>
     880:	ca cf       	rjmp	.-108    	; 0x816 <getProduct+0x32c>
     882:	d5 01       	movw	r26, r10
     884:	8d 91       	ld	r24, X+
     886:	9c 91       	ld	r25, X
     888:	88 0f       	add	r24, r24
     88a:	99 1f       	adc	r25, r25
     88c:	f4 01       	movw	r30, r8
     88e:	e8 0f       	add	r30, r24
     890:	f9 1f       	adc	r31, r25
     892:	20 81       	ld	r18, Z
     894:	31 81       	ldd	r19, Z+1	; 0x01
     896:	88 81       	ld	r24, Y
     898:	99 81       	ldd	r25, Y+1	; 0x01
     89a:	28 17       	cp	r18, r24
     89c:	39 07       	cpc	r19, r25
     89e:	09 f4       	brne	.+2      	; 0x8a2 <getProduct+0x3b8>
     8a0:	ba cf       	rjmp	.-140    	; 0x816 <getProduct+0x32c>
		play_from_program_space(PSTR(">f32>>a32"));
		delay(1000);
		*x = 0;
		productCollectedFlag = 1;
	}
}
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	1f 91       	pop	r17
     8a8:	0f 91       	pop	r16
     8aa:	ff 90       	pop	r15
     8ac:	ef 90       	pop	r14
     8ae:	df 90       	pop	r13
     8b0:	cf 90       	pop	r12
     8b2:	bf 90       	pop	r11
     8b4:	af 90       	pop	r10
     8b6:	9f 90       	pop	r9
     8b8:	8f 90       	pop	r8
     8ba:	7f 90       	pop	r7
     8bc:	6f 90       	pop	r6
     8be:	08 95       	ret

000008c0 <main>:
#include <pololu/3pi.h>
#include <avr/pgmspace.h>
#include <avr/io.h>
#include <avr/interrupt.h>

int main(){
     8c0:	8f 92       	push	r8
     8c2:	9f 92       	push	r9
     8c4:	af 92       	push	r10
     8c6:	bf 92       	push	r11
     8c8:	cf 92       	push	r12
     8ca:	df 92       	push	r13
     8cc:	ef 92       	push	r14
     8ce:	ff 92       	push	r15
     8d0:	0f 93       	push	r16
     8d2:	1f 93       	push	r17
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	c0 57       	subi	r28, 0x70	; 112
     8de:	d1 09       	sbc	r29, r1
     8e0:	0f b6       	in	r0, 0x3f	; 63
     8e2:	f8 94       	cli
     8e4:	de bf       	out	0x3e, r29	; 62
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	cd bf       	out	0x3d, r28	; 61
	initialize();
     8ea:	0e 94 38 05 	call	0xa70	; 0xa70 <initialize>
	
	int orderX[sizeOfOrder] ={4, 1, 4, 2, 4};
     8ee:	8a e0       	ldi	r24, 0x0A	; 10
     8f0:	e4 e2       	ldi	r30, 0x24	; 36
     8f2:	f1 e0       	ldi	r31, 0x01	; 1
     8f4:	de 01       	movw	r26, r28
     8f6:	11 96       	adiw	r26, 0x01	; 1
     8f8:	01 90       	ld	r0, Z+
     8fa:	0d 92       	st	X+, r0
     8fc:	8a 95       	dec	r24
     8fe:	e1 f7       	brne	.-8      	; 0x8f8 <main+0x38>
	int orderY[sizeOfOrder] ={4, 3, 1, 1, 0};
     900:	8a e0       	ldi	r24, 0x0A	; 10
     902:	ee e2       	ldi	r30, 0x2E	; 46
     904:	f1 e0       	ldi	r31, 0x01	; 1
     906:	de 01       	movw	r26, r28
     908:	1b 96       	adiw	r26, 0x0b	; 11
     90a:	01 90       	ld	r0, Z+
     90c:	0d 92       	st	X+, r0
     90e:	8a 95       	dec	r24
     910:	e1 f7       	brne	.-8      	; 0x90a <__stack+0xb>

	int xCoordinate = 0, yCoordinate = 0, x = 0;
     912:	1e 8a       	std	Y+22, r1	; 0x16
     914:	1d 8a       	std	Y+21, r1	; 0x15
     916:	18 8e       	std	Y+24, r1	; 0x18
     918:	1f 8a       	std	Y+23, r1	; 0x17
     91a:	1a 8e       	std	Y+26, r1	; 0x1a
     91c:	19 8e       	std	Y+25, r1	; 0x19
	direction directionCurrent = N;
     91e:	1b 8e       	std	Y+27, r1	; 0x1b
	direction directionLast;
	
	//wirOrder(&orderX, &orderY);
	
	sortOrder(orderX, orderY);
     920:	be 01       	movw	r22, r28
     922:	65 5f       	subi	r22, 0xF5	; 245
     924:	7f 4f       	sbci	r23, 0xFF	; 255
     926:	ce 01       	movw	r24, r28
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	0e 94 59 00 	call	0xb2	; 0xb2 <sortOrder>
	
	int routes[5][8];
	int intersectNum = 0;
     92e:	af 96       	adiw	r28, 0x2f	; 47
     930:	1f ae       	std	Y+63, r1	; 0x3f
     932:	1e ae       	std	Y+62, r1	; 0x3e
     934:	af 97       	sbiw	r28, 0x2f	; 47
	readGrid(routes);
     936:	ce 01       	movw	r24, r28
     938:	4d 96       	adiw	r24, 0x1d	; 29
     93a:	0e 94 28 01 	call	0x250	; 0x250 <readGrid>
	
	int orderNum = 0;
     93e:	e1 96       	adiw	r28, 0x31	; 49
     940:	1f ae       	std	Y+63, r1	; 0x3f
     942:	1e ae       	std	Y+62, r1	; 0x3e
     944:	e1 97       	sbiw	r28, 0x31	; 49
		read_line_sensors(sensors,IR_EMITTERS_ON);

		if (checkAfslag() != 1 && productCollectedFlag == 0){
			//checkDistance();
			followLine();
			followLineFlag = 1;
     946:	88 24       	eor	r8, r8
     948:	83 94       	inc	r8
     94a:	91 2c       	mov	r9, r1
	int orderNum = 0;
	
	while (orderNum != sizeOfOrder)
	{
		
		read_line_sensors(sensors,IR_EMITTERS_ON);
     94c:	61 e0       	ldi	r22, 0x01	; 1
     94e:	8f e4       	ldi	r24, 0x4F	; 79
     950:	92 e0       	ldi	r25, 0x02	; 2
     952:	0e 94 d5 0d 	call	0x1baa	; 0x1baa <read_line_sensors>

		if (checkAfslag() != 1 && productCollectedFlag == 0){
     956:	0e 94 bc 05 	call	0xb78	; 0xb78 <checkAfslag>
     95a:	01 97       	sbiw	r24, 0x01	; 1
     95c:	61 f0       	breq	.+24     	; 0x976 <__stack+0x77>
     95e:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <productCollectedFlag>
     962:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <productCollectedFlag+0x1>
     966:	89 2b       	or	r24, r25
     968:	31 f4       	brne	.+12     	; 0x976 <__stack+0x77>
			//checkDistance();
			followLine();
     96a:	0e 94 d1 05 	call	0xba2	; 0xba2 <followLine>
			followLineFlag = 1;
     96e:	90 92 f4 01 	sts	0x01F4, r9	; 0x8001f4 <followLineFlag+0x1>
     972:	80 92 f3 01 	sts	0x01F3, r8	; 0x8001f3 <followLineFlag>

		}
		
		if (endOfRouteFlag == 0 && checkAfslag() == 1){
     976:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <endOfRouteFlag>
     97a:	90 91 f2 01 	lds	r25, 0x01F2	; 0x8001f2 <endOfRouteFlag+0x1>
     97e:	89 2b       	or	r24, r25
     980:	69 f4       	brne	.+26     	; 0x99c <__stack+0x9d>
     982:	0e 94 bc 05 	call	0xb78	; 0xb78 <checkAfslag>
     986:	01 97       	sbiw	r24, 0x01	; 1
     988:	49 f4       	brne	.+18     	; 0x99c <__stack+0x9d>

			driveRoute(routes, 0, &intersectNum);
     98a:	ae 01       	movw	r20, r28
     98c:	43 59       	subi	r20, 0x93	; 147
     98e:	5f 4f       	sbci	r21, 0xFF	; 255
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	ce 01       	movw	r24, r28
     996:	4d 96       	adiw	r24, 0x1d	; 29
     998:	0e 94 d7 01 	call	0x3ae	; 0x3ae <driveRoute>
			
		}
		
		if ((endOfRouteFlag == 1 && checkAfslag() == 1) || productCollectedFlag == 1){
     99c:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <endOfRouteFlag>
     9a0:	90 91 f2 01 	lds	r25, 0x01F2	; 0x8001f2 <endOfRouteFlag+0x1>
     9a4:	01 97       	sbiw	r24, 0x01	; 1
     9a6:	21 f4       	brne	.+8      	; 0x9b0 <__stack+0xb1>
     9a8:	0e 94 bc 05 	call	0xb78	; 0xb78 <checkAfslag>
     9ac:	01 97       	sbiw	r24, 0x01	; 1
     9ae:	31 f0       	breq	.+12     	; 0x9bc <__stack+0xbd>
     9b0:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <productCollectedFlag>
     9b4:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <productCollectedFlag+0x1>
     9b8:	01 97       	sbiw	r24, 0x01	; 1
     9ba:	b1 f4       	brne	.+44     	; 0x9e8 <__stack+0xe9>
			
			getProduct(orderX, orderY, &orderNum, &xCoordinate, &yCoordinate, &x, &directionCurrent, &directionLast);
     9bc:	ce 01       	movw	r24, r28
     9be:	4c 96       	adiw	r24, 0x1c	; 28
     9c0:	5c 01       	movw	r10, r24
     9c2:	01 97       	sbiw	r24, 0x01	; 1
     9c4:	6c 01       	movw	r12, r24
     9c6:	02 97       	sbiw	r24, 0x02	; 2
     9c8:	7c 01       	movw	r14, r24
     9ca:	8e 01       	movw	r16, r28
     9cc:	09 5e       	subi	r16, 0xE9	; 233
     9ce:	1f 4f       	sbci	r17, 0xFF	; 255
     9d0:	9e 01       	movw	r18, r28
     9d2:	2b 5e       	subi	r18, 0xEB	; 235
     9d4:	3f 4f       	sbci	r19, 0xFF	; 255
     9d6:	ae 01       	movw	r20, r28
     9d8:	41 59       	subi	r20, 0x91	; 145
     9da:	5f 4f       	sbci	r21, 0xFF	; 255
     9dc:	be 01       	movw	r22, r28
     9de:	65 5f       	subi	r22, 0xF5	; 245
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	48 97       	sbiw	r24, 0x18	; 24
     9e4:	0e 94 75 02 	call	0x4ea	; 0x4ea <getProduct>
	int intersectNum = 0;
	readGrid(routes);
	
	int orderNum = 0;
	
	while (orderNum != sizeOfOrder)
     9e8:	e1 96       	adiw	r28, 0x31	; 49
     9ea:	8e ad       	ldd	r24, Y+62	; 0x3e
     9ec:	9f ad       	ldd	r25, Y+63	; 0x3f
     9ee:	e1 97       	sbiw	r28, 0x31	; 49
     9f0:	05 97       	sbiw	r24, 0x05	; 5
     9f2:	09 f0       	breq	.+2      	; 0x9f6 <__stack+0xf7>
     9f4:	ab cf       	rjmp	.-170    	; 0x94c <__stack+0x4d>
			getProduct(orderX, orderY, &orderNum, &xCoordinate, &yCoordinate, &x, &directionCurrent, &directionLast);

		}
	}

	homeFlag = 0;
     9f6:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <homeFlag+0x1>
     9fa:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <homeFlag>
	intersectNum = 0;
     9fe:	af 96       	adiw	r28, 0x2f	; 47
     a00:	1f ae       	std	Y+63, r1	; 0x3f
     a02:	1e ae       	std	Y+62, r1	; 0x3e
     a04:	af 97       	sbiw	r28, 0x2f	; 47
	
	while (homeFlag != 1){

		read_line_sensors(sensors,IR_EMITTERS_ON);		
     a06:	61 e0       	ldi	r22, 0x01	; 1
     a08:	8f e4       	ldi	r24, 0x4F	; 79
     a0a:	92 e0       	ldi	r25, 0x02	; 2
     a0c:	0e 94 d5 0d 	call	0x1baa	; 0x1baa <read_line_sensors>

		if (checkAfslag() != 1){
     a10:	0e 94 bc 05 	call	0xb78	; 0xb78 <checkAfslag>
     a14:	01 97       	sbiw	r24, 0x01	; 1
     a16:	19 f0       	breq	.+6      	; 0xa1e <__stack+0x11f>
			//checkDistance();
			followLine();
     a18:	0e 94 d1 05 	call	0xba2	; 0xba2 <followLine>
     a1c:	0d c0       	rjmp	.+26     	; 0xa38 <__stack+0x139>

		}
		else if (checkAfslag() == 1){
     a1e:	0e 94 bc 05 	call	0xb78	; 0xb78 <checkAfslag>
     a22:	01 97       	sbiw	r24, 0x01	; 1
     a24:	49 f4       	brne	.+18     	; 0xa38 <__stack+0x139>
			driveRoute(routes, 3, &intersectNum);
     a26:	ae 01       	movw	r20, r28
     a28:	43 59       	subi	r20, 0x93	; 147
     a2a:	5f 4f       	sbci	r21, 0xFF	; 255
     a2c:	63 e0       	ldi	r22, 0x03	; 3
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	ce 01       	movw	r24, r28
     a32:	4d 96       	adiw	r24, 0x1d	; 29
     a34:	0e 94 d7 01 	call	0x3ae	; 0x3ae <driveRoute>
	}

	homeFlag = 0;
	intersectNum = 0;
	
	while (homeFlag != 1){
     a38:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <homeFlag>
     a3c:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <homeFlag+0x1>
     a40:	01 97       	sbiw	r24, 0x01	; 1
     a42:	09 f7       	brne	.-62     	; 0xa06 <__stack+0x107>
			driveRoute(routes, 3, &intersectNum);
		}

	}
	
}
     a44:	80 e0       	ldi	r24, 0x00	; 0
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	c0 59       	subi	r28, 0x90	; 144
     a4a:	df 4f       	sbci	r29, 0xFF	; 255
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	de bf       	out	0x3e, r29	; 62
     a52:	0f be       	out	0x3f, r0	; 63
     a54:	cd bf       	out	0x3d, r28	; 61
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	df 90       	pop	r13
     a64:	cf 90       	pop	r12
     a66:	bf 90       	pop	r11
     a68:	af 90       	pop	r10
     a6a:	9f 90       	pop	r9
     a6c:	8f 90       	pop	r8
     a6e:	08 95       	ret

00000a70 <initialize>:
int last_proportional;
int proportional;
int derivative;

void initialize()
{
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
	productCollectedFlag = 0;
     a74:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <productCollectedFlag+0x1>
     a78:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <productCollectedFlag>
	followLineFlag = 0;
     a7c:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <followLineFlag+0x1>
     a80:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <followLineFlag>
	endOfRouteFlag = 0;
     a84:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <endOfRouteFlag+0x1>
     a88:	10 92 f1 01 	sts	0x01F1, r1	; 0x8001f1 <endOfRouteFlag>
	homeFlag = 0;
     a8c:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <homeFlag+0x1>
     a90:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <homeFlag>


	unsigned int counter;
	pololu_3pi_init(2000);								//initialize sensor value from 0 to 2000
     a94:	80 ed       	ldi	r24, 0xD0	; 208
     a96:	97 e0       	ldi	r25, 0x07	; 7
     a98:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <pololu_3pi_init>
	
	while(!button_is_pressed(BUTTON_B))					//this function is activated until button B is pressed.
     a9c:	1b c0       	rjmp	.+54     	; 0xad4 <initialize+0x64>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     a9e:	0e 94 f9 06 	call	0xdf2	; 0xdf2 <read_battery_millivolts_3pi>
     aa2:	ec 01       	movw	r28, r24
	{
		int bat = read_battery_millivolts();
		clear();
     aa4:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
		print_long(bat);								//print battery voltage in millivolts on the LCD
     aa8:	be 01       	movw	r22, r28
     aaa:	dd 0f       	add	r29, r29
     aac:	88 0b       	sbc	r24, r24
     aae:	99 0b       	sbc	r25, r25
     ab0:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
		print("mV");
     ab4:	8d e5       	ldi	r24, 0x5D	; 93
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <print>
		lcd_goto_xy(0,1);
     abc:	61 e0       	ldi	r22, 0x01	; 1
     abe:	80 e0       	ldi	r24, 0x00	; 0
     ac0:	0e 94 a2 0b 	call	0x1744	; 0x1744 <lcd_goto_xy>
		print("druk B");								//print instruction to continue
     ac4:	80 e6       	ldi	r24, 0x60	; 96
     ac6:	91 e0       	ldi	r25, 0x01	; 1
     ac8:	0e 94 2a 0b 	call	0x1654	; 0x1654 <print>
		delay_ms(100);
     acc:	84 e6       	ldi	r24, 0x64	; 100
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>


	unsigned int counter;
	pololu_3pi_init(2000);								//initialize sensor value from 0 to 2000
	
	while(!button_is_pressed(BUTTON_B))					//this function is activated until button B is pressed.
     ad4:	80 e1       	ldi	r24, 0x10	; 16
     ad6:	0e 94 9b 0c 	call	0x1936	; 0x1936 <button_is_pressed>
     ada:	88 23       	and	r24, r24
     adc:	01 f3       	breq	.-64     	; 0xa9e <initialize+0x2e>
		lcd_goto_xy(0,1);
		print("druk B");								//print instruction to continue
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);					//button B is pressed
     ade:	80 e1       	ldi	r24, 0x10	; 16
     ae0:	0e 94 87 0c 	call	0x190e	; 0x190e <wait_for_button_release>
	delay_ms(1000);
     ae4:	88 ee       	ldi	r24, 0xE8	; 232
     ae6:	93 e0       	ldi	r25, 0x03	; 3
     ae8:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
     aec:	cc ee       	ldi	r28, 0xEC	; 236
     aee:	df ef       	ldi	r29, 0xFF	; 255
	
	for(counter=0;counter<80;counter++)					//calibrating line sensors
	{
		if(counter < 20 || counter >= 60)
     af0:	c8 32       	cpi	r28, 0x28	; 40
     af2:	d1 05       	cpc	r29, r1
     af4:	38 f0       	brcs	.+14     	; 0xb04 <initialize+0x94>
		set_motors(40,-40);
     af6:	68 ed       	ldi	r22, 0xD8	; 216
     af8:	7f ef       	ldi	r23, 0xFF	; 255
     afa:	88 e2       	ldi	r24, 0x28	; 40
     afc:	90 e0       	ldi	r25, 0x00	; 0
     afe:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
     b02:	06 c0       	rjmp	.+12     	; 0xb10 <initialize+0xa0>
		else
		set_motors(-40,40);
     b04:	68 e2       	ldi	r22, 0x28	; 40
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	88 ed       	ldi	r24, 0xD8	; 216
     b0a:	9f ef       	ldi	r25, 0xFF	; 255
     b0c:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     b10:	81 e0       	ldi	r24, 0x01	; 1
     b12:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <calibrate_line_sensors>
		delay_ms(20);
     b16:	84 e1       	ldi	r24, 0x14	; 20
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
     b1e:	21 96       	adiw	r28, 0x01	; 1
	}
	
	wait_for_button_release(BUTTON_B);					//button B is pressed
	delay_ms(1000);
	
	for(counter=0;counter<80;counter++)					//calibrating line sensors
     b20:	cc 33       	cpi	r28, 0x3C	; 60
     b22:	d1 05       	cpc	r29, r1
     b24:	29 f7       	brne	.-54     	; 0xaf0 <initialize+0x80>
		set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	
	set_motors(0,0);
     b26:	60 e0       	ldi	r22, 0x00	; 0
     b28:	70 e0       	ldi	r23, 0x00	; 0
     b2a:	80 e0       	ldi	r24, 0x00	; 0
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
	
	while(!button_is_pressed(BUTTON_B))										//function is activated until button B is pressed
     b32:	15 c0       	rjmp	.+42     	; 0xb5e <initialize+0xee>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);			//reading the sensors to determine the position of the robot
     b34:	61 e0       	ldi	r22, 0x01	; 1
     b36:	8f e4       	ldi	r24, 0x4F	; 79
     b38:	92 e0       	ldi	r25, 0x02	; 2
     b3a:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <read_line>
     b3e:	ec 01       	movw	r28, r24
		clear();															//clear LCD
     b40:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>
		print("  ");
     b44:	87 e6       	ldi	r24, 0x67	; 103
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	0e 94 2a 0b 	call	0x1654	; 0x1654 <print>
		print_long(position);												//print position of the robot compared to the line
     b4c:	be 01       	movw	r22, r28
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <print_long>
		delay_ms(100);
     b56:	84 e6       	ldi	r24, 0x64	; 100
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
		delay_ms(20);
	}
	
	set_motors(0,0);
	
	while(!button_is_pressed(BUTTON_B))										//function is activated until button B is pressed
     b5e:	80 e1       	ldi	r24, 0x10	; 16
     b60:	0e 94 9b 0c 	call	0x1936	; 0x1936 <button_is_pressed>
     b64:	88 23       	and	r24, r24
     b66:	31 f3       	breq	.-52     	; 0xb34 <initialize+0xc4>
		print("  ");
		print_long(position);												//print position of the robot compared to the line
		delay_ms(100);
	}
	
	wait_for_button_release(BUTTON_B);										//button B is pressed
     b68:	80 e1       	ldi	r24, 0x10	; 16
     b6a:	0e 94 87 0c 	call	0x190e	; 0x190e <wait_for_button_release>
	clear();																//clear LCD
     b6e:	0e 94 1b 0b 	call	0x1636	; 0x1636 <clear>

}
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	08 95       	ret

00000b78 <checkAfslag>:

int checkAfslag(){
	int flag;
	if(SENSOR_L < 800 && SENSOR_R < 800){
     b78:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <sensors>
     b7c:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <sensors+0x1>
     b80:	80 32       	cpi	r24, 0x20	; 32
     b82:	93 40       	sbci	r25, 0x03	; 3
     b84:	58 f4       	brcc	.+22     	; 0xb9c <checkAfslag+0x24>
		flag = 0;
     b86:	81 e0       	ldi	r24, 0x01	; 1
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	20 91 57 02 	lds	r18, 0x0257	; 0x800257 <sensors+0x8>
     b8e:	30 91 58 02 	lds	r19, 0x0258	; 0x800258 <sensors+0x9>
     b92:	20 32       	cpi	r18, 0x20	; 32
     b94:	33 40       	sbci	r19, 0x03	; 3
     b96:	20 f4       	brcc	.+8      	; 0xba0 <checkAfslag+0x28>
     b98:	80 e0       	ldi	r24, 0x00	; 0
     b9a:	08 95       	ret
	}
	else{
		flag = 1;
     b9c:	81 e0       	ldi	r24, 0x01	; 1
     b9e:	90 e0       	ldi	r25, 0x00	; 0
	}
	return flag;
}
     ba0:	08 95       	ret

00000ba2 <followLine>:

void followLine(){
     ba2:	cf 93       	push	r28
     ba4:	df 93       	push	r29
	// Get the position of the line.  Note that we *must* provide
	// the "sensors" argument to read_line() here, even though we
	// are not interested in the individual sensor readings.
	unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     ba6:	61 e0       	ldi	r22, 0x01	; 1
     ba8:	8f e4       	ldi	r24, 0x4F	; 79
     baa:	92 e0       	ldi	r25, 0x02	; 2
     bac:	0e 94 e2 0d 	call	0x1bc4	; 0x1bc4 <read_line>
	
	// The "proportional" term should be 0 when we are on the line.
	int proportional = ((int)position) - 2000;
     bb0:	80 5d       	subi	r24, 0xD0	; 208
     bb2:	97 40       	sbci	r25, 0x07	; 7
	
	// Compute the derivative (change) and integral (sum) of the
	// position.
	int derivative = proportional - last_proportional;
     bb4:	20 91 5b 02 	lds	r18, 0x025B	; 0x80025b <last_proportional>
     bb8:	30 91 5c 02 	lds	r19, 0x025C	; 0x80025c <last_proportional+0x1>
     bbc:	ac 01       	movw	r20, r24
     bbe:	42 1b       	sub	r20, r18
     bc0:	53 0b       	sbc	r21, r19
     bc2:	9a 01       	movw	r18, r20
	integral += proportional;
     bc4:	e0 91 5f 02 	lds	r30, 0x025F	; 0x80025f <integral>
     bc8:	f0 91 60 02 	lds	r31, 0x0260	; 0x800260 <integral+0x1>
     bcc:	e8 0f       	add	r30, r24
     bce:	f9 1f       	adc	r31, r25
     bd0:	f0 93 60 02 	sts	0x0260, r31	; 0x800260 <integral+0x1>
     bd4:	e0 93 5f 02 	sts	0x025F, r30	; 0x80025f <integral>
	
	// Remember the last position.
	last_proportional = proportional;
     bd8:	90 93 5c 02 	sts	0x025C, r25	; 0x80025c <last_proportional+0x1>
     bdc:	80 93 5b 02 	sts	0x025B, r24	; 0x80025b <last_proportional>
	// Compute the difference between the two motor power settings,
	// m1 - m2.  If this is a positive number the robot will turn
	// to the right.  If it is a negative number, the robot will
	// turn to the left, and the magnitude of the number determines
	// the sharpness of the turn.
	int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     be0:	64 e1       	ldi	r22, 0x14	; 20
     be2:	70 e0       	ldi	r23, 0x00	; 0
     be4:	0e 94 48 13 	call	0x2690	; 0x2690 <__divmodhi4>
     be8:	eb 01       	movw	r28, r22
     bea:	cf 01       	movw	r24, r30
     bec:	60 e1       	ldi	r22, 0x10	; 16
     bee:	77 e2       	ldi	r23, 0x27	; 39
     bf0:	0e 94 48 13 	call	0x2690	; 0x2690 <__divmodhi4>
     bf4:	ce 01       	movw	r24, r28
     bf6:	86 0f       	add	r24, r22
     bf8:	97 1f       	adc	r25, r23
     bfa:	b9 01       	movw	r22, r18
     bfc:	66 0f       	add	r22, r22
     bfe:	77 1f       	adc	r23, r23
     c00:	26 0f       	add	r18, r22
     c02:	37 1f       	adc	r19, r23
     c04:	33 23       	and	r19, r19
     c06:	14 f4       	brge	.+4      	; 0xc0c <followLine+0x6a>
     c08:	2f 5f       	subi	r18, 0xFF	; 255
     c0a:	3f 4f       	sbci	r19, 0xFF	; 255
     c0c:	35 95       	asr	r19
     c0e:	27 95       	ror	r18
     c10:	82 0f       	add	r24, r18
     c12:	93 1f       	adc	r25, r19
     c14:	8d 33       	cpi	r24, 0x3D	; 61
     c16:	91 05       	cpc	r25, r1
     c18:	14 f0       	brlt	.+4      	; 0xc1e <followLine+0x7c>
     c1a:	8c e3       	ldi	r24, 0x3C	; 60
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	84 3c       	cpi	r24, 0xC4	; 196
     c20:	5f ef       	ldi	r21, 0xFF	; 255
     c22:	95 07       	cpc	r25, r21
     c24:	14 f4       	brge	.+4      	; 0xc2a <followLine+0x88>
     c26:	84 ec       	ldi	r24, 0xC4	; 196
     c28:	9f ef       	ldi	r25, 0xFF	; 255
	if(power_difference > max)
	power_difference = max;
	if(power_difference < -max)
	power_difference = -max;
	
	if(power_difference < 0)
     c2a:	99 23       	and	r25, r25
     c2c:	34 f4       	brge	.+12     	; 0xc3a <followLine+0x98>
	set_motors(max+power_difference, max);
     c2e:	6c e3       	ldi	r22, 0x3C	; 60
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	cc 96       	adiw	r24, 0x3c	; 60
     c34:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
     c38:	08 c0       	rjmp	.+16     	; 0xc4a <followLine+0xa8>
	else
	set_motors(max, max-power_difference);
     c3a:	6c e3       	ldi	r22, 0x3C	; 60
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	68 1b       	sub	r22, r24
     c40:	79 0b       	sbc	r23, r25
     c42:	8c e3       	ldi	r24, 0x3C	; 60
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <set_motors>
}
     c4a:	df 91       	pop	r29
     c4c:	cf 91       	pop	r28
     c4e:	08 95       	ret

00000c50 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     c50:	ec e7       	ldi	r30, 0x7C	; 124
     c52:	f0 e0       	ldi	r31, 0x00	; 0
     c54:	80 81       	ld	r24, Z
     c56:	8f 7d       	andi	r24, 0xDF	; 223
     c58:	80 83       	st	Z, r24
     c5a:	08 95       	ret

00000c5c <_ZN15OrangutanAnalog7setModeEh>:
     c5c:	81 11       	cpse	r24, r1
     c5e:	03 c0       	rjmp	.+6      	; 0xc66 <_ZN15OrangutanAnalog7setModeEh+0xa>
     c60:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN15OrangutanAnalog7setModeEh.part.0>
     c64:	08 95       	ret
     c66:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     c6a:	80 62       	ori	r24, 0x20	; 32
     c6c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     c70:	08 95       	ret

00000c72 <_ZN15OrangutanAnalog7getModeEv>:
     c72:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     c76:	85 fb       	bst	r24, 5
     c78:	88 27       	eor	r24, r24
     c7a:	80 f9       	bld	r24, 0
     c7c:	08 95       	ret

00000c7e <_ZN15OrangutanAnalog16conversionResultEv>:
     c7e:	0e 94 39 06 	call	0xc72	; 0xc72 <_ZN15OrangutanAnalog7getModeEv>
     c82:	88 23       	and	r24, r24
     c84:	21 f0       	breq	.+8      	; 0xc8e <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     c86:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	08 95       	ret
     c8e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     c92:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     c96:	08 95       	ret

00000c98 <_ZN15OrangutanAnalog15startConversionEhh>:
     c98:	80 32       	cpi	r24, 0x20	; 32
     c9a:	a0 f4       	brcc	.+40     	; 0xcc4 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     c9c:	97 e8       	ldi	r25, 0x87	; 135
     c9e:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     ca2:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     ca6:	66 23       	and	r22, r22
     ca8:	11 f0       	breq	.+4      	; 0xcae <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     caa:	90 6c       	ori	r25, 0xC0	; 192
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     cae:	9f 77       	andi	r25, 0x7F	; 127
     cb0:	90 64       	ori	r25, 0x40	; 64
     cb2:	90 7e       	andi	r25, 0xE0	; 224
     cb4:	98 2b       	or	r25, r24
     cb6:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     cba:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cbe:	80 64       	ori	r24, 0x40	; 64
     cc0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cc4:	08 95       	ret

00000cc6 <_ZN15OrangutanAnalog11readAverageEhj>:
     cc6:	a0 e0       	ldi	r26, 0x00	; 0
     cc8:	b0 e0       	ldi	r27, 0x00	; 0
     cca:	e9 e6       	ldi	r30, 0x69	; 105
     ccc:	f6 e0       	ldi	r31, 0x06	; 6
     cce:	0c 94 cf 13 	jmp	0x279e	; 0x279e <__prologue_saves__+0x14>
     cd2:	eb 01       	movw	r28, r22
     cd4:	60 e0       	ldi	r22, 0x00	; 0
     cd6:	0e 94 4c 06 	call	0xc98	; 0xc98 <_ZN15OrangutanAnalog15startConversionEhh>
     cda:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cde:	86 fd       	sbrc	r24, 6
     ce0:	fc cf       	rjmp	.-8      	; 0xcda <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     ce2:	8e 01       	movw	r16, r28
     ce4:	c1 2c       	mov	r12, r1
     ce6:	d1 2c       	mov	r13, r1
     ce8:	76 01       	movw	r14, r12
     cea:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cee:	80 64       	ori	r24, 0x40	; 64
     cf0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cf4:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     cf8:	86 fd       	sbrc	r24, 6
     cfa:	fc cf       	rjmp	.-8      	; 0xcf4 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     cfc:	0e 94 3f 06 	call	0xc7e	; 0xc7e <_ZN15OrangutanAnalog16conversionResultEv>
     d00:	c8 0e       	add	r12, r24
     d02:	d9 1e       	adc	r13, r25
     d04:	e1 1c       	adc	r14, r1
     d06:	f1 1c       	adc	r15, r1
     d08:	01 50       	subi	r16, 0x01	; 1
     d0a:	11 09       	sbc	r17, r1
     d0c:	01 15       	cp	r16, r1
     d0e:	11 05       	cpc	r17, r1
     d10:	61 f7       	brne	.-40     	; 0xcea <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     d12:	ce 01       	movw	r24, r28
     d14:	96 95       	lsr	r25
     d16:	87 95       	ror	r24
     d18:	c0 34       	cpi	r28, 0x40	; 64
     d1a:	d1 05       	cpc	r29, r1
     d1c:	38 f4       	brcc	.+14     	; 0xd2c <_ZN15OrangutanAnalog11readAverageEhj+0x66>
     d1e:	8c 0d       	add	r24, r12
     d20:	9d 1d       	adc	r25, r13
     d22:	be 01       	movw	r22, r28
     d24:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
     d28:	cb 01       	movw	r24, r22
     d2a:	0e c0       	rjmp	.+28     	; 0xd48 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     d2c:	a7 01       	movw	r20, r14
     d2e:	96 01       	movw	r18, r12
     d30:	28 0f       	add	r18, r24
     d32:	39 1f       	adc	r19, r25
     d34:	41 1d       	adc	r20, r1
     d36:	51 1d       	adc	r21, r1
     d38:	ca 01       	movw	r24, r20
     d3a:	b9 01       	movw	r22, r18
     d3c:	9e 01       	movw	r18, r28
     d3e:	40 e0       	ldi	r20, 0x00	; 0
     d40:	50 e0       	ldi	r21, 0x00	; 0
     d42:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
     d46:	c9 01       	movw	r24, r18
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	e8 e0       	ldi	r30, 0x08	; 8
     d4e:	0c 94 eb 13 	jmp	0x27d6	; 0x27d6 <__epilogue_restores__+0x14>

00000d52 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     d52:	cf 92       	push	r12
     d54:	df 92       	push	r13
     d56:	ef 92       	push	r14
     d58:	ff 92       	push	r15
     d5a:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
     d5e:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
     d62:	9c 01       	movw	r18, r24
     d64:	0e 94 a3 13 	call	0x2746	; 0x2746 <__umulhisi3>
     d68:	6b 01       	movw	r12, r22
     d6a:	7c 01       	movw	r14, r24
     d6c:	0e 94 39 06 	call	0xc72	; 0xc72 <_ZN15OrangutanAnalog7getModeEv>
     d70:	88 23       	and	r24, r24
     d72:	59 f0       	breq	.+22     	; 0xd8a <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
     d74:	c7 01       	movw	r24, r14
     d76:	b6 01       	movw	r22, r12
     d78:	61 58       	subi	r22, 0x81	; 129
     d7a:	7f 4f       	sbci	r23, 0xFF	; 255
     d7c:	8f 4f       	sbci	r24, 0xFF	; 255
     d7e:	9f 4f       	sbci	r25, 0xFF	; 255
     d80:	2f ef       	ldi	r18, 0xFF	; 255
     d82:	30 e0       	ldi	r19, 0x00	; 0
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	50 e0       	ldi	r21, 0x00	; 0
     d88:	0a c0       	rjmp	.+20     	; 0xd9e <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
     d8a:	c7 01       	movw	r24, r14
     d8c:	b6 01       	movw	r22, r12
     d8e:	61 50       	subi	r22, 0x01	; 1
     d90:	7e 4f       	sbci	r23, 0xFE	; 254
     d92:	8f 4f       	sbci	r24, 0xFF	; 255
     d94:	9f 4f       	sbci	r25, 0xFF	; 255
     d96:	2f ef       	ldi	r18, 0xFF	; 255
     d98:	33 e0       	ldi	r19, 0x03	; 3
     d9a:	40 e0       	ldi	r20, 0x00	; 0
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
     da2:	c9 01       	movw	r24, r18
     da4:	ff 90       	pop	r15
     da6:	ef 90       	pop	r14
     da8:	df 90       	pop	r13
     daa:	cf 90       	pop	r12
     dac:	08 95       	ret

00000dae <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     dae:	0e 94 63 06 	call	0xcc6	; 0xcc6 <_ZN15OrangutanAnalog11readAverageEhj>
     db2:	0e 94 a9 06 	call	0xd52	; 0xd52 <_ZN15OrangutanAnalog12toMillivoltsEj>
     db6:	08 95       	ret

00000db8 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     db8:	1f 93       	push	r17
     dba:	cf 93       	push	r28
     dbc:	df 93       	push	r29
     dbe:	0e 94 39 06 	call	0xc72	; 0xc72 <_ZN15OrangutanAnalog7getModeEv>
     dc2:	18 2f       	mov	r17, r24
     dc4:	0e 94 28 06 	call	0xc50	; 0xc50 <_ZN15OrangutanAnalog7setModeEh.part.0>
     dc8:	6a e0       	ldi	r22, 0x0A	; 10
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	86 e0       	ldi	r24, 0x06	; 6
     dce:	0e 94 d7 06 	call	0xdae	; 0xdae <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     dd2:	ec 01       	movw	r28, r24
     dd4:	81 2f       	mov	r24, r17
     dd6:	0e 94 2e 06 	call	0xc5c	; 0xc5c <_ZN15OrangutanAnalog7setModeEh>
     dda:	ce 01       	movw	r24, r28
     ddc:	88 0f       	add	r24, r24
     dde:	99 1f       	adc	r25, r25
     de0:	8c 0f       	add	r24, r28
     de2:	9d 1f       	adc	r25, r29
     de4:	01 96       	adiw	r24, 0x01	; 1
     de6:	96 95       	lsr	r25
     de8:	87 95       	ror	r24
     dea:	df 91       	pop	r29
     dec:	cf 91       	pop	r28
     dee:	1f 91       	pop	r17
     df0:	08 95       	ret

00000df2 <read_battery_millivolts_3pi>:
     df2:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     df6:	08 95       	ret

00000df8 <_ZL16currentCharacterv>:
     df8:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <_ZL17use_program_space>
     dfc:	e0 91 7a 01 	lds	r30, 0x017A	; 0x80017a <__data_end>
     e00:	f0 91 7b 01 	lds	r31, 0x017B	; 0x80017b <__data_end+0x1>
     e04:	99 23       	and	r25, r25
     e06:	11 f0       	breq	.+4      	; 0xe0c <_ZL16currentCharacterv+0x14>
     e08:	84 91       	lpm	r24, Z
     e0a:	01 c0       	rjmp	.+2      	; 0xe0e <_ZL16currentCharacterv+0x16>
     e0c:	80 81       	ld	r24, Z
     e0e:	2f eb       	ldi	r18, 0xBF	; 191
     e10:	28 0f       	add	r18, r24
     e12:	2a 31       	cpi	r18, 0x1A	; 26
     e14:	10 f4       	brcc	.+4      	; 0xe1a <_ZL16currentCharacterv+0x22>
     e16:	80 5e       	subi	r24, 0xE0	; 224
     e18:	08 95       	ret
     e1a:	80 32       	cpi	r24, 0x20	; 32
     e1c:	49 f4       	brne	.+18     	; 0xe30 <_ZL16currentCharacterv+0x38>
     e1e:	9f 01       	movw	r18, r30
     e20:	2f 5f       	subi	r18, 0xFF	; 255
     e22:	3f 4f       	sbci	r19, 0xFF	; 255
     e24:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
     e28:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
     e2c:	ef 2b       	or	r30, r31
     e2e:	31 f7       	brne	.-52     	; 0xdfc <_ZL16currentCharacterv+0x4>
     e30:	08 95       	ret

00000e32 <_ZL9getNumberv>:
     e32:	1f 93       	push	r17
     e34:	cf 93       	push	r28
     e36:	df 93       	push	r29
     e38:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
     e3c:	c0 e0       	ldi	r28, 0x00	; 0
     e3e:	d0 e0       	ldi	r29, 0x00	; 0
     e40:	1a e0       	ldi	r17, 0x0A	; 10
     e42:	90 ed       	ldi	r25, 0xD0	; 208
     e44:	98 0f       	add	r25, r24
     e46:	9a 30       	cpi	r25, 0x0A	; 10
     e48:	b8 f4       	brcc	.+46     	; 0xe78 <_ZL9getNumberv+0x46>
     e4a:	9e 01       	movw	r18, r28
     e4c:	12 9f       	mul	r17, r18
     e4e:	e0 01       	movw	r28, r0
     e50:	13 9f       	mul	r17, r19
     e52:	d0 0d       	add	r29, r0
     e54:	11 24       	eor	r1, r1
     e56:	c8 0f       	add	r28, r24
     e58:	d1 1d       	adc	r29, r1
     e5a:	87 fd       	sbrc	r24, 7
     e5c:	da 95       	dec	r29
     e5e:	e0 97       	sbiw	r28, 0x30	; 48
     e60:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
     e64:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__data_end+0x1>
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__data_end+0x1>
     e6e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
     e72:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
     e76:	e5 cf       	rjmp	.-54     	; 0xe42 <_ZL9getNumberv+0x10>
     e78:	ce 01       	movw	r24, r28
     e7a:	df 91       	pop	r29
     e7c:	cf 91       	pop	r28
     e7e:	1f 91       	pop	r17
     e80:	08 95       	ret

00000e82 <_ZN15OrangutanBuzzer5init2Ev>:
     e82:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     e86:	83 e2       	ldi	r24, 0x23	; 35
     e88:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     e8c:	81 e1       	ldi	r24, 0x11	; 17
     e8e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     e92:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     e96:	80 e1       	ldi	r24, 0x10	; 16
     e98:	97 e2       	ldi	r25, 0x27	; 39
     e9a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     e9e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     ea2:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     ea6:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     eaa:	22 9a       	sbi	0x04, 2	; 4
     eac:	78 94       	sei
     eae:	08 95       	ret

00000eb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     eb0:	8f 92       	push	r8
     eb2:	9f 92       	push	r9
     eb4:	af 92       	push	r10
     eb6:	bf 92       	push	r11
     eb8:	df 92       	push	r13
     eba:	ef 92       	push	r14
     ebc:	ff 92       	push	r15
     ebe:	0f 93       	push	r16
     ec0:	1f 93       	push	r17
     ec2:	cf 93       	push	r28
     ec4:	df 93       	push	r29
     ec6:	5c 01       	movw	r10, r24
     ec8:	8b 01       	movw	r16, r22
     eca:	d4 2e       	mov	r13, r20
     ecc:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <buzzerInitialized>
     ed0:	81 11       	cpse	r24, r1
     ed2:	05 c0       	rjmp	.+10     	; 0xede <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <buzzerInitialized>
     eda:	0e 94 41 07 	call	0xe82	; 0xe82 <_ZN15OrangutanBuzzer5init2Ev>
     ede:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
     ee2:	b7 fe       	sbrs	r11, 7
     ee4:	05 c0       	rjmp	.+10     	; 0xef0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
     ee6:	e8 94       	clt
     ee8:	b7 f8       	bld	r11, 7
     eea:	2a e0       	ldi	r18, 0x0A	; 10
     eec:	f2 2e       	mov	r15, r18
     eee:	02 c0       	rjmp	.+4      	; 0xef4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
     ef0:	ff 24       	eor	r15, r15
     ef2:	f3 94       	inc	r15
     ef4:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     ef8:	2e 2d       	mov	r18, r14
     efa:	28 7f       	andi	r18, 0xF8	; 248
     efc:	e2 2e       	mov	r14, r18
     efe:	48 ec       	ldi	r20, 0xC8	; 200
     f00:	f4 9e       	mul	r15, r20
     f02:	c0 01       	movw	r24, r0
     f04:	11 24       	eor	r1, r1
     f06:	8a 15       	cp	r24, r10
     f08:	9b 05       	cpc	r25, r11
     f0a:	e0 f4       	brcc	.+56     	; 0xf44 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
     f0c:	e5 01       	movw	r28, r10
     f0e:	51 e1       	ldi	r21, 0x11	; 17
     f10:	a5 16       	cp	r10, r21
     f12:	57 e2       	ldi	r21, 0x27	; 39
     f14:	b5 06       	cpc	r11, r21
     f16:	10 f0       	brcs	.+4      	; 0xf1c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
     f18:	c0 e1       	ldi	r28, 0x10	; 16
     f1a:	d7 e2       	ldi	r29, 0x27	; 39
     f1c:	be 01       	movw	r22, r28
     f1e:	76 95       	lsr	r23
     f20:	67 95       	ror	r22
     f22:	80 e0       	ldi	r24, 0x00	; 0
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	60 58       	subi	r22, 0x80	; 128
     f28:	79 46       	sbci	r23, 0x69	; 105
     f2a:	87 46       	sbci	r24, 0x67	; 103
     f2c:	9f 4f       	sbci	r25, 0xFF	; 255
     f2e:	4e 01       	movw	r8, r28
     f30:	a1 2c       	mov	r10, r1
     f32:	b1 2c       	mov	r11, r1
     f34:	a5 01       	movw	r20, r10
     f36:	94 01       	movw	r18, r8
     f38:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
     f3c:	59 01       	movw	r10, r18
     f3e:	8e 2d       	mov	r24, r14
     f40:	81 60       	ori	r24, 0x01	; 1
     f42:	24 c0       	rjmp	.+72     	; 0xf8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
     f44:	c8 e2       	ldi	r28, 0x28	; 40
     f46:	fc 9e       	mul	r15, r28
     f48:	c0 2d       	mov	r28, r0
     f4a:	11 24       	eor	r1, r1
     f4c:	d0 e0       	ldi	r29, 0x00	; 0
     f4e:	ca 15       	cp	r28, r10
     f50:	db 05       	cpc	r29, r11
     f52:	08 f4       	brcc	.+2      	; 0xf56 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
     f54:	e5 01       	movw	r28, r10
     f56:	be 01       	movw	r22, r28
     f58:	76 95       	lsr	r23
     f5a:	67 95       	ror	r22
     f5c:	9e 01       	movw	r18, r28
     f5e:	40 e0       	ldi	r20, 0x00	; 0
     f60:	50 e0       	ldi	r21, 0x00	; 0
     f62:	8a e0       	ldi	r24, 0x0A	; 10
     f64:	f8 12       	cpse	r15, r24
     f66:	07 c0       	rjmp	.+14     	; 0xf76 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	60 5e       	subi	r22, 0xE0	; 224
     f6e:	73 44       	sbci	r23, 0x43	; 67
     f70:	81 44       	sbci	r24, 0x41	; 65
     f72:	9f 4f       	sbci	r25, 0xFF	; 255
     f74:	06 c0       	rjmp	.+12     	; 0xf82 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
     f76:	80 e0       	ldi	r24, 0x00	; 0
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	60 53       	subi	r22, 0x30	; 48
     f7c:	7d 4e       	sbci	r23, 0xED	; 237
     f7e:	8c 4e       	sbci	r24, 0xEC	; 236
     f80:	9f 4f       	sbci	r25, 0xFF	; 255
     f82:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
     f86:	59 01       	movw	r10, r18
     f88:	8e 2d       	mov	r24, r14
     f8a:	82 60       	ori	r24, 0x02	; 2
     f8c:	88 2e       	mov	r8, r24
     f8e:	2a e0       	ldi	r18, 0x0A	; 10
     f90:	f2 12       	cpse	r15, r18
     f92:	07 c0       	rjmp	.+14     	; 0xfa2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
     f94:	ce 01       	movw	r24, r28
     f96:	05 96       	adiw	r24, 0x05	; 5
     f98:	6a e0       	ldi	r22, 0x0A	; 10
     f9a:	70 e0       	ldi	r23, 0x00	; 0
     f9c:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
     fa0:	eb 01       	movw	r28, r22
     fa2:	c8 3e       	cpi	r28, 0xE8	; 232
     fa4:	43 e0       	ldi	r20, 0x03	; 3
     fa6:	d4 07       	cpc	r29, r20
     fa8:	59 f0       	breq	.+22     	; 0xfc0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     faa:	98 01       	movw	r18, r16
     fac:	de 01       	movw	r26, r28
     fae:	0e 94 a3 13 	call	0x2746	; 0x2746 <__umulhisi3>
     fb2:	28 ee       	ldi	r18, 0xE8	; 232
     fb4:	33 e0       	ldi	r19, 0x03	; 3
     fb6:	40 e0       	ldi	r20, 0x00	; 0
     fb8:	50 e0       	ldi	r21, 0x00	; 0
     fba:	0e 94 7e 13 	call	0x26fc	; 0x26fc <__divmodsi4>
     fbe:	89 01       	movw	r16, r18
     fc0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     fc4:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     fc8:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     fcc:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     fd0:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     fd4:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     fd8:	4d 2d       	mov	r20, r13
     fda:	40 31       	cpi	r20, 0x10	; 16
     fdc:	08 f0       	brcs	.+2      	; 0xfe0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     fde:	4f e0       	ldi	r20, 0x0F	; 15
     fe0:	80 e1       	ldi	r24, 0x10	; 16
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	84 1b       	sub	r24, r20
     fe6:	91 09       	sbc	r25, r1
     fe8:	a9 01       	movw	r20, r18
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     fec:	56 95       	lsr	r21
     fee:	47 95       	ror	r20
     ff0:	8a 95       	dec	r24
     ff2:	e2 f7       	brpl	.-8      	; 0xfec <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     ff4:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     ff8:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     ffc:	10 93 82 01 	sts	0x0182, r17	; 0x800182 <_ZL13buzzerTimeout+0x1>
    1000:	00 93 81 01 	sts	0x0181, r16	; 0x800181 <_ZL13buzzerTimeout>
    1004:	86 b3       	in	r24, 0x16	; 22
    1006:	8f ef       	ldi	r24, 0xFF	; 255
    1008:	86 bb       	out	0x16, r24	; 22
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	ff 90       	pop	r15
    101a:	ef 90       	pop	r14
    101c:	df 90       	pop	r13
    101e:	bf 90       	pop	r11
    1020:	af 90       	pop	r10
    1022:	9f 90       	pop	r9
    1024:	8f 90       	pop	r8
    1026:	08 95       	ret

00001028 <_ZN15OrangutanBuzzer8playNoteEhjh>:
    1028:	cf 93       	push	r28
    102a:	df 93       	push	r29
    102c:	eb 01       	movw	r28, r22
    102e:	8f 3f       	cpi	r24, 0xFF	; 255
    1030:	11 f0       	breq	.+4      	; 0x1036 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1032:	41 11       	cpse	r20, r1
    1034:	05 c0       	rjmp	.+10     	; 0x1040 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1036:	40 e0       	ldi	r20, 0x00	; 0
    1038:	be 01       	movw	r22, r28
    103a:	88 ee       	ldi	r24, 0xE8	; 232
    103c:	93 e0       	ldi	r25, 0x03	; 3
    103e:	43 c0       	rjmp	.+134    	; 0x10c6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    1040:	81 31       	cpi	r24, 0x11	; 17
    1042:	30 f0       	brcs	.+12     	; 0x1050 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1044:	50 ef       	ldi	r21, 0xF0	; 240
    1046:	58 0f       	add	r21, r24
    1048:	50 36       	cpi	r21, 0x60	; 96
    104a:	18 f0       	brcs	.+6      	; 0x1052 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    104c:	5f e5       	ldi	r21, 0x5F	; 95
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1050:	50 e0       	ldi	r21, 0x00	; 0
    1052:	85 2f       	mov	r24, r21
    1054:	6c e0       	ldi	r22, 0x0C	; 12
    1056:	0e 94 28 13 	call	0x2650	; 0x2650 <__udivmodqi4>
    105a:	68 2f       	mov	r22, r24
    105c:	74 ef       	ldi	r23, 0xF4	; 244
    105e:	76 03       	mulsu	r23, r22
    1060:	90 01       	movw	r18, r0
    1062:	11 24       	eor	r1, r1
    1064:	25 0f       	add	r18, r21
    1066:	31 1d       	adc	r19, r1
    1068:	2c 30       	cpi	r18, 0x0C	; 12
    106a:	31 05       	cpc	r19, r1
    106c:	40 f4       	brcc	.+16     	; 0x107e <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    106e:	f9 01       	movw	r30, r18
    1070:	ee 0f       	add	r30, r30
    1072:	ff 1f       	adc	r31, r31
    1074:	e8 5c       	subi	r30, 0xC8	; 200
    1076:	fe 4f       	sbci	r31, 0xFE	; 254
    1078:	20 81       	ld	r18, Z
    107a:	31 81       	ldd	r19, Z+1	; 0x01
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    107e:	20 e0       	ldi	r18, 0x00	; 0
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	87 30       	cpi	r24, 0x07	; 7
    1084:	81 f0       	breq	.+32     	; 0x10a6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    1086:	08 2e       	mov	r0, r24
    1088:	02 c0       	rjmp	.+4      	; 0x108e <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    108a:	22 0f       	add	r18, r18
    108c:	33 1f       	adc	r19, r19
    108e:	0a 94       	dec	r0
    1090:	e2 f7       	brpl	.-8      	; 0x108a <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1092:	82 30       	cpi	r24, 0x02	; 2
    1094:	28 f0       	brcs	.+10     	; 0x10a0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    1096:	c9 01       	movw	r24, r18
    1098:	05 96       	adiw	r24, 0x05	; 5
    109a:	6a e0       	ldi	r22, 0x0A	; 10
    109c:	70 e0       	ldi	r23, 0x00	; 0
    109e:	0c c0       	rjmp	.+24     	; 0x10b8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    10a0:	c9 01       	movw	r24, r18
    10a2:	90 58       	subi	r25, 0x80	; 128
    10a4:	0c c0       	rjmp	.+24     	; 0x10be <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    10a6:	c9 01       	movw	r24, r18
    10a8:	36 e0       	ldi	r19, 0x06	; 6
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	3a 95       	dec	r19
    10b0:	e1 f7       	brne	.-8      	; 0x10aa <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    10b2:	02 96       	adiw	r24, 0x02	; 2
    10b4:	65 e0       	ldi	r22, 0x05	; 5
    10b6:	70 e0       	ldi	r23, 0x00	; 0
    10b8:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    10bc:	cb 01       	movw	r24, r22
    10be:	40 31       	cpi	r20, 0x10	; 16
    10c0:	08 f0       	brcs	.+2      	; 0x10c4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    10c2:	4f e0       	ldi	r20, 0x0F	; 15
    10c4:	be 01       	movw	r22, r28
    10c6:	0e 94 58 07 	call	0xeb0	; 0xeb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    10ca:	df 91       	pop	r29
    10cc:	cf 91       	pop	r28
    10ce:	08 95       	ret

000010d0 <_ZL8nextNotev>:
    10d0:	a2 e0       	ldi	r26, 0x02	; 2
    10d2:	b0 e0       	ldi	r27, 0x00	; 0
    10d4:	ee e6       	ldi	r30, 0x6E	; 110
    10d6:	f8 e0       	ldi	r31, 0x08	; 8
    10d8:	0c 94 c7 13 	jmp	0x278e	; 0x278e <__prologue_saves__+0x4>
    10dc:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    10e0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZL8staccato>
    10e4:	88 23       	and	r24, r24
    10e6:	21 f0       	breq	.+8      	; 0x10f0 <_ZL8nextNotev+0x20>
    10e8:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <_ZL22staccato_rest_duration>
    10ec:	61 11       	cpse	r22, r1
    10ee:	17 c0       	rjmp	.+46     	; 0x111e <_ZL8nextNotev+0x4e>
    10f0:	77 24       	eor	r7, r7
    10f2:	73 94       	inc	r7
    10f4:	b0 ec       	ldi	r27, 0xC0	; 192
    10f6:	ab 2e       	mov	r10, r27
    10f8:	bd e5       	ldi	r27, 0x5D	; 93
    10fa:	bb 2e       	mov	r11, r27
    10fc:	1a e0       	ldi	r17, 0x0A	; 10
    10fe:	61 2e       	mov	r6, r17
    1100:	04 e0       	ldi	r16, 0x04	; 4
    1102:	80 2e       	mov	r8, r16
    1104:	80 ed       	ldi	r24, 0xD0	; 208
    1106:	c8 2e       	mov	r12, r24
    1108:	87 e0       	ldi	r24, 0x07	; 7
    110a:	d8 2e       	mov	r13, r24
    110c:	94 e0       	ldi	r25, 0x04	; 4
    110e:	e9 2e       	mov	r14, r25
    1110:	f1 2c       	mov	r15, r1
    1112:	04 ef       	ldi	r16, 0xF4	; 244
    1114:	11 e0       	ldi	r17, 0x01	; 1
    1116:	2f e0       	ldi	r18, 0x0F	; 15
    1118:	42 2e       	mov	r4, r18
    111a:	51 2c       	mov	r5, r1
    111c:	15 c0       	rjmp	.+42     	; 0x1148 <_ZL8nextNotev+0x78>
    111e:	70 e0       	ldi	r23, 0x00	; 0
    1120:	40 e0       	ldi	r20, 0x00	; 0
    1122:	88 ee       	ldi	r24, 0xE8	; 232
    1124:	93 e0       	ldi	r25, 0x03	; 3
    1126:	0e 94 58 07 	call	0xeb0	; 0xeb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    112a:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <_ZL22staccato_rest_duration>
    112e:	17 c1       	rjmp	.+558    	; 0x135e <_ZL8nextNotev+0x28e>
    1130:	86 36       	cpi	r24, 0x66	; 102
    1132:	d4 f5       	brge	.+116    	; 0x11a8 <_ZL8nextNotev+0xd8>
    1134:	81 36       	cpi	r24, 0x61	; 97
    1136:	09 f4       	brne	.+2      	; 0x113a <_ZL8nextNotev+0x6a>
    1138:	a9 c0       	rjmp	.+338    	; 0x128c <_ZL8nextNotev+0x1bc>
    113a:	7c f5       	brge	.+94     	; 0x119a <_ZL8nextNotev+0xca>
    113c:	8c 33       	cpi	r24, 0x3C	; 60
    113e:	09 f4       	brne	.+2      	; 0x1142 <_ZL8nextNotev+0x72>
    1140:	60 c0       	rjmp	.+192    	; 0x1202 <_ZL8nextNotev+0x132>
    1142:	8e 33       	cpi	r24, 0x3E	; 62
    1144:	81 f4       	brne	.+32     	; 0x1166 <_ZL8nextNotev+0x96>
    1146:	93 94       	inc	r9
    1148:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
    114c:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
    1150:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
    1154:	2f 5f       	subi	r18, 0xFF	; 255
    1156:	3f 4f       	sbci	r19, 0xFF	; 255
    1158:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
    115c:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
    1160:	85 36       	cpi	r24, 0x65	; 101
    1162:	31 f7       	brne	.-52     	; 0x1130 <_ZL8nextNotev+0x60>
    1164:	52 c0       	rjmp	.+164    	; 0x120a <_ZL8nextNotev+0x13a>
    1166:	81 32       	cpi	r24, 0x21	; 33
    1168:	09 f0       	breq	.+2      	; 0x116c <_ZL8nextNotev+0x9c>
    116a:	8b c0       	rjmp	.+278    	; 0x1282 <_ZL8nextNotev+0x1b2>
    116c:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    1170:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    1174:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    1178:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    117c:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    1180:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    1184:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    1188:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    118c:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    1190:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <_ZL8staccato>
    1194:	a4 e0       	ldi	r26, 0x04	; 4
    1196:	9a 2e       	mov	r9, r26
    1198:	d7 cf       	rjmp	.-82     	; 0x1148 <_ZL8nextNotev+0x78>
    119a:	83 36       	cpi	r24, 0x63	; 99
    119c:	a1 f1       	breq	.+104    	; 0x1206 <_ZL8nextNotev+0x136>
    119e:	0c f4       	brge	.+2      	; 0x11a2 <_ZL8nextNotev+0xd2>
    11a0:	78 c0       	rjmp	.+240    	; 0x1292 <_ZL8nextNotev+0x1c2>
    11a2:	10 e0       	ldi	r17, 0x00	; 0
    11a4:	82 e0       	ldi	r24, 0x02	; 2
    11a6:	77 c0       	rjmp	.+238    	; 0x1296 <_ZL8nextNotev+0x1c6>
    11a8:	8d 36       	cpi	r24, 0x6D	; 109
    11aa:	c1 f1       	breq	.+112    	; 0x121c <_ZL8nextNotev+0x14c>
    11ac:	94 f4       	brge	.+36     	; 0x11d2 <_ZL8nextNotev+0x102>
    11ae:	87 36       	cpi	r24, 0x67	; 103
    11b0:	91 f1       	breq	.+100    	; 0x1216 <_ZL8nextNotev+0x146>
    11b2:	74 f1       	brlt	.+92     	; 0x1210 <_ZL8nextNotev+0x140>
    11b4:	8c 36       	cpi	r24, 0x6C	; 108
    11b6:	09 f0       	breq	.+2      	; 0x11ba <_ZL8nextNotev+0xea>
    11b8:	64 c0       	rjmp	.+200    	; 0x1282 <_ZL8nextNotev+0x1b2>
    11ba:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZL9getNumberv>
    11be:	bc 01       	movw	r22, r24
    11c0:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    11c4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    11c8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    11cc:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    11d0:	51 c0       	rjmp	.+162    	; 0x1274 <_ZL8nextNotev+0x1a4>
    11d2:	82 37       	cpi	r24, 0x72	; 114
    11d4:	c9 f1       	breq	.+114    	; 0x1248 <_ZL8nextNotev+0x178>
    11d6:	4c f4       	brge	.+18     	; 0x11ea <_ZL8nextNotev+0x11a>
    11d8:	8f 36       	cpi	r24, 0x6F	; 111
    11da:	09 f0       	breq	.+2      	; 0x11de <_ZL8nextNotev+0x10e>
    11dc:	52 c0       	rjmp	.+164    	; 0x1282 <_ZL8nextNotev+0x1b2>
    11de:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZL9getNumberv>
    11e2:	98 2e       	mov	r9, r24
    11e4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    11e8:	af cf       	rjmp	.-162    	; 0x1148 <_ZL8nextNotev+0x78>
    11ea:	84 37       	cpi	r24, 0x74	; 116
    11ec:	81 f1       	breq	.+96     	; 0x124e <_ZL8nextNotev+0x17e>
    11ee:	86 37       	cpi	r24, 0x76	; 118
    11f0:	09 f0       	breq	.+2      	; 0x11f4 <_ZL8nextNotev+0x124>
    11f2:	47 c0       	rjmp	.+142    	; 0x1282 <_ZL8nextNotev+0x1b2>
    11f4:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZL9getNumberv>
    11f8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    11fc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    1200:	a3 cf       	rjmp	.-186    	; 0x1148 <_ZL8nextNotev+0x78>
    1202:	9a 94       	dec	r9
    1204:	a1 cf       	rjmp	.-190    	; 0x1148 <_ZL8nextNotev+0x78>
    1206:	10 e0       	ldi	r17, 0x00	; 0
    1208:	20 c0       	rjmp	.+64     	; 0x124a <_ZL8nextNotev+0x17a>
    120a:	10 e0       	ldi	r17, 0x00	; 0
    120c:	84 e0       	ldi	r24, 0x04	; 4
    120e:	43 c0       	rjmp	.+134    	; 0x1296 <_ZL8nextNotev+0x1c6>
    1210:	10 e0       	ldi	r17, 0x00	; 0
    1212:	85 e0       	ldi	r24, 0x05	; 5
    1214:	40 c0       	rjmp	.+128    	; 0x1296 <_ZL8nextNotev+0x1c6>
    1216:	10 e0       	ldi	r17, 0x00	; 0
    1218:	87 e0       	ldi	r24, 0x07	; 7
    121a:	3d c0       	rjmp	.+122    	; 0x1296 <_ZL8nextNotev+0x1c6>
    121c:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
    1220:	8c 36       	cpi	r24, 0x6C	; 108
    1222:	19 f4       	brne	.+6      	; 0x122a <_ZL8nextNotev+0x15a>
    1224:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <_ZL8staccato>
    1228:	04 c0       	rjmp	.+8      	; 0x1232 <_ZL8nextNotev+0x162>
    122a:	70 92 7e 01 	sts	0x017E, r7	; 0x80017e <_ZL8staccato>
    122e:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <_ZL22staccato_rest_duration>
    1232:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
    1236:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
    123a:	2f 5f       	subi	r18, 0xFF	; 255
    123c:	3f 4f       	sbci	r19, 0xFF	; 255
    123e:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
    1242:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
    1246:	80 cf       	rjmp	.-256    	; 0x1148 <_ZL8nextNotev+0x78>
    1248:	11 e0       	ldi	r17, 0x01	; 1
    124a:	80 e0       	ldi	r24, 0x00	; 0
    124c:	24 c0       	rjmp	.+72     	; 0x1296 <_ZL8nextNotev+0x1c6>
    124e:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZL9getNumberv>
    1252:	bc 01       	movw	r22, r24
    1254:	c5 01       	movw	r24, r10
    1256:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    125a:	66 9e       	mul	r6, r22
    125c:	c0 01       	movw	r24, r0
    125e:	67 9e       	mul	r6, r23
    1260:	90 0d       	add	r25, r0
    1262:	11 24       	eor	r1, r1
    1264:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    1268:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    126c:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    1270:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    1274:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    1278:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    127c:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    1280:	63 cf       	rjmp	.-314    	; 0x1148 <_ZL8nextNotev+0x78>
    1282:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__data_end+0x1>
    1286:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__data_end>
    128a:	69 c0       	rjmp	.+210    	; 0x135e <_ZL8nextNotev+0x28e>
    128c:	10 e0       	ldi	r17, 0x00	; 0
    128e:	89 e0       	ldi	r24, 0x09	; 9
    1290:	02 c0       	rjmp	.+4      	; 0x1296 <_ZL8nextNotev+0x1c6>
    1292:	10 e0       	ldi	r17, 0x00	; 0
    1294:	8b e0       	ldi	r24, 0x0B	; 11
    1296:	08 2f       	mov	r16, r24
    1298:	9c e0       	ldi	r25, 0x0C	; 12
    129a:	99 9e       	mul	r9, r25
    129c:	00 0d       	add	r16, r0
    129e:	11 24       	eor	r1, r1
    12a0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
    12a4:	98 2f       	mov	r25, r24
    12a6:	97 7f       	andi	r25, 0xF7	; 247
    12a8:	93 32       	cpi	r25, 0x23	; 35
    12aa:	61 f4       	brne	.+24     	; 0x12c4 <_ZL8nextNotev+0x1f4>
    12ac:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
    12b0:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
    12b4:	2f 5f       	subi	r18, 0xFF	; 255
    12b6:	3f 4f       	sbci	r19, 0xFF	; 255
    12b8:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
    12bc:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
    12c0:	0f 5f       	subi	r16, 0xFF	; 255
    12c2:	ee cf       	rjmp	.-36     	; 0x12a0 <_ZL8nextNotev+0x1d0>
    12c4:	8d 32       	cpi	r24, 0x2D	; 45
    12c6:	71 f4       	brne	.+28     	; 0x12e4 <_ZL8nextNotev+0x214>
    12c8:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
    12cc:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
    12d0:	2f 5f       	subi	r18, 0xFF	; 255
    12d2:	3f 4f       	sbci	r19, 0xFF	; 255
    12d4:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
    12d8:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
    12dc:	01 50       	subi	r16, 0x01	; 1
    12de:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
    12e2:	f0 cf       	rjmp	.-32     	; 0x12c4 <_ZL8nextNotev+0x1f4>
    12e4:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    12e8:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    12ec:	81 53       	subi	r24, 0x31	; 49
    12ee:	88 30       	cpi	r24, 0x08	; 8
    12f0:	50 f4       	brcc	.+20     	; 0x1306 <_ZL8nextNotev+0x236>
    12f2:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    12f6:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    12fa:	0e 94 19 07 	call	0xe32	; 0xe32 <_ZL9getNumberv>
    12fe:	bc 01       	movw	r22, r24
    1300:	c7 01       	movw	r24, r14
    1302:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    1306:	7b 01       	movw	r14, r22
    1308:	f6 94       	lsr	r15
    130a:	e7 94       	ror	r14
    130c:	69 83       	std	Y+1, r22	; 0x01
    130e:	7a 83       	std	Y+2, r23	; 0x02
    1310:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZL16currentCharacterv>
    1314:	69 81       	ldd	r22, Y+1	; 0x01
    1316:	7a 81       	ldd	r23, Y+2	; 0x02
    1318:	8e 32       	cpi	r24, 0x2E	; 46
    131a:	69 f4       	brne	.+26     	; 0x1336 <_ZL8nextNotev+0x266>
    131c:	20 91 7a 01 	lds	r18, 0x017A	; 0x80017a <__data_end>
    1320:	30 91 7b 01 	lds	r19, 0x017B	; 0x80017b <__data_end+0x1>
    1324:	2f 5f       	subi	r18, 0xFF	; 255
    1326:	3f 4f       	sbci	r19, 0xFF	; 255
    1328:	30 93 7b 01 	sts	0x017B, r19	; 0x80017b <__data_end+0x1>
    132c:	20 93 7a 01 	sts	0x017A, r18	; 0x80017a <__data_end>
    1330:	6e 0d       	add	r22, r14
    1332:	7f 1d       	adc	r23, r15
    1334:	e9 cf       	rjmp	.-46     	; 0x1308 <_ZL8nextNotev+0x238>
    1336:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <_ZL8staccato>
    133a:	88 23       	and	r24, r24
    133c:	39 f0       	breq	.+14     	; 0x134c <_ZL8nextNotev+0x27c>
    133e:	9b 01       	movw	r18, r22
    1340:	36 95       	lsr	r19
    1342:	27 95       	ror	r18
    1344:	20 93 7d 01 	sts	0x017D, r18	; 0x80017d <_ZL22staccato_rest_duration>
    1348:	62 1b       	sub	r22, r18
    134a:	71 09       	sbc	r23, r1
    134c:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    1350:	11 23       	and	r17, r17
    1352:	11 f0       	breq	.+4      	; 0x1358 <_ZL8nextNotev+0x288>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	01 c0       	rjmp	.+2      	; 0x135a <_ZL8nextNotev+0x28a>
    1358:	80 2f       	mov	r24, r16
    135a:	0e 94 14 08 	call	0x1028	; 0x1028 <_ZN15OrangutanBuzzer8playNoteEhjh>
    135e:	22 96       	adiw	r28, 0x02	; 2
    1360:	e0 e1       	ldi	r30, 0x10	; 16
    1362:	0c 94 e3 13 	jmp	0x27c6	; 0x27c6 <__epilogue_restores__+0x4>

00001366 <__vector_13>:
    1366:	1f 92       	push	r1
    1368:	0f 92       	push	r0
    136a:	0f b6       	in	r0, 0x3f	; 63
    136c:	0f 92       	push	r0
    136e:	11 24       	eor	r1, r1
    1370:	2f 93       	push	r18
    1372:	3f 93       	push	r19
    1374:	4f 93       	push	r20
    1376:	5f 93       	push	r21
    1378:	6f 93       	push	r22
    137a:	7f 93       	push	r23
    137c:	8f 93       	push	r24
    137e:	9f 93       	push	r25
    1380:	af 93       	push	r26
    1382:	bf 93       	push	r27
    1384:	ef 93       	push	r30
    1386:	ff 93       	push	r31
    1388:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <_ZL13buzzerTimeout>
    138c:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <_ZL13buzzerTimeout+0x1>
    1390:	9c 01       	movw	r18, r24
    1392:	21 50       	subi	r18, 0x01	; 1
    1394:	31 09       	sbc	r19, r1
    1396:	30 93 82 01 	sts	0x0182, r19	; 0x800182 <_ZL13buzzerTimeout+0x1>
    139a:	20 93 81 01 	sts	0x0181, r18	; 0x800181 <_ZL13buzzerTimeout>
    139e:	89 2b       	or	r24, r25
    13a0:	11 f5       	brne	.+68     	; 0x13e6 <__vector_13+0x80>
    13a2:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    13a6:	78 94       	sei
    13a8:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    13ac:	88 7f       	andi	r24, 0xF8	; 248
    13ae:	81 60       	ori	r24, 0x01	; 1
    13b0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    13b4:	80 e1       	ldi	r24, 0x10	; 16
    13b6:	97 e2       	ldi	r25, 0x27	; 39
    13b8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    13bc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    13c0:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    13c4:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    13ce:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
    13d2:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__data_end+0x1>
    13d6:	89 2b       	or	r24, r25
    13d8:	31 f0       	breq	.+12     	; 0x13e6 <__vector_13+0x80>
    13da:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <_ZL17play_mode_setting>
    13de:	81 11       	cpse	r24, r1
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <__vector_13+0x80>
    13e2:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZL8nextNotev>
    13e6:	ff 91       	pop	r31
    13e8:	ef 91       	pop	r30
    13ea:	bf 91       	pop	r27
    13ec:	af 91       	pop	r26
    13ee:	9f 91       	pop	r25
    13f0:	8f 91       	pop	r24
    13f2:	7f 91       	pop	r23
    13f4:	6f 91       	pop	r22
    13f6:	5f 91       	pop	r21
    13f8:	4f 91       	pop	r20
    13fa:	3f 91       	pop	r19
    13fc:	2f 91       	pop	r18
    13fe:	0f 90       	pop	r0
    1400:	0f be       	out	0x3f, r0	; 63
    1402:	0f 90       	pop	r0
    1404:	1f 90       	pop	r1
    1406:	18 95       	reti

00001408 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    1408:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    140c:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__data_end+0x1>
    1410:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
    1414:	81 e0       	ldi	r24, 0x01	; 1
    1416:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <_ZL17use_program_space>
    141a:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <_ZL22staccato_rest_duration>
    141e:	0e 94 68 08 	call	0x10d0	; 0x10d0 <_ZL8nextNotev>
    1422:	08 95       	ret

00001424 <play_from_program_space>:
    1424:	0e 94 04 0a 	call	0x1408	; 0x1408 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    1428:	08 95       	ret

0000142a <delay_us.constprop.0>:
    142a:	81 e0       	ldi	r24, 0x01	; 1
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	6f 93       	push	r22
    1430:	64 e0       	ldi	r22, 0x04	; 4
    1432:	6a 95       	dec	r22
    1434:	f1 f7       	brne	.-4      	; 0x1432 <delay_us.constprop.0+0x8>
    1436:	6f 91       	pop	r22
    1438:	01 97       	sbiw	r24, 0x01	; 1
    143a:	c9 f7       	brne	.-14     	; 0x142e <delay_us.constprop.0+0x4>
    143c:	08 95       	ret

0000143e <_ZN12OrangutanLCD8busyWaitEv>:
    143e:	0f 93       	push	r16
    1440:	1f 93       	push	r17
    1442:	cf 93       	push	r28
    1444:	df 93       	push	r29
    1446:	1a b1       	in	r17, 0x0a	; 10
    1448:	57 98       	cbi	0x0a, 7	; 10
    144a:	5a 98       	cbi	0x0b, 2	; 11
    144c:	28 9a       	sbi	0x05, 0	; 5
    144e:	c0 e0       	ldi	r28, 0x00	; 0
    1450:	d0 e0       	ldi	r29, 0x00	; 0
    1452:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    1456:	5c 9a       	sbi	0x0b, 4	; 11
    1458:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    145c:	09 b1       	in	r16, 0x09	; 9
    145e:	5c 98       	cbi	0x0b, 4	; 11
    1460:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    1464:	5c 9a       	sbi	0x0b, 4	; 11
    1466:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    146a:	5c 98       	cbi	0x0b, 4	; 11
    146c:	24 96       	adiw	r28, 0x04	; 4
    146e:	07 ff       	sbrs	r16, 7
    1470:	10 c0       	rjmp	.+32     	; 0x1492 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    1472:	ae 01       	movw	r20, r28
    1474:	60 e0       	ldi	r22, 0x00	; 0
    1476:	70 e0       	ldi	r23, 0x00	; 0
    1478:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <lcdTimeout>
    147c:	90 91 84 01 	lds	r25, 0x0184	; 0x800184 <lcdTimeout+0x1>
    1480:	a0 91 85 01 	lds	r26, 0x0185	; 0x800185 <lcdTimeout+0x2>
    1484:	b0 91 86 01 	lds	r27, 0x0186	; 0x800186 <lcdTimeout+0x3>
    1488:	48 17       	cp	r20, r24
    148a:	59 07       	cpc	r21, r25
    148c:	6a 07       	cpc	r22, r26
    148e:	7b 07       	cpc	r23, r27
    1490:	00 f3       	brcs	.-64     	; 0x1452 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    1492:	1a b9       	out	0x0a, r17	; 10
    1494:	df 91       	pop	r29
    1496:	cf 91       	pop	r28
    1498:	1f 91       	pop	r17
    149a:	0f 91       	pop	r16
    149c:	08 95       	ret

0000149e <_ZN12OrangutanLCD8sendDataEh>:
    149e:	95 b1       	in	r25, 0x05	; 5
    14a0:	28 2f       	mov	r18, r24
    14a2:	21 70       	andi	r18, 0x01	; 1
    14a4:	30 e0       	ldi	r19, 0x00	; 0
    14a6:	22 0f       	add	r18, r18
    14a8:	33 1f       	adc	r19, r19
    14aa:	48 2f       	mov	r20, r24
    14ac:	46 70       	andi	r20, 0x06	; 6
    14ae:	68 e0       	ldi	r22, 0x08	; 8
    14b0:	46 9f       	mul	r20, r22
    14b2:	a0 01       	movw	r20, r0
    14b4:	11 24       	eor	r1, r1
    14b6:	24 2b       	or	r18, r20
    14b8:	9d 7c       	andi	r25, 0xCD	; 205
    14ba:	29 2b       	or	r18, r25
    14bc:	25 b9       	out	0x05, r18	; 5
    14be:	9b b1       	in	r25, 0x0b	; 11
    14c0:	88 70       	andi	r24, 0x08	; 8
    14c2:	82 95       	swap	r24
    14c4:	80 7f       	andi	r24, 0xF0	; 240
    14c6:	9f 77       	andi	r25, 0x7F	; 127
    14c8:	89 2b       	or	r24, r25
    14ca:	8b b9       	out	0x0b, r24	; 11
    14cc:	5c 9a       	sbi	0x0b, 4	; 11
    14ce:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    14d2:	5c 98       	cbi	0x0b, 4	; 11
    14d4:	0e 94 15 0a 	call	0x142a	; 0x142a <delay_us.constprop.0>
    14d8:	08 95       	ret

000014da <_ZN12OrangutanLCD4sendEhhh>:
    14da:	a0 e0       	ldi	r26, 0x00	; 0
    14dc:	b0 e0       	ldi	r27, 0x00	; 0
    14de:	e3 e7       	ldi	r30, 0x73	; 115
    14e0:	fa e0       	ldi	r31, 0x0A	; 10
    14e2:	0c 94 d0 13 	jmp	0x27a0	; 0x27a0 <__prologue_saves__+0x16>
    14e6:	c8 2f       	mov	r28, r24
    14e8:	d6 2e       	mov	r13, r22
    14ea:	e4 2e       	mov	r14, r20
    14ec:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <_ZZN12OrangutanLCD4initEvE11initialized>
    14f0:	81 11       	cpse	r24, r1
    14f2:	05 c0       	rjmp	.+10     	; 0x14fe <_ZN12OrangutanLCD4sendEhhh+0x24>
    14f4:	81 e0       	ldi	r24, 0x01	; 1
    14f6:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <_ZZN12OrangutanLCD4initEvE11initialized>
    14fa:	0e 94 b3 0a 	call	0x1566	; 0x1566 <_ZN12OrangutanLCD5init2Ev>
    14fe:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN12OrangutanLCD8busyWaitEv>
    1502:	14 b1       	in	r17, 0x04	; 4
    1504:	d5 b1       	in	r29, 0x05	; 5
    1506:	fa b0       	in	r15, 0x0a	; 10
    1508:	0b b1       	in	r16, 0x0b	; 11
    150a:	28 98       	cbi	0x05, 0	; 5
    150c:	dd 20       	and	r13, r13
    150e:	11 f0       	breq	.+4      	; 0x1514 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    1510:	5a 9a       	sbi	0x0b, 2	; 11
    1512:	01 c0       	rjmp	.+2      	; 0x1516 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    1514:	5a 98       	cbi	0x0b, 2	; 11
    1516:	94 b1       	in	r25, 0x04	; 4
    1518:	92 63       	ori	r25, 0x32	; 50
    151a:	94 b9       	out	0x04, r25	; 4
    151c:	57 9a       	sbi	0x0a, 7	; 10
    151e:	81 e0       	ldi	r24, 0x01	; 1
    1520:	e8 16       	cp	r14, r24
    1522:	29 f0       	breq	.+10     	; 0x152e <_ZN12OrangutanLCD4sendEhhh+0x54>
    1524:	8c 2f       	mov	r24, r28
    1526:	82 95       	swap	r24
    1528:	8f 70       	andi	r24, 0x0F	; 15
    152a:	0e 94 4f 0a 	call	0x149e	; 0x149e <_ZN12OrangutanLCD8sendDataEh>
    152e:	8c 2f       	mov	r24, r28
    1530:	8f 70       	andi	r24, 0x0F	; 15
    1532:	0e 94 4f 0a 	call	0x149e	; 0x149e <_ZN12OrangutanLCD8sendDataEh>
    1536:	fa b8       	out	0x0a, r15	; 10
    1538:	0b b9       	out	0x0b, r16	; 11
    153a:	14 b9       	out	0x04, r17	; 4
    153c:	d5 b9       	out	0x05, r29	; 5
    153e:	cd b7       	in	r28, 0x3d	; 61
    1540:	de b7       	in	r29, 0x3e	; 62
    1542:	e7 e0       	ldi	r30, 0x07	; 7
    1544:	0c 94 ec 13 	jmp	0x27d8	; 0x27d8 <__epilogue_restores__+0x16>

00001548 <_ZN12OrangutanLCD8send_cmdEh>:
    1548:	42 e0       	ldi	r20, 0x02	; 2
    154a:	60 e0       	ldi	r22, 0x00	; 0
    154c:	0e 94 6d 0a 	call	0x14da	; 0x14da <_ZN12OrangutanLCD4sendEhhh>
    1550:	08 95       	ret

00001552 <_ZN12OrangutanLCD9send_dataEh>:
    1552:	42 e0       	ldi	r20, 0x02	; 2
    1554:	61 e0       	ldi	r22, 0x01	; 1
    1556:	0e 94 6d 0a 	call	0x14da	; 0x14da <_ZN12OrangutanLCD4sendEhhh>
    155a:	08 95       	ret

0000155c <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    155c:	41 e0       	ldi	r20, 0x01	; 1
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	0e 94 6d 0a 	call	0x14da	; 0x14da <_ZN12OrangutanLCD4sendEhhh>
    1564:	08 95       	ret

00001566 <_ZN12OrangutanLCD5init2Ev>:
    1566:	80 e1       	ldi	r24, 0x10	; 16
    1568:	97 e2       	ldi	r25, 0x27	; 39
    156a:	a0 e0       	ldi	r26, 0x00	; 0
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <lcdTimeout>
    1572:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <lcdTimeout+0x1>
    1576:	a0 93 85 01 	sts	0x0185, r26	; 0x800185 <lcdTimeout+0x2>
    157a:	b0 93 86 01 	sts	0x0186, r27	; 0x800186 <lcdTimeout+0x3>
    157e:	52 9a       	sbi	0x0a, 2	; 10
    1580:	20 9a       	sbi	0x04, 0	; 4
    1582:	54 9a       	sbi	0x0a, 4	; 10
    1584:	8e e1       	ldi	r24, 0x1E	; 30
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    158c:	83 e0       	ldi	r24, 0x03	; 3
    158e:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1592:	86 e0       	ldi	r24, 0x06	; 6
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    159a:	83 e0       	ldi	r24, 0x03	; 3
    159c:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    15a0:	82 e0       	ldi	r24, 0x02	; 2
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    15a8:	83 e0       	ldi	r24, 0x03	; 3
    15aa:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    15ae:	82 e0       	ldi	r24, 0x02	; 2
    15b0:	90 e0       	ldi	r25, 0x00	; 0
    15b2:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    15b6:	82 e0       	ldi	r24, 0x02	; 2
    15b8:	0e 94 ae 0a 	call	0x155c	; 0x155c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    15bc:	82 e0       	ldi	r24, 0x02	; 2
    15be:	90 e0       	ldi	r25, 0x00	; 0
    15c0:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    15c4:	88 e2       	ldi	r24, 0x28	; 40
    15c6:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15ca:	88 e0       	ldi	r24, 0x08	; 8
    15cc:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15d6:	86 e0       	ldi	r24, 0x06	; 6
    15d8:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15dc:	8c e0       	ldi	r24, 0x0C	; 12
    15de:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15e2:	08 95       	ret

000015e4 <_ZN12OrangutanLCD5clearEv>:
    15e4:	81 e0       	ldi	r24, 0x01	; 1
    15e6:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    15ea:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <printf_chars>
    15ee:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <printf_chars+0x1>
    15f2:	89 2b       	or	r24, r25
    15f4:	f9 f0       	breq	.+62     	; 0x1634 <_ZN12OrangutanLCD5clearEv+0x50>
    15f6:	60 e0       	ldi	r22, 0x00	; 0
    15f8:	a0 e2       	ldi	r26, 0x20	; 32
    15fa:	26 2f       	mov	r18, r22
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    1602:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    1606:	90 e0       	ldi	r25, 0x00	; 0
    1608:	01 97       	sbiw	r24, 0x01	; 1
    160a:	78 9f       	mul	r23, r24
    160c:	a0 01       	movw	r20, r0
    160e:	79 9f       	mul	r23, r25
    1610:	50 0d       	add	r21, r0
    1612:	11 24       	eor	r1, r1
    1614:	24 17       	cp	r18, r20
    1616:	35 07       	cpc	r19, r21
    1618:	4c f4       	brge	.+18     	; 0x162c <_ZN12OrangutanLCD5clearEv+0x48>
    161a:	e0 91 89 01 	lds	r30, 0x0189	; 0x800189 <printf_chars>
    161e:	f0 91 8a 01 	lds	r31, 0x018A	; 0x80018a <printf_chars+0x1>
    1622:	e2 0f       	add	r30, r18
    1624:	f3 1f       	adc	r31, r19
    1626:	a0 83       	st	Z, r26
    1628:	6f 5f       	subi	r22, 0xFF	; 255
    162a:	e7 cf       	rjmp	.-50     	; 0x15fa <_ZN12OrangutanLCD5clearEv+0x16>
    162c:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <col>
    1630:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <row>
    1634:	08 95       	ret

00001636 <clear>:
    1636:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <_ZN12OrangutanLCD5clearEv>
    163a:	08 95       	ret

0000163c <_ZN12OrangutanLCD5printEPKc>:
    163c:	cf 93       	push	r28
    163e:	df 93       	push	r29
    1640:	ec 01       	movw	r28, r24
    1642:	89 91       	ld	r24, Y+
    1644:	88 23       	and	r24, r24
    1646:	19 f0       	breq	.+6      	; 0x164e <_ZN12OrangutanLCD5printEPKc+0x12>
    1648:	0e 94 a9 0a 	call	0x1552	; 0x1552 <_ZN12OrangutanLCD9send_dataEh>
    164c:	fa cf       	rjmp	.-12     	; 0x1642 <_ZN12OrangutanLCD5printEPKc+0x6>
    164e:	df 91       	pop	r29
    1650:	cf 91       	pop	r28
    1652:	08 95       	ret

00001654 <print>:
    1654:	0e 94 1e 0b 	call	0x163c	; 0x163c <_ZN12OrangutanLCD5printEPKc>
    1658:	08 95       	ret

0000165a <_ZN12OrangutanLCD5printEm>:
    165a:	aa e0       	ldi	r26, 0x0A	; 10
    165c:	b0 e0       	ldi	r27, 0x00	; 0
    165e:	e3 e3       	ldi	r30, 0x33	; 51
    1660:	fb e0       	ldi	r31, 0x0B	; 11
    1662:	0c 94 cf 13 	jmp	0x279e	; 0x279e <__prologue_saves__+0x14>
    1666:	1a e0       	ldi	r17, 0x0A	; 10
    1668:	5a e0       	ldi	r21, 0x0A	; 10
    166a:	c5 2e       	mov	r12, r21
    166c:	d1 2c       	mov	r13, r1
    166e:	e1 2c       	mov	r14, r1
    1670:	f1 2c       	mov	r15, r1
    1672:	06 2f       	mov	r16, r22
    1674:	a7 01       	movw	r20, r14
    1676:	96 01       	movw	r18, r12
    1678:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
    167c:	ca 01       	movw	r24, r20
    167e:	b9 01       	movw	r22, r18
    1680:	11 50       	subi	r17, 0x01	; 1
    1682:	e1 e0       	ldi	r30, 0x01	; 1
    1684:	f0 e0       	ldi	r31, 0x00	; 0
    1686:	ec 0f       	add	r30, r28
    1688:	fd 1f       	adc	r31, r29
    168a:	e1 0f       	add	r30, r17
    168c:	f1 1d       	adc	r31, r1
    168e:	00 5d       	subi	r16, 0xD0	; 208
    1690:	2a e0       	ldi	r18, 0x0A	; 10
    1692:	62 9f       	mul	r22, r18
    1694:	00 19       	sub	r16, r0
    1696:	11 24       	eor	r1, r1
    1698:	00 83       	st	Z, r16
    169a:	61 15       	cp	r22, r1
    169c:	71 05       	cpc	r23, r1
    169e:	81 05       	cpc	r24, r1
    16a0:	91 05       	cpc	r25, r1
    16a2:	39 f7       	brne	.-50     	; 0x1672 <_ZN12OrangutanLCD5printEm+0x18>
    16a4:	1a 30       	cpi	r17, 0x0A	; 10
    16a6:	58 f4       	brcc	.+22     	; 0x16be <_ZN12OrangutanLCD5printEm+0x64>
    16a8:	e1 e0       	ldi	r30, 0x01	; 1
    16aa:	f0 e0       	ldi	r31, 0x00	; 0
    16ac:	ec 0f       	add	r30, r28
    16ae:	fd 1f       	adc	r31, r29
    16b0:	e1 0f       	add	r30, r17
    16b2:	f1 1d       	adc	r31, r1
    16b4:	80 81       	ld	r24, Z
    16b6:	0e 94 a9 0a 	call	0x1552	; 0x1552 <_ZN12OrangutanLCD9send_dataEh>
    16ba:	1f 5f       	subi	r17, 0xFF	; 255
    16bc:	f3 cf       	rjmp	.-26     	; 0x16a4 <_ZN12OrangutanLCD5printEm+0x4a>
    16be:	2a 96       	adiw	r28, 0x0a	; 10
    16c0:	e8 e0       	ldi	r30, 0x08	; 8
    16c2:	0c 94 eb 13 	jmp	0x27d6	; 0x27d6 <__epilogue_restores__+0x14>

000016c6 <_ZN12OrangutanLCD5printEl>:
    16c6:	cf 92       	push	r12
    16c8:	df 92       	push	r13
    16ca:	ef 92       	push	r14
    16cc:	ff 92       	push	r15
    16ce:	6b 01       	movw	r12, r22
    16d0:	7c 01       	movw	r14, r24
    16d2:	97 ff       	sbrs	r25, 7
    16d4:	0b c0       	rjmp	.+22     	; 0x16ec <_ZN12OrangutanLCD5printEl+0x26>
    16d6:	f0 94       	com	r15
    16d8:	e0 94       	com	r14
    16da:	d0 94       	com	r13
    16dc:	c0 94       	com	r12
    16de:	c1 1c       	adc	r12, r1
    16e0:	d1 1c       	adc	r13, r1
    16e2:	e1 1c       	adc	r14, r1
    16e4:	f1 1c       	adc	r15, r1
    16e6:	8d e2       	ldi	r24, 0x2D	; 45
    16e8:	0e 94 a9 0a 	call	0x1552	; 0x1552 <_ZN12OrangutanLCD9send_dataEh>
    16ec:	c7 01       	movw	r24, r14
    16ee:	b6 01       	movw	r22, r12
    16f0:	0e 94 2d 0b 	call	0x165a	; 0x165a <_ZN12OrangutanLCD5printEm>
    16f4:	ff 90       	pop	r15
    16f6:	ef 90       	pop	r14
    16f8:	df 90       	pop	r13
    16fa:	cf 90       	pop	r12
    16fc:	08 95       	ret

000016fe <print_long>:
    16fe:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <_ZN12OrangutanLCD5printEl>
    1702:	08 95       	ret

00001704 <_ZN12OrangutanLCD6gotoXYEhh>:
    1704:	a5 e0       	ldi	r26, 0x05	; 5
    1706:	b0 e0       	ldi	r27, 0x00	; 0
    1708:	e8 e8       	ldi	r30, 0x88	; 136
    170a:	fb e0       	ldi	r31, 0x0B	; 11
    170c:	0c 94 d4 13 	jmp	0x27a8	; 0x27a8 <__prologue_saves__+0x1e>
    1710:	18 2f       	mov	r17, r24
    1712:	80 e8       	ldi	r24, 0x80	; 128
    1714:	89 83       	std	Y+1, r24	; 0x01
    1716:	80 ec       	ldi	r24, 0xC0	; 192
    1718:	8a 83       	std	Y+2, r24	; 0x02
    171a:	84 e9       	ldi	r24, 0x94	; 148
    171c:	8b 83       	std	Y+3, r24	; 0x03
    171e:	84 ed       	ldi	r24, 0xD4	; 212
    1720:	8c 83       	std	Y+4, r24	; 0x04
    1722:	fe 01       	movw	r30, r28
    1724:	e6 0f       	add	r30, r22
    1726:	f1 1d       	adc	r31, r1
    1728:	81 81       	ldd	r24, Z+1	; 0x01
    172a:	81 0f       	add	r24, r17
    172c:	6d 83       	std	Y+5, r22	; 0x05
    172e:	0e 94 a4 0a 	call	0x1548	; 0x1548 <_ZN12OrangutanLCD8send_cmdEh>
    1732:	10 93 87 01 	sts	0x0187, r17	; 0x800187 <col>
    1736:	6d 81       	ldd	r22, Y+5	; 0x05
    1738:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <row>
    173c:	25 96       	adiw	r28, 0x05	; 5
    173e:	e3 e0       	ldi	r30, 0x03	; 3
    1740:	0c 94 f0 13 	jmp	0x27e0	; 0x27e0 <__epilogue_restores__+0x1e>

00001744 <lcd_goto_xy>:
    1744:	0e 94 82 0b 	call	0x1704	; 0x1704 <_ZN12OrangutanLCD6gotoXYEhh>
    1748:	08 95       	ret

0000174a <_ZN16OrangutanDigital9setOutputEhh>:
    174a:	88 30       	cpi	r24, 0x08	; 8
    174c:	58 f4       	brcc	.+22     	; 0x1764 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    174e:	91 e0       	ldi	r25, 0x01	; 1
    1750:	01 c0       	rjmp	.+2      	; 0x1754 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1752:	99 0f       	add	r25, r25
    1754:	8a 95       	dec	r24
    1756:	ea f7       	brpl	.-6      	; 0x1752 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    1758:	89 2f       	mov	r24, r25
    175a:	aa e2       	ldi	r26, 0x2A	; 42
    175c:	b0 e0       	ldi	r27, 0x00	; 0
    175e:	eb e2       	ldi	r30, 0x2B	; 43
    1760:	f0 e0       	ldi	r31, 0x00	; 0
    1762:	21 c0       	rjmp	.+66     	; 0x17a6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1764:	8e 30       	cpi	r24, 0x0E	; 14
    1766:	60 f4       	brcc	.+24     	; 0x1780 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    1768:	98 ef       	ldi	r25, 0xF8	; 248
    176a:	98 0f       	add	r25, r24
    176c:	81 e0       	ldi	r24, 0x01	; 1
    176e:	01 c0       	rjmp	.+2      	; 0x1772 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1770:	88 0f       	add	r24, r24
    1772:	9a 95       	dec	r25
    1774:	ea f7       	brpl	.-6      	; 0x1770 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    1776:	a4 e2       	ldi	r26, 0x24	; 36
    1778:	b0 e0       	ldi	r27, 0x00	; 0
    177a:	e5 e2       	ldi	r30, 0x25	; 37
    177c:	f0 e0       	ldi	r31, 0x00	; 0
    177e:	13 c0       	rjmp	.+38     	; 0x17a6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1780:	85 31       	cpi	r24, 0x15	; 21
    1782:	60 f4       	brcc	.+24     	; 0x179c <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1784:	92 ef       	ldi	r25, 0xF2	; 242
    1786:	98 0f       	add	r25, r24
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	01 c0       	rjmp	.+2      	; 0x178e <_ZN16OrangutanDigital9setOutputEhh+0x44>
    178c:	88 0f       	add	r24, r24
    178e:	9a 95       	dec	r25
    1790:	ea f7       	brpl	.-6      	; 0x178c <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1792:	a7 e2       	ldi	r26, 0x27	; 39
    1794:	b0 e0       	ldi	r27, 0x00	; 0
    1796:	e8 e2       	ldi	r30, 0x28	; 40
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    179c:	80 e0       	ldi	r24, 0x00	; 0
    179e:	a0 e0       	ldi	r26, 0x00	; 0
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	e0 e0       	ldi	r30, 0x00	; 0
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	6f 3f       	cpi	r22, 0xFF	; 255
    17a8:	19 f4       	brne	.+6      	; 0x17b0 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    17aa:	90 81       	ld	r25, Z
    17ac:	98 27       	eor	r25, r24
    17ae:	09 c0       	rjmp	.+18     	; 0x17c2 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    17b0:	66 23       	and	r22, r22
    17b2:	19 f0       	breq	.+6      	; 0x17ba <_ZN16OrangutanDigital9setOutputEhh+0x70>
    17b4:	90 81       	ld	r25, Z
    17b6:	98 2b       	or	r25, r24
    17b8:	04 c0       	rjmp	.+8      	; 0x17c2 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    17ba:	20 81       	ld	r18, Z
    17bc:	98 2f       	mov	r25, r24
    17be:	90 95       	com	r25
    17c0:	92 23       	and	r25, r18
    17c2:	90 83       	st	Z, r25
    17c4:	9c 91       	ld	r25, X
    17c6:	98 2b       	or	r25, r24
    17c8:	9c 93       	st	X, r25
    17ca:	08 95       	ret

000017cc <_ZN15OrangutanMotors5init2Ev>:
    17cc:	83 ef       	ldi	r24, 0xF3	; 243
    17ce:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    17d2:	84 bd       	out	0x24, r24	; 36
    17d4:	82 e0       	ldi	r24, 0x02	; 2
    17d6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    17da:	85 bd       	out	0x25, r24	; 37
    17dc:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    17e0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    17e4:	18 bc       	out	0x28, r1	; 40
    17e6:	17 bc       	out	0x27, r1	; 39
    17e8:	60 e0       	ldi	r22, 0x00	; 0
    17ea:	86 e0       	ldi	r24, 0x06	; 6
    17ec:	0e 94 a5 0b 	call	0x174a	; 0x174a <_ZN16OrangutanDigital9setOutputEhh>
    17f0:	60 e0       	ldi	r22, 0x00	; 0
    17f2:	85 e0       	ldi	r24, 0x05	; 5
    17f4:	0e 94 a5 0b 	call	0x174a	; 0x174a <_ZN16OrangutanDigital9setOutputEhh>
    17f8:	60 e0       	ldi	r22, 0x00	; 0
    17fa:	8b e0       	ldi	r24, 0x0B	; 11
    17fc:	0e 94 a5 0b 	call	0x174a	; 0x174a <_ZN16OrangutanDigital9setOutputEhh>
    1800:	60 e0       	ldi	r22, 0x00	; 0
    1802:	83 e0       	ldi	r24, 0x03	; 3
    1804:	0e 94 a5 0b 	call	0x174a	; 0x174a <_ZN16OrangutanDigital9setOutputEhh>
    1808:	08 95       	ret

0000180a <_ZN15OrangutanMotors4initEv>:
    180a:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <_ZZN15OrangutanMotors4initEvE11initialized>
    180e:	81 11       	cpse	r24, r1
    1810:	05 c0       	rjmp	.+10     	; 0x181c <_ZN15OrangutanMotors4initEv+0x12>
    1812:	81 e0       	ldi	r24, 0x01	; 1
    1814:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <_ZZN15OrangutanMotors4initEvE11initialized>
    1818:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <_ZN15OrangutanMotors5init2Ev>
    181c:	08 95       	ret

0000181e <_ZN15OrangutanMotors10setM1SpeedEi>:
    181e:	cf 93       	push	r28
    1820:	df 93       	push	r29
    1822:	ec 01       	movw	r28, r24
    1824:	0e 94 05 0c 	call	0x180a	; 0x180a <_ZN15OrangutanMotors4initEv>
    1828:	d7 ff       	sbrs	r29, 7
    182a:	05 c0       	rjmp	.+10     	; 0x1836 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    182c:	d1 95       	neg	r29
    182e:	c1 95       	neg	r28
    1830:	d1 09       	sbc	r29, r1
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	01 c0       	rjmp	.+2      	; 0x1838 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	cf 3f       	cpi	r28, 0xFF	; 255
    183a:	d1 05       	cpc	r29, r1
    183c:	19 f0       	breq	.+6      	; 0x1844 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    183e:	14 f0       	brlt	.+4      	; 0x1844 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1840:	cf ef       	ldi	r28, 0xFF	; 255
    1842:	d0 e0       	ldi	r29, 0x00	; 0
    1844:	88 23       	and	r24, r24
    1846:	19 f0       	breq	.+6      	; 0x184e <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    1848:	18 bc       	out	0x28, r1	; 40
    184a:	c7 bd       	out	0x27, r28	; 39
    184c:	02 c0       	rjmp	.+4      	; 0x1852 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    184e:	c8 bd       	out	0x28, r28	; 40
    1850:	17 bc       	out	0x27, r1	; 39
    1852:	df 91       	pop	r29
    1854:	cf 91       	pop	r28
    1856:	08 95       	ret

00001858 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1858:	cf 93       	push	r28
    185a:	df 93       	push	r29
    185c:	ec 01       	movw	r28, r24
    185e:	0e 94 05 0c 	call	0x180a	; 0x180a <_ZN15OrangutanMotors4initEv>
    1862:	d7 ff       	sbrs	r29, 7
    1864:	05 c0       	rjmp	.+10     	; 0x1870 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1866:	d1 95       	neg	r29
    1868:	c1 95       	neg	r28
    186a:	d1 09       	sbc	r29, r1
    186c:	81 e0       	ldi	r24, 0x01	; 1
    186e:	01 c0       	rjmp	.+2      	; 0x1872 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	cf 3f       	cpi	r28, 0xFF	; 255
    1874:	d1 05       	cpc	r29, r1
    1876:	19 f0       	breq	.+6      	; 0x187e <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1878:	14 f0       	brlt	.+4      	; 0x187e <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    187a:	cf ef       	ldi	r28, 0xFF	; 255
    187c:	d0 e0       	ldi	r29, 0x00	; 0
    187e:	88 23       	and	r24, r24
    1880:	29 f0       	breq	.+10     	; 0x188c <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1882:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1886:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    188a:	04 c0       	rjmp	.+8      	; 0x1894 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    188c:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1890:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1894:	df 91       	pop	r29
    1896:	cf 91       	pop	r28
    1898:	08 95       	ret

0000189a <_ZN15OrangutanMotors9setSpeedsEii>:
    189a:	cf 93       	push	r28
    189c:	df 93       	push	r29
    189e:	eb 01       	movw	r28, r22
    18a0:	0e 94 0f 0c 	call	0x181e	; 0x181e <_ZN15OrangutanMotors10setM1SpeedEi>
    18a4:	ce 01       	movw	r24, r28
    18a6:	0e 94 2c 0c 	call	0x1858	; 0x1858 <_ZN15OrangutanMotors10setM2SpeedEi>
    18aa:	df 91       	pop	r29
    18ac:	cf 91       	pop	r28
    18ae:	08 95       	ret

000018b0 <set_motors>:
    18b0:	0e 94 4d 0c 	call	0x189a	; 0x189a <_ZN15OrangutanMotors9setSpeedsEii>
    18b4:	08 95       	ret

000018b6 <_ZN20OrangutanPushbuttons5init2Ev>:
    18b6:	84 b1       	in	r24, 0x04	; 4
    18b8:	8d 7c       	andi	r24, 0xCD	; 205
    18ba:	84 b9       	out	0x04, r24	; 4
    18bc:	85 b1       	in	r24, 0x05	; 5
    18be:	82 63       	ori	r24, 0x32	; 50
    18c0:	85 b9       	out	0x05, r24	; 5
    18c2:	85 e0       	ldi	r24, 0x05	; 5
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	6f 93       	push	r22
    18c8:	64 e0       	ldi	r22, 0x04	; 4
    18ca:	6a 95       	dec	r22
    18cc:	f1 f7       	brne	.-4      	; 0x18ca <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    18ce:	6f 91       	pop	r22
    18d0:	01 97       	sbiw	r24, 0x01	; 1
    18d2:	c9 f7       	brne	.-14     	; 0x18c6 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    18d4:	08 95       	ret

000018d6 <_ZN20OrangutanPushbuttons4initEv>:
    18d6:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    18da:	81 11       	cpse	r24, r1
    18dc:	05 c0       	rjmp	.+10     	; 0x18e8 <_ZN20OrangutanPushbuttons4initEv+0x12>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    18e4:	0e 94 5b 0c 	call	0x18b6	; 0x18b6 <_ZN20OrangutanPushbuttons5init2Ev>
    18e8:	08 95       	ret

000018ea <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    18ea:	cf 93       	push	r28
    18ec:	c8 2f       	mov	r28, r24
    18ee:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <_ZN20OrangutanPushbuttons4initEv>
    18f2:	83 b1       	in	r24, 0x03	; 3
    18f4:	8c 23       	and	r24, r28
    18f6:	e9 f3       	breq	.-6      	; 0x18f2 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    18f8:	8a e0       	ldi	r24, 0x0A	; 10
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <delay_ms>
    1900:	83 b1       	in	r24, 0x03	; 3
    1902:	8c 23       	and	r24, r28
    1904:	b1 f3       	breq	.-20     	; 0x18f2 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1906:	83 b1       	in	r24, 0x03	; 3
    1908:	8c 23       	and	r24, r28
    190a:	cf 91       	pop	r28
    190c:	08 95       	ret

0000190e <wait_for_button_release>:
    190e:	0e 94 75 0c 	call	0x18ea	; 0x18ea <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1912:	08 95       	ret

00001914 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1914:	a1 e0       	ldi	r26, 0x01	; 1
    1916:	b0 e0       	ldi	r27, 0x00	; 0
    1918:	e0 e9       	ldi	r30, 0x90	; 144
    191a:	fc e0       	ldi	r31, 0x0C	; 12
    191c:	0c 94 d5 13 	jmp	0x27aa	; 0x27aa <__prologue_saves__+0x20>
    1920:	89 83       	std	Y+1, r24	; 0x01
    1922:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <_ZN20OrangutanPushbuttons4initEv>
    1926:	93 b1       	in	r25, 0x03	; 3
    1928:	90 95       	com	r25
    192a:	89 81       	ldd	r24, Y+1	; 0x01
    192c:	89 23       	and	r24, r25
    192e:	21 96       	adiw	r28, 0x01	; 1
    1930:	e2 e0       	ldi	r30, 0x02	; 2
    1932:	0c 94 f1 13 	jmp	0x27e2	; 0x27e2 <__epilogue_restores__+0x20>

00001936 <button_is_pressed>:
    1936:	0e 94 8a 0c 	call	0x1914	; 0x1914 <_ZN20OrangutanPushbuttons9isPressedEh>
    193a:	08 95       	ret

0000193c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    193c:	28 2f       	mov	r18, r24
    193e:	30 e0       	ldi	r19, 0x00	; 0
    1940:	9a e0       	ldi	r25, 0x0A	; 10
    1942:	89 9f       	mul	r24, r25
    1944:	f0 01       	movw	r30, r0
    1946:	11 24       	eor	r1, r1
    1948:	e5 57       	subi	r30, 0x75	; 117
    194a:	fe 4f       	sbci	r31, 0xFE	; 254
    194c:	80 85       	ldd	r24, Z+8	; 0x08
    194e:	91 85       	ldd	r25, Z+9	; 0x09
    1950:	00 97       	sbiw	r24, 0x00	; 0
    1952:	21 f0       	breq	.+8      	; 0x195c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    1954:	52 81       	ldd	r21, Z+2	; 0x02
    1956:	44 81       	ldd	r20, Z+4	; 0x04
    1958:	54 17       	cp	r21, r20
    195a:	80 f0       	brcs	.+32     	; 0x197c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    195c:	8a e0       	ldi	r24, 0x0A	; 10
    195e:	82 9f       	mul	r24, r18
    1960:	f0 01       	movw	r30, r0
    1962:	83 9f       	mul	r24, r19
    1964:	f0 0d       	add	r31, r0
    1966:	11 24       	eor	r1, r1
    1968:	e5 57       	subi	r30, 0x75	; 117
    196a:	fe 4f       	sbci	r31, 0xFE	; 254
    196c:	92 81       	ldd	r25, Z+2	; 0x02
    196e:	84 81       	ldd	r24, Z+4	; 0x04
    1970:	98 13       	cpse	r25, r24
    1972:	0e c0       	rjmp	.+28     	; 0x1990 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    1974:	85 81       	ldd	r24, Z+5	; 0x05
    1976:	81 11       	cpse	r24, r1
    1978:	0a c0       	rjmp	.+20     	; 0x198e <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    197a:	08 95       	ret
    197c:	42 81       	ldd	r20, Z+2	; 0x02
    197e:	dc 01       	movw	r26, r24
    1980:	a4 0f       	add	r26, r20
    1982:	b1 1d       	adc	r27, r1
    1984:	6c 93       	st	X, r22
    1986:	82 81       	ldd	r24, Z+2	; 0x02
    1988:	8f 5f       	subi	r24, 0xFF	; 255
    198a:	82 83       	std	Z+2, r24	; 0x02
    198c:	e7 cf       	rjmp	.-50     	; 0x195c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    198e:	12 82       	std	Z+2, r1	; 0x02
    1990:	08 95       	ret

00001992 <__vector_18>:
    1992:	1f 92       	push	r1
    1994:	0f 92       	push	r0
    1996:	0f b6       	in	r0, 0x3f	; 63
    1998:	0f 92       	push	r0
    199a:	11 24       	eor	r1, r1
    199c:	2f 93       	push	r18
    199e:	3f 93       	push	r19
    19a0:	4f 93       	push	r20
    19a2:	5f 93       	push	r21
    19a4:	6f 93       	push	r22
    19a6:	7f 93       	push	r23
    19a8:	8f 93       	push	r24
    19aa:	9f 93       	push	r25
    19ac:	af 93       	push	r26
    19ae:	bf 93       	push	r27
    19b0:	ef 93       	push	r30
    19b2:	ff 93       	push	r31
    19b4:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    19b8:	80 e0       	ldi	r24, 0x00	; 0
    19ba:	0e 94 9e 0c 	call	0x193c	; 0x193c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    19be:	ff 91       	pop	r31
    19c0:	ef 91       	pop	r30
    19c2:	bf 91       	pop	r27
    19c4:	af 91       	pop	r26
    19c6:	9f 91       	pop	r25
    19c8:	8f 91       	pop	r24
    19ca:	7f 91       	pop	r23
    19cc:	6f 91       	pop	r22
    19ce:	5f 91       	pop	r21
    19d0:	4f 91       	pop	r20
    19d2:	3f 91       	pop	r19
    19d4:	2f 91       	pop	r18
    19d6:	0f 90       	pop	r0
    19d8:	0f be       	out	0x3f, r0	; 63
    19da:	0f 90       	pop	r0
    19dc:	1f 90       	pop	r1
    19de:	18 95       	reti

000019e0 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    19e0:	9a e0       	ldi	r25, 0x0A	; 10
    19e2:	89 9f       	mul	r24, r25
    19e4:	f0 01       	movw	r30, r0
    19e6:	11 24       	eor	r1, r1
    19e8:	e5 57       	subi	r30, 0x75	; 117
    19ea:	fe 4f       	sbci	r31, 0xFE	; 254
    19ec:	86 81       	ldd	r24, Z+6	; 0x06
    19ee:	97 81       	ldd	r25, Z+7	; 0x07
    19f0:	89 2b       	or	r24, r25
    19f2:	59 f0       	breq	.+22     	; 0x1a0a <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    19f4:	91 81       	ldd	r25, Z+1	; 0x01
    19f6:	83 81       	ldd	r24, Z+3	; 0x03
    19f8:	98 17       	cp	r25, r24
    19fa:	38 f4       	brcc	.+14     	; 0x1a0a <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    19fc:	80 81       	ld	r24, Z
    19fe:	81 11       	cpse	r24, r1
    1a00:	04 c0       	rjmp	.+8      	; 0x1a0a <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1a02:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1a06:	80 62       	ori	r24, 0x20	; 32
    1a08:	03 c0       	rjmp	.+6      	; 0x1a10 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    1a0a:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1a0e:	8f 7d       	andi	r24, 0xDF	; 223
    1a10:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    1a14:	08 95       	ret

00001a16 <_ZN15OrangutanSerial11uart_tx_isrEh>:
    1a16:	9a e0       	ldi	r25, 0x0A	; 10
    1a18:	89 9f       	mul	r24, r25
    1a1a:	f0 01       	movw	r30, r0
    1a1c:	11 24       	eor	r1, r1
    1a1e:	e5 57       	subi	r30, 0x75	; 117
    1a20:	fe 4f       	sbci	r31, 0xFE	; 254
    1a22:	26 81       	ldd	r18, Z+6	; 0x06
    1a24:	37 81       	ldd	r19, Z+7	; 0x07
    1a26:	21 15       	cp	r18, r1
    1a28:	31 05       	cpc	r19, r1
    1a2a:	41 f0       	breq	.+16     	; 0x1a3c <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1a2c:	41 81       	ldd	r20, Z+1	; 0x01
    1a2e:	93 81       	ldd	r25, Z+3	; 0x03
    1a30:	49 17       	cp	r20, r25
    1a32:	20 f4       	brcc	.+8      	; 0x1a3c <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1a34:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
    1a38:	95 fd       	sbrc	r25, 5
    1a3a:	03 c0       	rjmp	.+6      	; 0x1a42 <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    1a3c:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1a40:	08 95       	ret
    1a42:	91 81       	ldd	r25, Z+1	; 0x01
    1a44:	d9 01       	movw	r26, r18
    1a46:	a9 0f       	add	r26, r25
    1a48:	b1 1d       	adc	r27, r1
    1a4a:	9c 91       	ld	r25, X
    1a4c:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    1a50:	91 81       	ldd	r25, Z+1	; 0x01
    1a52:	9f 5f       	subi	r25, 0xFF	; 255
    1a54:	91 83       	std	Z+1, r25	; 0x01
    1a56:	f2 cf       	rjmp	.-28     	; 0x1a3c <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00001a58 <__vector_19>:
    1a58:	1f 92       	push	r1
    1a5a:	0f 92       	push	r0
    1a5c:	0f b6       	in	r0, 0x3f	; 63
    1a5e:	0f 92       	push	r0
    1a60:	11 24       	eor	r1, r1
    1a62:	2f 93       	push	r18
    1a64:	3f 93       	push	r19
    1a66:	4f 93       	push	r20
    1a68:	5f 93       	push	r21
    1a6a:	6f 93       	push	r22
    1a6c:	7f 93       	push	r23
    1a6e:	8f 93       	push	r24
    1a70:	9f 93       	push	r25
    1a72:	af 93       	push	r26
    1a74:	bf 93       	push	r27
    1a76:	ef 93       	push	r30
    1a78:	ff 93       	push	r31
    1a7a:	80 e0       	ldi	r24, 0x00	; 0
    1a7c:	0e 94 0b 0d 	call	0x1a16	; 0x1a16 <_ZN15OrangutanSerial11uart_tx_isrEh>
    1a80:	ff 91       	pop	r31
    1a82:	ef 91       	pop	r30
    1a84:	bf 91       	pop	r27
    1a86:	af 91       	pop	r26
    1a88:	9f 91       	pop	r25
    1a8a:	8f 91       	pop	r24
    1a8c:	7f 91       	pop	r23
    1a8e:	6f 91       	pop	r22
    1a90:	5f 91       	pop	r21
    1a92:	4f 91       	pop	r20
    1a94:	3f 91       	pop	r19
    1a96:	2f 91       	pop	r18
    1a98:	0f 90       	pop	r0
    1a9a:	0f be       	out	0x3f, r0	; 63
    1a9c:	0f 90       	pop	r0
    1a9e:	1f 90       	pop	r1
    1aa0:	18 95       	reti

00001aa2 <__vector_9>:
    1aa2:	2f 92       	push	r2
    1aa4:	8f 93       	push	r24
    1aa6:	9f 93       	push	r25
    1aa8:	2f b6       	in	r2, 0x3f	; 63
    1aaa:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <tickCount+0x1>
    1aae:	90 91 9d 01 	lds	r25, 0x019D	; 0x80019d <tickCount+0x2>
    1ab2:	01 96       	adiw	r24, 0x01	; 1
    1ab4:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <tickCount+0x1>
    1ab8:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <tickCount+0x2>
    1abc:	90 e0       	ldi	r25, 0x00	; 0
    1abe:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <tickCount+0x3>
    1ac2:	89 1f       	adc	r24, r25
    1ac4:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <tickCount+0x3>
    1ac8:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <us_over_10+0x1>
    1acc:	9c 5f       	subi	r25, 0xFC	; 252
    1ace:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <us_over_10+0x1>
    1ad2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <us_over_10>
    1ad6:	80 51       	subi	r24, 0x10	; 16
    1ad8:	97 42       	sbci	r25, 0x27	; 39
    1ada:	c0 f0       	brcs	.+48     	; 0x1b0c <end>
    1adc:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <us_over_10+0x1>
    1ae0:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <us_over_10>
    1ae4:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <msCounter>
    1ae8:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <msCounter+0x1>
    1aec:	01 96       	adiw	r24, 0x01	; 1
    1aee:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <msCounter>
    1af2:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <msCounter+0x1>
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <msCounter+0x2>
    1afc:	89 1f       	adc	r24, r25
    1afe:	80 93 99 01 	sts	0x0199, r24	; 0x800199 <msCounter+0x2>
    1b02:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <msCounter+0x3>
    1b06:	89 1f       	adc	r24, r25
    1b08:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <msCounter+0x3>

00001b0c <end>:
    1b0c:	2f be       	out	0x3f, r2	; 63
    1b0e:	9f 91       	pop	r25
    1b10:	8f 91       	pop	r24
    1b12:	2f 90       	pop	r2
    1b14:	18 95       	reti

00001b16 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1b16:	28 ee       	ldi	r18, 0xE8	; 232
    1b18:	33 e0       	ldi	r19, 0x03	; 3
    1b1a:	01 97       	sbiw	r24, 0x01	; 1
    1b1c:	48 f0       	brcs	.+18     	; 0x1b30 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1b1e:	f9 01       	movw	r30, r18
    1b20:	6f 93       	push	r22
    1b22:	64 e0       	ldi	r22, 0x04	; 4
    1b24:	6a 95       	dec	r22
    1b26:	f1 f7       	brne	.-4      	; 0x1b24 <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1b28:	6f 91       	pop	r22
    1b2a:	31 97       	sbiw	r30, 0x01	; 1
    1b2c:	c9 f7       	brne	.-14     	; 0x1b20 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1b2e:	f5 cf       	rjmp	.-22     	; 0x1b1a <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1b30:	08 95       	ret

00001b32 <delay_ms>:
    1b32:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <_ZN13OrangutanTime17delayMillisecondsEj>
    1b36:	08 95       	ret

00001b38 <_ZN13OrangutanTime5init2Ev>:
    1b38:	e0 e7       	ldi	r30, 0x70	; 112
    1b3a:	f0 e0       	ldi	r31, 0x00	; 0
    1b3c:	80 81       	ld	r24, Z
    1b3e:	8e 7f       	andi	r24, 0xFE	; 254
    1b40:	80 83       	st	Z, r24
    1b42:	a0 eb       	ldi	r26, 0xB0	; 176
    1b44:	b0 e0       	ldi	r27, 0x00	; 0
    1b46:	8c 91       	ld	r24, X
    1b48:	83 60       	ori	r24, 0x03	; 3
    1b4a:	8c 93       	st	X, r24
    1b4c:	a1 eb       	ldi	r26, 0xB1	; 177
    1b4e:	b0 e0       	ldi	r27, 0x00	; 0
    1b50:	8c 91       	ld	r24, X
    1b52:	80 7f       	andi	r24, 0xF0	; 240
    1b54:	8c 93       	st	X, r24
    1b56:	8c 91       	ld	r24, X
    1b58:	82 60       	ori	r24, 0x02	; 2
    1b5a:	8c 93       	st	X, r24
    1b5c:	b8 9a       	sbi	0x17, 0	; 23
    1b5e:	80 81       	ld	r24, Z
    1b60:	81 60       	ori	r24, 0x01	; 1
    1b62:	80 83       	st	Z, r24
    1b64:	78 94       	sei
    1b66:	08 95       	ret

00001b68 <_ZN13OrangutanTime4initEv>:
    1b68:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <_ZZN13OrangutanTime4initEvE11initialized>
    1b6c:	81 11       	cpse	r24, r1
    1b6e:	05 c0       	rjmp	.+10     	; 0x1b7a <_ZN13OrangutanTime4initEv+0x12>
    1b70:	81 e0       	ldi	r24, 0x01	; 1
    1b72:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <_ZZN13OrangutanTime4initEvE11initialized>
    1b76:	0e 94 9c 0d 	call	0x1b38	; 0x1b38 <_ZN13OrangutanTime5init2Ev>
    1b7a:	08 95       	ret

00001b7c <_ZN13OrangutanTime5resetEv>:
    1b7c:	0e 94 b4 0d 	call	0x1b68	; 0x1b68 <_ZN13OrangutanTime4initEv>
    1b80:	e0 e7       	ldi	r30, 0x70	; 112
    1b82:	f0 e0       	ldi	r31, 0x00	; 0
    1b84:	80 81       	ld	r24, Z
    1b86:	8e 7f       	andi	r24, 0xFE	; 254
    1b88:	80 83       	st	Z, r24
    1b8a:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <msCounter>
    1b8e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <msCounter+0x1>
    1b92:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <msCounter+0x2>
    1b96:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <msCounter+0x3>
    1b9a:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <us_over_10+0x1>
    1b9e:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <us_over_10>
    1ba2:	80 81       	ld	r24, Z
    1ba4:	81 60       	ori	r24, 0x01	; 1
    1ba6:	80 83       	st	Z, r24
    1ba8:	08 95       	ret

00001baa <read_line_sensors>:
    1baa:	46 2f       	mov	r20, r22
    1bac:	bc 01       	movw	r22, r24
    1bae:	8f e9       	ldi	r24, 0x9F	; 159
    1bb0:	91 e0       	ldi	r25, 0x01	; 1
    1bb2:	0e 94 66 10 	call	0x20cc	; 0x20cc <_ZN16PololuQTRSensors4readEPjh>
    1bb6:	08 95       	ret

00001bb8 <calibrate_line_sensors>:
    1bb8:	68 2f       	mov	r22, r24
    1bba:	8f e9       	ldi	r24, 0x9F	; 159
    1bbc:	91 e0       	ldi	r25, 0x01	; 1
    1bbe:	0e 94 c4 11 	call	0x2388	; 0x2388 <_ZN16PololuQTRSensors9calibrateEh>
    1bc2:	08 95       	ret

00001bc4 <read_line>:
    1bc4:	46 2f       	mov	r20, r22
    1bc6:	20 e0       	ldi	r18, 0x00	; 0
    1bc8:	bc 01       	movw	r22, r24
    1bca:	8f e9       	ldi	r24, 0x9F	; 159
    1bcc:	91 e0       	ldi	r25, 0x01	; 1
    1bce:	0e 94 95 12 	call	0x252a	; 0x252a <_ZN16PololuQTRSensors8readLineEPjhh>
    1bd2:	08 95       	ret

00001bd4 <_ZN9Pololu3pi4initEjh>:
    1bd4:	0f 93       	push	r16
    1bd6:	cf 93       	push	r28
    1bd8:	df 93       	push	r29
    1bda:	00 d0       	rcall	.+0      	; 0x1bdc <_ZN9Pololu3pi4initEjh+0x8>
    1bdc:	00 d0       	rcall	.+0      	; 0x1bde <_ZN9Pololu3pi4initEjh+0xa>
    1bde:	1f 92       	push	r1
    1be0:	cd b7       	in	r28, 0x3d	; 61
    1be2:	de b7       	in	r29, 0x3e	; 62
    1be4:	9c 01       	movw	r18, r24
    1be6:	85 e0       	ldi	r24, 0x05	; 5
    1be8:	e0 e5       	ldi	r30, 0x50	; 80
    1bea:	f1 e0       	ldi	r31, 0x01	; 1
    1bec:	de 01       	movw	r26, r28
    1bee:	11 96       	adiw	r26, 0x01	; 1
    1bf0:	01 90       	ld	r0, Z+
    1bf2:	0d 92       	st	X+, r0
    1bf4:	8a 95       	dec	r24
    1bf6:	e1 f7       	brne	.-8      	; 0x1bf0 <_ZN9Pololu3pi4initEjh+0x1c>
    1bf8:	66 23       	and	r22, r22
    1bfa:	11 f0       	breq	.+4      	; 0x1c00 <_ZN9Pololu3pi4initEjh+0x2c>
    1bfc:	0f ef       	ldi	r16, 0xFF	; 255
    1bfe:	01 c0       	rjmp	.+2      	; 0x1c02 <_ZN9Pololu3pi4initEjh+0x2e>
    1c00:	03 e1       	ldi	r16, 0x13	; 19
    1c02:	45 e0       	ldi	r20, 0x05	; 5
    1c04:	be 01       	movw	r22, r28
    1c06:	6f 5f       	subi	r22, 0xFF	; 255
    1c08:	7f 4f       	sbci	r23, 0xFF	; 255
    1c0a:	8f e9       	ldi	r24, 0x9F	; 159
    1c0c:	91 e0       	ldi	r25, 0x01	; 1
    1c0e:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1c12:	8f e9       	ldi	r24, 0x9F	; 159
    1c14:	91 e0       	ldi	r25, 0x01	; 1
    1c16:	0e 94 93 0e 	call	0x1d26	; 0x1d26 <_ZN16PololuQTRSensors11emittersOffEv>
    1c1a:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <_ZN13OrangutanTime5resetEv>
    1c1e:	0f 90       	pop	r0
    1c20:	0f 90       	pop	r0
    1c22:	0f 90       	pop	r0
    1c24:	0f 90       	pop	r0
    1c26:	0f 90       	pop	r0
    1c28:	df 91       	pop	r29
    1c2a:	cf 91       	pop	r28
    1c2c:	0f 91       	pop	r16
    1c2e:	08 95       	ret

00001c30 <pololu_3pi_init>:
    1c30:	60 e0       	ldi	r22, 0x00	; 0
    1c32:	0e 94 ea 0d 	call	0x1bd4	; 0x1bd4 <_ZN9Pololu3pi4initEjh>
    1c36:	08 95       	ret

00001c38 <_GLOBAL__sub_D_pololu_3pi_init>:
    1c38:	8f e9       	ldi	r24, 0x9F	; 159
    1c3a:	91 e0       	ldi	r25, 0x01	; 1
    1c3c:	0e 94 0a 13 	call	0x2614	; 0x2614 <_ZN16PololuQTRSensorsD1Ev>
    1c40:	08 95       	ret

00001c42 <delay_us>:
    1c42:	6f 93       	push	r22
    1c44:	64 e0       	ldi	r22, 0x04	; 4
    1c46:	6a 95       	dec	r22
    1c48:	f1 f7       	brne	.-4      	; 0x1c46 <delay_us+0x4>
    1c4a:	6f 91       	pop	r22
    1c4c:	01 97       	sbiw	r24, 0x01	; 1
    1c4e:	c9 f7       	brne	.-14     	; 0x1c42 <delay_us>
    1c50:	08 95       	ret

00001c52 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1c52:	fc 01       	movw	r30, r24
    1c54:	11 82       	std	Z+1, r1	; 0x01
    1c56:	10 82       	st	Z, r1
    1c58:	13 82       	std	Z+3, r1	; 0x03
    1c5a:	12 82       	std	Z+2, r1	; 0x02
    1c5c:	15 82       	std	Z+5, r1	; 0x05
    1c5e:	14 82       	std	Z+4, r1	; 0x04
    1c60:	16 82       	std	Z+6, r1	; 0x06
    1c62:	68 30       	cpi	r22, 0x08	; 8
    1c64:	68 f4       	brcc	.+26     	; 0x1c80 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1c66:	89 e2       	ldi	r24, 0x29	; 41
    1c68:	90 e0       	ldi	r25, 0x00	; 0
    1c6a:	91 83       	std	Z+1, r25	; 0x01
    1c6c:	80 83       	st	Z, r24
    1c6e:	8b e2       	ldi	r24, 0x2B	; 43
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	93 83       	std	Z+3, r25	; 0x03
    1c74:	82 83       	std	Z+2, r24	; 0x02
    1c76:	8a e2       	ldi	r24, 0x2A	; 42
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	95 83       	std	Z+5, r25	; 0x05
    1c7c:	84 83       	std	Z+4, r24	; 0x04
    1c7e:	1f c0       	rjmp	.+62     	; 0x1cbe <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1c80:	6e 30       	cpi	r22, 0x0E	; 14
    1c82:	70 f4       	brcc	.+28     	; 0x1ca0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1c84:	83 e2       	ldi	r24, 0x23	; 35
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	91 83       	std	Z+1, r25	; 0x01
    1c8a:	80 83       	st	Z, r24
    1c8c:	85 e2       	ldi	r24, 0x25	; 37
    1c8e:	90 e0       	ldi	r25, 0x00	; 0
    1c90:	93 83       	std	Z+3, r25	; 0x03
    1c92:	82 83       	std	Z+2, r24	; 0x02
    1c94:	84 e2       	ldi	r24, 0x24	; 36
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	95 83       	std	Z+5, r25	; 0x05
    1c9a:	84 83       	std	Z+4, r24	; 0x04
    1c9c:	68 50       	subi	r22, 0x08	; 8
    1c9e:	0f c0       	rjmp	.+30     	; 0x1cbe <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1ca0:	65 31       	cpi	r22, 0x15	; 21
    1ca2:	98 f4       	brcc	.+38     	; 0x1cca <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1ca4:	86 e2       	ldi	r24, 0x26	; 38
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	91 83       	std	Z+1, r25	; 0x01
    1caa:	80 83       	st	Z, r24
    1cac:	88 e2       	ldi	r24, 0x28	; 40
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	93 83       	std	Z+3, r25	; 0x03
    1cb2:	82 83       	std	Z+2, r24	; 0x02
    1cb4:	87 e2       	ldi	r24, 0x27	; 39
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	95 83       	std	Z+5, r25	; 0x05
    1cba:	84 83       	std	Z+4, r24	; 0x04
    1cbc:	6e 50       	subi	r22, 0x0E	; 14
    1cbe:	81 e0       	ldi	r24, 0x01	; 1
    1cc0:	01 c0       	rjmp	.+2      	; 0x1cc4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1cc2:	88 0f       	add	r24, r24
    1cc4:	6a 95       	dec	r22
    1cc6:	ea f7       	brpl	.-6      	; 0x1cc2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1cc8:	86 83       	std	Z+6, r24	; 0x06
    1cca:	08 95       	ret

00001ccc <_ZN16PololuQTRSensors4initEhhh>:
    1ccc:	a7 e0       	ldi	r26, 0x07	; 7
    1cce:	b0 e0       	ldi	r27, 0x00	; 0
    1cd0:	ec e6       	ldi	r30, 0x6C	; 108
    1cd2:	fe e0       	ldi	r31, 0x0E	; 14
    1cd4:	0c 94 d3 13 	jmp	0x27a6	; 0x27a6 <__prologue_saves__+0x1c>
    1cd8:	8c 01       	movw	r16, r24
    1cda:	fc 01       	movw	r30, r24
    1cdc:	11 82       	std	Z+1, r1	; 0x01
    1cde:	10 82       	st	Z, r1
    1ce0:	13 82       	std	Z+3, r1	; 0x03
    1ce2:	12 82       	std	Z+2, r1	; 0x02
    1ce4:	15 82       	std	Z+5, r1	; 0x05
    1ce6:	14 82       	std	Z+4, r1	; 0x04
    1ce8:	17 82       	std	Z+7, r1	; 0x07
    1cea:	16 82       	std	Z+6, r1	; 0x06
    1cec:	61 31       	cpi	r22, 0x11	; 17
    1cee:	18 f0       	brcs	.+6      	; 0x1cf6 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1cf0:	80 e1       	ldi	r24, 0x10	; 16
    1cf2:	80 87       	std	Z+8, r24	; 0x08
    1cf4:	02 c0       	rjmp	.+4      	; 0x1cfa <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	60 87       	std	Z+8, r22	; 0x08
    1cfa:	f8 01       	movw	r30, r16
    1cfc:	20 8b       	std	Z+16, r18	; 0x10
    1cfe:	64 2f       	mov	r22, r20
    1d00:	ce 01       	movw	r24, r28
    1d02:	01 96       	adiw	r24, 0x01	; 1
    1d04:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1d08:	8f 81       	ldd	r24, Y+7	; 0x07
    1d0a:	f8 01       	movw	r30, r16
    1d0c:	81 87       	std	Z+9, r24	; 0x09
    1d0e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d10:	9c 81       	ldd	r25, Y+4	; 0x04
    1d12:	93 87       	std	Z+11, r25	; 0x0b
    1d14:	82 87       	std	Z+10, r24	; 0x0a
    1d16:	8d 81       	ldd	r24, Y+5	; 0x05
    1d18:	9e 81       	ldd	r25, Y+6	; 0x06
    1d1a:	95 87       	std	Z+13, r25	; 0x0d
    1d1c:	84 87       	std	Z+12, r24	; 0x0c
    1d1e:	27 96       	adiw	r28, 0x07	; 7
    1d20:	e4 e0       	ldi	r30, 0x04	; 4
    1d22:	0c 94 ef 13 	jmp	0x27de	; 0x27de <__epilogue_restores__+0x1c>

00001d26 <_ZN16PololuQTRSensors11emittersOffEv>:
    1d26:	fc 01       	movw	r30, r24
    1d28:	a4 85       	ldd	r26, Z+12	; 0x0c
    1d2a:	b5 85       	ldd	r27, Z+13	; 0x0d
    1d2c:	10 97       	sbiw	r26, 0x00	; 0
    1d2e:	79 f0       	breq	.+30     	; 0x1d4e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1d30:	8c 91       	ld	r24, X
    1d32:	91 85       	ldd	r25, Z+9	; 0x09
    1d34:	89 2b       	or	r24, r25
    1d36:	8c 93       	st	X, r24
    1d38:	a2 85       	ldd	r26, Z+10	; 0x0a
    1d3a:	b3 85       	ldd	r27, Z+11	; 0x0b
    1d3c:	9c 91       	ld	r25, X
    1d3e:	81 85       	ldd	r24, Z+9	; 0x09
    1d40:	80 95       	com	r24
    1d42:	89 23       	and	r24, r25
    1d44:	8c 93       	st	X, r24
    1d46:	88 ec       	ldi	r24, 0xC8	; 200
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <delay_us>
    1d4e:	08 95       	ret

00001d50 <_ZN16PololuQTRSensors10emittersOnEv>:
    1d50:	fc 01       	movw	r30, r24
    1d52:	a4 85       	ldd	r26, Z+12	; 0x0c
    1d54:	b5 85       	ldd	r27, Z+13	; 0x0d
    1d56:	10 97       	sbiw	r26, 0x00	; 0
    1d58:	71 f0       	breq	.+28     	; 0x1d76 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1d5a:	8c 91       	ld	r24, X
    1d5c:	91 85       	ldd	r25, Z+9	; 0x09
    1d5e:	89 2b       	or	r24, r25
    1d60:	8c 93       	st	X, r24
    1d62:	a2 85       	ldd	r26, Z+10	; 0x0a
    1d64:	b3 85       	ldd	r27, Z+11	; 0x0b
    1d66:	8c 91       	ld	r24, X
    1d68:	91 85       	ldd	r25, Z+9	; 0x09
    1d6a:	89 2b       	or	r24, r25
    1d6c:	8c 93       	st	X, r24
    1d6e:	88 ec       	ldi	r24, 0xC8	; 200
    1d70:	90 e0       	ldi	r25, 0x00	; 0
    1d72:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <delay_us>
    1d76:	08 95       	ret

00001d78 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1d78:	a7 e0       	ldi	r26, 0x07	; 7
    1d7a:	b0 e0       	ldi	r27, 0x00	; 0
    1d7c:	e2 ec       	ldi	r30, 0xC2	; 194
    1d7e:	fe e0       	ldi	r31, 0x0E	; 14
    1d80:	0c 94 c8 13 	jmp	0x2790	; 0x2790 <__prologue_saves__+0x6>
    1d84:	7c 01       	movw	r14, r24
    1d86:	4b 01       	movw	r8, r22
    1d88:	64 2f       	mov	r22, r20
    1d8a:	39 01       	movw	r6, r18
    1d8c:	40 2f       	mov	r20, r16
    1d8e:	20 e0       	ldi	r18, 0x00	; 0
    1d90:	0e 94 66 0e 	call	0x1ccc	; 0x1ccc <_ZN16PololuQTRSensors4initEhhh>
    1d94:	87 01       	movw	r16, r14
    1d96:	0f 5b       	subi	r16, 0xBF	; 191
    1d98:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9a:	f8 01       	movw	r30, r16
    1d9c:	10 82       	st	Z, r1
    1d9e:	67 01       	movw	r12, r14
    1da0:	f2 e4       	ldi	r31, 0x42	; 66
    1da2:	cf 0e       	add	r12, r31
    1da4:	d1 1c       	adc	r13, r1
    1da6:	f6 01       	movw	r30, r12
    1da8:	10 82       	st	Z, r1
    1daa:	57 01       	movw	r10, r14
    1dac:	f3 e4       	ldi	r31, 0x43	; 67
    1dae:	af 0e       	add	r10, r31
    1db0:	b1 1c       	adc	r11, r1
    1db2:	f5 01       	movw	r30, r10
    1db4:	10 82       	st	Z, r1
    1db6:	f7 01       	movw	r30, r14
    1db8:	77 86       	std	Z+15, r7	; 0x0f
    1dba:	66 86       	std	Z+14, r6	; 0x0e
    1dbc:	51 2c       	mov	r5, r1
    1dbe:	f7 01       	movw	r30, r14
    1dc0:	80 85       	ldd	r24, Z+8	; 0x08
    1dc2:	58 16       	cp	r5, r24
    1dc4:	50 f5       	brcc	.+84     	; 0x1e1a <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1dc6:	65 2c       	mov	r6, r5
    1dc8:	71 2c       	mov	r7, r1
    1dca:	f4 01       	movw	r30, r8
    1dcc:	e6 0d       	add	r30, r6
    1dce:	f7 1d       	adc	r31, r7
    1dd0:	60 81       	ld	r22, Z
    1dd2:	ce 01       	movw	r24, r28
    1dd4:	01 96       	adiw	r24, 0x01	; 1
    1dd6:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1dda:	2f 81       	ldd	r18, Y+7	; 0x07
    1ddc:	f7 01       	movw	r30, r14
    1dde:	e6 0d       	add	r30, r6
    1de0:	f7 1d       	adc	r31, r7
    1de2:	21 8b       	std	Z+17, r18	; 0x11
    1de4:	89 81       	ldd	r24, Y+1	; 0x01
    1de6:	9a 81       	ldd	r25, Y+2	; 0x02
    1de8:	f3 01       	movw	r30, r6
    1dea:	ee 0f       	add	r30, r30
    1dec:	ff 1f       	adc	r31, r31
    1dee:	ee 0d       	add	r30, r14
    1df0:	ff 1d       	adc	r31, r15
    1df2:	92 a3       	std	Z+34, r25	; 0x22
    1df4:	81 a3       	std	Z+33, r24	; 0x21
    1df6:	83 32       	cpi	r24, 0x23	; 35
    1df8:	91 05       	cpc	r25, r1
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1dfc:	f8 01       	movw	r30, r16
    1dfe:	08 c0       	rjmp	.+16     	; 0x1e10 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1e00:	86 32       	cpi	r24, 0x26	; 38
    1e02:	91 05       	cpc	r25, r1
    1e04:	11 f4       	brne	.+4      	; 0x1e0a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1e06:	f6 01       	movw	r30, r12
    1e08:	03 c0       	rjmp	.+6      	; 0x1e10 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1e0a:	89 97       	sbiw	r24, 0x29	; 41
    1e0c:	21 f4       	brne	.+8      	; 0x1e16 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1e0e:	f5 01       	movw	r30, r10
    1e10:	80 81       	ld	r24, Z
    1e12:	82 2b       	or	r24, r18
    1e14:	80 83       	st	Z, r24
    1e16:	53 94       	inc	r5
    1e18:	d2 cf       	rjmp	.-92     	; 0x1dbe <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1e1a:	27 96       	adiw	r28, 0x07	; 7
    1e1c:	ef e0       	ldi	r30, 0x0F	; 15
    1e1e:	0c 94 e4 13 	jmp	0x27c8	; 0x27c8 <__epilogue_restores__+0x6>

00001e22 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1e22:	a0 e0       	ldi	r26, 0x00	; 0
    1e24:	b0 e0       	ldi	r27, 0x00	; 0
    1e26:	e7 e1       	ldi	r30, 0x17	; 23
    1e28:	ff e0       	ldi	r31, 0x0F	; 15
    1e2a:	0c 94 ca 13 	jmp	0x2794	; 0x2794 <__prologue_saves__+0xa>
    1e2e:	ec 01       	movw	r28, r24
    1e30:	5b 01       	movw	r10, r22
    1e32:	6c 01       	movw	r12, r24
    1e34:	81 e4       	ldi	r24, 0x41	; 65
    1e36:	c8 0e       	add	r12, r24
    1e38:	d1 1c       	adc	r13, r1
    1e3a:	f6 01       	movw	r30, r12
    1e3c:	80 80       	ld	r8, Z
    1e3e:	7e 01       	movw	r14, r28
    1e40:	f2 e4       	ldi	r31, 0x42	; 66
    1e42:	ef 0e       	add	r14, r31
    1e44:	f1 1c       	adc	r15, r1
    1e46:	f7 01       	movw	r30, r14
    1e48:	70 80       	ld	r7, Z
    1e4a:	8e 01       	movw	r16, r28
    1e4c:	0d 5b       	subi	r16, 0xBD	; 189
    1e4e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e50:	f8 01       	movw	r30, r16
    1e52:	90 80       	ld	r9, Z
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	98 85       	ldd	r25, Y+8	; 0x08
    1e58:	89 17       	cp	r24, r25
    1e5a:	48 f4       	brcc	.+18     	; 0x1e6e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1e5c:	f5 01       	movw	r30, r10
    1e5e:	e8 0f       	add	r30, r24
    1e60:	f1 1d       	adc	r31, r1
    1e62:	e8 0f       	add	r30, r24
    1e64:	f1 1d       	adc	r31, r1
    1e66:	11 82       	std	Z+1, r1	; 0x01
    1e68:	10 82       	st	Z, r1
    1e6a:	8f 5f       	subi	r24, 0xFF	; 255
    1e6c:	f4 cf       	rjmp	.-24     	; 0x1e56 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1e6e:	84 b1       	in	r24, 0x04	; 4
    1e70:	f6 01       	movw	r30, r12
    1e72:	90 81       	ld	r25, Z
    1e74:	89 2b       	or	r24, r25
    1e76:	84 b9       	out	0x04, r24	; 4
    1e78:	87 b1       	in	r24, 0x07	; 7
    1e7a:	f7 01       	movw	r30, r14
    1e7c:	90 81       	ld	r25, Z
    1e7e:	89 2b       	or	r24, r25
    1e80:	87 b9       	out	0x07, r24	; 7
    1e82:	8a b1       	in	r24, 0x0a	; 10
    1e84:	f8 01       	movw	r30, r16
    1e86:	90 81       	ld	r25, Z
    1e88:	89 2b       	or	r24, r25
    1e8a:	8a b9       	out	0x0a, r24	; 10
    1e8c:	85 b1       	in	r24, 0x05	; 5
    1e8e:	f6 01       	movw	r30, r12
    1e90:	90 81       	ld	r25, Z
    1e92:	89 2b       	or	r24, r25
    1e94:	85 b9       	out	0x05, r24	; 5
    1e96:	88 b1       	in	r24, 0x08	; 8
    1e98:	f7 01       	movw	r30, r14
    1e9a:	90 81       	ld	r25, Z
    1e9c:	89 2b       	or	r24, r25
    1e9e:	88 b9       	out	0x08, r24	; 8
    1ea0:	8b b1       	in	r24, 0x0b	; 11
    1ea2:	f8 01       	movw	r30, r16
    1ea4:	90 81       	ld	r25, Z
    1ea6:	89 2b       	or	r24, r25
    1ea8:	8b b9       	out	0x0b, r24	; 11
    1eaa:	8a e0       	ldi	r24, 0x0A	; 10
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	0e 94 21 0e 	call	0x1c42	; 0x1c42 <delay_us>
    1eb2:	94 b1       	in	r25, 0x04	; 4
    1eb4:	f6 01       	movw	r30, r12
    1eb6:	80 81       	ld	r24, Z
    1eb8:	80 95       	com	r24
    1eba:	89 23       	and	r24, r25
    1ebc:	84 b9       	out	0x04, r24	; 4
    1ebe:	97 b1       	in	r25, 0x07	; 7
    1ec0:	f7 01       	movw	r30, r14
    1ec2:	80 81       	ld	r24, Z
    1ec4:	80 95       	com	r24
    1ec6:	89 23       	and	r24, r25
    1ec8:	87 b9       	out	0x07, r24	; 7
    1eca:	9a b1       	in	r25, 0x0a	; 10
    1ecc:	f8 01       	movw	r30, r16
    1ece:	80 81       	ld	r24, Z
    1ed0:	80 95       	com	r24
    1ed2:	89 23       	and	r24, r25
    1ed4:	8a b9       	out	0x0a, r24	; 10
    1ed6:	95 b1       	in	r25, 0x05	; 5
    1ed8:	f6 01       	movw	r30, r12
    1eda:	80 81       	ld	r24, Z
    1edc:	80 95       	com	r24
    1ede:	89 23       	and	r24, r25
    1ee0:	85 b9       	out	0x05, r24	; 5
    1ee2:	98 b1       	in	r25, 0x08	; 8
    1ee4:	f7 01       	movw	r30, r14
    1ee6:	80 81       	ld	r24, Z
    1ee8:	80 95       	com	r24
    1eea:	89 23       	and	r24, r25
    1eec:	88 b9       	out	0x08, r24	; 8
    1eee:	9b b1       	in	r25, 0x0b	; 11
    1ef0:	f8 01       	movw	r30, r16
    1ef2:	80 81       	ld	r24, Z
    1ef4:	80 95       	com	r24
    1ef6:	89 23       	and	r24, r25
    1ef8:	8b b9       	out	0x0b, r24	; 11
    1efa:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1efe:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1f02:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1f06:	83 60       	ori	r24, 0x03	; 3
    1f08:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1f0c:	82 e0       	ldi	r24, 0x02	; 2
    1f0e:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1f12:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    1f16:	80 e0       	ldi	r24, 0x00	; 0
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	2e 85       	ldd	r18, Y+14	; 0x0e
    1f1c:	3f 85       	ldd	r19, Y+15	; 0x0f
    1f1e:	82 17       	cp	r24, r18
    1f20:	93 07       	cpc	r25, r19
    1f22:	20 f5       	brcc	.+72     	; 0x1f6c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    1f24:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    1f28:	2c 2d       	mov	r18, r12
    1f2a:	24 1b       	sub	r18, r20
    1f2c:	82 0f       	add	r24, r18
    1f2e:	91 1d       	adc	r25, r1
    1f30:	03 b1       	in	r16, 0x03	; 3
    1f32:	08 11       	cpse	r16, r8
    1f34:	32 c0       	rjmp	.+100    	; 0x1f9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1f36:	f6 b0       	in	r15, 0x06	; 6
    1f38:	f7 10       	cpse	r15, r7
    1f3a:	2f c0       	rjmp	.+94     	; 0x1f9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1f3c:	29 b1       	in	r18, 0x09	; 9
    1f3e:	29 11       	cpse	r18, r9
    1f40:	2c c0       	rjmp	.+88     	; 0x1f9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    1f42:	10 c0       	rjmp	.+32     	; 0x1f64 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    1f44:	21 2f       	mov	r18, r17
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	a9 01       	movw	r20, r18
    1f4a:	44 0f       	add	r20, r20
    1f4c:	55 1f       	adc	r21, r21
    1f4e:	f5 01       	movw	r30, r10
    1f50:	e4 0f       	add	r30, r20
    1f52:	f5 1f       	adc	r31, r21
    1f54:	60 81       	ld	r22, Z
    1f56:	71 81       	ldd	r23, Z+1	; 0x01
    1f58:	67 2b       	or	r22, r23
    1f5a:	21 f1       	breq	.+72     	; 0x1fa4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    1f5c:	1f 5f       	subi	r17, 0xFF	; 255
    1f5e:	28 85       	ldd	r18, Y+8	; 0x08
    1f60:	12 17       	cp	r17, r18
    1f62:	80 f3       	brcs	.-32     	; 0x1f44 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    1f64:	7f 2c       	mov	r7, r15
    1f66:	80 2e       	mov	r8, r16
    1f68:	4c 2d       	mov	r20, r12
    1f6a:	d7 cf       	rjmp	.-82     	; 0x1f1a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    1f6c:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1f70:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	88 85       	ldd	r24, Y+8	; 0x08
    1f78:	28 17       	cp	r18, r24
    1f7a:	30 f5       	brcc	.+76     	; 0x1fc8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    1f7c:	f5 01       	movw	r30, r10
    1f7e:	e2 0f       	add	r30, r18
    1f80:	f1 1d       	adc	r31, r1
    1f82:	e2 0f       	add	r30, r18
    1f84:	f1 1d       	adc	r31, r1
    1f86:	80 81       	ld	r24, Z
    1f88:	91 81       	ldd	r25, Z+1	; 0x01
    1f8a:	89 2b       	or	r24, r25
    1f8c:	21 f4       	brne	.+8      	; 0x1f96 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1f8e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1f90:	9f 85       	ldd	r25, Y+15	; 0x0f
    1f92:	91 83       	std	Z+1, r25	; 0x01
    1f94:	80 83       	st	Z, r24
    1f96:	2f 5f       	subi	r18, 0xFF	; 255
    1f98:	ee cf       	rjmp	.-36     	; 0x1f76 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    1f9a:	03 b1       	in	r16, 0x03	; 3
    1f9c:	f6 b0       	in	r15, 0x06	; 6
    1f9e:	99 b0       	in	r9, 0x09	; 9
    1fa0:	10 e0       	ldi	r17, 0x00	; 0
    1fa2:	dd cf       	rjmp	.-70     	; 0x1f5e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    1fa4:	de 01       	movw	r26, r28
    1fa6:	a4 0f       	add	r26, r20
    1fa8:	b5 1f       	adc	r27, r21
    1faa:	91 96       	adiw	r26, 0x21	; 33
    1fac:	0d 90       	ld	r0, X+
    1fae:	bc 91       	ld	r27, X
    1fb0:	a0 2d       	mov	r26, r0
    1fb2:	4c 91       	ld	r20, X
    1fb4:	de 01       	movw	r26, r28
    1fb6:	a2 0f       	add	r26, r18
    1fb8:	b3 1f       	adc	r27, r19
    1fba:	51 96       	adiw	r26, 0x11	; 17
    1fbc:	2c 91       	ld	r18, X
    1fbe:	42 23       	and	r20, r18
    1fc0:	69 f6       	brne	.-102    	; 0x1f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1fc2:	91 83       	std	Z+1, r25	; 0x01
    1fc4:	80 83       	st	Z, r24
    1fc6:	ca cf       	rjmp	.-108    	; 0x1f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    1fc8:	cd b7       	in	r28, 0x3d	; 61
    1fca:	de b7       	in	r29, 0x3e	; 62
    1fcc:	ed e0       	ldi	r30, 0x0D	; 13
    1fce:	0c 94 e6 13 	jmp	0x27cc	; 0x27cc <__epilogue_restores__+0xa>

00001fd2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1fd2:	ef 92       	push	r14
    1fd4:	ff 92       	push	r15
    1fd6:	0f 93       	push	r16
    1fd8:	1f 93       	push	r17
    1fda:	cf 93       	push	r28
    1fdc:	df 93       	push	r29
    1fde:	fc 01       	movw	r30, r24
    1fe0:	9b 01       	movw	r18, r22
    1fe2:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1fe6:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1fea:	47 b1       	in	r20, 0x07	; 7
    1fec:	18 b1       	in	r17, 0x08	; 8
    1fee:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1ff2:	86 fd       	sbrc	r24, 6
    1ff4:	fc cf       	rjmp	.-8      	; 0x1fee <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	90 85       	ldd	r25, Z+8	; 0x08
    1ffa:	89 17       	cp	r24, r25
    1ffc:	48 f4       	brcc	.+18     	; 0x2010 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    1ffe:	d9 01       	movw	r26, r18
    2000:	a8 0f       	add	r26, r24
    2002:	b1 1d       	adc	r27, r1
    2004:	a8 0f       	add	r26, r24
    2006:	b1 1d       	adc	r27, r1
    2008:	1d 92       	st	X+, r1
    200a:	1c 92       	st	X, r1
    200c:	8f 5f       	subi	r24, 0xFF	; 255
    200e:	f4 cf       	rjmp	.-24     	; 0x1ff8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    2010:	97 b1       	in	r25, 0x07	; 7
    2012:	82 a1       	ldd	r24, Z+34	; 0x22
    2014:	80 95       	com	r24
    2016:	89 23       	and	r24, r25
    2018:	87 b9       	out	0x07, r24	; 7
    201a:	98 b1       	in	r25, 0x08	; 8
    201c:	82 a1       	ldd	r24, Z+34	; 0x22
    201e:	80 95       	com	r24
    2020:	89 23       	and	r24, r25
    2022:	88 b9       	out	0x08, r24	; 8
    2024:	87 e8       	ldi	r24, 0x87	; 135
    2026:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    202a:	e1 2c       	mov	r14, r1
    202c:	81 a1       	ldd	r24, Z+33	; 0x21
    202e:	e8 16       	cp	r14, r24
    2030:	10 f0       	brcs	.+4      	; 0x2036 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    2032:	e1 2c       	mov	r14, r1
    2034:	29 c0       	rjmp	.+82     	; 0x2088 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2036:	50 e0       	ldi	r21, 0x00	; 0
    2038:	80 85       	ldd	r24, Z+8	; 0x08
    203a:	58 17       	cp	r21, r24
    203c:	18 f5       	brcc	.+70     	; 0x2084 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    203e:	a5 2f       	mov	r26, r21
    2040:	b0 e0       	ldi	r27, 0x00	; 0
    2042:	ef 01       	movw	r28, r30
    2044:	ca 0f       	add	r28, r26
    2046:	db 1f       	adc	r29, r27
    2048:	89 89       	ldd	r24, Y+17	; 0x11
    204a:	80 64       	ori	r24, 0x40	; 64
    204c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    2050:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2054:	80 64       	ori	r24, 0x40	; 64
    2056:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    205a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    205e:	86 fd       	sbrc	r24, 6
    2060:	fc cf       	rjmp	.-8      	; 0x205a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    2062:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    2066:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    206a:	aa 0f       	add	r26, r26
    206c:	bb 1f       	adc	r27, r27
    206e:	a2 0f       	add	r26, r18
    2070:	b3 1f       	adc	r27, r19
    2072:	8d 91       	ld	r24, X+
    2074:	9c 91       	ld	r25, X
    2076:	11 97       	sbiw	r26, 0x01	; 1
    2078:	86 0f       	add	r24, r22
    207a:	97 1f       	adc	r25, r23
    207c:	8d 93       	st	X+, r24
    207e:	9c 93       	st	X, r25
    2080:	5f 5f       	subi	r21, 0xFF	; 255
    2082:	da cf       	rjmp	.-76     	; 0x2038 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    2084:	e3 94       	inc	r14
    2086:	d2 cf       	rjmp	.-92     	; 0x202c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    2088:	80 85       	ldd	r24, Z+8	; 0x08
    208a:	e8 16       	cp	r14, r24
    208c:	a0 f4       	brcc	.+40     	; 0x20b6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    208e:	e9 01       	movw	r28, r18
    2090:	ce 0d       	add	r28, r14
    2092:	d1 1d       	adc	r29, r1
    2094:	ce 0d       	add	r28, r14
    2096:	d1 1d       	adc	r29, r1
    2098:	61 a1       	ldd	r22, Z+33	; 0x21
    209a:	70 e0       	ldi	r23, 0x00	; 0
    209c:	cb 01       	movw	r24, r22
    209e:	95 95       	asr	r25
    20a0:	87 95       	ror	r24
    20a2:	a8 81       	ld	r26, Y
    20a4:	b9 81       	ldd	r27, Y+1	; 0x01
    20a6:	8a 0f       	add	r24, r26
    20a8:	9b 1f       	adc	r25, r27
    20aa:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    20ae:	79 83       	std	Y+1, r23	; 0x01
    20b0:	68 83       	st	Y, r22
    20b2:	e3 94       	inc	r14
    20b4:	e9 cf       	rjmp	.-46     	; 0x2088 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    20b6:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    20ba:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    20be:	18 b9       	out	0x08, r17	; 8
    20c0:	47 b9       	out	0x07, r20	; 7
    20c2:	cd b7       	in	r28, 0x3d	; 61
    20c4:	de b7       	in	r29, 0x3e	; 62
    20c6:	e6 e0       	ldi	r30, 0x06	; 6
    20c8:	0c 94 ed 13 	jmp	0x27da	; 0x27da <__epilogue_restores__+0x18>

000020cc <_ZN16PololuQTRSensors4readEPjh>:
    20cc:	a0 e2       	ldi	r26, 0x20	; 32
    20ce:	b0 e0       	ldi	r27, 0x00	; 0
    20d0:	ec e6       	ldi	r30, 0x6C	; 108
    20d2:	f0 e1       	ldi	r31, 0x10	; 16
    20d4:	0c 94 d0 13 	jmp	0x27a0	; 0x27a0 <__prologue_saves__+0x16>
    20d8:	8c 01       	movw	r16, r24
    20da:	7b 01       	movw	r14, r22
    20dc:	d4 2e       	mov	r13, r20
    20de:	8f ef       	ldi	r24, 0xFF	; 255
    20e0:	84 0f       	add	r24, r20
    20e2:	82 30       	cpi	r24, 0x02	; 2
    20e4:	18 f4       	brcc	.+6      	; 0x20ec <_ZN16PololuQTRSensors4readEPjh+0x20>
    20e6:	c8 01       	movw	r24, r16
    20e8:	0e 94 a8 0e 	call	0x1d50	; 0x1d50 <_ZN16PololuQTRSensors10emittersOnEv>
    20ec:	d8 01       	movw	r26, r16
    20ee:	50 96       	adiw	r26, 0x10	; 16
    20f0:	8c 91       	ld	r24, X
    20f2:	b7 01       	movw	r22, r14
    20f4:	81 11       	cpse	r24, r1
    20f6:	10 c0       	rjmp	.+32     	; 0x2118 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    20f8:	c8 01       	movw	r24, r16
    20fa:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    20fe:	c8 01       	movw	r24, r16
    2100:	0e 94 93 0e 	call	0x1d26	; 0x1d26 <_ZN16PololuQTRSensors11emittersOffEv>
    2104:	b2 e0       	ldi	r27, 0x02	; 2
    2106:	db 12       	cpse	r13, r27
    2108:	3a c0       	rjmp	.+116    	; 0x217e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    210a:	be 01       	movw	r22, r28
    210c:	6f 5f       	subi	r22, 0xFF	; 255
    210e:	7f 4f       	sbci	r23, 0xFF	; 255
    2110:	c8 01       	movw	r24, r16
    2112:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2116:	0f c0       	rjmp	.+30     	; 0x2136 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    2118:	c8 01       	movw	r24, r16
    211a:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    211e:	c8 01       	movw	r24, r16
    2120:	0e 94 93 0e 	call	0x1d26	; 0x1d26 <_ZN16PololuQTRSensors11emittersOffEv>
    2124:	e2 e0       	ldi	r30, 0x02	; 2
    2126:	de 12       	cpse	r13, r30
    2128:	2a c0       	rjmp	.+84     	; 0x217e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    212a:	be 01       	movw	r22, r28
    212c:	6f 5f       	subi	r22, 0xFF	; 255
    212e:	7f 4f       	sbci	r23, 0xFF	; 255
    2130:	c8 01       	movw	r24, r16
    2132:	0e 94 e9 0f 	call	0x1fd2	; 0x1fd2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2136:	40 e0       	ldi	r20, 0x00	; 0
    2138:	f8 01       	movw	r30, r16
    213a:	80 85       	ldd	r24, Z+8	; 0x08
    213c:	48 17       	cp	r20, r24
    213e:	f8 f4       	brcc	.+62     	; 0x217e <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2140:	84 2f       	mov	r24, r20
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	88 0f       	add	r24, r24
    2146:	99 1f       	adc	r25, r25
    2148:	f7 01       	movw	r30, r14
    214a:	e8 0f       	add	r30, r24
    214c:	f9 1f       	adc	r31, r25
    214e:	21 e0       	ldi	r18, 0x01	; 1
    2150:	30 e0       	ldi	r19, 0x00	; 0
    2152:	2c 0f       	add	r18, r28
    2154:	3d 1f       	adc	r19, r29
    2156:	82 0f       	add	r24, r18
    2158:	93 1f       	adc	r25, r19
    215a:	d8 01       	movw	r26, r16
    215c:	1e 96       	adiw	r26, 0x0e	; 14
    215e:	2d 91       	ld	r18, X+
    2160:	3c 91       	ld	r19, X
    2162:	1f 97       	sbiw	r26, 0x0f	; 15
    2164:	dc 01       	movw	r26, r24
    2166:	8d 91       	ld	r24, X+
    2168:	9c 91       	ld	r25, X
    216a:	28 1b       	sub	r18, r24
    216c:	39 0b       	sbc	r19, r25
    216e:	80 81       	ld	r24, Z
    2170:	91 81       	ldd	r25, Z+1	; 0x01
    2172:	82 0f       	add	r24, r18
    2174:	93 1f       	adc	r25, r19
    2176:	91 83       	std	Z+1, r25	; 0x01
    2178:	80 83       	st	Z, r24
    217a:	4f 5f       	subi	r20, 0xFF	; 255
    217c:	dd cf       	rjmp	.-70     	; 0x2138 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    217e:	a0 96       	adiw	r28, 0x20	; 32
    2180:	e7 e0       	ldi	r30, 0x07	; 7
    2182:	0c 94 ec 13 	jmp	0x27d8	; 0x27d8 <__epilogue_restores__+0x16>

00002186 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    2186:	2f 92       	push	r2
    2188:	3f 92       	push	r3
    218a:	5f 92       	push	r5
    218c:	6f 92       	push	r6
    218e:	7f 92       	push	r7
    2190:	8f 92       	push	r8
    2192:	9f 92       	push	r9
    2194:	af 92       	push	r10
    2196:	bf 92       	push	r11
    2198:	cf 92       	push	r12
    219a:	df 92       	push	r13
    219c:	ef 92       	push	r14
    219e:	ff 92       	push	r15
    21a0:	0f 93       	push	r16
    21a2:	1f 93       	push	r17
    21a4:	cf 93       	push	r28
    21a6:	df 93       	push	r29
    21a8:	cd b7       	in	r28, 0x3d	; 61
    21aa:	de b7       	in	r29, 0x3e	; 62
    21ac:	c0 56       	subi	r28, 0x60	; 96
    21ae:	d1 09       	sbc	r29, r1
    21b0:	0f b6       	in	r0, 0x3f	; 63
    21b2:	f8 94       	cli
    21b4:	de bf       	out	0x3e, r29	; 62
    21b6:	0f be       	out	0x3f, r0	; 63
    21b8:	cd bf       	out	0x3d, r28	; 61
    21ba:	8c 01       	movw	r16, r24
    21bc:	4b 01       	movw	r8, r22
    21be:	5a 01       	movw	r10, r20
    21c0:	52 2e       	mov	r5, r18
    21c2:	da 01       	movw	r26, r20
    21c4:	8d 91       	ld	r24, X+
    21c6:	9c 91       	ld	r25, X
    21c8:	89 2b       	or	r24, r25
    21ca:	31 f0       	breq	.+12     	; 0x21d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    21cc:	f4 01       	movw	r30, r8
    21ce:	80 81       	ld	r24, Z
    21d0:	91 81       	ldd	r25, Z+1	; 0x01
    21d2:	89 2b       	or	r24, r25
    21d4:	f1 f4       	brne	.+60     	; 0x2212 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    21d6:	24 c0       	rjmp	.+72     	; 0x2220 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    21d8:	d8 01       	movw	r26, r16
    21da:	18 96       	adiw	r26, 0x08	; 8
    21dc:	8c 91       	ld	r24, X
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	88 0f       	add	r24, r24
    21e2:	99 1f       	adc	r25, r25
    21e4:	0e 94 fc 13 	call	0x27f8	; 0x27f8 <malloc>
    21e8:	f5 01       	movw	r30, r10
    21ea:	91 83       	std	Z+1, r25	; 0x01
    21ec:	80 83       	st	Z, r24
    21ee:	00 97       	sbiw	r24, 0x00	; 0
    21f0:	09 f4       	brne	.+2      	; 0x21f4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    21f2:	b1 c0       	rjmp	.+354    	; 0x2356 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    21f4:	fc 01       	movw	r30, r24
    21f6:	20 e0       	ldi	r18, 0x00	; 0
    21f8:	30 e0       	ldi	r19, 0x00	; 0
    21fa:	d8 01       	movw	r26, r16
    21fc:	18 96       	adiw	r26, 0x08	; 8
    21fe:	8c 91       	ld	r24, X
    2200:	90 e0       	ldi	r25, 0x00	; 0
    2202:	28 17       	cp	r18, r24
    2204:	39 07       	cpc	r19, r25
    2206:	14 f7       	brge	.-60     	; 0x21cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    2208:	11 92       	st	Z+, r1
    220a:	11 92       	st	Z+, r1
    220c:	2f 5f       	subi	r18, 0xFF	; 255
    220e:	3f 4f       	sbci	r19, 0xFF	; 255
    2210:	f4 cf       	rjmp	.-24     	; 0x21fa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    2212:	e1 2c       	mov	r14, r1
    2214:	f1 2c       	mov	r15, r1
    2216:	6e 01       	movw	r12, r28
    2218:	b1 e2       	ldi	r27, 0x21	; 33
    221a:	cb 0e       	add	r12, r27
    221c:	d1 1c       	adc	r13, r1
    221e:	21 c0       	rjmp	.+66     	; 0x2262 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    2220:	f8 01       	movw	r30, r16
    2222:	80 85       	ldd	r24, Z+8	; 0x08
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	88 0f       	add	r24, r24
    2228:	99 1f       	adc	r25, r25
    222a:	0e 94 fc 13 	call	0x27f8	; 0x27f8 <malloc>
    222e:	d4 01       	movw	r26, r8
    2230:	8d 93       	st	X+, r24
    2232:	9c 93       	st	X, r25
    2234:	00 97       	sbiw	r24, 0x00	; 0
    2236:	09 f4       	brne	.+2      	; 0x223a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    2238:	8e c0       	rjmp	.+284    	; 0x2356 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    223a:	fc 01       	movw	r30, r24
    223c:	20 e0       	ldi	r18, 0x00	; 0
    223e:	30 e0       	ldi	r19, 0x00	; 0
    2240:	d8 01       	movw	r26, r16
    2242:	18 96       	adiw	r26, 0x08	; 8
    2244:	8c 91       	ld	r24, X
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	28 17       	cp	r18, r24
    224a:	39 07       	cpc	r19, r25
    224c:	14 f7       	brge	.-60     	; 0x2212 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    224e:	d8 01       	movw	r26, r16
    2250:	1e 96       	adiw	r26, 0x0e	; 14
    2252:	8d 91       	ld	r24, X+
    2254:	9c 91       	ld	r25, X
    2256:	1f 97       	sbiw	r26, 0x0f	; 15
    2258:	81 93       	st	Z+, r24
    225a:	91 93       	st	Z+, r25
    225c:	2f 5f       	subi	r18, 0xFF	; 255
    225e:	3f 4f       	sbci	r19, 0xFF	; 255
    2260:	ef cf       	rjmp	.-34     	; 0x2240 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    2262:	45 2d       	mov	r20, r5
    2264:	be 01       	movw	r22, r28
    2266:	6f 5b       	subi	r22, 0xBF	; 191
    2268:	7f 4f       	sbci	r23, 0xFF	; 255
    226a:	c8 01       	movw	r24, r16
    226c:	0e 94 66 10 	call	0x20cc	; 0x20cc <_ZN16PololuQTRSensors4readEPjh>
    2270:	f8 01       	movw	r30, r16
    2272:	60 84       	ldd	r6, Z+8	; 0x08
    2274:	71 2c       	mov	r7, r1
    2276:	fe 01       	movw	r30, r28
    2278:	ef 5b       	subi	r30, 0xBF	; 191
    227a:	ff 4f       	sbci	r31, 0xFF	; 255
    227c:	c6 01       	movw	r24, r12
    227e:	9e 01       	movw	r18, r28
    2280:	2f 5f       	subi	r18, 0xFF	; 255
    2282:	3f 4f       	sbci	r19, 0xFF	; 255
    2284:	19 01       	movw	r2, r18
    2286:	20 e0       	ldi	r18, 0x00	; 0
    2288:	30 e0       	ldi	r19, 0x00	; 0
    228a:	26 15       	cp	r18, r6
    228c:	37 05       	cpc	r19, r7
    228e:	4c f5       	brge	.+82     	; 0x22e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    2290:	e1 14       	cp	r14, r1
    2292:	f1 04       	cpc	r15, r1
    2294:	89 f0       	breq	.+34     	; 0x22b8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    2296:	dc 01       	movw	r26, r24
    2298:	6d 91       	ld	r22, X+
    229a:	7c 91       	ld	r23, X
    229c:	40 81       	ld	r20, Z
    229e:	51 81       	ldd	r21, Z+1	; 0x01
    22a0:	64 17       	cp	r22, r20
    22a2:	75 07       	cpc	r23, r21
    22a4:	48 f0       	brcs	.+18     	; 0x22b8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    22a6:	d1 01       	movw	r26, r2
    22a8:	6d 91       	ld	r22, X+
    22aa:	7c 91       	ld	r23, X
    22ac:	40 81       	ld	r20, Z
    22ae:	51 81       	ldd	r21, Z+1	; 0x01
    22b0:	46 17       	cp	r20, r22
    22b2:	57 07       	cpc	r21, r23
    22b4:	48 f0       	brcs	.+18     	; 0x22c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    22b6:	0d c0       	rjmp	.+26     	; 0x22d2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    22b8:	40 81       	ld	r20, Z
    22ba:	51 81       	ldd	r21, Z+1	; 0x01
    22bc:	dc 01       	movw	r26, r24
    22be:	4d 93       	st	X+, r20
    22c0:	5c 93       	st	X, r21
    22c2:	e1 14       	cp	r14, r1
    22c4:	f1 04       	cpc	r15, r1
    22c6:	79 f7       	brne	.-34     	; 0x22a6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    22c8:	40 81       	ld	r20, Z
    22ca:	51 81       	ldd	r21, Z+1	; 0x01
    22cc:	d1 01       	movw	r26, r2
    22ce:	4d 93       	st	X+, r20
    22d0:	5c 93       	st	X, r21
    22d2:	2f 5f       	subi	r18, 0xFF	; 255
    22d4:	3f 4f       	sbci	r19, 0xFF	; 255
    22d6:	b2 e0       	ldi	r27, 0x02	; 2
    22d8:	2b 0e       	add	r2, r27
    22da:	31 1c       	adc	r3, r1
    22dc:	32 96       	adiw	r30, 0x02	; 2
    22de:	02 96       	adiw	r24, 0x02	; 2
    22e0:	d4 cf       	rjmp	.-88     	; 0x228a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    22e2:	ef ef       	ldi	r30, 0xFF	; 255
    22e4:	ee 1a       	sub	r14, r30
    22e6:	fe 0a       	sbc	r15, r30
    22e8:	fa e0       	ldi	r31, 0x0A	; 10
    22ea:	ef 16       	cp	r14, r31
    22ec:	f1 04       	cpc	r15, r1
    22ee:	09 f0       	breq	.+2      	; 0x22f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    22f0:	b8 cf       	rjmp	.-144    	; 0x2262 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    22f2:	9e 01       	movw	r18, r28
    22f4:	2f 5f       	subi	r18, 0xFF	; 255
    22f6:	3f 4f       	sbci	r19, 0xFF	; 255
    22f8:	79 01       	movw	r14, r18
    22fa:	36 01       	movw	r6, r12
    22fc:	80 e0       	ldi	r24, 0x00	; 0
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	f8 01       	movw	r30, r16
    2302:	20 85       	ldd	r18, Z+8	; 0x08
    2304:	30 e0       	ldi	r19, 0x00	; 0
    2306:	82 17       	cp	r24, r18
    2308:	93 07       	cpc	r25, r19
    230a:	2c f5       	brge	.+74     	; 0x2356 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    230c:	d7 01       	movw	r26, r14
    230e:	2d 91       	ld	r18, X+
    2310:	3d 91       	ld	r19, X+
    2312:	7d 01       	movw	r14, r26
    2314:	b3 01       	movw	r22, r6
    2316:	6c 19       	sub	r22, r12
    2318:	7d 09       	sbc	r23, r13
    231a:	d5 01       	movw	r26, r10
    231c:	ed 91       	ld	r30, X+
    231e:	fc 91       	ld	r31, X
    2320:	e6 0f       	add	r30, r22
    2322:	f7 1f       	adc	r31, r23
    2324:	40 81       	ld	r20, Z
    2326:	51 81       	ldd	r21, Z+1	; 0x01
    2328:	42 17       	cp	r20, r18
    232a:	53 07       	cpc	r21, r19
    232c:	10 f4       	brcc	.+4      	; 0x2332 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    232e:	31 83       	std	Z+1, r19	; 0x01
    2330:	20 83       	st	Z, r18
    2332:	f3 01       	movw	r30, r6
    2334:	21 91       	ld	r18, Z+
    2336:	31 91       	ld	r19, Z+
    2338:	3f 01       	movw	r6, r30
    233a:	d4 01       	movw	r26, r8
    233c:	ed 91       	ld	r30, X+
    233e:	fc 91       	ld	r31, X
    2340:	e6 0f       	add	r30, r22
    2342:	f7 1f       	adc	r31, r23
    2344:	40 81       	ld	r20, Z
    2346:	51 81       	ldd	r21, Z+1	; 0x01
    2348:	24 17       	cp	r18, r20
    234a:	35 07       	cpc	r19, r21
    234c:	10 f4       	brcc	.+4      	; 0x2352 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    234e:	31 83       	std	Z+1, r19	; 0x01
    2350:	20 83       	st	Z, r18
    2352:	01 96       	adiw	r24, 0x01	; 1
    2354:	d5 cf       	rjmp	.-86     	; 0x2300 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    2356:	c0 5a       	subi	r28, 0xA0	; 160
    2358:	df 4f       	sbci	r29, 0xFF	; 255
    235a:	0f b6       	in	r0, 0x3f	; 63
    235c:	f8 94       	cli
    235e:	de bf       	out	0x3e, r29	; 62
    2360:	0f be       	out	0x3f, r0	; 63
    2362:	cd bf       	out	0x3d, r28	; 61
    2364:	df 91       	pop	r29
    2366:	cf 91       	pop	r28
    2368:	1f 91       	pop	r17
    236a:	0f 91       	pop	r16
    236c:	ff 90       	pop	r15
    236e:	ef 90       	pop	r14
    2370:	df 90       	pop	r13
    2372:	cf 90       	pop	r12
    2374:	bf 90       	pop	r11
    2376:	af 90       	pop	r10
    2378:	9f 90       	pop	r9
    237a:	8f 90       	pop	r8
    237c:	7f 90       	pop	r7
    237e:	6f 90       	pop	r6
    2380:	5f 90       	pop	r5
    2382:	3f 90       	pop	r3
    2384:	2f 90       	pop	r2
    2386:	08 95       	ret

00002388 <_ZN16PololuQTRSensors9calibrateEh>:
    2388:	1f 93       	push	r17
    238a:	cf 93       	push	r28
    238c:	df 93       	push	r29
    238e:	ec 01       	movw	r28, r24
    2390:	16 2f       	mov	r17, r22
    2392:	8f ef       	ldi	r24, 0xFF	; 255
    2394:	86 0f       	add	r24, r22
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	18 f0       	brcs	.+6      	; 0x23a0 <_ZN16PololuQTRSensors9calibrateEh+0x18>
    239a:	66 23       	and	r22, r22
    239c:	59 f0       	breq	.+22     	; 0x23b4 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    239e:	14 c0       	rjmp	.+40     	; 0x23c8 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    23a0:	21 e0       	ldi	r18, 0x01	; 1
    23a2:	ae 01       	movw	r20, r28
    23a4:	4e 5f       	subi	r20, 0xFE	; 254
    23a6:	5f 4f       	sbci	r21, 0xFF	; 255
    23a8:	be 01       	movw	r22, r28
    23aa:	ce 01       	movw	r24, r28
    23ac:	0e 94 c3 10 	call	0x2186	; 0x2186 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    23b0:	12 30       	cpi	r17, 0x02	; 2
    23b2:	51 f4       	brne	.+20     	; 0x23c8 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    23b4:	ae 01       	movw	r20, r28
    23b6:	4a 5f       	subi	r20, 0xFA	; 250
    23b8:	5f 4f       	sbci	r21, 0xFF	; 255
    23ba:	be 01       	movw	r22, r28
    23bc:	6c 5f       	subi	r22, 0xFC	; 252
    23be:	7f 4f       	sbci	r23, 0xFF	; 255
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	ce 01       	movw	r24, r28
    23c4:	0e 94 c3 10 	call	0x2186	; 0x2186 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    23c8:	df 91       	pop	r29
    23ca:	cf 91       	pop	r28
    23cc:	1f 91       	pop	r17
    23ce:	08 95       	ret

000023d0 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    23d0:	a0 e0       	ldi	r26, 0x00	; 0
    23d2:	b0 e0       	ldi	r27, 0x00	; 0
    23d4:	ee ee       	ldi	r30, 0xEE	; 238
    23d6:	f1 e1       	ldi	r31, 0x11	; 17
    23d8:	0c 94 ce 13 	jmp	0x279c	; 0x279c <__prologue_saves__+0x12>
    23dc:	ec 01       	movw	r28, r24
    23de:	8b 01       	movw	r16, r22
    23e0:	b4 2e       	mov	r11, r20
    23e2:	84 2f       	mov	r24, r20
    23e4:	8d 7f       	andi	r24, 0xFD	; 253
    23e6:	51 f4       	brne	.+20     	; 0x23fc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    23e8:	8c 81       	ldd	r24, Y+4	; 0x04
    23ea:	9d 81       	ldd	r25, Y+5	; 0x05
    23ec:	89 2b       	or	r24, r25
    23ee:	09 f4       	brne	.+2      	; 0x23f2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    23f0:	97 c0       	rjmp	.+302    	; 0x2520 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    23f2:	8e 81       	ldd	r24, Y+6	; 0x06
    23f4:	9f 81       	ldd	r25, Y+7	; 0x07
    23f6:	89 2b       	or	r24, r25
    23f8:	09 f4       	brne	.+2      	; 0x23fc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    23fa:	92 c0       	rjmp	.+292    	; 0x2520 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    23fc:	8f ef       	ldi	r24, 0xFF	; 255
    23fe:	8b 0d       	add	r24, r11
    2400:	82 30       	cpi	r24, 0x02	; 2
    2402:	50 f4       	brcc	.+20     	; 0x2418 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2404:	88 81       	ld	r24, Y
    2406:	99 81       	ldd	r25, Y+1	; 0x01
    2408:	89 2b       	or	r24, r25
    240a:	09 f4       	brne	.+2      	; 0x240e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    240c:	89 c0       	rjmp	.+274    	; 0x2520 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    240e:	8a 81       	ldd	r24, Y+2	; 0x02
    2410:	9b 81       	ldd	r25, Y+3	; 0x03
    2412:	89 2b       	or	r24, r25
    2414:	09 f4       	brne	.+2      	; 0x2418 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2416:	84 c0       	rjmp	.+264    	; 0x2520 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2418:	4b 2d       	mov	r20, r11
    241a:	b8 01       	movw	r22, r16
    241c:	ce 01       	movw	r24, r28
    241e:	0e 94 66 10 	call	0x20cc	; 0x20cc <_ZN16PololuQTRSensors4readEPjh>
    2422:	78 01       	movw	r14, r16
    2424:	00 e0       	ldi	r16, 0x00	; 0
    2426:	10 e0       	ldi	r17, 0x00	; 0
    2428:	c1 2c       	mov	r12, r1
    242a:	d1 2c       	mov	r13, r1
    242c:	88 85       	ldd	r24, Y+8	; 0x08
    242e:	90 e0       	ldi	r25, 0x00	; 0
    2430:	c8 16       	cp	r12, r24
    2432:	d9 06       	cpc	r13, r25
    2434:	0c f0       	brlt	.+2      	; 0x2438 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    2436:	74 c0       	rjmp	.+232    	; 0x2520 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2438:	81 e0       	ldi	r24, 0x01	; 1
    243a:	b8 12       	cpse	r11, r24
    243c:	0a c0       	rjmp	.+20     	; 0x2452 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    243e:	ea 81       	ldd	r30, Y+2	; 0x02
    2440:	fb 81       	ldd	r31, Y+3	; 0x03
    2442:	e0 0f       	add	r30, r16
    2444:	f1 1f       	adc	r31, r17
    2446:	01 90       	ld	r0, Z+
    2448:	f0 81       	ld	r31, Z
    244a:	e0 2d       	mov	r30, r0
    244c:	a8 81       	ld	r26, Y
    244e:	b9 81       	ldd	r27, Y+1	; 0x01
    2450:	0d c0       	rjmp	.+26     	; 0x246c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    2452:	8c 81       	ldd	r24, Y+4	; 0x04
    2454:	9d 81       	ldd	r25, Y+5	; 0x05
    2456:	2e 81       	ldd	r18, Y+6	; 0x06
    2458:	3f 81       	ldd	r19, Y+7	; 0x07
    245a:	b1 10       	cpse	r11, r1
    245c:	0c c0       	rjmp	.+24     	; 0x2476 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    245e:	f9 01       	movw	r30, r18
    2460:	e0 0f       	add	r30, r16
    2462:	f1 1f       	adc	r31, r17
    2464:	01 90       	ld	r0, Z+
    2466:	f0 81       	ld	r31, Z
    2468:	e0 2d       	mov	r30, r0
    246a:	dc 01       	movw	r26, r24
    246c:	a0 0f       	add	r26, r16
    246e:	b1 1f       	adc	r27, r17
    2470:	8d 91       	ld	r24, X+
    2472:	9c 91       	ld	r25, X
    2474:	28 c0       	rjmp	.+80     	; 0x24c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    2476:	fc 01       	movw	r30, r24
    2478:	e0 0f       	add	r30, r16
    247a:	f1 1f       	adc	r31, r17
    247c:	40 81       	ld	r20, Z
    247e:	51 81       	ldd	r21, Z+1	; 0x01
    2480:	e8 81       	ld	r30, Y
    2482:	f9 81       	ldd	r31, Y+1	; 0x01
    2484:	e0 0f       	add	r30, r16
    2486:	f1 1f       	adc	r31, r17
    2488:	80 81       	ld	r24, Z
    248a:	91 81       	ldd	r25, Z+1	; 0x01
    248c:	ee 85       	ldd	r30, Y+14	; 0x0e
    248e:	ff 85       	ldd	r31, Y+15	; 0x0f
    2490:	48 17       	cp	r20, r24
    2492:	59 07       	cpc	r21, r25
    2494:	10 f4       	brcc	.+4      	; 0x249a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    2496:	cf 01       	movw	r24, r30
    2498:	04 c0       	rjmp	.+8      	; 0x24a2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    249a:	8e 0f       	add	r24, r30
    249c:	9f 1f       	adc	r25, r31
    249e:	84 1b       	sub	r24, r20
    24a0:	95 0b       	sbc	r25, r21
    24a2:	d9 01       	movw	r26, r18
    24a4:	a0 0f       	add	r26, r16
    24a6:	b1 1f       	adc	r27, r17
    24a8:	2d 91       	ld	r18, X+
    24aa:	3c 91       	ld	r19, X
    24ac:	aa 81       	ldd	r26, Y+2	; 0x02
    24ae:	bb 81       	ldd	r27, Y+3	; 0x03
    24b0:	a0 0f       	add	r26, r16
    24b2:	b1 1f       	adc	r27, r17
    24b4:	4d 91       	ld	r20, X+
    24b6:	5c 91       	ld	r21, X
    24b8:	24 17       	cp	r18, r20
    24ba:	35 07       	cpc	r19, r21
    24bc:	20 f0       	brcs	.+8      	; 0x24c6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    24be:	e4 0f       	add	r30, r20
    24c0:	f5 1f       	adc	r31, r21
    24c2:	e2 1b       	sub	r30, r18
    24c4:	f3 0b       	sbc	r31, r19
    24c6:	e8 1b       	sub	r30, r24
    24c8:	f9 0b       	sbc	r31, r25
    24ca:	a9 f0       	breq	.+42     	; 0x24f6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    24cc:	d7 01       	movw	r26, r14
    24ce:	2d 91       	ld	r18, X+
    24d0:	3c 91       	ld	r19, X
    24d2:	40 e0       	ldi	r20, 0x00	; 0
    24d4:	50 e0       	ldi	r21, 0x00	; 0
    24d6:	28 1b       	sub	r18, r24
    24d8:	39 0b       	sbc	r19, r25
    24da:	41 09       	sbc	r20, r1
    24dc:	51 09       	sbc	r21, r1
    24de:	a8 ee       	ldi	r26, 0xE8	; 232
    24e0:	b3 e0       	ldi	r27, 0x03	; 3
    24e2:	0e 94 b2 13 	call	0x2764	; 0x2764 <__muluhisi3>
    24e6:	9f 01       	movw	r18, r30
    24e8:	40 e0       	ldi	r20, 0x00	; 0
    24ea:	50 e0       	ldi	r21, 0x00	; 0
    24ec:	0e 94 7e 13 	call	0x26fc	; 0x26fc <__divmodsi4>
    24f0:	37 fd       	sbrc	r19, 7
    24f2:	0a c0       	rjmp	.+20     	; 0x2508 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    24f4:	02 c0       	rjmp	.+4      	; 0x24fa <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    24f6:	20 e0       	ldi	r18, 0x00	; 0
    24f8:	30 e0       	ldi	r19, 0x00	; 0
    24fa:	29 3e       	cpi	r18, 0xE9	; 233
    24fc:	b3 e0       	ldi	r27, 0x03	; 3
    24fe:	3b 07       	cpc	r19, r27
    2500:	2c f0       	brlt	.+10     	; 0x250c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2502:	28 ee       	ldi	r18, 0xE8	; 232
    2504:	33 e0       	ldi	r19, 0x03	; 3
    2506:	02 c0       	rjmp	.+4      	; 0x250c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2508:	20 e0       	ldi	r18, 0x00	; 0
    250a:	30 e0       	ldi	r19, 0x00	; 0
    250c:	f7 01       	movw	r30, r14
    250e:	21 93       	st	Z+, r18
    2510:	31 93       	st	Z+, r19
    2512:	7f 01       	movw	r14, r30
    2514:	ff ef       	ldi	r31, 0xFF	; 255
    2516:	cf 1a       	sub	r12, r31
    2518:	df 0a       	sbc	r13, r31
    251a:	0e 5f       	subi	r16, 0xFE	; 254
    251c:	1f 4f       	sbci	r17, 0xFF	; 255
    251e:	86 cf       	rjmp	.-244    	; 0x242c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    2520:	cd b7       	in	r28, 0x3d	; 61
    2522:	de b7       	in	r29, 0x3e	; 62
    2524:	e9 e0       	ldi	r30, 0x09	; 9
    2526:	0c 94 ea 13 	jmp	0x27d4	; 0x27d4 <__epilogue_restores__+0x12>

0000252a <_ZN16PololuQTRSensors8readLineEPjhh>:
    252a:	a0 e0       	ldi	r26, 0x00	; 0
    252c:	b0 e0       	ldi	r27, 0x00	; 0
    252e:	eb e9       	ldi	r30, 0x9B	; 155
    2530:	f2 e1       	ldi	r31, 0x12	; 18
    2532:	0c 94 c5 13 	jmp	0x278a	; 0x278a <__prologue_saves__>
    2536:	ec 01       	movw	r28, r24
    2538:	8b 01       	movw	r16, r22
    253a:	82 2e       	mov	r8, r18
    253c:	0e 94 e8 11 	call	0x23d0	; 0x23d0 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2540:	28 84       	ldd	r2, Y+8	; 0x08
    2542:	e8 01       	movw	r28, r16
    2544:	41 2c       	mov	r4, r1
    2546:	51 2c       	mov	r5, r1
    2548:	32 01       	movw	r6, r4
    254a:	00 e0       	ldi	r16, 0x00	; 0
    254c:	10 e0       	ldi	r17, 0x00	; 0
    254e:	c1 2c       	mov	r12, r1
    2550:	d1 2c       	mov	r13, r1
    2552:	76 01       	movw	r14, r12
    2554:	31 2c       	mov	r3, r1
    2556:	91 2c       	mov	r9, r1
    2558:	58 ee       	ldi	r21, 0xE8	; 232
    255a:	a5 2e       	mov	r10, r21
    255c:	53 e0       	ldi	r21, 0x03	; 3
    255e:	b5 2e       	mov	r11, r21
    2560:	92 14       	cp	r9, r2
    2562:	21 f1       	breq	.+72     	; 0x25ac <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    2564:	e9 91       	ld	r30, Y+
    2566:	f9 91       	ld	r31, Y+
    2568:	88 20       	and	r8, r8
    256a:	21 f0       	breq	.+8      	; 0x2574 <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    256c:	c5 01       	movw	r24, r10
    256e:	8e 1b       	sub	r24, r30
    2570:	9f 0b       	sbc	r25, r31
    2572:	fc 01       	movw	r30, r24
    2574:	e9 3c       	cpi	r30, 0xC9	; 201
    2576:	f1 05       	cpc	r31, r1
    2578:	24 f4       	brge	.+8      	; 0x2582 <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    257a:	e3 33       	cpi	r30, 0x33	; 51
    257c:	f1 05       	cpc	r31, r1
    257e:	74 f0       	brlt	.+28     	; 0x259c <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    2580:	02 c0       	rjmp	.+4      	; 0x2586 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    2582:	33 24       	eor	r3, r3
    2584:	33 94       	inc	r3
    2586:	df 01       	movw	r26, r30
    2588:	a3 01       	movw	r20, r6
    258a:	92 01       	movw	r18, r4
    258c:	0e 94 bd 13 	call	0x277a	; 0x277a <__mulshisi3>
    2590:	c6 0e       	add	r12, r22
    2592:	d7 1e       	adc	r13, r23
    2594:	e8 1e       	adc	r14, r24
    2596:	f9 1e       	adc	r15, r25
    2598:	0e 0f       	add	r16, r30
    259a:	1f 1f       	adc	r17, r31
    259c:	93 94       	inc	r9
    259e:	98 ee       	ldi	r25, 0xE8	; 232
    25a0:	49 0e       	add	r4, r25
    25a2:	93 e0       	ldi	r25, 0x03	; 3
    25a4:	59 1e       	adc	r5, r25
    25a6:	61 1c       	adc	r6, r1
    25a8:	71 1c       	adc	r7, r1
    25aa:	da cf       	rjmp	.-76     	; 0x2560 <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    25ac:	31 10       	cpse	r3, r1
    25ae:	1e c0       	rjmp	.+60     	; 0x25ec <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    25b0:	49 2d       	mov	r20, r9
    25b2:	50 e0       	ldi	r21, 0x00	; 0
    25b4:	41 50       	subi	r20, 0x01	; 1
    25b6:	51 09       	sbc	r21, r1
    25b8:	24 ef       	ldi	r18, 0xF4	; 244
    25ba:	31 e0       	ldi	r19, 0x01	; 1
    25bc:	42 9f       	mul	r20, r18
    25be:	c0 01       	movw	r24, r0
    25c0:	43 9f       	mul	r20, r19
    25c2:	90 0d       	add	r25, r0
    25c4:	52 9f       	mul	r21, r18
    25c6:	90 0d       	add	r25, r0
    25c8:	11 24       	eor	r1, r1
    25ca:	20 91 e3 01 	lds	r18, 0x01E3	; 0x8001e3 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    25ce:	30 91 e4 01 	lds	r19, 0x01E4	; 0x8001e4 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    25d2:	28 17       	cp	r18, r24
    25d4:	39 07       	cpc	r19, r25
    25d6:	b4 f0       	brlt	.+44     	; 0x2604 <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    25d8:	88 ee       	ldi	r24, 0xE8	; 232
    25da:	93 e0       	ldi	r25, 0x03	; 3
    25dc:	48 9f       	mul	r20, r24
    25de:	90 01       	movw	r18, r0
    25e0:	49 9f       	mul	r20, r25
    25e2:	30 0d       	add	r19, r0
    25e4:	58 9f       	mul	r21, r24
    25e6:	30 0d       	add	r19, r0
    25e8:	11 24       	eor	r1, r1
    25ea:	0e c0       	rjmp	.+28     	; 0x2608 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    25ec:	98 01       	movw	r18, r16
    25ee:	40 e0       	ldi	r20, 0x00	; 0
    25f0:	50 e0       	ldi	r21, 0x00	; 0
    25f2:	c7 01       	movw	r24, r14
    25f4:	b6 01       	movw	r22, r12
    25f6:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
    25fa:	30 93 e4 01 	sts	0x01E4, r19	; 0x8001e4 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value+0x1>
    25fe:	20 93 e3 01 	sts	0x01E3, r18	; 0x8001e3 <_ZZN16PololuQTRSensors8readLineEPjhhE10last_value>
    2602:	02 c0       	rjmp	.+4      	; 0x2608 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    2604:	20 e0       	ldi	r18, 0x00	; 0
    2606:	30 e0       	ldi	r19, 0x00	; 0
    2608:	c9 01       	movw	r24, r18
    260a:	cd b7       	in	r28, 0x3d	; 61
    260c:	de b7       	in	r29, 0x3e	; 62
    260e:	e2 e1       	ldi	r30, 0x12	; 18
    2610:	0c 94 e1 13 	jmp	0x27c2	; 0x27c2 <__epilogue_restores__>

00002614 <_ZN16PololuQTRSensorsD1Ev>:
    2614:	cf 93       	push	r28
    2616:	df 93       	push	r29
    2618:	ec 01       	movw	r28, r24
    261a:	8a 81       	ldd	r24, Y+2	; 0x02
    261c:	9b 81       	ldd	r25, Y+3	; 0x03
    261e:	00 97       	sbiw	r24, 0x00	; 0
    2620:	11 f0       	breq	.+4      	; 0x2626 <_ZN16PololuQTRSensorsD1Ev+0x12>
    2622:	0e 94 94 14 	call	0x2928	; 0x2928 <free>
    2626:	8e 81       	ldd	r24, Y+6	; 0x06
    2628:	9f 81       	ldd	r25, Y+7	; 0x07
    262a:	00 97       	sbiw	r24, 0x00	; 0
    262c:	11 f0       	breq	.+4      	; 0x2632 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    262e:	0e 94 94 14 	call	0x2928	; 0x2928 <free>
    2632:	88 81       	ld	r24, Y
    2634:	99 81       	ldd	r25, Y+1	; 0x01
    2636:	00 97       	sbiw	r24, 0x00	; 0
    2638:	11 f0       	breq	.+4      	; 0x263e <_ZN16PololuQTRSensorsD1Ev+0x2a>
    263a:	0e 94 94 14 	call	0x2928	; 0x2928 <free>
    263e:	8c 81       	ldd	r24, Y+4	; 0x04
    2640:	9d 81       	ldd	r25, Y+5	; 0x05
    2642:	00 97       	sbiw	r24, 0x00	; 0
    2644:	11 f0       	breq	.+4      	; 0x264a <_ZN16PololuQTRSensorsD1Ev+0x36>
    2646:	0e 94 94 14 	call	0x2928	; 0x2928 <free>
    264a:	df 91       	pop	r29
    264c:	cf 91       	pop	r28
    264e:	08 95       	ret

00002650 <__udivmodqi4>:
    2650:	99 1b       	sub	r25, r25
    2652:	79 e0       	ldi	r23, 0x09	; 9
    2654:	04 c0       	rjmp	.+8      	; 0x265e <__udivmodqi4_ep>

00002656 <__udivmodqi4_loop>:
    2656:	99 1f       	adc	r25, r25
    2658:	96 17       	cp	r25, r22
    265a:	08 f0       	brcs	.+2      	; 0x265e <__udivmodqi4_ep>
    265c:	96 1b       	sub	r25, r22

0000265e <__udivmodqi4_ep>:
    265e:	88 1f       	adc	r24, r24
    2660:	7a 95       	dec	r23
    2662:	c9 f7       	brne	.-14     	; 0x2656 <__udivmodqi4_loop>
    2664:	80 95       	com	r24
    2666:	08 95       	ret

00002668 <__udivmodhi4>:
    2668:	aa 1b       	sub	r26, r26
    266a:	bb 1b       	sub	r27, r27
    266c:	51 e1       	ldi	r21, 0x11	; 17
    266e:	07 c0       	rjmp	.+14     	; 0x267e <__udivmodhi4_ep>

00002670 <__udivmodhi4_loop>:
    2670:	aa 1f       	adc	r26, r26
    2672:	bb 1f       	adc	r27, r27
    2674:	a6 17       	cp	r26, r22
    2676:	b7 07       	cpc	r27, r23
    2678:	10 f0       	brcs	.+4      	; 0x267e <__udivmodhi4_ep>
    267a:	a6 1b       	sub	r26, r22
    267c:	b7 0b       	sbc	r27, r23

0000267e <__udivmodhi4_ep>:
    267e:	88 1f       	adc	r24, r24
    2680:	99 1f       	adc	r25, r25
    2682:	5a 95       	dec	r21
    2684:	a9 f7       	brne	.-22     	; 0x2670 <__udivmodhi4_loop>
    2686:	80 95       	com	r24
    2688:	90 95       	com	r25
    268a:	bc 01       	movw	r22, r24
    268c:	cd 01       	movw	r24, r26
    268e:	08 95       	ret

00002690 <__divmodhi4>:
    2690:	97 fb       	bst	r25, 7
    2692:	07 2e       	mov	r0, r23
    2694:	16 f4       	brtc	.+4      	; 0x269a <__divmodhi4+0xa>
    2696:	00 94       	com	r0
    2698:	07 d0       	rcall	.+14     	; 0x26a8 <__divmodhi4_neg1>
    269a:	77 fd       	sbrc	r23, 7
    269c:	09 d0       	rcall	.+18     	; 0x26b0 <__divmodhi4_neg2>
    269e:	0e 94 34 13 	call	0x2668	; 0x2668 <__udivmodhi4>
    26a2:	07 fc       	sbrc	r0, 7
    26a4:	05 d0       	rcall	.+10     	; 0x26b0 <__divmodhi4_neg2>
    26a6:	3e f4       	brtc	.+14     	; 0x26b6 <__divmodhi4_exit>

000026a8 <__divmodhi4_neg1>:
    26a8:	90 95       	com	r25
    26aa:	81 95       	neg	r24
    26ac:	9f 4f       	sbci	r25, 0xFF	; 255
    26ae:	08 95       	ret

000026b0 <__divmodhi4_neg2>:
    26b0:	70 95       	com	r23
    26b2:	61 95       	neg	r22
    26b4:	7f 4f       	sbci	r23, 0xFF	; 255

000026b6 <__divmodhi4_exit>:
    26b6:	08 95       	ret

000026b8 <__udivmodsi4>:
    26b8:	a1 e2       	ldi	r26, 0x21	; 33
    26ba:	1a 2e       	mov	r1, r26
    26bc:	aa 1b       	sub	r26, r26
    26be:	bb 1b       	sub	r27, r27
    26c0:	fd 01       	movw	r30, r26
    26c2:	0d c0       	rjmp	.+26     	; 0x26de <__udivmodsi4_ep>

000026c4 <__udivmodsi4_loop>:
    26c4:	aa 1f       	adc	r26, r26
    26c6:	bb 1f       	adc	r27, r27
    26c8:	ee 1f       	adc	r30, r30
    26ca:	ff 1f       	adc	r31, r31
    26cc:	a2 17       	cp	r26, r18
    26ce:	b3 07       	cpc	r27, r19
    26d0:	e4 07       	cpc	r30, r20
    26d2:	f5 07       	cpc	r31, r21
    26d4:	20 f0       	brcs	.+8      	; 0x26de <__udivmodsi4_ep>
    26d6:	a2 1b       	sub	r26, r18
    26d8:	b3 0b       	sbc	r27, r19
    26da:	e4 0b       	sbc	r30, r20
    26dc:	f5 0b       	sbc	r31, r21

000026de <__udivmodsi4_ep>:
    26de:	66 1f       	adc	r22, r22
    26e0:	77 1f       	adc	r23, r23
    26e2:	88 1f       	adc	r24, r24
    26e4:	99 1f       	adc	r25, r25
    26e6:	1a 94       	dec	r1
    26e8:	69 f7       	brne	.-38     	; 0x26c4 <__udivmodsi4_loop>
    26ea:	60 95       	com	r22
    26ec:	70 95       	com	r23
    26ee:	80 95       	com	r24
    26f0:	90 95       	com	r25
    26f2:	9b 01       	movw	r18, r22
    26f4:	ac 01       	movw	r20, r24
    26f6:	bd 01       	movw	r22, r26
    26f8:	cf 01       	movw	r24, r30
    26fa:	08 95       	ret

000026fc <__divmodsi4>:
    26fc:	05 2e       	mov	r0, r21
    26fe:	97 fb       	bst	r25, 7
    2700:	1e f4       	brtc	.+6      	; 0x2708 <__divmodsi4+0xc>
    2702:	00 94       	com	r0
    2704:	0e 94 95 13 	call	0x272a	; 0x272a <__negsi2>
    2708:	57 fd       	sbrc	r21, 7
    270a:	07 d0       	rcall	.+14     	; 0x271a <__divmodsi4_neg2>
    270c:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__udivmodsi4>
    2710:	07 fc       	sbrc	r0, 7
    2712:	03 d0       	rcall	.+6      	; 0x271a <__divmodsi4_neg2>
    2714:	4e f4       	brtc	.+18     	; 0x2728 <__divmodsi4_exit>
    2716:	0c 94 95 13 	jmp	0x272a	; 0x272a <__negsi2>

0000271a <__divmodsi4_neg2>:
    271a:	50 95       	com	r21
    271c:	40 95       	com	r20
    271e:	30 95       	com	r19
    2720:	21 95       	neg	r18
    2722:	3f 4f       	sbci	r19, 0xFF	; 255
    2724:	4f 4f       	sbci	r20, 0xFF	; 255
    2726:	5f 4f       	sbci	r21, 0xFF	; 255

00002728 <__divmodsi4_exit>:
    2728:	08 95       	ret

0000272a <__negsi2>:
    272a:	90 95       	com	r25
    272c:	80 95       	com	r24
    272e:	70 95       	com	r23
    2730:	61 95       	neg	r22
    2732:	7f 4f       	sbci	r23, 0xFF	; 255
    2734:	8f 4f       	sbci	r24, 0xFF	; 255
    2736:	9f 4f       	sbci	r25, 0xFF	; 255
    2738:	08 95       	ret

0000273a <__tablejump2__>:
    273a:	ee 0f       	add	r30, r30
    273c:	ff 1f       	adc	r31, r31
    273e:	05 90       	lpm	r0, Z+
    2740:	f4 91       	lpm	r31, Z
    2742:	e0 2d       	mov	r30, r0
    2744:	09 94       	ijmp

00002746 <__umulhisi3>:
    2746:	a2 9f       	mul	r26, r18
    2748:	b0 01       	movw	r22, r0
    274a:	b3 9f       	mul	r27, r19
    274c:	c0 01       	movw	r24, r0
    274e:	a3 9f       	mul	r26, r19
    2750:	70 0d       	add	r23, r0
    2752:	81 1d       	adc	r24, r1
    2754:	11 24       	eor	r1, r1
    2756:	91 1d       	adc	r25, r1
    2758:	b2 9f       	mul	r27, r18
    275a:	70 0d       	add	r23, r0
    275c:	81 1d       	adc	r24, r1
    275e:	11 24       	eor	r1, r1
    2760:	91 1d       	adc	r25, r1
    2762:	08 95       	ret

00002764 <__muluhisi3>:
    2764:	0e 94 a3 13 	call	0x2746	; 0x2746 <__umulhisi3>
    2768:	a5 9f       	mul	r26, r21
    276a:	90 0d       	add	r25, r0
    276c:	b4 9f       	mul	r27, r20
    276e:	90 0d       	add	r25, r0
    2770:	a4 9f       	mul	r26, r20
    2772:	80 0d       	add	r24, r0
    2774:	91 1d       	adc	r25, r1
    2776:	11 24       	eor	r1, r1
    2778:	08 95       	ret

0000277a <__mulshisi3>:
    277a:	b7 ff       	sbrs	r27, 7
    277c:	0c 94 b2 13 	jmp	0x2764	; 0x2764 <__muluhisi3>

00002780 <__mulohisi3>:
    2780:	0e 94 b2 13 	call	0x2764	; 0x2764 <__muluhisi3>
    2784:	82 1b       	sub	r24, r18
    2786:	93 0b       	sbc	r25, r19
    2788:	08 95       	ret

0000278a <__prologue_saves__>:
    278a:	2f 92       	push	r2
    278c:	3f 92       	push	r3
    278e:	4f 92       	push	r4
    2790:	5f 92       	push	r5
    2792:	6f 92       	push	r6
    2794:	7f 92       	push	r7
    2796:	8f 92       	push	r8
    2798:	9f 92       	push	r9
    279a:	af 92       	push	r10
    279c:	bf 92       	push	r11
    279e:	cf 92       	push	r12
    27a0:	df 92       	push	r13
    27a2:	ef 92       	push	r14
    27a4:	ff 92       	push	r15
    27a6:	0f 93       	push	r16
    27a8:	1f 93       	push	r17
    27aa:	cf 93       	push	r28
    27ac:	df 93       	push	r29
    27ae:	cd b7       	in	r28, 0x3d	; 61
    27b0:	de b7       	in	r29, 0x3e	; 62
    27b2:	ca 1b       	sub	r28, r26
    27b4:	db 0b       	sbc	r29, r27
    27b6:	0f b6       	in	r0, 0x3f	; 63
    27b8:	f8 94       	cli
    27ba:	de bf       	out	0x3e, r29	; 62
    27bc:	0f be       	out	0x3f, r0	; 63
    27be:	cd bf       	out	0x3d, r28	; 61
    27c0:	09 94       	ijmp

000027c2 <__epilogue_restores__>:
    27c2:	2a 88       	ldd	r2, Y+18	; 0x12
    27c4:	39 88       	ldd	r3, Y+17	; 0x11
    27c6:	48 88       	ldd	r4, Y+16	; 0x10
    27c8:	5f 84       	ldd	r5, Y+15	; 0x0f
    27ca:	6e 84       	ldd	r6, Y+14	; 0x0e
    27cc:	7d 84       	ldd	r7, Y+13	; 0x0d
    27ce:	8c 84       	ldd	r8, Y+12	; 0x0c
    27d0:	9b 84       	ldd	r9, Y+11	; 0x0b
    27d2:	aa 84       	ldd	r10, Y+10	; 0x0a
    27d4:	b9 84       	ldd	r11, Y+9	; 0x09
    27d6:	c8 84       	ldd	r12, Y+8	; 0x08
    27d8:	df 80       	ldd	r13, Y+7	; 0x07
    27da:	ee 80       	ldd	r14, Y+6	; 0x06
    27dc:	fd 80       	ldd	r15, Y+5	; 0x05
    27de:	0c 81       	ldd	r16, Y+4	; 0x04
    27e0:	1b 81       	ldd	r17, Y+3	; 0x03
    27e2:	aa 81       	ldd	r26, Y+2	; 0x02
    27e4:	b9 81       	ldd	r27, Y+1	; 0x01
    27e6:	ce 0f       	add	r28, r30
    27e8:	d1 1d       	adc	r29, r1
    27ea:	0f b6       	in	r0, 0x3f	; 63
    27ec:	f8 94       	cli
    27ee:	de bf       	out	0x3e, r29	; 62
    27f0:	0f be       	out	0x3f, r0	; 63
    27f2:	cd bf       	out	0x3d, r28	; 61
    27f4:	ed 01       	movw	r28, r26
    27f6:	08 95       	ret

000027f8 <malloc>:
    27f8:	0f 93       	push	r16
    27fa:	1f 93       	push	r17
    27fc:	cf 93       	push	r28
    27fe:	df 93       	push	r29
    2800:	82 30       	cpi	r24, 0x02	; 2
    2802:	91 05       	cpc	r25, r1
    2804:	10 f4       	brcc	.+4      	; 0x280a <malloc+0x12>
    2806:	82 e0       	ldi	r24, 0x02	; 2
    2808:	90 e0       	ldi	r25, 0x00	; 0
    280a:	e0 91 63 02 	lds	r30, 0x0263	; 0x800263 <__flp>
    280e:	f0 91 64 02 	lds	r31, 0x0264	; 0x800264 <__flp+0x1>
    2812:	20 e0       	ldi	r18, 0x00	; 0
    2814:	30 e0       	ldi	r19, 0x00	; 0
    2816:	a0 e0       	ldi	r26, 0x00	; 0
    2818:	b0 e0       	ldi	r27, 0x00	; 0
    281a:	30 97       	sbiw	r30, 0x00	; 0
    281c:	19 f1       	breq	.+70     	; 0x2864 <malloc+0x6c>
    281e:	40 81       	ld	r20, Z
    2820:	51 81       	ldd	r21, Z+1	; 0x01
    2822:	02 81       	ldd	r16, Z+2	; 0x02
    2824:	13 81       	ldd	r17, Z+3	; 0x03
    2826:	48 17       	cp	r20, r24
    2828:	59 07       	cpc	r21, r25
    282a:	c8 f0       	brcs	.+50     	; 0x285e <malloc+0x66>
    282c:	84 17       	cp	r24, r20
    282e:	95 07       	cpc	r25, r21
    2830:	69 f4       	brne	.+26     	; 0x284c <malloc+0x54>
    2832:	10 97       	sbiw	r26, 0x00	; 0
    2834:	31 f0       	breq	.+12     	; 0x2842 <malloc+0x4a>
    2836:	12 96       	adiw	r26, 0x02	; 2
    2838:	0c 93       	st	X, r16
    283a:	12 97       	sbiw	r26, 0x02	; 2
    283c:	13 96       	adiw	r26, 0x03	; 3
    283e:	1c 93       	st	X, r17
    2840:	27 c0       	rjmp	.+78     	; 0x2890 <malloc+0x98>
    2842:	00 93 63 02 	sts	0x0263, r16	; 0x800263 <__flp>
    2846:	10 93 64 02 	sts	0x0264, r17	; 0x800264 <__flp+0x1>
    284a:	22 c0       	rjmp	.+68     	; 0x2890 <malloc+0x98>
    284c:	21 15       	cp	r18, r1
    284e:	31 05       	cpc	r19, r1
    2850:	19 f0       	breq	.+6      	; 0x2858 <malloc+0x60>
    2852:	42 17       	cp	r20, r18
    2854:	53 07       	cpc	r21, r19
    2856:	18 f4       	brcc	.+6      	; 0x285e <malloc+0x66>
    2858:	9a 01       	movw	r18, r20
    285a:	bd 01       	movw	r22, r26
    285c:	ef 01       	movw	r28, r30
    285e:	df 01       	movw	r26, r30
    2860:	f8 01       	movw	r30, r16
    2862:	db cf       	rjmp	.-74     	; 0x281a <malloc+0x22>
    2864:	21 15       	cp	r18, r1
    2866:	31 05       	cpc	r19, r1
    2868:	f9 f0       	breq	.+62     	; 0x28a8 <malloc+0xb0>
    286a:	28 1b       	sub	r18, r24
    286c:	39 0b       	sbc	r19, r25
    286e:	24 30       	cpi	r18, 0x04	; 4
    2870:	31 05       	cpc	r19, r1
    2872:	80 f4       	brcc	.+32     	; 0x2894 <malloc+0x9c>
    2874:	8a 81       	ldd	r24, Y+2	; 0x02
    2876:	9b 81       	ldd	r25, Y+3	; 0x03
    2878:	61 15       	cp	r22, r1
    287a:	71 05       	cpc	r23, r1
    287c:	21 f0       	breq	.+8      	; 0x2886 <malloc+0x8e>
    287e:	fb 01       	movw	r30, r22
    2880:	93 83       	std	Z+3, r25	; 0x03
    2882:	82 83       	std	Z+2, r24	; 0x02
    2884:	04 c0       	rjmp	.+8      	; 0x288e <malloc+0x96>
    2886:	90 93 64 02 	sts	0x0264, r25	; 0x800264 <__flp+0x1>
    288a:	80 93 63 02 	sts	0x0263, r24	; 0x800263 <__flp>
    288e:	fe 01       	movw	r30, r28
    2890:	32 96       	adiw	r30, 0x02	; 2
    2892:	44 c0       	rjmp	.+136    	; 0x291c <malloc+0x124>
    2894:	fe 01       	movw	r30, r28
    2896:	e2 0f       	add	r30, r18
    2898:	f3 1f       	adc	r31, r19
    289a:	81 93       	st	Z+, r24
    289c:	91 93       	st	Z+, r25
    289e:	22 50       	subi	r18, 0x02	; 2
    28a0:	31 09       	sbc	r19, r1
    28a2:	39 83       	std	Y+1, r19	; 0x01
    28a4:	28 83       	st	Y, r18
    28a6:	3a c0       	rjmp	.+116    	; 0x291c <malloc+0x124>
    28a8:	20 91 61 02 	lds	r18, 0x0261	; 0x800261 <__brkval>
    28ac:	30 91 62 02 	lds	r19, 0x0262	; 0x800262 <__brkval+0x1>
    28b0:	23 2b       	or	r18, r19
    28b2:	41 f4       	brne	.+16     	; 0x28c4 <malloc+0xcc>
    28b4:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    28b8:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    28bc:	30 93 62 02 	sts	0x0262, r19	; 0x800262 <__brkval+0x1>
    28c0:	20 93 61 02 	sts	0x0261, r18	; 0x800261 <__brkval>
    28c4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    28c8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    28cc:	21 15       	cp	r18, r1
    28ce:	31 05       	cpc	r19, r1
    28d0:	41 f4       	brne	.+16     	; 0x28e2 <malloc+0xea>
    28d2:	2d b7       	in	r18, 0x3d	; 61
    28d4:	3e b7       	in	r19, 0x3e	; 62
    28d6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    28da:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    28de:	24 1b       	sub	r18, r20
    28e0:	35 0b       	sbc	r19, r21
    28e2:	e0 91 61 02 	lds	r30, 0x0261	; 0x800261 <__brkval>
    28e6:	f0 91 62 02 	lds	r31, 0x0262	; 0x800262 <__brkval+0x1>
    28ea:	e2 17       	cp	r30, r18
    28ec:	f3 07       	cpc	r31, r19
    28ee:	a0 f4       	brcc	.+40     	; 0x2918 <malloc+0x120>
    28f0:	2e 1b       	sub	r18, r30
    28f2:	3f 0b       	sbc	r19, r31
    28f4:	28 17       	cp	r18, r24
    28f6:	39 07       	cpc	r19, r25
    28f8:	78 f0       	brcs	.+30     	; 0x2918 <malloc+0x120>
    28fa:	ac 01       	movw	r20, r24
    28fc:	4e 5f       	subi	r20, 0xFE	; 254
    28fe:	5f 4f       	sbci	r21, 0xFF	; 255
    2900:	24 17       	cp	r18, r20
    2902:	35 07       	cpc	r19, r21
    2904:	48 f0       	brcs	.+18     	; 0x2918 <malloc+0x120>
    2906:	4e 0f       	add	r20, r30
    2908:	5f 1f       	adc	r21, r31
    290a:	50 93 62 02 	sts	0x0262, r21	; 0x800262 <__brkval+0x1>
    290e:	40 93 61 02 	sts	0x0261, r20	; 0x800261 <__brkval>
    2912:	81 93       	st	Z+, r24
    2914:	91 93       	st	Z+, r25
    2916:	02 c0       	rjmp	.+4      	; 0x291c <malloc+0x124>
    2918:	e0 e0       	ldi	r30, 0x00	; 0
    291a:	f0 e0       	ldi	r31, 0x00	; 0
    291c:	cf 01       	movw	r24, r30
    291e:	df 91       	pop	r29
    2920:	cf 91       	pop	r28
    2922:	1f 91       	pop	r17
    2924:	0f 91       	pop	r16
    2926:	08 95       	ret

00002928 <free>:
    2928:	cf 93       	push	r28
    292a:	df 93       	push	r29
    292c:	00 97       	sbiw	r24, 0x00	; 0
    292e:	09 f4       	brne	.+2      	; 0x2932 <free+0xa>
    2930:	81 c0       	rjmp	.+258    	; 0x2a34 <free+0x10c>
    2932:	fc 01       	movw	r30, r24
    2934:	32 97       	sbiw	r30, 0x02	; 2
    2936:	13 82       	std	Z+3, r1	; 0x03
    2938:	12 82       	std	Z+2, r1	; 0x02
    293a:	a0 91 63 02 	lds	r26, 0x0263	; 0x800263 <__flp>
    293e:	b0 91 64 02 	lds	r27, 0x0264	; 0x800264 <__flp+0x1>
    2942:	10 97       	sbiw	r26, 0x00	; 0
    2944:	81 f4       	brne	.+32     	; 0x2966 <free+0x3e>
    2946:	20 81       	ld	r18, Z
    2948:	31 81       	ldd	r19, Z+1	; 0x01
    294a:	82 0f       	add	r24, r18
    294c:	93 1f       	adc	r25, r19
    294e:	20 91 61 02 	lds	r18, 0x0261	; 0x800261 <__brkval>
    2952:	30 91 62 02 	lds	r19, 0x0262	; 0x800262 <__brkval+0x1>
    2956:	28 17       	cp	r18, r24
    2958:	39 07       	cpc	r19, r25
    295a:	51 f5       	brne	.+84     	; 0x29b0 <free+0x88>
    295c:	f0 93 62 02 	sts	0x0262, r31	; 0x800262 <__brkval+0x1>
    2960:	e0 93 61 02 	sts	0x0261, r30	; 0x800261 <__brkval>
    2964:	67 c0       	rjmp	.+206    	; 0x2a34 <free+0x10c>
    2966:	ed 01       	movw	r28, r26
    2968:	20 e0       	ldi	r18, 0x00	; 0
    296a:	30 e0       	ldi	r19, 0x00	; 0
    296c:	ce 17       	cp	r28, r30
    296e:	df 07       	cpc	r29, r31
    2970:	40 f4       	brcc	.+16     	; 0x2982 <free+0x5a>
    2972:	4a 81       	ldd	r20, Y+2	; 0x02
    2974:	5b 81       	ldd	r21, Y+3	; 0x03
    2976:	9e 01       	movw	r18, r28
    2978:	41 15       	cp	r20, r1
    297a:	51 05       	cpc	r21, r1
    297c:	f1 f0       	breq	.+60     	; 0x29ba <free+0x92>
    297e:	ea 01       	movw	r28, r20
    2980:	f5 cf       	rjmp	.-22     	; 0x296c <free+0x44>
    2982:	d3 83       	std	Z+3, r29	; 0x03
    2984:	c2 83       	std	Z+2, r28	; 0x02
    2986:	40 81       	ld	r20, Z
    2988:	51 81       	ldd	r21, Z+1	; 0x01
    298a:	84 0f       	add	r24, r20
    298c:	95 1f       	adc	r25, r21
    298e:	c8 17       	cp	r28, r24
    2990:	d9 07       	cpc	r29, r25
    2992:	59 f4       	brne	.+22     	; 0x29aa <free+0x82>
    2994:	88 81       	ld	r24, Y
    2996:	99 81       	ldd	r25, Y+1	; 0x01
    2998:	84 0f       	add	r24, r20
    299a:	95 1f       	adc	r25, r21
    299c:	02 96       	adiw	r24, 0x02	; 2
    299e:	91 83       	std	Z+1, r25	; 0x01
    29a0:	80 83       	st	Z, r24
    29a2:	8a 81       	ldd	r24, Y+2	; 0x02
    29a4:	9b 81       	ldd	r25, Y+3	; 0x03
    29a6:	93 83       	std	Z+3, r25	; 0x03
    29a8:	82 83       	std	Z+2, r24	; 0x02
    29aa:	21 15       	cp	r18, r1
    29ac:	31 05       	cpc	r19, r1
    29ae:	29 f4       	brne	.+10     	; 0x29ba <free+0x92>
    29b0:	f0 93 64 02 	sts	0x0264, r31	; 0x800264 <__flp+0x1>
    29b4:	e0 93 63 02 	sts	0x0263, r30	; 0x800263 <__flp>
    29b8:	3d c0       	rjmp	.+122    	; 0x2a34 <free+0x10c>
    29ba:	e9 01       	movw	r28, r18
    29bc:	fb 83       	std	Y+3, r31	; 0x03
    29be:	ea 83       	std	Y+2, r30	; 0x02
    29c0:	49 91       	ld	r20, Y+
    29c2:	59 91       	ld	r21, Y+
    29c4:	c4 0f       	add	r28, r20
    29c6:	d5 1f       	adc	r29, r21
    29c8:	ec 17       	cp	r30, r28
    29ca:	fd 07       	cpc	r31, r29
    29cc:	61 f4       	brne	.+24     	; 0x29e6 <free+0xbe>
    29ce:	80 81       	ld	r24, Z
    29d0:	91 81       	ldd	r25, Z+1	; 0x01
    29d2:	84 0f       	add	r24, r20
    29d4:	95 1f       	adc	r25, r21
    29d6:	02 96       	adiw	r24, 0x02	; 2
    29d8:	e9 01       	movw	r28, r18
    29da:	99 83       	std	Y+1, r25	; 0x01
    29dc:	88 83       	st	Y, r24
    29de:	82 81       	ldd	r24, Z+2	; 0x02
    29e0:	93 81       	ldd	r25, Z+3	; 0x03
    29e2:	9b 83       	std	Y+3, r25	; 0x03
    29e4:	8a 83       	std	Y+2, r24	; 0x02
    29e6:	e0 e0       	ldi	r30, 0x00	; 0
    29e8:	f0 e0       	ldi	r31, 0x00	; 0
    29ea:	12 96       	adiw	r26, 0x02	; 2
    29ec:	8d 91       	ld	r24, X+
    29ee:	9c 91       	ld	r25, X
    29f0:	13 97       	sbiw	r26, 0x03	; 3
    29f2:	00 97       	sbiw	r24, 0x00	; 0
    29f4:	19 f0       	breq	.+6      	; 0x29fc <free+0xd4>
    29f6:	fd 01       	movw	r30, r26
    29f8:	dc 01       	movw	r26, r24
    29fa:	f7 cf       	rjmp	.-18     	; 0x29ea <free+0xc2>
    29fc:	8d 91       	ld	r24, X+
    29fe:	9c 91       	ld	r25, X
    2a00:	11 97       	sbiw	r26, 0x01	; 1
    2a02:	9d 01       	movw	r18, r26
    2a04:	2e 5f       	subi	r18, 0xFE	; 254
    2a06:	3f 4f       	sbci	r19, 0xFF	; 255
    2a08:	82 0f       	add	r24, r18
    2a0a:	93 1f       	adc	r25, r19
    2a0c:	20 91 61 02 	lds	r18, 0x0261	; 0x800261 <__brkval>
    2a10:	30 91 62 02 	lds	r19, 0x0262	; 0x800262 <__brkval+0x1>
    2a14:	28 17       	cp	r18, r24
    2a16:	39 07       	cpc	r19, r25
    2a18:	69 f4       	brne	.+26     	; 0x2a34 <free+0x10c>
    2a1a:	30 97       	sbiw	r30, 0x00	; 0
    2a1c:	29 f4       	brne	.+10     	; 0x2a28 <free+0x100>
    2a1e:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <__flp+0x1>
    2a22:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <__flp>
    2a26:	02 c0       	rjmp	.+4      	; 0x2a2c <free+0x104>
    2a28:	13 82       	std	Z+3, r1	; 0x03
    2a2a:	12 82       	std	Z+2, r1	; 0x02
    2a2c:	b0 93 62 02 	sts	0x0262, r27	; 0x800262 <__brkval+0x1>
    2a30:	a0 93 61 02 	sts	0x0261, r26	; 0x800261 <__brkval>
    2a34:	df 91       	pop	r29
    2a36:	cf 91       	pop	r28
    2a38:	08 95       	ret

00002a3a <__do_global_dtors>:
    2a3a:	10 e0       	ldi	r17, 0x00	; 0
    2a3c:	c9 e3       	ldi	r28, 0x39	; 57
    2a3e:	d0 e0       	ldi	r29, 0x00	; 0
    2a40:	04 c0       	rjmp	.+8      	; 0x2a4a <__do_global_dtors+0x10>
    2a42:	fe 01       	movw	r30, r28
    2a44:	0e 94 9d 13 	call	0x273a	; 0x273a <__tablejump2__>
    2a48:	21 96       	adiw	r28, 0x01	; 1
    2a4a:	ca 33       	cpi	r28, 0x3A	; 58
    2a4c:	d1 07       	cpc	r29, r17
    2a4e:	c9 f7       	brne	.-14     	; 0x2a42 <__do_global_dtors+0x8>
    2a50:	f8 94       	cli

00002a52 <__stop_program>:
    2a52:	ff cf       	rjmp	.-2      	; 0x2a52 <__stop_program>
