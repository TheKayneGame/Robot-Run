/*
 * serial.c
 *
 *  Created on: May 12, 2018
 *      Author: Kayne
 */
#include "kayneLib.h"

BOOL Status;
HANDLE hComm;

const char ComPortName[] = "\\\\.\\COM24";

int initSerial() {

	/*----------------------------------- Opening the Serial Port --------------------------------------------*/

	hComm = CreateFile(ComPortName,             // Name of the Port to be Opened
			GENERIC_READ | GENERIC_WRITE,      // Read/Write Access
			0,                               // No Sharing, ports cant be shared
			NULL,                              // No Security
			OPEN_EXISTING,                     // Open existing port only
			0,                                 // Non Overlapped I/O
			NULL);                             // Null for Comm Devices

	if (hComm == INVALID_HANDLE_VALUE) {
		printfln("Incorrect COM Settings");
		return 0;
	}
	/*------------------------------- Setting the Parameters for the SerialPort ------------------------------*/

	DCB dcbSerialParams = { 0 };                   // Initializing DCB structure
	dcbSerialParams.DCBlength = sizeof(dcbSerialParams);

	Status = GetCommState(hComm, &dcbSerialParams); //retreives  the current settings

	if (Status == FALSE) {
		printfln("Fail at Retrieves");
		return 0;
	}

	dcbSerialParams.BaudRate = CBR_9600;      // Setting BaudRate = 9600
	dcbSerialParams.ByteSize = 8;             // Setting ByteSize = 8
	dcbSerialParams.StopBits = ONESTOPBIT;    // Setting StopBits = 1
	dcbSerialParams.Parity = NOPARITY;      // Setting Parity = None

	Status = SetCommState(hComm, &dcbSerialParams); //Configuring the port according to settings in DCB

	if (Status == FALSE) {
		printf("DCB \n");
		return 0;
	} else {
		printfln("   Setting DCB Structure Successfull\n");
		printfln("       Baudrate = %lu", dcbSerialParams.BaudRate);
		printfln("       ByteSize = %d", dcbSerialParams.ByteSize);
		printfln("       StopBits = %d", dcbSerialParams.StopBits);
		printfln("       Parity   = %d", dcbSerialParams.Parity);
	}

	/*------------------------------------ Setting Timeouts --------------------------------------------------*/

	COMMTIMEOUTS timeouttime = { 0 };

	timeouttime.ReadIntervalTimeout = 50;
	timeouttime.ReadTotalTimeoutConstant = 50;
	timeouttime.ReadTotalTimeoutMultiplier = 10;
	timeouttime.WriteTotalTimeoutConstant = 100;
	timeouttime.WriteTotalTimeoutMultiplier = 100;

	if (SetCommTimeouts(hComm, &timeouttime) == FALSE) {
		printfln("Failed setting timout");
		return 0;
	}
	return 1;
}

