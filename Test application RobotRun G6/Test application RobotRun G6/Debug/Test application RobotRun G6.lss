
Test application RobotRun G6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001884  00001918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001884  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800122  00800122  0000193a  2**0
                  ALLOC
  3 .stab         000023dc  00000000  00000000  0000193c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002573  00000000  00000000  00003d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  0000628b  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000062cc  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000030  00000000  00000000  0000630c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00000a1b  00000000  00000000  0000633c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000006c4  00000000  00000000  00006d57  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000601  00000000  00000000  0000741b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000a4  00000000  00000000  00007a1c  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000047f  00000000  00000000  00007ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000067d  00000000  00000000  00007f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000020  00000000  00000000  000085bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__ctors_end>
       4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
       c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      24:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__vector_9>
      28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      34:	0c 94 fe 09 	jmp	0x13fc	; 0x13fc <__vector_13>
      38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
      68:	05 a8       	ldd	r0, Z+53	; 0x35
      6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
      6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <main+0x56>
      6e:	4e b9       	out	0x0e, r20	; 14
      70:	38 36       	cpi	r19, 0x68	; 104
      72:	a9 02       	muls	r26, r25
      74:	0c 50       	subi	r16, 0x0C	; 12
      76:	b9 91       	ld	r27, Y+
      78:	86 88       	ldd	r8, Z+22	; 0x16
      7a:	08 3c       	cpi	r16, 0xC8	; 200
      7c:	a6 aa       	std	Z+54, r10	; 0x36
      7e:	aa 2a       	or	r10, r26
      80:	be 00       	.word	0x00be	; ????
      82:	00 00       	nop
      84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__trampolines_end>:
      86:	3e 67       	ori	r19, 0x7E	; 126
      88:	33 32       	cpi	r19, 0x23	; 35
      8a:	3e 3e       	cpi	r19, 0xEE	; 238
      8c:	63 33       	cpi	r22, 0x33	; 51
      8e:	32 00       	.word	0x0032	; ????

00000090 <__c.2470>:
      90:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000009a <__c.2468>:
      9a:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

000000a4 <__ctors_end>:
      a4:	11 24       	eor	r1, r1
      a6:	1f be       	out	0x3f, r1	; 63
      a8:	cf ef       	ldi	r28, 0xFF	; 255
      aa:	d8 e0       	ldi	r29, 0x08	; 8
      ac:	de bf       	out	0x3e, r29	; 62
      ae:	cd bf       	out	0x3d, r28	; 61

000000b0 <__do_copy_data>:
      b0:	11 e0       	ldi	r17, 0x01	; 1
      b2:	a0 e0       	ldi	r26, 0x00	; 0
      b4:	b1 e0       	ldi	r27, 0x01	; 1
      b6:	e4 e8       	ldi	r30, 0x84	; 132
      b8:	f8 e1       	ldi	r31, 0x18	; 24
      ba:	02 c0       	rjmp	.+4      	; 0xc0 <__do_copy_data+0x10>
      bc:	05 90       	lpm	r0, Z+
      be:	0d 92       	st	X+, r0
      c0:	a2 32       	cpi	r26, 0x22	; 34
      c2:	b1 07       	cpc	r27, r17
      c4:	d9 f7       	brne	.-10     	; 0xbc <__do_copy_data+0xc>

000000c6 <__do_clear_bss>:
      c6:	21 e0       	ldi	r18, 0x01	; 1
      c8:	a2 e2       	ldi	r26, 0x22	; 34
      ca:	b1 e0       	ldi	r27, 0x01	; 1
      cc:	01 c0       	rjmp	.+2      	; 0xd0 <.do_clear_bss_start>

000000ce <.do_clear_bss_loop>:
      ce:	1d 92       	st	X+, r1

000000d0 <.do_clear_bss_start>:
      d0:	ad 33       	cpi	r26, 0x3D	; 61
      d2:	b2 07       	cpc	r27, r18
      d4:	e1 f7       	brne	.-8      	; 0xce <.do_clear_bss_loop>
      d6:	0e 94 be 04 	call	0x97c	; 0x97c <main>
      da:	0c 94 40 0c 	jmp	0x1880	; 0x1880 <_exit>

000000de <__bad_interrupt>:
      de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <motorControl>:
		play_from_program_space(PSTR(">g32>>c32"));
		delay_ms(1000);
	return 0;
}

void motorControl(int speed, char direction, float aggressionFactor){
      e2:	2f 92       	push	r2
      e4:	3f 92       	push	r3
      e6:	4f 92       	push	r4
      e8:	5f 92       	push	r5
      ea:	6f 92       	push	r6
      ec:	7f 92       	push	r7
      ee:	8f 92       	push	r8
      f0:	9f 92       	push	r9
      f2:	af 92       	push	r10
      f4:	bf 92       	push	r11
      f6:	cf 92       	push	r12
      f8:	df 92       	push	r13
      fa:	ef 92       	push	r14
      fc:	ff 92       	push	r15
      fe:	0f 93       	push	r16
     100:	1f 93       	push	r17
     102:	cf 93       	push	r28
     104:	df 93       	push	r29
     106:	cd b7       	in	r28, 0x3d	; 61
     108:	de b7       	in	r29, 0x3e	; 62
     10a:	66 97       	sbiw	r28, 0x16	; 22
     10c:	0f b6       	in	r0, 0x3f	; 63
     10e:	f8 94       	cli
     110:	de bf       	out	0x3e, r29	; 62
     112:	0f be       	out	0x3f, r0	; 63
     114:	cd bf       	out	0x3d, r28	; 61
     116:	1c 01       	movw	r2, r24
     118:	29 83       	std	Y+1, r18	; 0x01
     11a:	3a 83       	std	Y+2, r19	; 0x02
     11c:	4b 83       	std	Y+3, r20	; 0x03
     11e:	5c 83       	std	Y+4, r21	; 0x04
	int setSpeedRight = 0;
	int setSpeedLeft = 0;
	
	//directions direction;

	switch (direction){
     120:	66 34       	cpi	r22, 0x46	; 70
     122:	61 f0       	breq	.+24     	; 0x13c <motorControl+0x5a>
     124:	20 f4       	brcc	.+8      	; 0x12e <motorControl+0x4c>
     126:	62 34       	cpi	r22, 0x42	; 66
     128:	09 f4       	brne	.+2      	; 0x12c <motorControl+0x4a>
     12a:	95 c0       	rjmp	.+298    	; 0x256 <motorControl+0x174>
     12c:	08 c4       	rjmp	.+2064   	; 0x93e <__stack+0x3f>
     12e:	6c 34       	cpi	r22, 0x4C	; 76
     130:	09 f4       	brne	.+2      	; 0x134 <motorControl+0x52>
     132:	a9 c2       	rjmp	.+1362   	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
     134:	62 35       	cpi	r22, 0x52	; 82
     136:	09 f4       	brne	.+2      	; 0x13a <motorControl+0x58>
     138:	1b c1       	rjmp	.+566    	; 0x370 <motorControl+0x28e>
     13a:	01 c4       	rjmp	.+2050   	; 0x93e <__stack+0x3f>
		case 'F':
		
		setSpeed = speed - speedCurrent;
     13c:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <speedCurrent>
     140:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <speedCurrent+0x1>
     144:	91 01       	movw	r18, r2
     146:	28 1b       	sub	r18, r24
     148:	39 0b       	sbc	r19, r25
     14a:	45 e6       	ldi	r20, 0x65	; 101
     14c:	50 e0       	ldi	r21, 0x00	; 0
     14e:	5a 87       	std	Y+10, r21	; 0x0a
     150:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     152:	41 2c       	mov	r4, r1
     154:	51 2c       	mov	r5, r1
     156:	32 01       	movw	r6, r4
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     158:	03 2e       	mov	r0, r19
     15a:	00 0c       	add	r0, r0
     15c:	44 0b       	sbc	r20, r20
     15e:	55 0b       	sbc	r21, r21
     160:	2d 83       	std	Y+5, r18	; 0x05
     162:	3e 83       	std	Y+6, r19	; 0x06
     164:	4f 83       	std	Y+7, r20	; 0x07
     166:	58 87       	std	Y+8, r21	; 0x08
		case 'F':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     168:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     16c:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );
     16e:	2b ed       	ldi	r18, 0xDB	; 219
     170:	3f e0       	ldi	r19, 0x0F	; 15
     172:	49 ec       	ldi	r20, 0xC9	; 201
     174:	50 e4       	ldi	r21, 0x40	; 64
     176:	c3 01       	movw	r24, r6
     178:	b2 01       	movw	r22, r4
     17a:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     17e:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     182:	23 e8       	ldi	r18, 0x83	; 131
     184:	39 ef       	ldi	r19, 0xF9	; 249
     186:	42 e2       	ldi	r20, 0x22	; 34
     188:	5e e3       	ldi	r21, 0x3E	; 62
     18a:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     18e:	9b 01       	movw	r18, r22
     190:	ac 01       	movw	r20, r24
     192:	c3 01       	movw	r24, r6
     194:	b2 01       	movw	r22, r4
     196:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     19a:	4b 01       	movw	r8, r22
     19c:	5c 01       	movw	r10, r24
     19e:	6d 81       	ldd	r22, Y+5	; 0x05
     1a0:	7e 81       	ldd	r23, Y+6	; 0x06
     1a2:	8f 81       	ldd	r24, Y+7	; 0x07
     1a4:	98 85       	ldd	r25, Y+8	; 0x08
     1a6:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     1aa:	9b 01       	movw	r18, r22
     1ac:	ac 01       	movw	r20, r24
     1ae:	c5 01       	movw	r24, r10
     1b0:	b4 01       	movw	r22, r8
     1b2:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     1b6:	4b 01       	movw	r8, r22
     1b8:	5c 01       	movw	r10, r24
     1ba:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     1be:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     1c2:	07 2e       	mov	r0, r23
     1c4:	00 0c       	add	r0, r0
     1c6:	88 0b       	sbc	r24, r24
     1c8:	99 0b       	sbc	r25, r25
     1ca:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     1ce:	9b 01       	movw	r18, r22
     1d0:	ac 01       	movw	r20, r24
     1d2:	c5 01       	movw	r24, r10
     1d4:	b4 01       	movw	r22, r8
     1d6:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     1da:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     1de:	dc 01       	movw	r26, r24
     1e0:	cb 01       	movw	r24, r22
     1e2:	bc 01       	movw	r22, r24
     1e4:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     1e8:	48 01       	movw	r8, r16
     1ea:	11 0f       	add	r17, r17
     1ec:	aa 08       	sbc	r10, r10
     1ee:	bb 08       	sbc	r11, r11
     1f0:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     1f4:	68 19       	sub	r22, r8
     1f6:	79 09       	sbc	r23, r9
     1f8:	8a 09       	sbc	r24, r10
     1fa:	9b 09       	sbc	r25, r11
     1fc:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     200:	6b 01       	movw	r12, r22
     202:	7c 01       	movw	r14, r24
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	40 e2       	ldi	r20, 0x20	; 32
     20a:	51 e4       	ldi	r21, 0x41	; 65
     20c:	69 81       	ldd	r22, Y+1	; 0x01
     20e:	7a 81       	ldd	r23, Y+2	; 0x02
     210:	8b 81       	ldd	r24, Y+3	; 0x03
     212:	9c 81       	ldd	r25, Y+4	; 0x04
     214:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     218:	9b 01       	movw	r18, r22
     21a:	ac 01       	movw	r20, r24
     21c:	c7 01       	movw	r24, r14
     21e:	b6 01       	movw	r22, r12
     220:	0e 94 58 05 	call	0xab0	; 0xab0 <__cmpsf2>
     224:	88 23       	and	r24, r24
     226:	24 f3       	brlt	.-56     	; 0x1f0 <motorControl+0x10e>
	switch (direction){
		case 'F':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     228:	2a e0       	ldi	r18, 0x0A	; 10
     22a:	37 ed       	ldi	r19, 0xD7	; 215
     22c:	43 e2       	ldi	r20, 0x23	; 35
     22e:	5c e3       	ldi	r21, 0x3C	; 60
     230:	c3 01       	movw	r24, r6
     232:	b2 01       	movw	r22, r4
     234:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     238:	2b 01       	movw	r4, r22
     23a:	3c 01       	movw	r6, r24
     23c:	a9 85       	ldd	r26, Y+9	; 0x09
     23e:	ba 85       	ldd	r27, Y+10	; 0x0a
     240:	11 97       	sbiw	r26, 0x01	; 1
     242:	ba 87       	std	Y+10, r27	; 0x0a
     244:	a9 87       	std	Y+9, r26	; 0x09
     246:	ab 2b       	or	r26, r27
     248:	09 f0       	breq	.+2      	; 0x24c <motorControl+0x16a>
     24a:	8e cf       	rjmp	.-228    	; 0x168 <motorControl+0x86>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrent = speed;
     24c:	30 92 3a 01 	sts	0x013A, r3	; 0x80013a <speedCurrent+0x1>
     250:	20 92 39 01 	sts	0x0139, r2	; 0x800139 <speedCurrent>
		break;
     254:	7a c3       	rjmp	.+1780   	; 0x94a <__stack+0x4b>
		
		case 'B':
		
		setSpeed = speed - speedCurrent;
     256:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <speedCurrent>
     25a:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <speedCurrent+0x1>
     25e:	91 01       	movw	r18, r2
     260:	28 1b       	sub	r18, r24
     262:	39 0b       	sbc	r19, r25
     264:	45 e6       	ldi	r20, 0x65	; 101
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	5a 87       	std	Y+10, r21	; 0x0a
     26a:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     26c:	41 2c       	mov	r4, r1
     26e:	51 2c       	mov	r5, r1
     270:	32 01       	movw	r6, r4
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     272:	03 2e       	mov	r0, r19
     274:	00 0c       	add	r0, r0
     276:	44 0b       	sbc	r20, r20
     278:	55 0b       	sbc	r21, r21
     27a:	2d 83       	std	Y+5, r18	; 0x05
     27c:	3e 83       	std	Y+6, r19	; 0x06
     27e:	4f 83       	std	Y+7, r20	; 0x07
     280:	58 87       	std	Y+8, r21	; 0x08
		case 'B':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     282:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     286:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
     288:	2b ed       	ldi	r18, 0xDB	; 219
     28a:	3f e0       	ldi	r19, 0x0F	; 15
     28c:	49 ec       	ldi	r20, 0xC9	; 201
     28e:	50 e4       	ldi	r21, 0x40	; 64
     290:	c3 01       	movw	r24, r6
     292:	b2 01       	movw	r22, r4
     294:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     298:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     29c:	23 e8       	ldi	r18, 0x83	; 131
     29e:	39 ef       	ldi	r19, 0xF9	; 249
     2a0:	42 e2       	ldi	r20, 0x22	; 34
     2a2:	5e e3       	ldi	r21, 0x3E	; 62
     2a4:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     2a8:	9b 01       	movw	r18, r22
     2aa:	ac 01       	movw	r20, r24
     2ac:	c3 01       	movw	r24, r6
     2ae:	b2 01       	movw	r22, r4
     2b0:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     2b4:	4b 01       	movw	r8, r22
     2b6:	5c 01       	movw	r10, r24
     2b8:	6d 81       	ldd	r22, Y+5	; 0x05
     2ba:	7e 81       	ldd	r23, Y+6	; 0x06
     2bc:	8f 81       	ldd	r24, Y+7	; 0x07
     2be:	98 85       	ldd	r25, Y+8	; 0x08
     2c0:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     2c4:	9b 01       	movw	r18, r22
     2c6:	ac 01       	movw	r20, r24
     2c8:	c5 01       	movw	r24, r10
     2ca:	b4 01       	movw	r22, r8
     2cc:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     2d0:	4b 01       	movw	r8, r22
     2d2:	5c 01       	movw	r10, r24
     2d4:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     2d8:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     2dc:	07 2e       	mov	r0, r23
     2de:	00 0c       	add	r0, r0
     2e0:	88 0b       	sbc	r24, r24
     2e2:	99 0b       	sbc	r25, r25
     2e4:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     2e8:	9b 01       	movw	r18, r22
     2ea:	ac 01       	movw	r20, r24
     2ec:	c5 01       	movw	r24, r10
     2ee:	b4 01       	movw	r22, r8
     2f0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     2f4:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     2f8:	dc 01       	movw	r26, r24
     2fa:	cb 01       	movw	r24, r22
     2fc:	bc 01       	movw	r22, r24
     2fe:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     302:	48 01       	movw	r8, r16
     304:	11 0f       	add	r17, r17
     306:	aa 08       	sbc	r10, r10
     308:	bb 08       	sbc	r11, r11
     30a:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     30e:	68 19       	sub	r22, r8
     310:	79 09       	sbc	r23, r9
     312:	8a 09       	sbc	r24, r10
     314:	9b 09       	sbc	r25, r11
     316:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     31a:	6b 01       	movw	r12, r22
     31c:	7c 01       	movw	r14, r24
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e2       	ldi	r20, 0x20	; 32
     324:	51 e4       	ldi	r21, 0x41	; 65
     326:	69 81       	ldd	r22, Y+1	; 0x01
     328:	7a 81       	ldd	r23, Y+2	; 0x02
     32a:	8b 81       	ldd	r24, Y+3	; 0x03
     32c:	9c 81       	ldd	r25, Y+4	; 0x04
     32e:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     332:	9b 01       	movw	r18, r22
     334:	ac 01       	movw	r20, r24
     336:	c7 01       	movw	r24, r14
     338:	b6 01       	movw	r22, r12
     33a:	0e 94 58 05 	call	0xab0	; 0xab0 <__cmpsf2>
     33e:	88 23       	and	r24, r24
     340:	24 f3       	brlt	.-56     	; 0x30a <motorControl+0x228>
		
		case 'B':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     342:	2a e0       	ldi	r18, 0x0A	; 10
     344:	37 ed       	ldi	r19, 0xD7	; 215
     346:	43 e2       	ldi	r20, 0x23	; 35
     348:	5c e3       	ldi	r21, 0x3C	; 60
     34a:	c3 01       	movw	r24, r6
     34c:	b2 01       	movw	r22, r4
     34e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     352:	2b 01       	movw	r4, r22
     354:	3c 01       	movw	r6, r24
     356:	a9 85       	ldd	r26, Y+9	; 0x09
     358:	ba 85       	ldd	r27, Y+10	; 0x0a
     35a:	11 97       	sbiw	r26, 0x01	; 1
     35c:	ba 87       	std	Y+10, r27	; 0x0a
     35e:	a9 87       	std	Y+9, r26	; 0x09
     360:	ab 2b       	or	r26, r27
     362:	09 f0       	breq	.+2      	; 0x366 <motorControl+0x284>
     364:	8e cf       	rjmp	.-228    	; 0x282 <motorControl+0x1a0>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrent = speed;
     366:	30 92 3a 01 	sts	0x013A, r3	; 0x80013a <speedCurrent+0x1>
     36a:	20 92 39 01 	sts	0x0139, r2	; 0x800139 <speedCurrent>
		break;
     36e:	ed c2       	rjmp	.+1498   	; 0x94a <__stack+0x4b>

		case 'R':
		
		setSpeedRight = speed + speedCurrentRight;
     370:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <speedCurrentRight>
     374:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     378:	82 0d       	add	r24, r2
     37a:	93 1d       	adc	r25, r3
		setSpeedLeft = speed - speedCurrentLeft;
     37c:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <speedCurrentLeft>
     380:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     384:	a1 01       	movw	r20, r2
     386:	42 1b       	sub	r20, r18
     388:	53 0b       	sbc	r21, r19
     38a:	9a 01       	movw	r18, r20
     38c:	05 e6       	ldi	r16, 0x65	; 101
     38e:	10 e0       	ldi	r17, 0x00	; 0
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     390:	1d 82       	std	Y+5, r1	; 0x05
     392:	1e 82       	std	Y+6, r1	; 0x06
     394:	1f 82       	std	Y+7, r1	; 0x07
     396:	18 86       	std	Y+8, r1	; 0x08
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     398:	ac 01       	movw	r20, r24
     39a:	99 0f       	add	r25, r25
     39c:	66 0b       	sbc	r22, r22
     39e:	77 0b       	sbc	r23, r23
     3a0:	4d 87       	std	Y+13, r20	; 0x0d
     3a2:	5e 87       	std	Y+14, r21	; 0x0e
     3a4:	6f 87       	std	Y+15, r22	; 0x0f
     3a6:	78 8b       	std	Y+16, r23	; 0x10
     3a8:	b9 01       	movw	r22, r18
     3aa:	33 0f       	add	r19, r19
     3ac:	88 0b       	sbc	r24, r24
     3ae:	99 0b       	sbc	r25, r25
     3b0:	69 8b       	std	Y+17, r22	; 0x11
     3b2:	7a 8b       	std	Y+18, r23	; 0x12
     3b4:	8b 8b       	std	Y+19, r24	; 0x13
     3b6:	9c 8b       	std	Y+20, r25	; 0x14
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     3b8:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     3bc:	7e 8b       	std	Y+22, r23	; 0x16
     3be:	6d 8b       	std	Y+21, r22	; 0x15
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     3c0:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     3c4:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     3c8:	07 2e       	mov	r0, r23
     3ca:	00 0c       	add	r0, r0
     3cc:	88 0b       	sbc	r24, r24
     3ce:	99 0b       	sbc	r25, r25
     3d0:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     3d4:	69 87       	std	Y+9, r22	; 0x09
     3d6:	7a 87       	std	Y+10, r23	; 0x0a
     3d8:	8b 87       	std	Y+11, r24	; 0x0b
     3da:	9c 87       	std	Y+12, r25	; 0x0c
     3dc:	2b ed       	ldi	r18, 0xDB	; 219
     3de:	3f e0       	ldi	r19, 0x0F	; 15
     3e0:	49 ec       	ldi	r20, 0xC9	; 201
     3e2:	50 e4       	ldi	r21, 0x40	; 64
     3e4:	6d 81       	ldd	r22, Y+5	; 0x05
     3e6:	7e 81       	ldd	r23, Y+6	; 0x06
     3e8:	8f 81       	ldd	r24, Y+7	; 0x07
     3ea:	98 85       	ldd	r25, Y+8	; 0x08
     3ec:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     3f0:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
     3f4:	23 e8       	ldi	r18, 0x83	; 131
     3f6:	39 ef       	ldi	r19, 0xF9	; 249
     3f8:	42 e2       	ldi	r20, 0x22	; 34
     3fa:	5e e3       	ldi	r21, 0x3E	; 62
     3fc:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     400:	2d 81       	ldd	r18, Y+5	; 0x05
     402:	3e 81       	ldd	r19, Y+6	; 0x06
     404:	4f 81       	ldd	r20, Y+7	; 0x07
     406:	58 85       	ldd	r21, Y+8	; 0x08
     408:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     40c:	4b 01       	movw	r8, r22
     40e:	5c 01       	movw	r10, r24
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     410:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     414:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     418:	07 2e       	mov	r0, r23
     41a:	00 0c       	add	r0, r0
     41c:	88 0b       	sbc	r24, r24
     41e:	99 0b       	sbc	r25, r25
     420:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     424:	2b 01       	movw	r4, r22
     426:	3c 01       	movw	r6, r24
     428:	6d 85       	ldd	r22, Y+13	; 0x0d
     42a:	7e 85       	ldd	r23, Y+14	; 0x0e
     42c:	8f 85       	ldd	r24, Y+15	; 0x0f
     42e:	98 89       	ldd	r25, Y+16	; 0x10
     430:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     434:	a5 01       	movw	r20, r10
     436:	94 01       	movw	r18, r8
     438:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     43c:	9b 01       	movw	r18, r22
     43e:	ac 01       	movw	r20, r24
     440:	c3 01       	movw	r24, r6
     442:	b2 01       	movw	r22, r4
     444:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     448:	29 85       	ldd	r18, Y+9	; 0x09
     44a:	3a 85       	ldd	r19, Y+10	; 0x0a
     44c:	4b 85       	ldd	r20, Y+11	; 0x0b
     44e:	5c 85       	ldd	r21, Y+12	; 0x0c
     450:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     454:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     458:	2b 01       	movw	r4, r22
     45a:	3c 01       	movw	r6, r24
     45c:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     460:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     464:	07 2e       	mov	r0, r23
     466:	00 0c       	add	r0, r0
     468:	88 0b       	sbc	r24, r24
     46a:	99 0b       	sbc	r25, r25
     46c:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     470:	6b 01       	movw	r12, r22
     472:	7c 01       	movw	r14, r24
     474:	69 89       	ldd	r22, Y+17	; 0x11
     476:	7a 89       	ldd	r23, Y+18	; 0x12
     478:	8b 89       	ldd	r24, Y+19	; 0x13
     47a:	9c 89       	ldd	r25, Y+20	; 0x14
     47c:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     480:	a5 01       	movw	r20, r10
     482:	94 01       	movw	r18, r8
     484:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     488:	9b 01       	movw	r18, r22
     48a:	ac 01       	movw	r20, r24
     48c:	c7 01       	movw	r24, r14
     48e:	b6 01       	movw	r22, r12
     490:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     494:	29 85       	ldd	r18, Y+9	; 0x09
     496:	3a 85       	ldd	r19, Y+10	; 0x0a
     498:	4b 85       	ldd	r20, Y+11	; 0x0b
     49a:	5c 85       	ldd	r21, Y+12	; 0x0c
     49c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     4a0:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	b2 01       	movw	r22, r4
     4aa:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     4ae:	8d 89       	ldd	r24, Y+21	; 0x15
     4b0:	9e 89       	ldd	r25, Y+22	; 0x16
     4b2:	4c 01       	movw	r8, r24
     4b4:	99 0f       	add	r25, r25
     4b6:	aa 08       	sbc	r10, r10
     4b8:	bb 08       	sbc	r11, r11
     4ba:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     4be:	6b 01       	movw	r12, r22
     4c0:	7c 01       	movw	r14, r24
     4c2:	20 e0       	ldi	r18, 0x00	; 0
     4c4:	30 e0       	ldi	r19, 0x00	; 0
     4c6:	40 e2       	ldi	r20, 0x20	; 32
     4c8:	51 e4       	ldi	r21, 0x41	; 65
     4ca:	69 81       	ldd	r22, Y+1	; 0x01
     4cc:	7a 81       	ldd	r23, Y+2	; 0x02
     4ce:	8b 81       	ldd	r24, Y+3	; 0x03
     4d0:	9c 81       	ldd	r25, Y+4	; 0x04
     4d2:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     4d6:	2b 01       	movw	r4, r22
     4d8:	3c 01       	movw	r6, r24
     4da:	c7 01       	movw	r24, r14
     4dc:	b6 01       	movw	r22, r12
     4de:	68 19       	sub	r22, r8
     4e0:	79 09       	sbc	r23, r9
     4e2:	8a 09       	sbc	r24, r10
     4e4:	9b 09       	sbc	r25, r11
     4e6:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     4ea:	a3 01       	movw	r20, r6
     4ec:	92 01       	movw	r18, r4
     4ee:	0e 94 58 05 	call	0xab0	; 0xab0 <__cmpsf2>
     4f2:	88 23       	and	r24, r24
     4f4:	14 f3       	brlt	.-60     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
		case 'R':
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     4f6:	2a e0       	ldi	r18, 0x0A	; 10
     4f8:	37 ed       	ldi	r19, 0xD7	; 215
     4fa:	43 e2       	ldi	r20, 0x23	; 35
     4fc:	5c e3       	ldi	r21, 0x3C	; 60
     4fe:	6d 81       	ldd	r22, Y+5	; 0x05
     500:	7e 81       	ldd	r23, Y+6	; 0x06
     502:	8f 81       	ldd	r24, Y+7	; 0x07
     504:	98 85       	ldd	r25, Y+8	; 0x08
     506:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     50a:	6d 83       	std	Y+5, r22	; 0x05
     50c:	7e 83       	std	Y+6, r23	; 0x06
     50e:	8f 83       	std	Y+7, r24	; 0x07
     510:	98 87       	std	Y+8, r25	; 0x08
     512:	01 50       	subi	r16, 0x01	; 1
     514:	11 09       	sbc	r17, r1
     516:	09 f0       	breq	.+2      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
     518:	4f cf       	rjmp	.-354    	; 0x3b8 <motorControl+0x2d6>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = -speed;
     51a:	88 27       	eor	r24, r24
     51c:	99 27       	eor	r25, r25
     51e:	82 19       	sub	r24, r2
     520:	93 09       	sbc	r25, r3
     522:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <speedCurrentRight+0x1>
     526:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <speedCurrentRight>
		speedCurrentLeft = speed;
     52a:	30 92 36 01 	sts	0x0136, r3	; 0x800136 <speedCurrentLeft+0x1>
     52e:	20 92 35 01 	sts	0x0135, r2	; 0x800135 <speedCurrentLeft>
     532:	05 e6       	ldi	r16, 0x65	; 101
     534:	10 e0       	ldi	r17, 0x00	; 0
		speed = 0;
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     536:	19 82       	std	Y+1, r1	; 0x01
     538:	1a 82       	std	Y+2, r1	; 0x02
     53a:	1b 82       	std	Y+3, r1	; 0x03
     53c:	1c 82       	std	Y+4, r1	; 0x04
			timerStart = get_ms();
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     53e:	9c 01       	movw	r18, r24
     540:	99 0f       	add	r25, r25
     542:	44 0b       	sbc	r20, r20
     544:	55 0b       	sbc	r21, r21
     546:	29 87       	std	Y+9, r18	; 0x09
     548:	3a 87       	std	Y+10, r19	; 0x0a
     54a:	4b 87       	std	Y+11, r20	; 0x0b
     54c:	5c 87       	std	Y+12, r21	; 0x0c
     54e:	c1 2c       	mov	r12, r1
     550:	d1 2c       	mov	r13, r1
     552:	76 01       	movw	r14, r12
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     554:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     558:	7e 87       	std	Y+14, r23	; 0x0e
     55a:	6d 87       	std	Y+13, r22	; 0x0d
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     55c:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     560:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     564:	07 2e       	mov	r0, r23
     566:	00 0c       	add	r0, r0
     568:	88 0b       	sbc	r24, r24
     56a:	99 0b       	sbc	r25, r25
     56c:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     570:	69 83       	std	Y+1, r22	; 0x01
     572:	7a 83       	std	Y+2, r23	; 0x02
     574:	8b 83       	std	Y+3, r24	; 0x03
     576:	9c 83       	std	Y+4, r25	; 0x04
     578:	2b ed       	ldi	r18, 0xDB	; 219
     57a:	3f e0       	ldi	r19, 0x0F	; 15
     57c:	49 ec       	ldi	r20, 0xC9	; 201
     57e:	50 e4       	ldi	r21, 0x40	; 64
     580:	c7 01       	movw	r24, r14
     582:	b6 01       	movw	r22, r12
     584:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     588:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
     58c:	23 e8       	ldi	r18, 0x83	; 131
     58e:	39 ef       	ldi	r19, 0xF9	; 249
     590:	42 e2       	ldi	r20, 0x22	; 34
     592:	5e e3       	ldi	r21, 0x3E	; 62
     594:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     598:	a7 01       	movw	r20, r14
     59a:	96 01       	movw	r18, r12
     59c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     5a0:	4b 01       	movw	r8, r22
     5a2:	5c 01       	movw	r10, r24
     5a4:	69 85       	ldd	r22, Y+9	; 0x09
     5a6:	7a 85       	ldd	r23, Y+10	; 0x0a
     5a8:	8b 85       	ldd	r24, Y+11	; 0x0b
     5aa:	9c 85       	ldd	r25, Y+12	; 0x0c
     5ac:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     5b0:	9b 01       	movw	r18, r22
     5b2:	ac 01       	movw	r20, r24
     5b4:	c5 01       	movw	r24, r10
     5b6:	b4 01       	movw	r22, r8
     5b8:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     5bc:	4b 01       	movw	r8, r22
     5be:	5c 01       	movw	r10, r24
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     5c0:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     5c4:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     5c8:	07 2e       	mov	r0, r23
     5ca:	00 0c       	add	r0, r0
     5cc:	88 0b       	sbc	r24, r24
     5ce:	99 0b       	sbc	r25, r25
     5d0:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     5d4:	a5 01       	movw	r20, r10
     5d6:	94 01       	movw	r18, r8
     5d8:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     5dc:	29 81       	ldd	r18, Y+1	; 0x01
     5de:	3a 81       	ldd	r19, Y+2	; 0x02
     5e0:	4b 81       	ldd	r20, Y+3	; 0x03
     5e2:	5c 81       	ldd	r21, Y+4	; 0x04
     5e4:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     5e8:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     5ec:	6d 83       	std	Y+5, r22	; 0x05
     5ee:	7e 83       	std	Y+6, r23	; 0x06
     5f0:	8f 83       	std	Y+7, r24	; 0x07
     5f2:	98 87       	std	Y+8, r25	; 0x08
     5f4:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     5f8:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     5fc:	07 2e       	mov	r0, r23
     5fe:	00 0c       	add	r0, r0
     600:	88 0b       	sbc	r24, r24
     602:	99 0b       	sbc	r25, r25
     604:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     608:	a5 01       	movw	r20, r10
     60a:	94 01       	movw	r18, r8
     60c:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     610:	29 81       	ldd	r18, Y+1	; 0x01
     612:	3a 81       	ldd	r19, Y+2	; 0x02
     614:	4b 81       	ldd	r20, Y+3	; 0x03
     616:	5c 81       	ldd	r21, Y+4	; 0x04
     618:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     61c:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	6d 81       	ldd	r22, Y+5	; 0x05
     626:	7e 81       	ldd	r23, Y+6	; 0x06
     628:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     62c:	4d 85       	ldd	r20, Y+13	; 0x0d
     62e:	5e 85       	ldd	r21, Y+14	; 0x0e
     630:	4a 01       	movw	r8, r20
     632:	55 0f       	add	r21, r21
     634:	aa 08       	sbc	r10, r10
     636:	bb 08       	sbc	r11, r11
     638:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     63c:	68 19       	sub	r22, r8
     63e:	79 09       	sbc	r23, r9
     640:	8a 09       	sbc	r24, r10
     642:	9b 09       	sbc	r25, r11
     644:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     648:	9b 01       	movw	r18, r22
     64a:	ac 01       	movw	r20, r24
     64c:	c3 01       	movw	r24, r6
     64e:	b2 01       	movw	r22, r4
     650:	0e 94 45 06 	call	0xc8a	; 0xc8a <__gesf2>
     654:	18 16       	cp	r1, r24
     656:	84 f3       	brlt	.-32     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
		speed = 0;
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     658:	2a e0       	ldi	r18, 0x0A	; 10
     65a:	37 ed       	ldi	r19, 0xD7	; 215
     65c:	43 e2       	ldi	r20, 0x23	; 35
     65e:	5c e3       	ldi	r21, 0x3C	; 60
     660:	c7 01       	movw	r24, r14
     662:	b6 01       	movw	r22, r12
     664:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     668:	6b 01       	movw	r12, r22
     66a:	7c 01       	movw	r14, r24
     66c:	01 50       	subi	r16, 0x01	; 1
     66e:	11 09       	sbc	r17, r1
     670:	09 f0       	breq	.+2      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
     672:	70 cf       	rjmp	.-288    	; 0x554 <__LOCK_REGION_LENGTH__+0x154>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = -speed;
     674:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <speedCurrentRight+0x1>
     678:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <speedCurrentRight>
		speedCurrentLeft = speed;
     67c:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <speedCurrentLeft+0x1>
     680:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <speedCurrentLeft>
		
		break;
     684:	62 c1       	rjmp	.+708    	; 0x94a <__stack+0x4b>

		case 'L':
		
		setSpeedRight = speed - speedCurrentRight;
     686:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <speedCurrentRight>
     68a:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     68e:	91 01       	movw	r18, r2
     690:	28 1b       	sub	r18, r24
     692:	39 0b       	sbc	r19, r25
		setSpeedLeft = speed + speedCurrentLeft;
     694:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <speedCurrentLeft>
     698:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     69c:	82 0d       	add	r24, r2
     69e:	93 1d       	adc	r25, r3
     6a0:	65 e6       	ldi	r22, 0x65	; 101
     6a2:	70 e0       	ldi	r23, 0x00	; 0
     6a4:	7a 8b       	std	Y+18, r23	; 0x12
     6a6:	69 8b       	std	Y+17, r22	; 0x11
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     6a8:	1d 82       	std	Y+5, r1	; 0x05
     6aa:	1e 82       	std	Y+6, r1	; 0x06
     6ac:	1f 82       	std	Y+7, r1	; 0x07
     6ae:	18 86       	std	Y+8, r1	; 0x08
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     6b0:	a9 01       	movw	r20, r18
     6b2:	33 0f       	add	r19, r19
     6b4:	66 0b       	sbc	r22, r22
     6b6:	77 0b       	sbc	r23, r23
     6b8:	49 87       	std	Y+9, r20	; 0x09
     6ba:	5a 87       	std	Y+10, r21	; 0x0a
     6bc:	6b 87       	std	Y+11, r22	; 0x0b
     6be:	7c 87       	std	Y+12, r23	; 0x0c
     6c0:	9c 01       	movw	r18, r24
     6c2:	99 0f       	add	r25, r25
     6c4:	44 0b       	sbc	r20, r20
     6c6:	55 0b       	sbc	r21, r21
     6c8:	2d 87       	std	Y+13, r18	; 0x0d
     6ca:	3e 87       	std	Y+14, r19	; 0x0e
     6cc:	4f 87       	std	Y+15, r20	; 0x0f
     6ce:	58 8b       	std	Y+16, r21	; 0x10
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     6d0:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     6d4:	8b 01       	movw	r16, r22
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     6d6:	2b ed       	ldi	r18, 0xDB	; 219
     6d8:	3f e0       	ldi	r19, 0x0F	; 15
     6da:	49 ec       	ldi	r20, 0xC9	; 201
     6dc:	50 e4       	ldi	r21, 0x40	; 64
     6de:	6d 81       	ldd	r22, Y+5	; 0x05
     6e0:	7e 81       	ldd	r23, Y+6	; 0x06
     6e2:	8f 81       	ldd	r24, Y+7	; 0x07
     6e4:	98 85       	ldd	r25, Y+8	; 0x08
     6e6:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     6ea:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
     6ee:	23 e8       	ldi	r18, 0x83	; 131
     6f0:	39 ef       	ldi	r19, 0xF9	; 249
     6f2:	42 e2       	ldi	r20, 0x22	; 34
     6f4:	5e e3       	ldi	r21, 0x3E	; 62
     6f6:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     6fa:	2d 81       	ldd	r18, Y+5	; 0x05
     6fc:	3e 81       	ldd	r19, Y+6	; 0x06
     6fe:	4f 81       	ldd	r20, Y+7	; 0x07
     700:	58 85       	ldd	r21, Y+8	; 0x08
     702:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     706:	6b 01       	movw	r12, r22
     708:	7c 01       	movw	r14, r24
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     70a:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     70e:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     712:	07 2e       	mov	r0, r23
     714:	00 0c       	add	r0, r0
     716:	88 0b       	sbc	r24, r24
     718:	99 0b       	sbc	r25, r25
     71a:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     71e:	4b 01       	movw	r8, r22
     720:	5c 01       	movw	r10, r24
     722:	69 85       	ldd	r22, Y+9	; 0x09
     724:	7a 85       	ldd	r23, Y+10	; 0x0a
     726:	8b 85       	ldd	r24, Y+11	; 0x0b
     728:	9c 85       	ldd	r25, Y+12	; 0x0c
     72a:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     72e:	a7 01       	movw	r20, r14
     730:	96 01       	movw	r18, r12
     732:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     736:	9b 01       	movw	r18, r22
     738:	ac 01       	movw	r20, r24
     73a:	c5 01       	movw	r24, r10
     73c:	b4 01       	movw	r22, r8
     73e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     742:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     746:	4b 01       	movw	r8, r22
     748:	5c 01       	movw	r10, r24
     74a:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     74e:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     752:	07 2e       	mov	r0, r23
     754:	00 0c       	add	r0, r0
     756:	88 0b       	sbc	r24, r24
     758:	99 0b       	sbc	r25, r25
     75a:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     75e:	2b 01       	movw	r4, r22
     760:	3c 01       	movw	r6, r24
     762:	6d 85       	ldd	r22, Y+13	; 0x0d
     764:	7e 85       	ldd	r23, Y+14	; 0x0e
     766:	8f 85       	ldd	r24, Y+15	; 0x0f
     768:	98 89       	ldd	r25, Y+16	; 0x10
     76a:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     76e:	a7 01       	movw	r20, r14
     770:	96 01       	movw	r18, r12
     772:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     776:	9b 01       	movw	r18, r22
     778:	ac 01       	movw	r20, r24
     77a:	c3 01       	movw	r24, r6
     77c:	b2 01       	movw	r22, r4
     77e:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     782:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     786:	dc 01       	movw	r26, r24
     788:	cb 01       	movw	r24, r22
     78a:	b4 01       	movw	r22, r8
     78c:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     790:	48 01       	movw	r8, r16
     792:	11 0f       	add	r17, r17
     794:	aa 08       	sbc	r10, r10
     796:	bb 08       	sbc	r11, r11
     798:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     79c:	2b 01       	movw	r4, r22
     79e:	3c 01       	movw	r6, r24
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	40 e2       	ldi	r20, 0x20	; 32
     7a6:	51 e4       	ldi	r21, 0x41	; 65
     7a8:	69 81       	ldd	r22, Y+1	; 0x01
     7aa:	7a 81       	ldd	r23, Y+2	; 0x02
     7ac:	8b 81       	ldd	r24, Y+3	; 0x03
     7ae:	9c 81       	ldd	r25, Y+4	; 0x04
     7b0:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     7b4:	6b 01       	movw	r12, r22
     7b6:	7c 01       	movw	r14, r24
     7b8:	c3 01       	movw	r24, r6
     7ba:	b2 01       	movw	r22, r4
     7bc:	68 19       	sub	r22, r8
     7be:	79 09       	sbc	r23, r9
     7c0:	8a 09       	sbc	r24, r10
     7c2:	9b 09       	sbc	r25, r11
     7c4:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     7c8:	a7 01       	movw	r20, r14
     7ca:	96 01       	movw	r18, r12
     7cc:	0e 94 58 05 	call	0xab0	; 0xab0 <__cmpsf2>
     7d0:	88 23       	and	r24, r24
     7d2:	14 f3       	brlt	.-60     	; 0x798 <__LOCK_REGION_LENGTH__+0x398>
		case 'L':
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     7d4:	2a e0       	ldi	r18, 0x0A	; 10
     7d6:	37 ed       	ldi	r19, 0xD7	; 215
     7d8:	43 e2       	ldi	r20, 0x23	; 35
     7da:	5c e3       	ldi	r21, 0x3C	; 60
     7dc:	6d 81       	ldd	r22, Y+5	; 0x05
     7de:	7e 81       	ldd	r23, Y+6	; 0x06
     7e0:	8f 81       	ldd	r24, Y+7	; 0x07
     7e2:	98 85       	ldd	r25, Y+8	; 0x08
     7e4:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     7e8:	6d 83       	std	Y+5, r22	; 0x05
     7ea:	7e 83       	std	Y+6, r23	; 0x06
     7ec:	8f 83       	std	Y+7, r24	; 0x07
     7ee:	98 87       	std	Y+8, r25	; 0x08
     7f0:	a9 89       	ldd	r26, Y+17	; 0x11
     7f2:	ba 89       	ldd	r27, Y+18	; 0x12
     7f4:	11 97       	sbiw	r26, 0x01	; 1
     7f6:	ba 8b       	std	Y+18, r27	; 0x12
     7f8:	a9 8b       	std	Y+17, r26	; 0x11
     7fa:	ab 2b       	or	r26, r27
     7fc:	09 f0       	breq	.+2      	; 0x800 <__LOCK_REGION_LENGTH__+0x400>
     7fe:	68 cf       	rjmp	.-304    	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = speed;
     800:	30 92 38 01 	sts	0x0138, r3	; 0x800138 <speedCurrentRight+0x1>
     804:	20 92 37 01 	sts	0x0137, r2	; 0x800137 <speedCurrentRight>
		speedCurrentLeft = -speed;
     808:	31 94       	neg	r3
     80a:	21 94       	neg	r2
     80c:	31 08       	sbc	r3, r1
     80e:	30 92 36 01 	sts	0x0136, r3	; 0x800136 <speedCurrentLeft+0x1>
     812:	20 92 35 01 	sts	0x0135, r2	; 0x800135 <speedCurrentLeft>
     816:	25 e6       	ldi	r18, 0x65	; 101
     818:	30 e0       	ldi	r19, 0x00	; 0
		speed = 0;
		
			setSpeedRight = speed - speedCurrentRight;
			setSpeedLeft = speed + speedCurrentLeft;
			
			for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     81a:	19 82       	std	Y+1, r1	; 0x01
     81c:	1a 82       	std	Y+2, r1	; 0x02
     81e:	1b 82       	std	Y+3, r1	; 0x03
     820:	1c 82       	std	Y+4, r1	; 0x04
				timerStart = get_ms();
				
				motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     822:	a1 01       	movw	r20, r2
     824:	33 0c       	add	r3, r3
     826:	66 0b       	sbc	r22, r22
     828:	77 0b       	sbc	r23, r23
     82a:	4d 83       	std	Y+5, r20	; 0x05
     82c:	5e 83       	std	Y+6, r21	; 0x06
     82e:	6f 83       	std	Y+7, r22	; 0x07
     830:	78 87       	std	Y+8, r23	; 0x08
     832:	3a 87       	std	Y+10, r19	; 0x0a
     834:	29 87       	std	Y+9, r18	; 0x09
     836:	81 2c       	mov	r8, r1
     838:	91 2c       	mov	r9, r1
     83a:	54 01       	movw	r10, r8
		
			setSpeedRight = speed - speedCurrentRight;
			setSpeedLeft = speed + speedCurrentLeft;
			
			for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
				timerStart = get_ms();
     83c:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     840:	8b 01       	movw	r16, r22
				
				motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     842:	2b ed       	ldi	r18, 0xDB	; 219
     844:	3f e0       	ldi	r19, 0x0F	; 15
     846:	49 ec       	ldi	r20, 0xC9	; 201
     848:	50 e4       	ldi	r21, 0x40	; 64
     84a:	c5 01       	movw	r24, r10
     84c:	b4 01       	movw	r22, r8
     84e:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     852:	0e 94 b7 06 	call	0xd6e	; 0xd6e <sin>
     856:	23 e8       	ldi	r18, 0x83	; 131
     858:	39 ef       	ldi	r19, 0xF9	; 249
     85a:	42 e2       	ldi	r20, 0x22	; 34
     85c:	5e e3       	ldi	r21, 0x3E	; 62
     85e:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     862:	a5 01       	movw	r20, r10
     864:	94 01       	movw	r18, r8
     866:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     86a:	2b 01       	movw	r4, r22
     86c:	3c 01       	movw	r6, r24
     86e:	6d 81       	ldd	r22, Y+5	; 0x05
     870:	7e 81       	ldd	r23, Y+6	; 0x06
     872:	8f 81       	ldd	r24, Y+7	; 0x07
     874:	98 85       	ldd	r25, Y+8	; 0x08
     876:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     87a:	9b 01       	movw	r18, r22
     87c:	ac 01       	movw	r20, r24
     87e:	c3 01       	movw	r24, r6
     880:	b2 01       	movw	r22, r4
     882:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     886:	2b 01       	movw	r4, r22
     888:	3c 01       	movw	r6, r24
				
				motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
				
				set_motors(motorLeftSpeed, motorRightSpeed);
     88a:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     88e:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     892:	07 2e       	mov	r0, r23
     894:	00 0c       	add	r0, r0
     896:	88 0b       	sbc	r24, r24
     898:	99 0b       	sbc	r25, r25
     89a:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     89e:	a3 01       	movw	r20, r6
     8a0:	92 01       	movw	r18, r4
     8a2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     8a6:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     8aa:	69 83       	std	Y+1, r22	; 0x01
     8ac:	7a 83       	std	Y+2, r23	; 0x02
     8ae:	8b 83       	std	Y+3, r24	; 0x03
     8b0:	9c 83       	std	Y+4, r25	; 0x04
     8b2:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     8b6:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     8ba:	07 2e       	mov	r0, r23
     8bc:	00 0c       	add	r0, r0
     8be:	88 0b       	sbc	r24, r24
     8c0:	99 0b       	sbc	r25, r25
     8c2:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     8c6:	a3 01       	movw	r20, r6
     8c8:	92 01       	movw	r18, r4
     8ca:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__subsf3>
     8ce:	0e 94 5d 05 	call	0xaba	; 0xaba <__fixsfsi>
     8d2:	dc 01       	movw	r26, r24
     8d4:	cb 01       	movw	r24, r22
     8d6:	69 81       	ldd	r22, Y+1	; 0x01
     8d8:	7a 81       	ldd	r23, Y+2	; 0x02
     8da:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>

				while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     8de:	28 01       	movw	r4, r16
     8e0:	11 0f       	add	r17, r17
     8e2:	66 08       	sbc	r6, r6
     8e4:	77 08       	sbc	r7, r7
     8e6:	0e 94 96 0b 	call	0x172c	; 0x172c <get_ms>
     8ea:	64 19       	sub	r22, r4
     8ec:	75 09       	sbc	r23, r5
     8ee:	86 09       	sbc	r24, r6
     8f0:	97 09       	sbc	r25, r7
     8f2:	0e 94 93 05 	call	0xb26	; 0xb26 <__floatunsisf>
     8f6:	9b 01       	movw	r18, r22
     8f8:	ac 01       	movw	r20, r24
     8fa:	c7 01       	movw	r24, r14
     8fc:	b6 01       	movw	r22, r12
     8fe:	0e 94 45 06 	call	0xc8a	; 0xc8a <__gesf2>
     902:	18 16       	cp	r1, r24
     904:	84 f3       	brlt	.-32     	; 0x8e6 <__LOCK_REGION_LENGTH__+0x4e6>
		speed = 0;
		
			setSpeedRight = speed - speedCurrentRight;
			setSpeedLeft = speed + speedCurrentLeft;
			
			for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     906:	2a e0       	ldi	r18, 0x0A	; 10
     908:	37 ed       	ldi	r19, 0xD7	; 215
     90a:	43 e2       	ldi	r20, 0x23	; 35
     90c:	5c e3       	ldi	r21, 0x3C	; 60
     90e:	c5 01       	movw	r24, r10
     910:	b4 01       	movw	r22, r8
     912:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__addsf3>
     916:	4b 01       	movw	r8, r22
     918:	5c 01       	movw	r10, r24
     91a:	69 85       	ldd	r22, Y+9	; 0x09
     91c:	7a 85       	ldd	r23, Y+10	; 0x0a
     91e:	61 50       	subi	r22, 0x01	; 1
     920:	71 09       	sbc	r23, r1
     922:	7a 87       	std	Y+10, r23	; 0x0a
     924:	69 87       	std	Y+9, r22	; 0x09
     926:	67 2b       	or	r22, r23
     928:	09 f0       	breq	.+2      	; 0x92c <__stack+0x2d>
     92a:	88 cf       	rjmp	.-240    	; 0x83c <__LOCK_REGION_LENGTH__+0x43c>

				while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
					//change for optimal acceleration time.
				}
			}
			speedCurrentRight = speed;
     92c:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <speedCurrentRight+0x1>
     930:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <speedCurrentRight>
			speedCurrentLeft = -speed;
     934:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <speedCurrentLeft+0x1>
     938:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <speedCurrentLeft>
		break;
     93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
		
		default:
		set_motors(0,0);
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	80 e0       	ldi	r24, 0x00	; 0
     944:	90 e0       	ldi	r25, 0x00	; 0
     946:	0e 94 13 0b 	call	0x1626	; 0x1626 <set_motors>
		break;
	}
}
     94a:	66 96       	adiw	r28, 0x16	; 22
     94c:	0f b6       	in	r0, 0x3f	; 63
     94e:	f8 94       	cli
     950:	de bf       	out	0x3e, r29	; 62
     952:	0f be       	out	0x3f, r0	; 63
     954:	cd bf       	out	0x3d, r28	; 61
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	1f 91       	pop	r17
     95c:	0f 91       	pop	r16
     95e:	ff 90       	pop	r15
     960:	ef 90       	pop	r14
     962:	df 90       	pop	r13
     964:	cf 90       	pop	r12
     966:	bf 90       	pop	r11
     968:	af 90       	pop	r10
     96a:	9f 90       	pop	r9
     96c:	8f 90       	pop	r8
     96e:	7f 90       	pop	r7
     970:	6f 90       	pop	r6
     972:	5f 90       	pop	r5
     974:	4f 90       	pop	r4
     976:	3f 90       	pop	r3
     978:	2f 90       	pop	r2
     97a:	08 95       	ret

0000097c <main>:
int speedCurrent = 0;
int speedCurrentRight = 0;
int speedCurrentLeft = 0;

int main(){
	delay_ms(1000);
     97c:	88 ee       	ldi	r24, 0xE8	; 232
     97e:	93 e0       	ldi	r25, 0x03	; 3
     980:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <delay_ms>
	play_from_program_space(PSTR(">g32>>c32"));
     984:	8a e9       	ldi	r24, 0x9A	; 154
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <play_from_program_space>
	motorControl(60,'R', 0.31);
     98c:	22 e5       	ldi	r18, 0x52	; 82
     98e:	38 eb       	ldi	r19, 0xB8	; 184
     990:	4e e9       	ldi	r20, 0x9E	; 158
     992:	5e e3       	ldi	r21, 0x3E	; 62
     994:	62 e5       	ldi	r22, 0x52	; 82
     996:	8c e3       	ldi	r24, 0x3C	; 60
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	0e 94 71 00 	call	0xe2	; 0xe2 <motorControl>
	
	play_from_program_space(PSTR(">g32>>c32"));
     99e:	80 e9       	ldi	r24, 0x90	; 144
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <play_from_program_space>
	delay_ms(1000);
     9a6:	88 ee       	ldi	r24, 0xE8	; 232
     9a8:	93 e0       	ldi	r25, 0x03	; 3
     9aa:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <delay_ms>
	motorControl(60,'L', 0.31);
     9ae:	22 e5       	ldi	r18, 0x52	; 82
     9b0:	38 eb       	ldi	r19, 0xB8	; 184
     9b2:	4e e9       	ldi	r20, 0x9E	; 158
     9b4:	5e e3       	ldi	r21, 0x3E	; 62
     9b6:	6c e4       	ldi	r22, 0x4C	; 76
     9b8:	8c e3       	ldi	r24, 0x3C	; 60
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	0e 94 71 00 	call	0xe2	; 0xe2 <motorControl>
		play_from_program_space(PSTR(">g32>>c32"));
     9c0:	86 e8       	ldi	r24, 0x86	; 134
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <play_from_program_space>
		delay_ms(1000);
     9c8:	88 ee       	ldi	r24, 0xE8	; 232
     9ca:	93 e0       	ldi	r25, 0x03	; 3
     9cc:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <delay_ms>
	return 0;
}
     9d0:	80 e0       	ldi	r24, 0x00	; 0
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	08 95       	ret

000009d6 <__subsf3>:
     9d6:	50 58       	subi	r21, 0x80	; 128

000009d8 <__addsf3>:
     9d8:	bb 27       	eor	r27, r27
     9da:	aa 27       	eor	r26, r26
     9dc:	0e 94 03 05 	call	0xa06	; 0xa06 <__addsf3x>
     9e0:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_round>
     9e4:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fp_pscA>
     9e8:	38 f0       	brcs	.+14     	; 0x9f8 <__addsf3+0x20>
     9ea:	0e 94 04 06 	call	0xc08	; 0xc08 <__fp_pscB>
     9ee:	20 f0       	brcs	.+8      	; 0x9f8 <__addsf3+0x20>
     9f0:	39 f4       	brne	.+14     	; 0xa00 <__addsf3+0x28>
     9f2:	9f 3f       	cpi	r25, 0xFF	; 255
     9f4:	19 f4       	brne	.+6      	; 0x9fc <__addsf3+0x24>
     9f6:	26 f4       	brtc	.+8      	; 0xa00 <__addsf3+0x28>
     9f8:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__fp_nan>
     9fc:	0e f4       	brtc	.+2      	; 0xa00 <__addsf3+0x28>
     9fe:	e0 95       	com	r30
     a00:	e7 fb       	bst	r30, 7
     a02:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__fp_inf>

00000a06 <__addsf3x>:
     a06:	e9 2f       	mov	r30, r25
     a08:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_split3>
     a0c:	58 f3       	brcs	.-42     	; 0x9e4 <__addsf3+0xc>
     a0e:	ba 17       	cp	r27, r26
     a10:	62 07       	cpc	r22, r18
     a12:	73 07       	cpc	r23, r19
     a14:	84 07       	cpc	r24, r20
     a16:	95 07       	cpc	r25, r21
     a18:	20 f0       	brcs	.+8      	; 0xa22 <__addsf3x+0x1c>
     a1a:	79 f4       	brne	.+30     	; 0xa3a <__addsf3x+0x34>
     a1c:	a6 f5       	brtc	.+104    	; 0xa86 <__addsf3x+0x80>
     a1e:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_zero>
     a22:	0e f4       	brtc	.+2      	; 0xa26 <__addsf3x+0x20>
     a24:	e0 95       	com	r30
     a26:	0b 2e       	mov	r0, r27
     a28:	ba 2f       	mov	r27, r26
     a2a:	a0 2d       	mov	r26, r0
     a2c:	0b 01       	movw	r0, r22
     a2e:	b9 01       	movw	r22, r18
     a30:	90 01       	movw	r18, r0
     a32:	0c 01       	movw	r0, r24
     a34:	ca 01       	movw	r24, r20
     a36:	a0 01       	movw	r20, r0
     a38:	11 24       	eor	r1, r1
     a3a:	ff 27       	eor	r31, r31
     a3c:	59 1b       	sub	r21, r25
     a3e:	99 f0       	breq	.+38     	; 0xa66 <__addsf3x+0x60>
     a40:	59 3f       	cpi	r21, 0xF9	; 249
     a42:	50 f4       	brcc	.+20     	; 0xa58 <__addsf3x+0x52>
     a44:	50 3e       	cpi	r21, 0xE0	; 224
     a46:	68 f1       	brcs	.+90     	; 0xaa2 <__addsf3x+0x9c>
     a48:	1a 16       	cp	r1, r26
     a4a:	f0 40       	sbci	r31, 0x00	; 0
     a4c:	a2 2f       	mov	r26, r18
     a4e:	23 2f       	mov	r18, r19
     a50:	34 2f       	mov	r19, r20
     a52:	44 27       	eor	r20, r20
     a54:	58 5f       	subi	r21, 0xF8	; 248
     a56:	f3 cf       	rjmp	.-26     	; 0xa3e <__addsf3x+0x38>
     a58:	46 95       	lsr	r20
     a5a:	37 95       	ror	r19
     a5c:	27 95       	ror	r18
     a5e:	a7 95       	ror	r26
     a60:	f0 40       	sbci	r31, 0x00	; 0
     a62:	53 95       	inc	r21
     a64:	c9 f7       	brne	.-14     	; 0xa58 <__addsf3x+0x52>
     a66:	7e f4       	brtc	.+30     	; 0xa86 <__addsf3x+0x80>
     a68:	1f 16       	cp	r1, r31
     a6a:	ba 0b       	sbc	r27, r26
     a6c:	62 0b       	sbc	r22, r18
     a6e:	73 0b       	sbc	r23, r19
     a70:	84 0b       	sbc	r24, r20
     a72:	ba f0       	brmi	.+46     	; 0xaa2 <__addsf3x+0x9c>
     a74:	91 50       	subi	r25, 0x01	; 1
     a76:	a1 f0       	breq	.+40     	; 0xaa0 <__addsf3x+0x9a>
     a78:	ff 0f       	add	r31, r31
     a7a:	bb 1f       	adc	r27, r27
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	88 1f       	adc	r24, r24
     a82:	c2 f7       	brpl	.-16     	; 0xa74 <__addsf3x+0x6e>
     a84:	0e c0       	rjmp	.+28     	; 0xaa2 <__addsf3x+0x9c>
     a86:	ba 0f       	add	r27, r26
     a88:	62 1f       	adc	r22, r18
     a8a:	73 1f       	adc	r23, r19
     a8c:	84 1f       	adc	r24, r20
     a8e:	48 f4       	brcc	.+18     	; 0xaa2 <__addsf3x+0x9c>
     a90:	87 95       	ror	r24
     a92:	77 95       	ror	r23
     a94:	67 95       	ror	r22
     a96:	b7 95       	ror	r27
     a98:	f7 95       	ror	r31
     a9a:	9e 3f       	cpi	r25, 0xFE	; 254
     a9c:	08 f0       	brcs	.+2      	; 0xaa0 <__addsf3x+0x9a>
     a9e:	b0 cf       	rjmp	.-160    	; 0xa00 <__addsf3+0x28>
     aa0:	93 95       	inc	r25
     aa2:	88 0f       	add	r24, r24
     aa4:	08 f0       	brcs	.+2      	; 0xaa8 <__addsf3x+0xa2>
     aa6:	99 27       	eor	r25, r25
     aa8:	ee 0f       	add	r30, r30
     aaa:	97 95       	ror	r25
     aac:	87 95       	ror	r24
     aae:	08 95       	ret

00000ab0 <__cmpsf2>:
     ab0:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_cmp>
     ab4:	08 f4       	brcc	.+2      	; 0xab8 <__cmpsf2+0x8>
     ab6:	81 e0       	ldi	r24, 0x01	; 1
     ab8:	08 95       	ret

00000aba <__fixsfsi>:
     aba:	0e 94 64 05 	call	0xac8	; 0xac8 <__fixunssfsi>
     abe:	68 94       	set
     ac0:	b1 11       	cpse	r27, r1
     ac2:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__fp_szero>
     ac6:	08 95       	ret

00000ac8 <__fixunssfsi>:
     ac8:	0e 94 24 06 	call	0xc48	; 0xc48 <__fp_splitA>
     acc:	88 f0       	brcs	.+34     	; 0xaf0 <__fixunssfsi+0x28>
     ace:	9f 57       	subi	r25, 0x7F	; 127
     ad0:	98 f0       	brcs	.+38     	; 0xaf8 <__fixunssfsi+0x30>
     ad2:	b9 2f       	mov	r27, r25
     ad4:	99 27       	eor	r25, r25
     ad6:	b7 51       	subi	r27, 0x17	; 23
     ad8:	b0 f0       	brcs	.+44     	; 0xb06 <__fixunssfsi+0x3e>
     ada:	e1 f0       	breq	.+56     	; 0xb14 <__fixunssfsi+0x4c>
     adc:	66 0f       	add	r22, r22
     ade:	77 1f       	adc	r23, r23
     ae0:	88 1f       	adc	r24, r24
     ae2:	99 1f       	adc	r25, r25
     ae4:	1a f0       	brmi	.+6      	; 0xaec <__fixunssfsi+0x24>
     ae6:	ba 95       	dec	r27
     ae8:	c9 f7       	brne	.-14     	; 0xadc <__fixunssfsi+0x14>
     aea:	14 c0       	rjmp	.+40     	; 0xb14 <__fixunssfsi+0x4c>
     aec:	b1 30       	cpi	r27, 0x01	; 1
     aee:	91 f0       	breq	.+36     	; 0xb14 <__fixunssfsi+0x4c>
     af0:	0e 94 3e 06 	call	0xc7c	; 0xc7c <__fp_zero>
     af4:	b1 e0       	ldi	r27, 0x01	; 1
     af6:	08 95       	ret
     af8:	0c 94 3e 06 	jmp	0xc7c	; 0xc7c <__fp_zero>
     afc:	67 2f       	mov	r22, r23
     afe:	78 2f       	mov	r23, r24
     b00:	88 27       	eor	r24, r24
     b02:	b8 5f       	subi	r27, 0xF8	; 248
     b04:	39 f0       	breq	.+14     	; 0xb14 <__fixunssfsi+0x4c>
     b06:	b9 3f       	cpi	r27, 0xF9	; 249
     b08:	cc f3       	brlt	.-14     	; 0xafc <__fixunssfsi+0x34>
     b0a:	86 95       	lsr	r24
     b0c:	77 95       	ror	r23
     b0e:	67 95       	ror	r22
     b10:	b3 95       	inc	r27
     b12:	d9 f7       	brne	.-10     	; 0xb0a <__fixunssfsi+0x42>
     b14:	3e f4       	brtc	.+14     	; 0xb24 <__fixunssfsi+0x5c>
     b16:	90 95       	com	r25
     b18:	80 95       	com	r24
     b1a:	70 95       	com	r23
     b1c:	61 95       	neg	r22
     b1e:	7f 4f       	sbci	r23, 0xFF	; 255
     b20:	8f 4f       	sbci	r24, 0xFF	; 255
     b22:	9f 4f       	sbci	r25, 0xFF	; 255
     b24:	08 95       	ret

00000b26 <__floatunsisf>:
     b26:	e8 94       	clt
     b28:	09 c0       	rjmp	.+18     	; 0xb3c <__floatsisf+0x12>

00000b2a <__floatsisf>:
     b2a:	97 fb       	bst	r25, 7
     b2c:	3e f4       	brtc	.+14     	; 0xb3c <__floatsisf+0x12>
     b2e:	90 95       	com	r25
     b30:	80 95       	com	r24
     b32:	70 95       	com	r23
     b34:	61 95       	neg	r22
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	8f 4f       	sbci	r24, 0xFF	; 255
     b3a:	9f 4f       	sbci	r25, 0xFF	; 255
     b3c:	99 23       	and	r25, r25
     b3e:	a9 f0       	breq	.+42     	; 0xb6a <__floatsisf+0x40>
     b40:	f9 2f       	mov	r31, r25
     b42:	96 e9       	ldi	r25, 0x96	; 150
     b44:	bb 27       	eor	r27, r27
     b46:	93 95       	inc	r25
     b48:	f6 95       	lsr	r31
     b4a:	87 95       	ror	r24
     b4c:	77 95       	ror	r23
     b4e:	67 95       	ror	r22
     b50:	b7 95       	ror	r27
     b52:	f1 11       	cpse	r31, r1
     b54:	f8 cf       	rjmp	.-16     	; 0xb46 <__floatsisf+0x1c>
     b56:	fa f4       	brpl	.+62     	; 0xb96 <__floatsisf+0x6c>
     b58:	bb 0f       	add	r27, r27
     b5a:	11 f4       	brne	.+4      	; 0xb60 <__floatsisf+0x36>
     b5c:	60 ff       	sbrs	r22, 0
     b5e:	1b c0       	rjmp	.+54     	; 0xb96 <__floatsisf+0x6c>
     b60:	6f 5f       	subi	r22, 0xFF	; 255
     b62:	7f 4f       	sbci	r23, 0xFF	; 255
     b64:	8f 4f       	sbci	r24, 0xFF	; 255
     b66:	9f 4f       	sbci	r25, 0xFF	; 255
     b68:	16 c0       	rjmp	.+44     	; 0xb96 <__floatsisf+0x6c>
     b6a:	88 23       	and	r24, r24
     b6c:	11 f0       	breq	.+4      	; 0xb72 <__floatsisf+0x48>
     b6e:	96 e9       	ldi	r25, 0x96	; 150
     b70:	11 c0       	rjmp	.+34     	; 0xb94 <__floatsisf+0x6a>
     b72:	77 23       	and	r23, r23
     b74:	21 f0       	breq	.+8      	; 0xb7e <__floatsisf+0x54>
     b76:	9e e8       	ldi	r25, 0x8E	; 142
     b78:	87 2f       	mov	r24, r23
     b7a:	76 2f       	mov	r23, r22
     b7c:	05 c0       	rjmp	.+10     	; 0xb88 <__floatsisf+0x5e>
     b7e:	66 23       	and	r22, r22
     b80:	71 f0       	breq	.+28     	; 0xb9e <__floatsisf+0x74>
     b82:	96 e8       	ldi	r25, 0x86	; 134
     b84:	86 2f       	mov	r24, r22
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	2a f0       	brmi	.+10     	; 0xb96 <__floatsisf+0x6c>
     b8c:	9a 95       	dec	r25
     b8e:	66 0f       	add	r22, r22
     b90:	77 1f       	adc	r23, r23
     b92:	88 1f       	adc	r24, r24
     b94:	da f7       	brpl	.-10     	; 0xb8c <__floatsisf+0x62>
     b96:	88 0f       	add	r24, r24
     b98:	96 95       	lsr	r25
     b9a:	87 95       	ror	r24
     b9c:	97 f9       	bld	r25, 7
     b9e:	08 95       	ret

00000ba0 <__fp_cmp>:
     ba0:	99 0f       	add	r25, r25
     ba2:	00 08       	sbc	r0, r0
     ba4:	55 0f       	add	r21, r21
     ba6:	aa 0b       	sbc	r26, r26
     ba8:	e0 e8       	ldi	r30, 0x80	; 128
     baa:	fe ef       	ldi	r31, 0xFE	; 254
     bac:	16 16       	cp	r1, r22
     bae:	17 06       	cpc	r1, r23
     bb0:	e8 07       	cpc	r30, r24
     bb2:	f9 07       	cpc	r31, r25
     bb4:	c0 f0       	brcs	.+48     	; 0xbe6 <__fp_cmp+0x46>
     bb6:	12 16       	cp	r1, r18
     bb8:	13 06       	cpc	r1, r19
     bba:	e4 07       	cpc	r30, r20
     bbc:	f5 07       	cpc	r31, r21
     bbe:	98 f0       	brcs	.+38     	; 0xbe6 <__fp_cmp+0x46>
     bc0:	62 1b       	sub	r22, r18
     bc2:	73 0b       	sbc	r23, r19
     bc4:	84 0b       	sbc	r24, r20
     bc6:	95 0b       	sbc	r25, r21
     bc8:	39 f4       	brne	.+14     	; 0xbd8 <__fp_cmp+0x38>
     bca:	0a 26       	eor	r0, r26
     bcc:	61 f0       	breq	.+24     	; 0xbe6 <__fp_cmp+0x46>
     bce:	23 2b       	or	r18, r19
     bd0:	24 2b       	or	r18, r20
     bd2:	25 2b       	or	r18, r21
     bd4:	21 f4       	brne	.+8      	; 0xbde <__fp_cmp+0x3e>
     bd6:	08 95       	ret
     bd8:	0a 26       	eor	r0, r26
     bda:	09 f4       	brne	.+2      	; 0xbde <__fp_cmp+0x3e>
     bdc:	a1 40       	sbci	r26, 0x01	; 1
     bde:	a6 95       	lsr	r26
     be0:	8f ef       	ldi	r24, 0xFF	; 255
     be2:	81 1d       	adc	r24, r1
     be4:	81 1d       	adc	r24, r1
     be6:	08 95       	ret

00000be8 <__fp_inf>:
     be8:	97 f9       	bld	r25, 7
     bea:	9f 67       	ori	r25, 0x7F	; 127
     bec:	80 e8       	ldi	r24, 0x80	; 128
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	08 95       	ret

00000bf4 <__fp_nan>:
     bf4:	9f ef       	ldi	r25, 0xFF	; 255
     bf6:	80 ec       	ldi	r24, 0xC0	; 192
     bf8:	08 95       	ret

00000bfa <__fp_pscA>:
     bfa:	00 24       	eor	r0, r0
     bfc:	0a 94       	dec	r0
     bfe:	16 16       	cp	r1, r22
     c00:	17 06       	cpc	r1, r23
     c02:	18 06       	cpc	r1, r24
     c04:	09 06       	cpc	r0, r25
     c06:	08 95       	ret

00000c08 <__fp_pscB>:
     c08:	00 24       	eor	r0, r0
     c0a:	0a 94       	dec	r0
     c0c:	12 16       	cp	r1, r18
     c0e:	13 06       	cpc	r1, r19
     c10:	14 06       	cpc	r1, r20
     c12:	05 06       	cpc	r0, r21
     c14:	08 95       	ret

00000c16 <__fp_round>:
     c16:	09 2e       	mov	r0, r25
     c18:	03 94       	inc	r0
     c1a:	00 0c       	add	r0, r0
     c1c:	11 f4       	brne	.+4      	; 0xc22 <__fp_round+0xc>
     c1e:	88 23       	and	r24, r24
     c20:	52 f0       	brmi	.+20     	; 0xc36 <__fp_round+0x20>
     c22:	bb 0f       	add	r27, r27
     c24:	40 f4       	brcc	.+16     	; 0xc36 <__fp_round+0x20>
     c26:	bf 2b       	or	r27, r31
     c28:	11 f4       	brne	.+4      	; 0xc2e <__fp_round+0x18>
     c2a:	60 ff       	sbrs	r22, 0
     c2c:	04 c0       	rjmp	.+8      	; 0xc36 <__fp_round+0x20>
     c2e:	6f 5f       	subi	r22, 0xFF	; 255
     c30:	7f 4f       	sbci	r23, 0xFF	; 255
     c32:	8f 4f       	sbci	r24, 0xFF	; 255
     c34:	9f 4f       	sbci	r25, 0xFF	; 255
     c36:	08 95       	ret

00000c38 <__fp_split3>:
     c38:	57 fd       	sbrc	r21, 7
     c3a:	90 58       	subi	r25, 0x80	; 128
     c3c:	44 0f       	add	r20, r20
     c3e:	55 1f       	adc	r21, r21
     c40:	59 f0       	breq	.+22     	; 0xc58 <__fp_splitA+0x10>
     c42:	5f 3f       	cpi	r21, 0xFF	; 255
     c44:	71 f0       	breq	.+28     	; 0xc62 <__fp_splitA+0x1a>
     c46:	47 95       	ror	r20

00000c48 <__fp_splitA>:
     c48:	88 0f       	add	r24, r24
     c4a:	97 fb       	bst	r25, 7
     c4c:	99 1f       	adc	r25, r25
     c4e:	61 f0       	breq	.+24     	; 0xc68 <__fp_splitA+0x20>
     c50:	9f 3f       	cpi	r25, 0xFF	; 255
     c52:	79 f0       	breq	.+30     	; 0xc72 <__fp_splitA+0x2a>
     c54:	87 95       	ror	r24
     c56:	08 95       	ret
     c58:	12 16       	cp	r1, r18
     c5a:	13 06       	cpc	r1, r19
     c5c:	14 06       	cpc	r1, r20
     c5e:	55 1f       	adc	r21, r21
     c60:	f2 cf       	rjmp	.-28     	; 0xc46 <__fp_split3+0xe>
     c62:	46 95       	lsr	r20
     c64:	f1 df       	rcall	.-30     	; 0xc48 <__fp_splitA>
     c66:	08 c0       	rjmp	.+16     	; 0xc78 <__fp_splitA+0x30>
     c68:	16 16       	cp	r1, r22
     c6a:	17 06       	cpc	r1, r23
     c6c:	18 06       	cpc	r1, r24
     c6e:	99 1f       	adc	r25, r25
     c70:	f1 cf       	rjmp	.-30     	; 0xc54 <__fp_splitA+0xc>
     c72:	86 95       	lsr	r24
     c74:	71 05       	cpc	r23, r1
     c76:	61 05       	cpc	r22, r1
     c78:	08 94       	sec
     c7a:	08 95       	ret

00000c7c <__fp_zero>:
     c7c:	e8 94       	clt

00000c7e <__fp_szero>:
     c7e:	bb 27       	eor	r27, r27
     c80:	66 27       	eor	r22, r22
     c82:	77 27       	eor	r23, r23
     c84:	cb 01       	movw	r24, r22
     c86:	97 f9       	bld	r25, 7
     c88:	08 95       	ret

00000c8a <__gesf2>:
     c8a:	0e 94 d0 05 	call	0xba0	; 0xba0 <__fp_cmp>
     c8e:	08 f4       	brcc	.+2      	; 0xc92 <__gesf2+0x8>
     c90:	8f ef       	ldi	r24, 0xFF	; 255
     c92:	08 95       	ret

00000c94 <__mulsf3>:
     c94:	0e 94 5d 06 	call	0xcba	; 0xcba <__mulsf3x>
     c98:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_round>
     c9c:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__fp_pscA>
     ca0:	38 f0       	brcs	.+14     	; 0xcb0 <__mulsf3+0x1c>
     ca2:	0e 94 04 06 	call	0xc08	; 0xc08 <__fp_pscB>
     ca6:	20 f0       	brcs	.+8      	; 0xcb0 <__mulsf3+0x1c>
     ca8:	95 23       	and	r25, r21
     caa:	11 f0       	breq	.+4      	; 0xcb0 <__mulsf3+0x1c>
     cac:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__fp_inf>
     cb0:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__fp_nan>
     cb4:	11 24       	eor	r1, r1
     cb6:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__fp_szero>

00000cba <__mulsf3x>:
     cba:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_split3>
     cbe:	70 f3       	brcs	.-36     	; 0xc9c <__mulsf3+0x8>

00000cc0 <__mulsf3_pse>:
     cc0:	95 9f       	mul	r25, r21
     cc2:	c1 f3       	breq	.-16     	; 0xcb4 <__mulsf3+0x20>
     cc4:	95 0f       	add	r25, r21
     cc6:	50 e0       	ldi	r21, 0x00	; 0
     cc8:	55 1f       	adc	r21, r21
     cca:	62 9f       	mul	r22, r18
     ccc:	f0 01       	movw	r30, r0
     cce:	72 9f       	mul	r23, r18
     cd0:	bb 27       	eor	r27, r27
     cd2:	f0 0d       	add	r31, r0
     cd4:	b1 1d       	adc	r27, r1
     cd6:	63 9f       	mul	r22, r19
     cd8:	aa 27       	eor	r26, r26
     cda:	f0 0d       	add	r31, r0
     cdc:	b1 1d       	adc	r27, r1
     cde:	aa 1f       	adc	r26, r26
     ce0:	64 9f       	mul	r22, r20
     ce2:	66 27       	eor	r22, r22
     ce4:	b0 0d       	add	r27, r0
     ce6:	a1 1d       	adc	r26, r1
     ce8:	66 1f       	adc	r22, r22
     cea:	82 9f       	mul	r24, r18
     cec:	22 27       	eor	r18, r18
     cee:	b0 0d       	add	r27, r0
     cf0:	a1 1d       	adc	r26, r1
     cf2:	62 1f       	adc	r22, r18
     cf4:	73 9f       	mul	r23, r19
     cf6:	b0 0d       	add	r27, r0
     cf8:	a1 1d       	adc	r26, r1
     cfa:	62 1f       	adc	r22, r18
     cfc:	83 9f       	mul	r24, r19
     cfe:	a0 0d       	add	r26, r0
     d00:	61 1d       	adc	r22, r1
     d02:	22 1f       	adc	r18, r18
     d04:	74 9f       	mul	r23, r20
     d06:	33 27       	eor	r19, r19
     d08:	a0 0d       	add	r26, r0
     d0a:	61 1d       	adc	r22, r1
     d0c:	23 1f       	adc	r18, r19
     d0e:	84 9f       	mul	r24, r20
     d10:	60 0d       	add	r22, r0
     d12:	21 1d       	adc	r18, r1
     d14:	82 2f       	mov	r24, r18
     d16:	76 2f       	mov	r23, r22
     d18:	6a 2f       	mov	r22, r26
     d1a:	11 24       	eor	r1, r1
     d1c:	9f 57       	subi	r25, 0x7F	; 127
     d1e:	50 40       	sbci	r21, 0x00	; 0
     d20:	9a f0       	brmi	.+38     	; 0xd48 <__mulsf3_pse+0x88>
     d22:	f1 f0       	breq	.+60     	; 0xd60 <__mulsf3_pse+0xa0>
     d24:	88 23       	and	r24, r24
     d26:	4a f0       	brmi	.+18     	; 0xd3a <__mulsf3_pse+0x7a>
     d28:	ee 0f       	add	r30, r30
     d2a:	ff 1f       	adc	r31, r31
     d2c:	bb 1f       	adc	r27, r27
     d2e:	66 1f       	adc	r22, r22
     d30:	77 1f       	adc	r23, r23
     d32:	88 1f       	adc	r24, r24
     d34:	91 50       	subi	r25, 0x01	; 1
     d36:	50 40       	sbci	r21, 0x00	; 0
     d38:	a9 f7       	brne	.-22     	; 0xd24 <__mulsf3_pse+0x64>
     d3a:	9e 3f       	cpi	r25, 0xFE	; 254
     d3c:	51 05       	cpc	r21, r1
     d3e:	80 f0       	brcs	.+32     	; 0xd60 <__mulsf3_pse+0xa0>
     d40:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__fp_inf>
     d44:	0c 94 3f 06 	jmp	0xc7e	; 0xc7e <__fp_szero>
     d48:	5f 3f       	cpi	r21, 0xFF	; 255
     d4a:	e4 f3       	brlt	.-8      	; 0xd44 <__mulsf3_pse+0x84>
     d4c:	98 3e       	cpi	r25, 0xE8	; 232
     d4e:	d4 f3       	brlt	.-12     	; 0xd44 <__mulsf3_pse+0x84>
     d50:	86 95       	lsr	r24
     d52:	77 95       	ror	r23
     d54:	67 95       	ror	r22
     d56:	b7 95       	ror	r27
     d58:	f7 95       	ror	r31
     d5a:	e7 95       	ror	r30
     d5c:	9f 5f       	subi	r25, 0xFF	; 255
     d5e:	c1 f7       	brne	.-16     	; 0xd50 <__mulsf3_pse+0x90>
     d60:	fe 2b       	or	r31, r30
     d62:	88 0f       	add	r24, r24
     d64:	91 1d       	adc	r25, r1
     d66:	96 95       	lsr	r25
     d68:	87 95       	ror	r24
     d6a:	97 f9       	bld	r25, 7
     d6c:	08 95       	ret

00000d6e <sin>:
     d6e:	9f 93       	push	r25
     d70:	0e 94 c1 06 	call	0xd82	; 0xd82 <__fp_rempio2>
     d74:	0f 90       	pop	r0
     d76:	07 fc       	sbrc	r0, 7
     d78:	ee 5f       	subi	r30, 0xFE	; 254
     d7a:	0c 94 ea 06 	jmp	0xdd4	; 0xdd4 <__fp_sinus>
     d7e:	0c 94 fa 05 	jmp	0xbf4	; 0xbf4 <__fp_nan>

00000d82 <__fp_rempio2>:
     d82:	0e 94 24 06 	call	0xc48	; 0xc48 <__fp_splitA>
     d86:	d8 f3       	brcs	.-10     	; 0xd7e <sin+0x10>
     d88:	e8 94       	clt
     d8a:	e0 e0       	ldi	r30, 0x00	; 0
     d8c:	bb 27       	eor	r27, r27
     d8e:	9f 57       	subi	r25, 0x7F	; 127
     d90:	f0 f0       	brcs	.+60     	; 0xdce <__fp_rempio2+0x4c>
     d92:	2a ed       	ldi	r18, 0xDA	; 218
     d94:	3f e0       	ldi	r19, 0x0F	; 15
     d96:	49 ec       	ldi	r20, 0xC9	; 201
     d98:	06 c0       	rjmp	.+12     	; 0xda6 <__fp_rempio2+0x24>
     d9a:	ee 0f       	add	r30, r30
     d9c:	bb 0f       	add	r27, r27
     d9e:	66 1f       	adc	r22, r22
     da0:	77 1f       	adc	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	28 f0       	brcs	.+10     	; 0xdb0 <__fp_rempio2+0x2e>
     da6:	b2 3a       	cpi	r27, 0xA2	; 162
     da8:	62 07       	cpc	r22, r18
     daa:	73 07       	cpc	r23, r19
     dac:	84 07       	cpc	r24, r20
     dae:	28 f0       	brcs	.+10     	; 0xdba <__fp_rempio2+0x38>
     db0:	b2 5a       	subi	r27, 0xA2	; 162
     db2:	62 0b       	sbc	r22, r18
     db4:	73 0b       	sbc	r23, r19
     db6:	84 0b       	sbc	r24, r20
     db8:	e3 95       	inc	r30
     dba:	9a 95       	dec	r25
     dbc:	72 f7       	brpl	.-36     	; 0xd9a <__fp_rempio2+0x18>
     dbe:	80 38       	cpi	r24, 0x80	; 128
     dc0:	30 f4       	brcc	.+12     	; 0xdce <__fp_rempio2+0x4c>
     dc2:	9a 95       	dec	r25
     dc4:	bb 0f       	add	r27, r27
     dc6:	66 1f       	adc	r22, r22
     dc8:	77 1f       	adc	r23, r23
     dca:	88 1f       	adc	r24, r24
     dcc:	d2 f7       	brpl	.-12     	; 0xdc2 <__fp_rempio2+0x40>
     dce:	90 48       	sbci	r25, 0x80	; 128
     dd0:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__fp_mpack_finite>

00000dd4 <__fp_sinus>:
     dd4:	ef 93       	push	r30
     dd6:	e0 ff       	sbrs	r30, 0
     dd8:	07 c0       	rjmp	.+14     	; 0xde8 <__fp_sinus+0x14>
     dda:	a2 ea       	ldi	r26, 0xA2	; 162
     ddc:	2a ed       	ldi	r18, 0xDA	; 218
     dde:	3f e0       	ldi	r19, 0x0F	; 15
     de0:	49 ec       	ldi	r20, 0xC9	; 201
     de2:	5f eb       	ldi	r21, 0xBF	; 191
     de4:	0e 94 03 05 	call	0xa06	; 0xa06 <__addsf3x>
     de8:	0e 94 0b 06 	call	0xc16	; 0xc16 <__fp_round>
     dec:	0f 90       	pop	r0
     dee:	03 94       	inc	r0
     df0:	01 fc       	sbrc	r0, 1
     df2:	90 58       	subi	r25, 0x80	; 128
     df4:	e8 e6       	ldi	r30, 0x68	; 104
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__fp_powsodd>

00000dfc <__fp_mpack>:
     dfc:	9f 3f       	cpi	r25, 0xFF	; 255
     dfe:	31 f0       	breq	.+12     	; 0xe0c <__fp_mpack_finite+0xc>

00000e00 <__fp_mpack_finite>:
     e00:	91 50       	subi	r25, 0x01	; 1
     e02:	20 f4       	brcc	.+8      	; 0xe0c <__fp_mpack_finite+0xc>
     e04:	87 95       	ror	r24
     e06:	77 95       	ror	r23
     e08:	67 95       	ror	r22
     e0a:	b7 95       	ror	r27
     e0c:	88 0f       	add	r24, r24
     e0e:	91 1d       	adc	r25, r1
     e10:	96 95       	lsr	r25
     e12:	87 95       	ror	r24
     e14:	97 f9       	bld	r25, 7
     e16:	08 95       	ret

00000e18 <__fp_powsodd>:
     e18:	9f 93       	push	r25
     e1a:	8f 93       	push	r24
     e1c:	7f 93       	push	r23
     e1e:	6f 93       	push	r22
     e20:	ff 93       	push	r31
     e22:	ef 93       	push	r30
     e24:	9b 01       	movw	r18, r22
     e26:	ac 01       	movw	r20, r24
     e28:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3>
     e2c:	ef 91       	pop	r30
     e2e:	ff 91       	pop	r31
     e30:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_powser>
     e34:	2f 91       	pop	r18
     e36:	3f 91       	pop	r19
     e38:	4f 91       	pop	r20
     e3a:	5f 91       	pop	r21
     e3c:	0c 94 4a 06 	jmp	0xc94	; 0xc94 <__mulsf3>

00000e40 <__fp_powser>:
     e40:	df 93       	push	r29
     e42:	cf 93       	push	r28
     e44:	1f 93       	push	r17
     e46:	0f 93       	push	r16
     e48:	ff 92       	push	r15
     e4a:	ef 92       	push	r14
     e4c:	df 92       	push	r13
     e4e:	7b 01       	movw	r14, r22
     e50:	8c 01       	movw	r16, r24
     e52:	68 94       	set
     e54:	06 c0       	rjmp	.+12     	; 0xe62 <__fp_powser+0x22>
     e56:	da 2e       	mov	r13, r26
     e58:	ef 01       	movw	r28, r30
     e5a:	0e 94 5d 06 	call	0xcba	; 0xcba <__mulsf3x>
     e5e:	fe 01       	movw	r30, r28
     e60:	e8 94       	clt
     e62:	a5 91       	lpm	r26, Z+
     e64:	25 91       	lpm	r18, Z+
     e66:	35 91       	lpm	r19, Z+
     e68:	45 91       	lpm	r20, Z+
     e6a:	55 91       	lpm	r21, Z+
     e6c:	a6 f3       	brts	.-24     	; 0xe56 <__fp_powser+0x16>
     e6e:	ef 01       	movw	r28, r30
     e70:	0e 94 03 05 	call	0xa06	; 0xa06 <__addsf3x>
     e74:	fe 01       	movw	r30, r28
     e76:	97 01       	movw	r18, r14
     e78:	a8 01       	movw	r20, r16
     e7a:	da 94       	dec	r13
     e7c:	69 f7       	brne	.-38     	; 0xe58 <__fp_powser+0x18>
     e7e:	df 90       	pop	r13
     e80:	ef 90       	pop	r14
     e82:	ff 90       	pop	r15
     e84:	0f 91       	pop	r16
     e86:	1f 91       	pop	r17
     e88:	cf 91       	pop	r28
     e8a:	df 91       	pop	r29
     e8c:	08 95       	ret

00000e8e <_ZL16currentCharacterv>:
     e8e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_ZL17use_program_space>
     e92:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__data_end>
     e96:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__data_end+0x1>
     e9a:	99 23       	and	r25, r25
     e9c:	11 f0       	breq	.+4      	; 0xea2 <_ZL16currentCharacterv+0x14>
     e9e:	84 91       	lpm	r24, Z
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <_ZL16currentCharacterv+0x16>
     ea2:	80 81       	ld	r24, Z
     ea4:	2f eb       	ldi	r18, 0xBF	; 191
     ea6:	28 0f       	add	r18, r24
     ea8:	2a 31       	cpi	r18, 0x1A	; 26
     eaa:	10 f4       	brcc	.+4      	; 0xeb0 <_ZL16currentCharacterv+0x22>
     eac:	80 5e       	subi	r24, 0xE0	; 224
     eae:	08 95       	ret
     eb0:	80 32       	cpi	r24, 0x20	; 32
     eb2:	49 f4       	brne	.+18     	; 0xec6 <_ZL16currentCharacterv+0x38>
     eb4:	9f 01       	movw	r18, r30
     eb6:	2f 5f       	subi	r18, 0xFF	; 255
     eb8:	3f 4f       	sbci	r19, 0xFF	; 255
     eba:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
     ebe:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
     ec2:	ef 2b       	or	r30, r31
     ec4:	31 f7       	brne	.-52     	; 0xe92 <_ZL16currentCharacterv+0x4>
     ec6:	08 95       	ret

00000ec8 <_ZL9getNumberv>:
     ec8:	1f 93       	push	r17
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
     ece:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
     ed2:	c0 e0       	ldi	r28, 0x00	; 0
     ed4:	d0 e0       	ldi	r29, 0x00	; 0
     ed6:	1a e0       	ldi	r17, 0x0A	; 10
     ed8:	90 ed       	ldi	r25, 0xD0	; 208
     eda:	98 0f       	add	r25, r24
     edc:	9a 30       	cpi	r25, 0x0A	; 10
     ede:	b8 f4       	brcc	.+46     	; 0xf0e <_ZL9getNumberv+0x46>
     ee0:	9e 01       	movw	r18, r28
     ee2:	12 9f       	mul	r17, r18
     ee4:	e0 01       	movw	r28, r0
     ee6:	13 9f       	mul	r17, r19
     ee8:	d0 0d       	add	r29, r0
     eea:	11 24       	eor	r1, r1
     eec:	c8 0f       	add	r28, r24
     eee:	d1 1d       	adc	r29, r1
     ef0:	87 fd       	sbrc	r24, 7
     ef2:	da 95       	dec	r29
     ef4:	e0 97       	sbiw	r28, 0x30	; 48
     ef6:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
     efa:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
     efe:	01 96       	adiw	r24, 0x01	; 1
     f00:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
     f04:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
     f08:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
     f0c:	e5 cf       	rjmp	.-54     	; 0xed8 <_ZL9getNumberv+0x10>
     f0e:	ce 01       	movw	r24, r28
     f10:	df 91       	pop	r29
     f12:	cf 91       	pop	r28
     f14:	1f 91       	pop	r17
     f16:	08 95       	ret

00000f18 <_ZN15OrangutanBuzzer5init2Ev>:
     f18:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     f1c:	83 e2       	ldi	r24, 0x23	; 35
     f1e:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     f22:	81 e1       	ldi	r24, 0x11	; 17
     f24:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     f28:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     f2c:	80 e1       	ldi	r24, 0x10	; 16
     f2e:	97 e2       	ldi	r25, 0x27	; 39
     f30:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     f34:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     f38:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     f3c:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     f40:	22 9a       	sbi	0x04, 2	; 4
     f42:	78 94       	sei
     f44:	08 95       	ret

00000f46 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     f46:	8f 92       	push	r8
     f48:	9f 92       	push	r9
     f4a:	af 92       	push	r10
     f4c:	bf 92       	push	r11
     f4e:	df 92       	push	r13
     f50:	ef 92       	push	r14
     f52:	ff 92       	push	r15
     f54:	0f 93       	push	r16
     f56:	1f 93       	push	r17
     f58:	cf 93       	push	r28
     f5a:	df 93       	push	r29
     f5c:	5c 01       	movw	r10, r24
     f5e:	8b 01       	movw	r16, r22
     f60:	d4 2e       	mov	r13, r20
     f62:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <buzzerInitialized>
     f66:	81 11       	cpse	r24, r1
     f68:	05 c0       	rjmp	.+10     	; 0xf74 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
     f6a:	81 e0       	ldi	r24, 0x01	; 1
     f6c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <buzzerInitialized>
     f70:	0e 94 8c 07 	call	0xf18	; 0xf18 <_ZN15OrangutanBuzzer5init2Ev>
     f74:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <buzzerFinished>
     f78:	b7 fe       	sbrs	r11, 7
     f7a:	05 c0       	rjmp	.+10     	; 0xf86 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
     f7c:	e8 94       	clt
     f7e:	b7 f8       	bld	r11, 7
     f80:	2a e0       	ldi	r18, 0x0A	; 10
     f82:	f2 2e       	mov	r15, r18
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
     f86:	ff 24       	eor	r15, r15
     f88:	f3 94       	inc	r15
     f8a:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     f8e:	2e 2d       	mov	r18, r14
     f90:	28 7f       	andi	r18, 0xF8	; 248
     f92:	e2 2e       	mov	r14, r18
     f94:	48 ec       	ldi	r20, 0xC8	; 200
     f96:	f4 9e       	mul	r15, r20
     f98:	c0 01       	movw	r24, r0
     f9a:	11 24       	eor	r1, r1
     f9c:	8a 15       	cp	r24, r10
     f9e:	9b 05       	cpc	r25, r11
     fa0:	e0 f4       	brcc	.+56     	; 0xfda <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
     fa2:	e5 01       	movw	r28, r10
     fa4:	51 e1       	ldi	r21, 0x11	; 17
     fa6:	a5 16       	cp	r10, r21
     fa8:	57 e2       	ldi	r21, 0x27	; 39
     faa:	b5 06       	cpc	r11, r21
     fac:	10 f0       	brcs	.+4      	; 0xfb2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
     fae:	c0 e1       	ldi	r28, 0x10	; 16
     fb0:	d7 e2       	ldi	r29, 0x27	; 39
     fb2:	be 01       	movw	r22, r28
     fb4:	76 95       	lsr	r23
     fb6:	67 95       	ror	r22
     fb8:	80 e0       	ldi	r24, 0x00	; 0
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	60 58       	subi	r22, 0x80	; 128
     fbe:	79 46       	sbci	r23, 0x69	; 105
     fc0:	87 46       	sbci	r24, 0x67	; 103
     fc2:	9f 4f       	sbci	r25, 0xFF	; 255
     fc4:	4e 01       	movw	r8, r28
     fc6:	a1 2c       	mov	r10, r1
     fc8:	b1 2c       	mov	r11, r1
     fca:	a5 01       	movw	r20, r10
     fcc:	94 01       	movw	r18, r8
     fce:	0e 94 b9 0b 	call	0x1772	; 0x1772 <__udivmodsi4>
     fd2:	59 01       	movw	r10, r18
     fd4:	8e 2d       	mov	r24, r14
     fd6:	81 60       	ori	r24, 0x01	; 1
     fd8:	24 c0       	rjmp	.+72     	; 0x1022 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
     fda:	c8 e2       	ldi	r28, 0x28	; 40
     fdc:	fc 9e       	mul	r15, r28
     fde:	c0 2d       	mov	r28, r0
     fe0:	11 24       	eor	r1, r1
     fe2:	d0 e0       	ldi	r29, 0x00	; 0
     fe4:	ca 15       	cp	r28, r10
     fe6:	db 05       	cpc	r29, r11
     fe8:	08 f4       	brcc	.+2      	; 0xfec <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
     fea:	e5 01       	movw	r28, r10
     fec:	be 01       	movw	r22, r28
     fee:	76 95       	lsr	r23
     ff0:	67 95       	ror	r22
     ff2:	9e 01       	movw	r18, r28
     ff4:	40 e0       	ldi	r20, 0x00	; 0
     ff6:	50 e0       	ldi	r21, 0x00	; 0
     ff8:	8a e0       	ldi	r24, 0x0A	; 10
     ffa:	f8 12       	cpse	r15, r24
     ffc:	07 c0       	rjmp	.+14     	; 0x100c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
     ffe:	80 e0       	ldi	r24, 0x00	; 0
    1000:	90 e0       	ldi	r25, 0x00	; 0
    1002:	60 5e       	subi	r22, 0xE0	; 224
    1004:	73 44       	sbci	r23, 0x43	; 67
    1006:	81 44       	sbci	r24, 0x41	; 65
    1008:	9f 4f       	sbci	r25, 0xFF	; 255
    100a:	06 c0       	rjmp	.+12     	; 0x1018 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    100c:	80 e0       	ldi	r24, 0x00	; 0
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	60 53       	subi	r22, 0x30	; 48
    1012:	7d 4e       	sbci	r23, 0xED	; 237
    1014:	8c 4e       	sbci	r24, 0xEC	; 236
    1016:	9f 4f       	sbci	r25, 0xFF	; 255
    1018:	0e 94 b9 0b 	call	0x1772	; 0x1772 <__udivmodsi4>
    101c:	59 01       	movw	r10, r18
    101e:	8e 2d       	mov	r24, r14
    1020:	82 60       	ori	r24, 0x02	; 2
    1022:	88 2e       	mov	r8, r24
    1024:	2a e0       	ldi	r18, 0x0A	; 10
    1026:	f2 12       	cpse	r15, r18
    1028:	07 c0       	rjmp	.+14     	; 0x1038 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    102a:	ce 01       	movw	r24, r28
    102c:	05 96       	adiw	r24, 0x05	; 5
    102e:	6a e0       	ldi	r22, 0x0A	; 10
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	0e 94 a5 0b 	call	0x174a	; 0x174a <__udivmodhi4>
    1036:	eb 01       	movw	r28, r22
    1038:	c8 3e       	cpi	r28, 0xE8	; 232
    103a:	43 e0       	ldi	r20, 0x03	; 3
    103c:	d4 07       	cpc	r29, r20
    103e:	59 f0       	breq	.+22     	; 0x1056 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    1040:	98 01       	movw	r18, r16
    1042:	de 01       	movw	r26, r28
    1044:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <__umulhisi3>
    1048:	28 ee       	ldi	r18, 0xE8	; 232
    104a:	33 e0       	ldi	r19, 0x03	; 3
    104c:	40 e0       	ldi	r20, 0x00	; 0
    104e:	50 e0       	ldi	r21, 0x00	; 0
    1050:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__divmodsi4>
    1054:	89 01       	movw	r16, r18
    1056:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    105a:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    105e:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1062:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1066:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    106a:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    106e:	4d 2d       	mov	r20, r13
    1070:	40 31       	cpi	r20, 0x10	; 16
    1072:	08 f0       	brcs	.+2      	; 0x1076 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    1074:	4f e0       	ldi	r20, 0x0F	; 15
    1076:	80 e1       	ldi	r24, 0x10	; 16
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	84 1b       	sub	r24, r20
    107c:	91 09       	sbc	r25, r1
    107e:	a9 01       	movw	r20, r18
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    1082:	56 95       	lsr	r21
    1084:	47 95       	ror	r20
    1086:	8a 95       	dec	r24
    1088:	e2 f7       	brpl	.-8      	; 0x1082 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    108a:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    108e:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    1092:	10 93 2a 01 	sts	0x012A, r17	; 0x80012a <_ZL13buzzerTimeout+0x1>
    1096:	00 93 29 01 	sts	0x0129, r16	; 0x800129 <_ZL13buzzerTimeout>
    109a:	86 b3       	in	r24, 0x16	; 22
    109c:	8f ef       	ldi	r24, 0xFF	; 255
    109e:	86 bb       	out	0x16, r24	; 22
    10a0:	81 e0       	ldi	r24, 0x01	; 1
    10a2:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	ff 90       	pop	r15
    10b0:	ef 90       	pop	r14
    10b2:	df 90       	pop	r13
    10b4:	bf 90       	pop	r11
    10b6:	af 90       	pop	r10
    10b8:	9f 90       	pop	r9
    10ba:	8f 90       	pop	r8
    10bc:	08 95       	ret

000010be <_ZN15OrangutanBuzzer8playNoteEhjh>:
    10be:	cf 93       	push	r28
    10c0:	df 93       	push	r29
    10c2:	eb 01       	movw	r28, r22
    10c4:	8f 3f       	cpi	r24, 0xFF	; 255
    10c6:	11 f0       	breq	.+4      	; 0x10cc <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    10c8:	41 11       	cpse	r20, r1
    10ca:	05 c0       	rjmp	.+10     	; 0x10d6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    10cc:	40 e0       	ldi	r20, 0x00	; 0
    10ce:	be 01       	movw	r22, r28
    10d0:	88 ee       	ldi	r24, 0xE8	; 232
    10d2:	93 e0       	ldi	r25, 0x03	; 3
    10d4:	43 c0       	rjmp	.+134    	; 0x115c <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    10d6:	81 31       	cpi	r24, 0x11	; 17
    10d8:	30 f0       	brcs	.+12     	; 0x10e6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    10da:	50 ef       	ldi	r21, 0xF0	; 240
    10dc:	58 0f       	add	r21, r24
    10de:	50 36       	cpi	r21, 0x60	; 96
    10e0:	18 f0       	brcs	.+6      	; 0x10e8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    10e2:	5f e5       	ldi	r21, 0x5F	; 95
    10e4:	01 c0       	rjmp	.+2      	; 0x10e8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	85 2f       	mov	r24, r21
    10ea:	6c e0       	ldi	r22, 0x0C	; 12
    10ec:	0e 94 99 0b 	call	0x1732	; 0x1732 <__udivmodqi4>
    10f0:	68 2f       	mov	r22, r24
    10f2:	74 ef       	ldi	r23, 0xF4	; 244
    10f4:	76 03       	mulsu	r23, r22
    10f6:	90 01       	movw	r18, r0
    10f8:	11 24       	eor	r1, r1
    10fa:	25 0f       	add	r18, r21
    10fc:	31 1d       	adc	r19, r1
    10fe:	2c 30       	cpi	r18, 0x0C	; 12
    1100:	31 05       	cpc	r19, r1
    1102:	40 f4       	brcc	.+16     	; 0x1114 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    1104:	f9 01       	movw	r30, r18
    1106:	ee 0f       	add	r30, r30
    1108:	ff 1f       	adc	r31, r31
    110a:	e6 5f       	subi	r30, 0xF6	; 246
    110c:	fe 4f       	sbci	r31, 0xFE	; 254
    110e:	20 81       	ld	r18, Z
    1110:	31 81       	ldd	r19, Z+1	; 0x01
    1112:	02 c0       	rjmp	.+4      	; 0x1118 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    1114:	20 e0       	ldi	r18, 0x00	; 0
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	87 30       	cpi	r24, 0x07	; 7
    111a:	81 f0       	breq	.+32     	; 0x113c <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    111c:	08 2e       	mov	r0, r24
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    1120:	22 0f       	add	r18, r18
    1122:	33 1f       	adc	r19, r19
    1124:	0a 94       	dec	r0
    1126:	e2 f7       	brpl	.-8      	; 0x1120 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    1128:	82 30       	cpi	r24, 0x02	; 2
    112a:	28 f0       	brcs	.+10     	; 0x1136 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    112c:	c9 01       	movw	r24, r18
    112e:	05 96       	adiw	r24, 0x05	; 5
    1130:	6a e0       	ldi	r22, 0x0A	; 10
    1132:	70 e0       	ldi	r23, 0x00	; 0
    1134:	0c c0       	rjmp	.+24     	; 0x114e <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    1136:	c9 01       	movw	r24, r18
    1138:	90 58       	subi	r25, 0x80	; 128
    113a:	0c c0       	rjmp	.+24     	; 0x1154 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    113c:	c9 01       	movw	r24, r18
    113e:	36 e0       	ldi	r19, 0x06	; 6
    1140:	88 0f       	add	r24, r24
    1142:	99 1f       	adc	r25, r25
    1144:	3a 95       	dec	r19
    1146:	e1 f7       	brne	.-8      	; 0x1140 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    1148:	02 96       	adiw	r24, 0x02	; 2
    114a:	65 e0       	ldi	r22, 0x05	; 5
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	0e 94 a5 0b 	call	0x174a	; 0x174a <__udivmodhi4>
    1152:	cb 01       	movw	r24, r22
    1154:	40 31       	cpi	r20, 0x10	; 16
    1156:	08 f0       	brcs	.+2      	; 0x115a <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    1158:	4f e0       	ldi	r20, 0x0F	; 15
    115a:	be 01       	movw	r22, r28
    115c:	0e 94 a3 07 	call	0xf46	; 0xf46 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    1160:	df 91       	pop	r29
    1162:	cf 91       	pop	r28
    1164:	08 95       	ret

00001166 <_ZL8nextNotev>:
    1166:	a2 e0       	ldi	r26, 0x02	; 2
    1168:	b0 e0       	ldi	r27, 0x00	; 0
    116a:	e9 eb       	ldi	r30, 0xB9	; 185
    116c:	f8 e0       	ldi	r31, 0x08	; 8
    116e:	0c 94 0b 0c 	jmp	0x1816	; 0x1816 <__prologue_saves__+0x4>
    1172:	90 90 08 01 	lds	r9, 0x0108	; 0x800108 <_ZL6octave>
    1176:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_ZL8staccato>
    117a:	88 23       	and	r24, r24
    117c:	21 f0       	breq	.+8      	; 0x1186 <_ZL8nextNotev+0x20>
    117e:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <_ZL22staccato_rest_duration>
    1182:	61 11       	cpse	r22, r1
    1184:	17 c0       	rjmp	.+46     	; 0x11b4 <_ZL8nextNotev+0x4e>
    1186:	77 24       	eor	r7, r7
    1188:	73 94       	inc	r7
    118a:	b0 ec       	ldi	r27, 0xC0	; 192
    118c:	ab 2e       	mov	r10, r27
    118e:	bd e5       	ldi	r27, 0x5D	; 93
    1190:	bb 2e       	mov	r11, r27
    1192:	1a e0       	ldi	r17, 0x0A	; 10
    1194:	61 2e       	mov	r6, r17
    1196:	04 e0       	ldi	r16, 0x04	; 4
    1198:	80 2e       	mov	r8, r16
    119a:	80 ed       	ldi	r24, 0xD0	; 208
    119c:	c8 2e       	mov	r12, r24
    119e:	87 e0       	ldi	r24, 0x07	; 7
    11a0:	d8 2e       	mov	r13, r24
    11a2:	94 e0       	ldi	r25, 0x04	; 4
    11a4:	e9 2e       	mov	r14, r25
    11a6:	f1 2c       	mov	r15, r1
    11a8:	04 ef       	ldi	r16, 0xF4	; 244
    11aa:	11 e0       	ldi	r17, 0x01	; 1
    11ac:	2f e0       	ldi	r18, 0x0F	; 15
    11ae:	42 2e       	mov	r4, r18
    11b0:	51 2c       	mov	r5, r1
    11b2:	15 c0       	rjmp	.+42     	; 0x11de <_ZL8nextNotev+0x78>
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	40 e0       	ldi	r20, 0x00	; 0
    11b8:	88 ee       	ldi	r24, 0xE8	; 232
    11ba:	93 e0       	ldi	r25, 0x03	; 3
    11bc:	0e 94 a3 07 	call	0xf46	; 0xf46 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    11c0:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
    11c4:	17 c1       	rjmp	.+558    	; 0x13f4 <_ZL8nextNotev+0x28e>
    11c6:	86 36       	cpi	r24, 0x66	; 102
    11c8:	d4 f5       	brge	.+116    	; 0x123e <_ZL8nextNotev+0xd8>
    11ca:	81 36       	cpi	r24, 0x61	; 97
    11cc:	09 f4       	brne	.+2      	; 0x11d0 <_ZL8nextNotev+0x6a>
    11ce:	a9 c0       	rjmp	.+338    	; 0x1322 <_ZL8nextNotev+0x1bc>
    11d0:	7c f5       	brge	.+94     	; 0x1230 <_ZL8nextNotev+0xca>
    11d2:	8c 33       	cpi	r24, 0x3C	; 60
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <_ZL8nextNotev+0x72>
    11d6:	60 c0       	rjmp	.+192    	; 0x1298 <_ZL8nextNotev+0x132>
    11d8:	8e 33       	cpi	r24, 0x3E	; 62
    11da:	81 f4       	brne	.+32     	; 0x11fc <_ZL8nextNotev+0x96>
    11dc:	93 94       	inc	r9
    11de:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
    11e2:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    11e6:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    11ea:	2f 5f       	subi	r18, 0xFF	; 255
    11ec:	3f 4f       	sbci	r19, 0xFF	; 255
    11ee:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    11f2:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    11f6:	85 36       	cpi	r24, 0x65	; 101
    11f8:	31 f7       	brne	.-52     	; 0x11c6 <_ZL8nextNotev+0x60>
    11fa:	52 c0       	rjmp	.+164    	; 0x12a0 <_ZL8nextNotev+0x13a>
    11fc:	81 32       	cpi	r24, 0x21	; 33
    11fe:	09 f0       	breq	.+2      	; 0x1202 <_ZL8nextNotev+0x9c>
    1200:	8b c0       	rjmp	.+278    	; 0x1318 <_ZL8nextNotev+0x1b2>
    1202:	80 92 08 01 	sts	0x0108, r8	; 0x800108 <_ZL6octave>
    1206:	d0 92 07 01 	sts	0x0107, r13	; 0x800107 <_ZL19whole_note_duration+0x1>
    120a:	c0 92 06 01 	sts	0x0106, r12	; 0x800106 <_ZL19whole_note_duration>
    120e:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <_ZL9note_type+0x1>
    1212:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <_ZL9note_type>
    1216:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <_ZL8duration+0x1>
    121a:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <_ZL8duration>
    121e:	50 92 01 01 	sts	0x0101, r5	; 0x800101 <__data_start+0x1>
    1222:	40 92 00 01 	sts	0x0100, r4	; 0x800100 <__data_start>
    1226:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <_ZL8staccato>
    122a:	a4 e0       	ldi	r26, 0x04	; 4
    122c:	9a 2e       	mov	r9, r26
    122e:	d7 cf       	rjmp	.-82     	; 0x11de <_ZL8nextNotev+0x78>
    1230:	83 36       	cpi	r24, 0x63	; 99
    1232:	a1 f1       	breq	.+104    	; 0x129c <_ZL8nextNotev+0x136>
    1234:	0c f4       	brge	.+2      	; 0x1238 <_ZL8nextNotev+0xd2>
    1236:	78 c0       	rjmp	.+240    	; 0x1328 <_ZL8nextNotev+0x1c2>
    1238:	10 e0       	ldi	r17, 0x00	; 0
    123a:	82 e0       	ldi	r24, 0x02	; 2
    123c:	77 c0       	rjmp	.+238    	; 0x132c <_ZL8nextNotev+0x1c6>
    123e:	8d 36       	cpi	r24, 0x6D	; 109
    1240:	c1 f1       	breq	.+112    	; 0x12b2 <_ZL8nextNotev+0x14c>
    1242:	94 f4       	brge	.+36     	; 0x1268 <_ZL8nextNotev+0x102>
    1244:	87 36       	cpi	r24, 0x67	; 103
    1246:	91 f1       	breq	.+100    	; 0x12ac <_ZL8nextNotev+0x146>
    1248:	74 f1       	brlt	.+92     	; 0x12a6 <_ZL8nextNotev+0x140>
    124a:	8c 36       	cpi	r24, 0x6C	; 108
    124c:	09 f0       	breq	.+2      	; 0x1250 <_ZL8nextNotev+0xea>
    124e:	64 c0       	rjmp	.+200    	; 0x1318 <_ZL8nextNotev+0x1b2>
    1250:	0e 94 64 07 	call	0xec8	; 0xec8 <_ZL9getNumberv>
    1254:	bc 01       	movw	r22, r24
    1256:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_ZL9note_type+0x1>
    125a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_ZL9note_type>
    125e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL19whole_note_duration>
    1262:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_ZL19whole_note_duration+0x1>
    1266:	51 c0       	rjmp	.+162    	; 0x130a <_ZL8nextNotev+0x1a4>
    1268:	82 37       	cpi	r24, 0x72	; 114
    126a:	c9 f1       	breq	.+114    	; 0x12de <_ZL8nextNotev+0x178>
    126c:	4c f4       	brge	.+18     	; 0x1280 <_ZL8nextNotev+0x11a>
    126e:	8f 36       	cpi	r24, 0x6F	; 111
    1270:	09 f0       	breq	.+2      	; 0x1274 <_ZL8nextNotev+0x10e>
    1272:	52 c0       	rjmp	.+164    	; 0x1318 <_ZL8nextNotev+0x1b2>
    1274:	0e 94 64 07 	call	0xec8	; 0xec8 <_ZL9getNumberv>
    1278:	98 2e       	mov	r9, r24
    127a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL6octave>
    127e:	af cf       	rjmp	.-162    	; 0x11de <_ZL8nextNotev+0x78>
    1280:	84 37       	cpi	r24, 0x74	; 116
    1282:	81 f1       	breq	.+96     	; 0x12e4 <_ZL8nextNotev+0x17e>
    1284:	86 37       	cpi	r24, 0x76	; 118
    1286:	09 f0       	breq	.+2      	; 0x128a <_ZL8nextNotev+0x124>
    1288:	47 c0       	rjmp	.+142    	; 0x1318 <_ZL8nextNotev+0x1b2>
    128a:	0e 94 64 07 	call	0xec8	; 0xec8 <_ZL9getNumberv>
    128e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1292:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1296:	a3 cf       	rjmp	.-186    	; 0x11de <_ZL8nextNotev+0x78>
    1298:	9a 94       	dec	r9
    129a:	a1 cf       	rjmp	.-190    	; 0x11de <_ZL8nextNotev+0x78>
    129c:	10 e0       	ldi	r17, 0x00	; 0
    129e:	20 c0       	rjmp	.+64     	; 0x12e0 <_ZL8nextNotev+0x17a>
    12a0:	10 e0       	ldi	r17, 0x00	; 0
    12a2:	84 e0       	ldi	r24, 0x04	; 4
    12a4:	43 c0       	rjmp	.+134    	; 0x132c <_ZL8nextNotev+0x1c6>
    12a6:	10 e0       	ldi	r17, 0x00	; 0
    12a8:	85 e0       	ldi	r24, 0x05	; 5
    12aa:	40 c0       	rjmp	.+128    	; 0x132c <_ZL8nextNotev+0x1c6>
    12ac:	10 e0       	ldi	r17, 0x00	; 0
    12ae:	87 e0       	ldi	r24, 0x07	; 7
    12b0:	3d c0       	rjmp	.+122    	; 0x132c <_ZL8nextNotev+0x1c6>
    12b2:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
    12b6:	8c 36       	cpi	r24, 0x6C	; 108
    12b8:	19 f4       	brne	.+6      	; 0x12c0 <_ZL8nextNotev+0x15a>
    12ba:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <_ZL8staccato>
    12be:	04 c0       	rjmp	.+8      	; 0x12c8 <_ZL8nextNotev+0x162>
    12c0:	70 92 26 01 	sts	0x0126, r7	; 0x800126 <_ZL8staccato>
    12c4:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
    12c8:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    12cc:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    12d0:	2f 5f       	subi	r18, 0xFF	; 255
    12d2:	3f 4f       	sbci	r19, 0xFF	; 255
    12d4:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    12d8:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    12dc:	80 cf       	rjmp	.-256    	; 0x11de <_ZL8nextNotev+0x78>
    12de:	11 e0       	ldi	r17, 0x01	; 1
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	24 c0       	rjmp	.+72     	; 0x132c <_ZL8nextNotev+0x1c6>
    12e4:	0e 94 64 07 	call	0xec8	; 0xec8 <_ZL9getNumberv>
    12e8:	bc 01       	movw	r22, r24
    12ea:	c5 01       	movw	r24, r10
    12ec:	0e 94 a5 0b 	call	0x174a	; 0x174a <__udivmodhi4>
    12f0:	66 9e       	mul	r6, r22
    12f2:	c0 01       	movw	r24, r0
    12f4:	67 9e       	mul	r6, r23
    12f6:	90 0d       	add	r25, r0
    12f8:	11 24       	eor	r1, r1
    12fa:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL19whole_note_duration+0x1>
    12fe:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL19whole_note_duration>
    1302:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL9note_type>
    1306:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL9note_type+0x1>
    130a:	0e 94 a5 0b 	call	0x174a	; 0x174a <__udivmodhi4>
    130e:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <_ZL8duration+0x1>
    1312:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <_ZL8duration>
    1316:	63 cf       	rjmp	.-314    	; 0x11de <_ZL8nextNotev+0x78>
    1318:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <__data_end+0x1>
    131c:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <__data_end>
    1320:	69 c0       	rjmp	.+210    	; 0x13f4 <_ZL8nextNotev+0x28e>
    1322:	10 e0       	ldi	r17, 0x00	; 0
    1324:	89 e0       	ldi	r24, 0x09	; 9
    1326:	02 c0       	rjmp	.+4      	; 0x132c <_ZL8nextNotev+0x1c6>
    1328:	10 e0       	ldi	r17, 0x00	; 0
    132a:	8b e0       	ldi	r24, 0x0B	; 11
    132c:	08 2f       	mov	r16, r24
    132e:	9c e0       	ldi	r25, 0x0C	; 12
    1330:	99 9e       	mul	r9, r25
    1332:	00 0d       	add	r16, r0
    1334:	11 24       	eor	r1, r1
    1336:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
    133a:	98 2f       	mov	r25, r24
    133c:	97 7f       	andi	r25, 0xF7	; 247
    133e:	93 32       	cpi	r25, 0x23	; 35
    1340:	61 f4       	brne	.+24     	; 0x135a <_ZL8nextNotev+0x1f4>
    1342:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    1346:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    134a:	2f 5f       	subi	r18, 0xFF	; 255
    134c:	3f 4f       	sbci	r19, 0xFF	; 255
    134e:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    1352:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    1356:	0f 5f       	subi	r16, 0xFF	; 255
    1358:	ee cf       	rjmp	.-36     	; 0x1336 <_ZL8nextNotev+0x1d0>
    135a:	8d 32       	cpi	r24, 0x2D	; 45
    135c:	71 f4       	brne	.+28     	; 0x137a <_ZL8nextNotev+0x214>
    135e:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    1362:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    1366:	2f 5f       	subi	r18, 0xFF	; 255
    1368:	3f 4f       	sbci	r19, 0xFF	; 255
    136a:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    136e:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    1372:	01 50       	subi	r16, 0x01	; 1
    1374:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
    1378:	f0 cf       	rjmp	.-32     	; 0x135a <_ZL8nextNotev+0x1f4>
    137a:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <_ZL8duration>
    137e:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <_ZL8duration+0x1>
    1382:	81 53       	subi	r24, 0x31	; 49
    1384:	88 30       	cpi	r24, 0x08	; 8
    1386:	50 f4       	brcc	.+20     	; 0x139c <_ZL8nextNotev+0x236>
    1388:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <_ZL19whole_note_duration>
    138c:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <_ZL19whole_note_duration+0x1>
    1390:	0e 94 64 07 	call	0xec8	; 0xec8 <_ZL9getNumberv>
    1394:	bc 01       	movw	r22, r24
    1396:	c7 01       	movw	r24, r14
    1398:	0e 94 a5 0b 	call	0x174a	; 0x174a <__udivmodhi4>
    139c:	7b 01       	movw	r14, r22
    139e:	f6 94       	lsr	r15
    13a0:	e7 94       	ror	r14
    13a2:	69 83       	std	Y+1, r22	; 0x01
    13a4:	7a 83       	std	Y+2, r23	; 0x02
    13a6:	0e 94 47 07 	call	0xe8e	; 0xe8e <_ZL16currentCharacterv>
    13aa:	69 81       	ldd	r22, Y+1	; 0x01
    13ac:	7a 81       	ldd	r23, Y+2	; 0x02
    13ae:	8e 32       	cpi	r24, 0x2E	; 46
    13b0:	69 f4       	brne	.+26     	; 0x13cc <_ZL8nextNotev+0x266>
    13b2:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    13b6:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    13ba:	2f 5f       	subi	r18, 0xFF	; 255
    13bc:	3f 4f       	sbci	r19, 0xFF	; 255
    13be:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    13c2:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    13c6:	6e 0d       	add	r22, r14
    13c8:	7f 1d       	adc	r23, r15
    13ca:	e9 cf       	rjmp	.-46     	; 0x139e <_ZL8nextNotev+0x238>
    13cc:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_ZL8staccato>
    13d0:	88 23       	and	r24, r24
    13d2:	39 f0       	breq	.+14     	; 0x13e2 <_ZL8nextNotev+0x27c>
    13d4:	9b 01       	movw	r18, r22
    13d6:	36 95       	lsr	r19
    13d8:	27 95       	ror	r18
    13da:	20 93 25 01 	sts	0x0125, r18	; 0x800125 <_ZL22staccato_rest_duration>
    13de:	62 1b       	sub	r22, r18
    13e0:	71 09       	sbc	r23, r1
    13e2:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    13e6:	11 23       	and	r17, r17
    13e8:	11 f0       	breq	.+4      	; 0x13ee <_ZL8nextNotev+0x288>
    13ea:	8f ef       	ldi	r24, 0xFF	; 255
    13ec:	01 c0       	rjmp	.+2      	; 0x13f0 <_ZL8nextNotev+0x28a>
    13ee:	80 2f       	mov	r24, r16
    13f0:	0e 94 5f 08 	call	0x10be	; 0x10be <_ZN15OrangutanBuzzer8playNoteEhjh>
    13f4:	22 96       	adiw	r28, 0x02	; 2
    13f6:	e0 e1       	ldi	r30, 0x10	; 16
    13f8:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__epilogue_restores__+0x4>

000013fc <__vector_13>:
    13fc:	1f 92       	push	r1
    13fe:	0f 92       	push	r0
    1400:	0f b6       	in	r0, 0x3f	; 63
    1402:	0f 92       	push	r0
    1404:	11 24       	eor	r1, r1
    1406:	2f 93       	push	r18
    1408:	3f 93       	push	r19
    140a:	4f 93       	push	r20
    140c:	5f 93       	push	r21
    140e:	6f 93       	push	r22
    1410:	7f 93       	push	r23
    1412:	8f 93       	push	r24
    1414:	9f 93       	push	r25
    1416:	af 93       	push	r26
    1418:	bf 93       	push	r27
    141a:	ef 93       	push	r30
    141c:	ff 93       	push	r31
    141e:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <_ZL13buzzerTimeout>
    1422:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <_ZL13buzzerTimeout+0x1>
    1426:	9c 01       	movw	r18, r24
    1428:	21 50       	subi	r18, 0x01	; 1
    142a:	31 09       	sbc	r19, r1
    142c:	30 93 2a 01 	sts	0x012A, r19	; 0x80012a <_ZL13buzzerTimeout+0x1>
    1430:	20 93 29 01 	sts	0x0129, r18	; 0x800129 <_ZL13buzzerTimeout>
    1434:	89 2b       	or	r24, r25
    1436:	11 f5       	brne	.+68     	; 0x147c <__vector_13+0x80>
    1438:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    143c:	78 94       	sei
    143e:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    1442:	88 7f       	andi	r24, 0xF8	; 248
    1444:	81 60       	ori	r24, 0x01	; 1
    1446:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    144a:	80 e1       	ldi	r24, 0x10	; 16
    144c:	97 e2       	ldi	r25, 0x27	; 39
    144e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1452:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1456:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    145a:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <buzzerFinished>
    1464:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
    1468:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
    146c:	89 2b       	or	r24, r25
    146e:	31 f0       	breq	.+12     	; 0x147c <__vector_13+0x80>
    1470:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <_ZL17play_mode_setting>
    1474:	81 11       	cpse	r24, r1
    1476:	02 c0       	rjmp	.+4      	; 0x147c <__vector_13+0x80>
    1478:	0e 94 b3 08 	call	0x1166	; 0x1166 <_ZL8nextNotev>
    147c:	ff 91       	pop	r31
    147e:	ef 91       	pop	r30
    1480:	bf 91       	pop	r27
    1482:	af 91       	pop	r26
    1484:	9f 91       	pop	r25
    1486:	8f 91       	pop	r24
    1488:	7f 91       	pop	r23
    148a:	6f 91       	pop	r22
    148c:	5f 91       	pop	r21
    148e:	4f 91       	pop	r20
    1490:	3f 91       	pop	r19
    1492:	2f 91       	pop	r18
    1494:	0f 90       	pop	r0
    1496:	0f be       	out	0x3f, r0	; 63
    1498:	0f 90       	pop	r0
    149a:	1f 90       	pop	r1
    149c:	18 95       	reti

0000149e <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    149e:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    14a2:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
    14a6:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
    14aa:	81 e0       	ldi	r24, 0x01	; 1
    14ac:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <_ZL17use_program_space>
    14b0:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
    14b4:	0e 94 b3 08 	call	0x1166	; 0x1166 <_ZL8nextNotev>
    14b8:	08 95       	ret

000014ba <play_from_program_space>:
    14ba:	0e 94 4f 0a 	call	0x149e	; 0x149e <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    14be:	08 95       	ret

000014c0 <_ZN16OrangutanDigital9setOutputEhh>:
    14c0:	88 30       	cpi	r24, 0x08	; 8
    14c2:	58 f4       	brcc	.+22     	; 0x14da <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    14c4:	91 e0       	ldi	r25, 0x01	; 1
    14c6:	01 c0       	rjmp	.+2      	; 0x14ca <_ZN16OrangutanDigital9setOutputEhh+0xa>
    14c8:	99 0f       	add	r25, r25
    14ca:	8a 95       	dec	r24
    14cc:	ea f7       	brpl	.-6      	; 0x14c8 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    14ce:	89 2f       	mov	r24, r25
    14d0:	aa e2       	ldi	r26, 0x2A	; 42
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	eb e2       	ldi	r30, 0x2B	; 43
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	21 c0       	rjmp	.+66     	; 0x151c <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14da:	8e 30       	cpi	r24, 0x0E	; 14
    14dc:	60 f4       	brcc	.+24     	; 0x14f6 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    14de:	98 ef       	ldi	r25, 0xF8	; 248
    14e0:	98 0f       	add	r25, r24
    14e2:	81 e0       	ldi	r24, 0x01	; 1
    14e4:	01 c0       	rjmp	.+2      	; 0x14e8 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    14e6:	88 0f       	add	r24, r24
    14e8:	9a 95       	dec	r25
    14ea:	ea f7       	brpl	.-6      	; 0x14e6 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    14ec:	a4 e2       	ldi	r26, 0x24	; 36
    14ee:	b0 e0       	ldi	r27, 0x00	; 0
    14f0:	e5 e2       	ldi	r30, 0x25	; 37
    14f2:	f0 e0       	ldi	r31, 0x00	; 0
    14f4:	13 c0       	rjmp	.+38     	; 0x151c <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    14f6:	85 31       	cpi	r24, 0x15	; 21
    14f8:	60 f4       	brcc	.+24     	; 0x1512 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    14fa:	92 ef       	ldi	r25, 0xF2	; 242
    14fc:	98 0f       	add	r25, r24
    14fe:	81 e0       	ldi	r24, 0x01	; 1
    1500:	01 c0       	rjmp	.+2      	; 0x1504 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1502:	88 0f       	add	r24, r24
    1504:	9a 95       	dec	r25
    1506:	ea f7       	brpl	.-6      	; 0x1502 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1508:	a7 e2       	ldi	r26, 0x27	; 39
    150a:	b0 e0       	ldi	r27, 0x00	; 0
    150c:	e8 e2       	ldi	r30, 0x28	; 40
    150e:	f0 e0       	ldi	r31, 0x00	; 0
    1510:	05 c0       	rjmp	.+10     	; 0x151c <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1512:	80 e0       	ldi	r24, 0x00	; 0
    1514:	a0 e0       	ldi	r26, 0x00	; 0
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	e0 e0       	ldi	r30, 0x00	; 0
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	6f 3f       	cpi	r22, 0xFF	; 255
    151e:	19 f4       	brne	.+6      	; 0x1526 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    1520:	90 81       	ld	r25, Z
    1522:	98 27       	eor	r25, r24
    1524:	09 c0       	rjmp	.+18     	; 0x1538 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1526:	66 23       	and	r22, r22
    1528:	19 f0       	breq	.+6      	; 0x1530 <_ZN16OrangutanDigital9setOutputEhh+0x70>
    152a:	90 81       	ld	r25, Z
    152c:	98 2b       	or	r25, r24
    152e:	04 c0       	rjmp	.+8      	; 0x1538 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1530:	20 81       	ld	r18, Z
    1532:	98 2f       	mov	r25, r24
    1534:	90 95       	com	r25
    1536:	92 23       	and	r25, r18
    1538:	90 83       	st	Z, r25
    153a:	9c 91       	ld	r25, X
    153c:	98 2b       	or	r25, r24
    153e:	9c 93       	st	X, r25
    1540:	08 95       	ret

00001542 <_ZN15OrangutanMotors5init2Ev>:
    1542:	83 ef       	ldi	r24, 0xF3	; 243
    1544:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1548:	84 bd       	out	0x24, r24	; 36
    154a:	82 e0       	ldi	r24, 0x02	; 2
    154c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1550:	85 bd       	out	0x25, r24	; 37
    1552:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1556:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    155a:	18 bc       	out	0x28, r1	; 40
    155c:	17 bc       	out	0x27, r1	; 39
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	86 e0       	ldi	r24, 0x06	; 6
    1562:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <_ZN16OrangutanDigital9setOutputEhh>
    1566:	60 e0       	ldi	r22, 0x00	; 0
    1568:	85 e0       	ldi	r24, 0x05	; 5
    156a:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <_ZN16OrangutanDigital9setOutputEhh>
    156e:	60 e0       	ldi	r22, 0x00	; 0
    1570:	8b e0       	ldi	r24, 0x0B	; 11
    1572:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <_ZN16OrangutanDigital9setOutputEhh>
    1576:	60 e0       	ldi	r22, 0x00	; 0
    1578:	83 e0       	ldi	r24, 0x03	; 3
    157a:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <_ZN16OrangutanDigital9setOutputEhh>
    157e:	08 95       	ret

00001580 <_ZN15OrangutanMotors4initEv>:
    1580:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <_ZZN15OrangutanMotors4initEvE11initialized>
    1584:	81 11       	cpse	r24, r1
    1586:	05 c0       	rjmp	.+10     	; 0x1592 <_ZN15OrangutanMotors4initEv+0x12>
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_ZZN15OrangutanMotors4initEvE11initialized>
    158e:	0e 94 a1 0a 	call	0x1542	; 0x1542 <_ZN15OrangutanMotors5init2Ev>
    1592:	08 95       	ret

00001594 <_ZN15OrangutanMotors10setM1SpeedEi>:
    1594:	cf 93       	push	r28
    1596:	df 93       	push	r29
    1598:	ec 01       	movw	r28, r24
    159a:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN15OrangutanMotors4initEv>
    159e:	d7 ff       	sbrs	r29, 7
    15a0:	05 c0       	rjmp	.+10     	; 0x15ac <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    15a2:	d1 95       	neg	r29
    15a4:	c1 95       	neg	r28
    15a6:	d1 09       	sbc	r29, r1
    15a8:	81 e0       	ldi	r24, 0x01	; 1
    15aa:	01 c0       	rjmp	.+2      	; 0x15ae <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    15ac:	80 e0       	ldi	r24, 0x00	; 0
    15ae:	cf 3f       	cpi	r28, 0xFF	; 255
    15b0:	d1 05       	cpc	r29, r1
    15b2:	19 f0       	breq	.+6      	; 0x15ba <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    15b4:	14 f0       	brlt	.+4      	; 0x15ba <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    15b6:	cf ef       	ldi	r28, 0xFF	; 255
    15b8:	d0 e0       	ldi	r29, 0x00	; 0
    15ba:	88 23       	and	r24, r24
    15bc:	19 f0       	breq	.+6      	; 0x15c4 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    15be:	18 bc       	out	0x28, r1	; 40
    15c0:	c7 bd       	out	0x27, r28	; 39
    15c2:	02 c0       	rjmp	.+4      	; 0x15c8 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    15c4:	c8 bd       	out	0x28, r28	; 40
    15c6:	17 bc       	out	0x27, r1	; 39
    15c8:	df 91       	pop	r29
    15ca:	cf 91       	pop	r28
    15cc:	08 95       	ret

000015ce <_ZN15OrangutanMotors10setM2SpeedEi>:
    15ce:	cf 93       	push	r28
    15d0:	df 93       	push	r29
    15d2:	ec 01       	movw	r28, r24
    15d4:	0e 94 c0 0a 	call	0x1580	; 0x1580 <_ZN15OrangutanMotors4initEv>
    15d8:	d7 ff       	sbrs	r29, 7
    15da:	05 c0       	rjmp	.+10     	; 0x15e6 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    15dc:	d1 95       	neg	r29
    15de:	c1 95       	neg	r28
    15e0:	d1 09       	sbc	r29, r1
    15e2:	81 e0       	ldi	r24, 0x01	; 1
    15e4:	01 c0       	rjmp	.+2      	; 0x15e8 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	cf 3f       	cpi	r28, 0xFF	; 255
    15ea:	d1 05       	cpc	r29, r1
    15ec:	19 f0       	breq	.+6      	; 0x15f4 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    15ee:	14 f0       	brlt	.+4      	; 0x15f4 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    15f0:	cf ef       	ldi	r28, 0xFF	; 255
    15f2:	d0 e0       	ldi	r29, 0x00	; 0
    15f4:	88 23       	and	r24, r24
    15f6:	29 f0       	breq	.+10     	; 0x1602 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    15f8:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    15fc:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1600:	04 c0       	rjmp	.+8      	; 0x160a <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1602:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1606:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    160a:	df 91       	pop	r29
    160c:	cf 91       	pop	r28
    160e:	08 95       	ret

00001610 <_ZN15OrangutanMotors9setSpeedsEii>:
    1610:	cf 93       	push	r28
    1612:	df 93       	push	r29
    1614:	eb 01       	movw	r28, r22
    1616:	0e 94 ca 0a 	call	0x1594	; 0x1594 <_ZN15OrangutanMotors10setM1SpeedEi>
    161a:	ce 01       	movw	r24, r28
    161c:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <_ZN15OrangutanMotors10setM2SpeedEi>
    1620:	df 91       	pop	r29
    1622:	cf 91       	pop	r28
    1624:	08 95       	ret

00001626 <set_motors>:
    1626:	0e 94 08 0b 	call	0x1610	; 0x1610 <_ZN15OrangutanMotors9setSpeedsEii>
    162a:	08 95       	ret

0000162c <__vector_9>:
    162c:	2f 92       	push	r2
    162e:	8f 93       	push	r24
    1630:	9f 93       	push	r25
    1632:	2f b6       	in	r2, 0x3f	; 63
    1634:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tickCount+0x1>
    1638:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <tickCount+0x2>
    163c:	01 96       	adiw	r24, 0x01	; 1
    163e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tickCount+0x1>
    1642:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <tickCount+0x2>
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <tickCount+0x3>
    164c:	89 1f       	adc	r24, r25
    164e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <tickCount+0x3>
    1652:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <us_over_10+0x1>
    1656:	9c 5f       	subi	r25, 0xFC	; 252
    1658:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <us_over_10+0x1>
    165c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <us_over_10>
    1660:	80 51       	subi	r24, 0x10	; 16
    1662:	97 42       	sbci	r25, 0x27	; 39
    1664:	c0 f0       	brcs	.+48     	; 0x1696 <end>
    1666:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <us_over_10+0x1>
    166a:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <us_over_10>
    166e:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <msCounter>
    1672:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <msCounter+0x1>
    1676:	01 96       	adiw	r24, 0x01	; 1
    1678:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <msCounter>
    167c:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <msCounter+0x1>
    1680:	90 e0       	ldi	r25, 0x00	; 0
    1682:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <msCounter+0x2>
    1686:	89 1f       	adc	r24, r25
    1688:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <msCounter+0x2>
    168c:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <msCounter+0x3>
    1690:	89 1f       	adc	r24, r25
    1692:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <msCounter+0x3>

00001696 <end>:
    1696:	2f be       	out	0x3f, r2	; 63
    1698:	9f 91       	pop	r25
    169a:	8f 91       	pop	r24
    169c:	2f 90       	pop	r2
    169e:	18 95       	reti

000016a0 <_ZN13OrangutanTime17delayMillisecondsEj>:
    16a0:	28 ee       	ldi	r18, 0xE8	; 232
    16a2:	33 e0       	ldi	r19, 0x03	; 3
    16a4:	01 97       	sbiw	r24, 0x01	; 1
    16a6:	48 f0       	brcs	.+18     	; 0x16ba <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    16a8:	f9 01       	movw	r30, r18
    16aa:	6f 93       	push	r22
    16ac:	64 e0       	ldi	r22, 0x04	; 4
    16ae:	6a 95       	dec	r22
    16b0:	f1 f7       	brne	.-4      	; 0x16ae <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    16b2:	6f 91       	pop	r22
    16b4:	31 97       	sbiw	r30, 0x01	; 1
    16b6:	c9 f7       	brne	.-14     	; 0x16aa <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    16b8:	f5 cf       	rjmp	.-22     	; 0x16a4 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    16ba:	08 95       	ret

000016bc <delay_ms>:
    16bc:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <_ZN13OrangutanTime17delayMillisecondsEj>
    16c0:	08 95       	ret

000016c2 <_ZN13OrangutanTime5init2Ev>:
    16c2:	e0 e7       	ldi	r30, 0x70	; 112
    16c4:	f0 e0       	ldi	r31, 0x00	; 0
    16c6:	80 81       	ld	r24, Z
    16c8:	8e 7f       	andi	r24, 0xFE	; 254
    16ca:	80 83       	st	Z, r24
    16cc:	a0 eb       	ldi	r26, 0xB0	; 176
    16ce:	b0 e0       	ldi	r27, 0x00	; 0
    16d0:	8c 91       	ld	r24, X
    16d2:	83 60       	ori	r24, 0x03	; 3
    16d4:	8c 93       	st	X, r24
    16d6:	a1 eb       	ldi	r26, 0xB1	; 177
    16d8:	b0 e0       	ldi	r27, 0x00	; 0
    16da:	8c 91       	ld	r24, X
    16dc:	80 7f       	andi	r24, 0xF0	; 240
    16de:	8c 93       	st	X, r24
    16e0:	8c 91       	ld	r24, X
    16e2:	82 60       	ori	r24, 0x02	; 2
    16e4:	8c 93       	st	X, r24
    16e6:	b8 9a       	sbi	0x17, 0	; 23
    16e8:	80 81       	ld	r24, Z
    16ea:	81 60       	ori	r24, 0x01	; 1
    16ec:	80 83       	st	Z, r24
    16ee:	78 94       	sei
    16f0:	08 95       	ret

000016f2 <_ZN13OrangutanTime4initEv>:
    16f2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <_ZZN13OrangutanTime4initEvE11initialized>
    16f6:	81 11       	cpse	r24, r1
    16f8:	05 c0       	rjmp	.+10     	; 0x1704 <_ZN13OrangutanTime4initEv+0x12>
    16fa:	81 e0       	ldi	r24, 0x01	; 1
    16fc:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_ZZN13OrangutanTime4initEvE11initialized>
    1700:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <_ZN13OrangutanTime5init2Ev>
    1704:	08 95       	ret

00001706 <_ZN13OrangutanTime2msEv>:
    1706:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <_ZN13OrangutanTime4initEv>
    170a:	e0 e7       	ldi	r30, 0x70	; 112
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	80 81       	ld	r24, Z
    1710:	8e 7f       	andi	r24, 0xFE	; 254
    1712:	80 83       	st	Z, r24
    1714:	60 91 2d 01 	lds	r22, 0x012D	; 0x80012d <msCounter>
    1718:	70 91 2e 01 	lds	r23, 0x012E	; 0x80012e <msCounter+0x1>
    171c:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <msCounter+0x2>
    1720:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <msCounter+0x3>
    1724:	20 81       	ld	r18, Z
    1726:	21 60       	ori	r18, 0x01	; 1
    1728:	20 83       	st	Z, r18
    172a:	08 95       	ret

0000172c <get_ms>:
    172c:	0e 94 83 0b 	call	0x1706	; 0x1706 <_ZN13OrangutanTime2msEv>
    1730:	08 95       	ret

00001732 <__udivmodqi4>:
    1732:	99 1b       	sub	r25, r25
    1734:	79 e0       	ldi	r23, 0x09	; 9
    1736:	04 c0       	rjmp	.+8      	; 0x1740 <__udivmodqi4_ep>

00001738 <__udivmodqi4_loop>:
    1738:	99 1f       	adc	r25, r25
    173a:	96 17       	cp	r25, r22
    173c:	08 f0       	brcs	.+2      	; 0x1740 <__udivmodqi4_ep>
    173e:	96 1b       	sub	r25, r22

00001740 <__udivmodqi4_ep>:
    1740:	88 1f       	adc	r24, r24
    1742:	7a 95       	dec	r23
    1744:	c9 f7       	brne	.-14     	; 0x1738 <__udivmodqi4_loop>
    1746:	80 95       	com	r24
    1748:	08 95       	ret

0000174a <__udivmodhi4>:
    174a:	aa 1b       	sub	r26, r26
    174c:	bb 1b       	sub	r27, r27
    174e:	51 e1       	ldi	r21, 0x11	; 17
    1750:	07 c0       	rjmp	.+14     	; 0x1760 <__udivmodhi4_ep>

00001752 <__udivmodhi4_loop>:
    1752:	aa 1f       	adc	r26, r26
    1754:	bb 1f       	adc	r27, r27
    1756:	a6 17       	cp	r26, r22
    1758:	b7 07       	cpc	r27, r23
    175a:	10 f0       	brcs	.+4      	; 0x1760 <__udivmodhi4_ep>
    175c:	a6 1b       	sub	r26, r22
    175e:	b7 0b       	sbc	r27, r23

00001760 <__udivmodhi4_ep>:
    1760:	88 1f       	adc	r24, r24
    1762:	99 1f       	adc	r25, r25
    1764:	5a 95       	dec	r21
    1766:	a9 f7       	brne	.-22     	; 0x1752 <__udivmodhi4_loop>
    1768:	80 95       	com	r24
    176a:	90 95       	com	r25
    176c:	bc 01       	movw	r22, r24
    176e:	cd 01       	movw	r24, r26
    1770:	08 95       	ret

00001772 <__udivmodsi4>:
    1772:	a1 e2       	ldi	r26, 0x21	; 33
    1774:	1a 2e       	mov	r1, r26
    1776:	aa 1b       	sub	r26, r26
    1778:	bb 1b       	sub	r27, r27
    177a:	fd 01       	movw	r30, r26
    177c:	0d c0       	rjmp	.+26     	; 0x1798 <__udivmodsi4_ep>

0000177e <__udivmodsi4_loop>:
    177e:	aa 1f       	adc	r26, r26
    1780:	bb 1f       	adc	r27, r27
    1782:	ee 1f       	adc	r30, r30
    1784:	ff 1f       	adc	r31, r31
    1786:	a2 17       	cp	r26, r18
    1788:	b3 07       	cpc	r27, r19
    178a:	e4 07       	cpc	r30, r20
    178c:	f5 07       	cpc	r31, r21
    178e:	20 f0       	brcs	.+8      	; 0x1798 <__udivmodsi4_ep>
    1790:	a2 1b       	sub	r26, r18
    1792:	b3 0b       	sbc	r27, r19
    1794:	e4 0b       	sbc	r30, r20
    1796:	f5 0b       	sbc	r31, r21

00001798 <__udivmodsi4_ep>:
    1798:	66 1f       	adc	r22, r22
    179a:	77 1f       	adc	r23, r23
    179c:	88 1f       	adc	r24, r24
    179e:	99 1f       	adc	r25, r25
    17a0:	1a 94       	dec	r1
    17a2:	69 f7       	brne	.-38     	; 0x177e <__udivmodsi4_loop>
    17a4:	60 95       	com	r22
    17a6:	70 95       	com	r23
    17a8:	80 95       	com	r24
    17aa:	90 95       	com	r25
    17ac:	9b 01       	movw	r18, r22
    17ae:	ac 01       	movw	r20, r24
    17b0:	bd 01       	movw	r22, r26
    17b2:	cf 01       	movw	r24, r30
    17b4:	08 95       	ret

000017b6 <__divmodsi4>:
    17b6:	05 2e       	mov	r0, r21
    17b8:	97 fb       	bst	r25, 7
    17ba:	1e f4       	brtc	.+6      	; 0x17c2 <__divmodsi4+0xc>
    17bc:	00 94       	com	r0
    17be:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__negsi2>
    17c2:	57 fd       	sbrc	r21, 7
    17c4:	07 d0       	rcall	.+14     	; 0x17d4 <__divmodsi4_neg2>
    17c6:	0e 94 b9 0b 	call	0x1772	; 0x1772 <__udivmodsi4>
    17ca:	07 fc       	sbrc	r0, 7
    17cc:	03 d0       	rcall	.+6      	; 0x17d4 <__divmodsi4_neg2>
    17ce:	4e f4       	brtc	.+18     	; 0x17e2 <__divmodsi4_exit>
    17d0:	0c 94 f2 0b 	jmp	0x17e4	; 0x17e4 <__negsi2>

000017d4 <__divmodsi4_neg2>:
    17d4:	50 95       	com	r21
    17d6:	40 95       	com	r20
    17d8:	30 95       	com	r19
    17da:	21 95       	neg	r18
    17dc:	3f 4f       	sbci	r19, 0xFF	; 255
    17de:	4f 4f       	sbci	r20, 0xFF	; 255
    17e0:	5f 4f       	sbci	r21, 0xFF	; 255

000017e2 <__divmodsi4_exit>:
    17e2:	08 95       	ret

000017e4 <__negsi2>:
    17e4:	90 95       	com	r25
    17e6:	80 95       	com	r24
    17e8:	70 95       	com	r23
    17ea:	61 95       	neg	r22
    17ec:	7f 4f       	sbci	r23, 0xFF	; 255
    17ee:	8f 4f       	sbci	r24, 0xFF	; 255
    17f0:	9f 4f       	sbci	r25, 0xFF	; 255
    17f2:	08 95       	ret

000017f4 <__umulhisi3>:
    17f4:	a2 9f       	mul	r26, r18
    17f6:	b0 01       	movw	r22, r0
    17f8:	b3 9f       	mul	r27, r19
    17fa:	c0 01       	movw	r24, r0
    17fc:	a3 9f       	mul	r26, r19
    17fe:	70 0d       	add	r23, r0
    1800:	81 1d       	adc	r24, r1
    1802:	11 24       	eor	r1, r1
    1804:	91 1d       	adc	r25, r1
    1806:	b2 9f       	mul	r27, r18
    1808:	70 0d       	add	r23, r0
    180a:	81 1d       	adc	r24, r1
    180c:	11 24       	eor	r1, r1
    180e:	91 1d       	adc	r25, r1
    1810:	08 95       	ret

00001812 <__prologue_saves__>:
    1812:	2f 92       	push	r2
    1814:	3f 92       	push	r3
    1816:	4f 92       	push	r4
    1818:	5f 92       	push	r5
    181a:	6f 92       	push	r6
    181c:	7f 92       	push	r7
    181e:	8f 92       	push	r8
    1820:	9f 92       	push	r9
    1822:	af 92       	push	r10
    1824:	bf 92       	push	r11
    1826:	cf 92       	push	r12
    1828:	df 92       	push	r13
    182a:	ef 92       	push	r14
    182c:	ff 92       	push	r15
    182e:	0f 93       	push	r16
    1830:	1f 93       	push	r17
    1832:	cf 93       	push	r28
    1834:	df 93       	push	r29
    1836:	cd b7       	in	r28, 0x3d	; 61
    1838:	de b7       	in	r29, 0x3e	; 62
    183a:	ca 1b       	sub	r28, r26
    183c:	db 0b       	sbc	r29, r27
    183e:	0f b6       	in	r0, 0x3f	; 63
    1840:	f8 94       	cli
    1842:	de bf       	out	0x3e, r29	; 62
    1844:	0f be       	out	0x3f, r0	; 63
    1846:	cd bf       	out	0x3d, r28	; 61
    1848:	09 94       	ijmp

0000184a <__epilogue_restores__>:
    184a:	2a 88       	ldd	r2, Y+18	; 0x12
    184c:	39 88       	ldd	r3, Y+17	; 0x11
    184e:	48 88       	ldd	r4, Y+16	; 0x10
    1850:	5f 84       	ldd	r5, Y+15	; 0x0f
    1852:	6e 84       	ldd	r6, Y+14	; 0x0e
    1854:	7d 84       	ldd	r7, Y+13	; 0x0d
    1856:	8c 84       	ldd	r8, Y+12	; 0x0c
    1858:	9b 84       	ldd	r9, Y+11	; 0x0b
    185a:	aa 84       	ldd	r10, Y+10	; 0x0a
    185c:	b9 84       	ldd	r11, Y+9	; 0x09
    185e:	c8 84       	ldd	r12, Y+8	; 0x08
    1860:	df 80       	ldd	r13, Y+7	; 0x07
    1862:	ee 80       	ldd	r14, Y+6	; 0x06
    1864:	fd 80       	ldd	r15, Y+5	; 0x05
    1866:	0c 81       	ldd	r16, Y+4	; 0x04
    1868:	1b 81       	ldd	r17, Y+3	; 0x03
    186a:	aa 81       	ldd	r26, Y+2	; 0x02
    186c:	b9 81       	ldd	r27, Y+1	; 0x01
    186e:	ce 0f       	add	r28, r30
    1870:	d1 1d       	adc	r29, r1
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	f8 94       	cli
    1876:	de bf       	out	0x3e, r29	; 62
    1878:	0f be       	out	0x3f, r0	; 63
    187a:	cd bf       	out	0x3d, r28	; 61
    187c:	ed 01       	movw	r28, r26
    187e:	08 95       	ret

00001880 <_exit>:
    1880:	f8 94       	cli

00001882 <__stop_program>:
    1882:	ff cf       	rjmp	.-2      	; 0x1882 <__stop_program>
