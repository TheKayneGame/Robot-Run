
Test application RobotRun G6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  00001622  000016b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001622  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001b  00800122  00800122  000016d8  2**0
                  ALLOC
  3 .stab         000023dc  00000000  00000000  000016d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002573  00000000  00000000  00003ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00006027  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00006068  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000030  00000000  00000000  000060a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000009d7  00000000  00000000  000060d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000006d1  00000000  00000000  00006aaf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000575  00000000  00000000  00007180  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000a4  00000000  00000000  000076f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000047f  00000000  00000000  0000779c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000485  00000000  00000000  00007c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000020  00000000  00000000  000080a0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 4d 00 	jmp	0x9a	; 0x9a <__ctors_end>
       4:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       8:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
       c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      10:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      14:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      18:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      1c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      20:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      24:	0c 94 e5 09 	jmp	0x13ca	; 0x13ca <__vector_9>
      28:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      2c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      30:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      34:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__vector_13>
      38:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      3c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      40:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      44:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      48:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      4c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      50:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      54:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      58:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      5c:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      60:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      64:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__bad_interrupt>
      68:	05 a8       	ldd	r0, Z+53	; 0x35
      6a:	4c cd       	rjmp	.-1384   	; 0xfffffb04 <__eeprom_end+0xff7efb04>
      6c:	b2 d4       	rcall	.+2404   	; 0x9d2 <__fp_round+0x14>
      6e:	4e b9       	out	0x0e, r20	; 14
      70:	38 36       	cpi	r19, 0x68	; 104
      72:	a9 02       	muls	r26, r25
      74:	0c 50       	subi	r16, 0x0C	; 12
      76:	b9 91       	ld	r27, Y+
      78:	86 88       	ldd	r8, Z+22	; 0x16
      7a:	08 3c       	cpi	r16, 0xC8	; 200
      7c:	a6 aa       	std	Z+54, r10	; 0x36
      7e:	aa 2a       	or	r10, r26
      80:	be 00       	.word	0x00be	; ????
      82:	00 00       	nop
      84:	80 3f       	cpi	r24, 0xF0	; 240

00000086 <__trampolines_end>:
      86:	3e 67       	ori	r19, 0x7E	; 126
      88:	33 32       	cpi	r19, 0x23	; 35
      8a:	3e 3e       	cpi	r19, 0xEE	; 238
      8c:	63 33       	cpi	r22, 0x33	; 51
      8e:	32 00       	.word	0x0032	; ????

00000090 <__c.2468>:
      90:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000009a <__ctors_end>:
      9a:	11 24       	eor	r1, r1
      9c:	1f be       	out	0x3f, r1	; 63
      9e:	cf ef       	ldi	r28, 0xFF	; 255
      a0:	d8 e0       	ldi	r29, 0x08	; 8
      a2:	de bf       	out	0x3e, r29	; 62
      a4:	cd bf       	out	0x3d, r28	; 61

000000a6 <__do_copy_data>:
      a6:	11 e0       	ldi	r17, 0x01	; 1
      a8:	a0 e0       	ldi	r26, 0x00	; 0
      aa:	b1 e0       	ldi	r27, 0x01	; 1
      ac:	e2 e2       	ldi	r30, 0x22	; 34
      ae:	f6 e1       	ldi	r31, 0x16	; 22
      b0:	02 c0       	rjmp	.+4      	; 0xb6 <__do_copy_data+0x10>
      b2:	05 90       	lpm	r0, Z+
      b4:	0d 92       	st	X+, r0
      b6:	a2 32       	cpi	r26, 0x22	; 34
      b8:	b1 07       	cpc	r27, r17
      ba:	d9 f7       	brne	.-10     	; 0xb2 <__do_copy_data+0xc>

000000bc <__do_clear_bss>:
      bc:	21 e0       	ldi	r18, 0x01	; 1
      be:	a2 e2       	ldi	r26, 0x22	; 34
      c0:	b1 e0       	ldi	r27, 0x01	; 1
      c2:	01 c0       	rjmp	.+2      	; 0xc6 <.do_clear_bss_start>

000000c4 <.do_clear_bss_loop>:
      c4:	1d 92       	st	X+, r1

000000c6 <.do_clear_bss_start>:
      c6:	ad 33       	cpi	r26, 0x3D	; 61
      c8:	b2 07       	cpc	r27, r18
      ca:	e1 f7       	brne	.-8      	; 0xc4 <.do_clear_bss_loop>
      cc:	0e 94 88 03 	call	0x710	; 0x710 <main>
      d0:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <_exit>

000000d4 <__bad_interrupt>:
      d4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d8 <motorControl>:
	play_from_program_space(PSTR(">g32>>c32"));

	return 0;
}

void motorControl(int speed, char direction, float aggressionFactor){
      d8:	2f 92       	push	r2
      da:	3f 92       	push	r3
      dc:	4f 92       	push	r4
      de:	5f 92       	push	r5
      e0:	6f 92       	push	r6
      e2:	7f 92       	push	r7
      e4:	8f 92       	push	r8
      e6:	9f 92       	push	r9
      e8:	af 92       	push	r10
      ea:	bf 92       	push	r11
      ec:	cf 92       	push	r12
      ee:	df 92       	push	r13
      f0:	ef 92       	push	r14
      f2:	ff 92       	push	r15
      f4:	0f 93       	push	r16
      f6:	1f 93       	push	r17
      f8:	cf 93       	push	r28
      fa:	df 93       	push	r29
      fc:	cd b7       	in	r28, 0x3d	; 61
      fe:	de b7       	in	r29, 0x3e	; 62
     100:	66 97       	sbiw	r28, 0x16	; 22
     102:	0f b6       	in	r0, 0x3f	; 63
     104:	f8 94       	cli
     106:	de bf       	out	0x3e, r29	; 62
     108:	0f be       	out	0x3f, r0	; 63
     10a:	cd bf       	out	0x3d, r28	; 61
     10c:	1c 01       	movw	r2, r24
     10e:	29 01       	movw	r4, r18
     110:	3a 01       	movw	r6, r20
	int setSpeedRight = 0;
	int setSpeedLeft = 0;
	
	//directions direction;

	switch (direction){
     112:	66 34       	cpi	r22, 0x46	; 70
     114:	61 f0       	breq	.+24     	; 0x12e <motorControl+0x56>
     116:	20 f4       	brcc	.+8      	; 0x120 <motorControl+0x48>
     118:	62 34       	cpi	r22, 0x42	; 66
     11a:	09 f4       	brne	.+2      	; 0x11e <motorControl+0x46>
     11c:	9c c0       	rjmp	.+312    	; 0x256 <motorControl+0x17e>
     11e:	d9 c2       	rjmp	.+1458   	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
     120:	6c 34       	cpi	r22, 0x4C	; 76
     122:	09 f4       	brne	.+2      	; 0x126 <motorControl+0x4e>
     124:	10 c2       	rjmp	.+1056   	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
     126:	62 35       	cpi	r22, 0x52	; 82
     128:	09 f4       	brne	.+2      	; 0x12c <motorControl+0x54>
     12a:	29 c1       	rjmp	.+594    	; 0x37e <motorControl+0x2a6>
     12c:	d2 c2       	rjmp	.+1444   	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
		case 'F':
		
		setSpeed = speed - speedCurrent;
     12e:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <speedCurrent>
     132:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <speedCurrent+0x1>
     136:	91 01       	movw	r18, r2
     138:	28 1b       	sub	r18, r24
     13a:	39 0b       	sbc	r19, r25
     13c:	45 e6       	ldi	r20, 0x65	; 101
     13e:	50 e0       	ldi	r21, 0x00	; 0
     140:	5a 87       	std	Y+10, r21	; 0x0a
     142:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     144:	19 82       	std	Y+1, r1	; 0x01
     146:	1a 82       	std	Y+2, r1	; 0x02
     148:	1b 82       	std	Y+3, r1	; 0x03
     14a:	1c 82       	std	Y+4, r1	; 0x04
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     14c:	03 2e       	mov	r0, r19
     14e:	00 0c       	add	r0, r0
     150:	44 0b       	sbc	r20, r20
     152:	55 0b       	sbc	r21, r21
     154:	2d 83       	std	Y+5, r18	; 0x05
     156:	3e 83       	std	Y+6, r19	; 0x06
     158:	4f 83       	std	Y+7, r20	; 0x07
     15a:	58 87       	std	Y+8, r21	; 0x08
		case 'F':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     15c:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     160:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2*M_PI ) ) * sin ( 2* M_PI * accelerationCounter ) ) );
     162:	2b ed       	ldi	r18, 0xDB	; 219
     164:	3f e0       	ldi	r19, 0x0F	; 15
     166:	49 ec       	ldi	r20, 0xC9	; 201
     168:	50 e4       	ldi	r21, 0x40	; 64
     16a:	69 81       	ldd	r22, Y+1	; 0x01
     16c:	7a 81       	ldd	r23, Y+2	; 0x02
     16e:	8b 81       	ldd	r24, Y+3	; 0x03
     170:	9c 81       	ldd	r25, Y+4	; 0x04
     172:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     176:	0e 94 86 05 	call	0xb0c	; 0xb0c <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     17a:	23 e8       	ldi	r18, 0x83	; 131
     17c:	39 ef       	ldi	r19, 0xF9	; 249
     17e:	42 e2       	ldi	r20, 0x22	; 34
     180:	5e e3       	ldi	r21, 0x3E	; 62
     182:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     186:	9b 01       	movw	r18, r22
     188:	ac 01       	movw	r20, r24
     18a:	69 81       	ldd	r22, Y+1	; 0x01
     18c:	7a 81       	ldd	r23, Y+2	; 0x02
     18e:	8b 81       	ldd	r24, Y+3	; 0x03
     190:	9c 81       	ldd	r25, Y+4	; 0x04
     192:	0e 94 bf 03 	call	0x77e	; 0x77e <__subsf3>
     196:	4b 01       	movw	r8, r22
     198:	5c 01       	movw	r10, r24
     19a:	6d 81       	ldd	r22, Y+5	; 0x05
     19c:	7e 81       	ldd	r23, Y+6	; 0x06
     19e:	8f 81       	ldd	r24, Y+7	; 0x07
     1a0:	98 85       	ldd	r25, Y+8	; 0x08
     1a2:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     1a6:	9b 01       	movw	r18, r22
     1a8:	ac 01       	movw	r20, r24
     1aa:	c5 01       	movw	r24, r10
     1ac:	b4 01       	movw	r22, r8
     1ae:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     1b2:	4b 01       	movw	r8, r22
     1b4:	5c 01       	movw	r10, r24
     1b6:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     1ba:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     1be:	07 2e       	mov	r0, r23
     1c0:	00 0c       	add	r0, r0
     1c2:	88 0b       	sbc	r24, r24
     1c4:	99 0b       	sbc	r25, r25
     1c6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     1ca:	9b 01       	movw	r18, r22
     1cc:	ac 01       	movw	r20, r24
     1ce:	c5 01       	movw	r24, r10
     1d0:	b4 01       	movw	r22, r8
     1d2:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     1d6:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     1da:	dc 01       	movw	r26, r24
     1dc:	cb 01       	movw	r24, r22
     1de:	bc 01       	movw	r22, r24
     1e0:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     1e4:	48 01       	movw	r8, r16
     1e6:	11 0f       	add	r17, r17
     1e8:	aa 08       	sbc	r10, r10
     1ea:	bb 08       	sbc	r11, r11
     1ec:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     1f0:	68 19       	sub	r22, r8
     1f2:	79 09       	sbc	r23, r9
     1f4:	8a 09       	sbc	r24, r10
     1f6:	9b 09       	sbc	r25, r11
     1f8:	0e 94 67 04 	call	0x8ce	; 0x8ce <__floatunsisf>
     1fc:	6b 01       	movw	r12, r22
     1fe:	7c 01       	movw	r14, r24
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	40 e2       	ldi	r20, 0x20	; 32
     206:	51 e4       	ldi	r21, 0x41	; 65
     208:	c3 01       	movw	r24, r6
     20a:	b2 01       	movw	r22, r4
     20c:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     210:	9b 01       	movw	r18, r22
     212:	ac 01       	movw	r20, r24
     214:	c7 01       	movw	r24, r14
     216:	b6 01       	movw	r22, r12
     218:	0e 94 2c 04 	call	0x858	; 0x858 <__cmpsf2>
     21c:	88 23       	and	r24, r24
     21e:	34 f3       	brlt	.-52     	; 0x1ec <motorControl+0x114>
	switch (direction){
		case 'F':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     220:	2a e0       	ldi	r18, 0x0A	; 10
     222:	37 ed       	ldi	r19, 0xD7	; 215
     224:	43 e2       	ldi	r20, 0x23	; 35
     226:	5c e3       	ldi	r21, 0x3C	; 60
     228:	69 81       	ldd	r22, Y+1	; 0x01
     22a:	7a 81       	ldd	r23, Y+2	; 0x02
     22c:	8b 81       	ldd	r24, Y+3	; 0x03
     22e:	9c 81       	ldd	r25, Y+4	; 0x04
     230:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     234:	69 83       	std	Y+1, r22	; 0x01
     236:	7a 83       	std	Y+2, r23	; 0x02
     238:	8b 83       	std	Y+3, r24	; 0x03
     23a:	9c 83       	std	Y+4, r25	; 0x04
     23c:	a9 85       	ldd	r26, Y+9	; 0x09
     23e:	ba 85       	ldd	r27, Y+10	; 0x0a
     240:	11 97       	sbiw	r26, 0x01	; 1
     242:	ba 87       	std	Y+10, r27	; 0x0a
     244:	a9 87       	std	Y+9, r26	; 0x09
     246:	ab 2b       	or	r26, r27
     248:	09 f0       	breq	.+2      	; 0x24c <motorControl+0x174>
     24a:	88 cf       	rjmp	.-240    	; 0x15c <motorControl+0x84>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrent = speed;
     24c:	30 92 3a 01 	sts	0x013A, r3	; 0x80013a <speedCurrent+0x1>
     250:	20 92 39 01 	sts	0x0139, r2	; 0x800139 <speedCurrent>
		break;
     254:	44 c2       	rjmp	.+1160   	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
		
		case 'B':
		
		setSpeed = speed - speedCurrent;
     256:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <speedCurrent>
     25a:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <speedCurrent+0x1>
     25e:	91 01       	movw	r18, r2
     260:	28 1b       	sub	r18, r24
     262:	39 0b       	sbc	r19, r25
     264:	45 e6       	ldi	r20, 0x65	; 101
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	5a 87       	std	Y+10, r21	; 0x0a
     26a:	49 87       	std	Y+9, r20	; 0x09
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     26c:	19 82       	std	Y+1, r1	; 0x01
     26e:	1a 82       	std	Y+2, r1	; 0x02
     270:	1b 82       	std	Y+3, r1	; 0x03
     272:	1c 82       	std	Y+4, r1	; 0x04
			timerStart = get_ms();
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     274:	03 2e       	mov	r0, r19
     276:	00 0c       	add	r0, r0
     278:	44 0b       	sbc	r20, r20
     27a:	55 0b       	sbc	r21, r21
     27c:	2d 83       	std	Y+5, r18	; 0x05
     27e:	3e 83       	std	Y+6, r19	; 0x06
     280:	4f 83       	std	Y+7, r20	; 0x07
     282:	58 87       	std	Y+8, r21	; 0x08
		case 'B':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     284:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     288:	8b 01       	movw	r16, r22
			
			motorLeftSpeed = motorRightSpeed = speedCurrent + setSpeed * (accelerationCounter - ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) );
     28a:	2b ed       	ldi	r18, 0xDB	; 219
     28c:	3f e0       	ldi	r19, 0x0F	; 15
     28e:	49 ec       	ldi	r20, 0xC9	; 201
     290:	50 e4       	ldi	r21, 0x40	; 64
     292:	69 81       	ldd	r22, Y+1	; 0x01
     294:	7a 81       	ldd	r23, Y+2	; 0x02
     296:	8b 81       	ldd	r24, Y+3	; 0x03
     298:	9c 81       	ldd	r25, Y+4	; 0x04
     29a:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     29e:	0e 94 86 05 	call	0xb0c	; 0xb0c <sin>
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     2a2:	23 e8       	ldi	r18, 0x83	; 131
     2a4:	39 ef       	ldi	r19, 0xF9	; 249
     2a6:	42 e2       	ldi	r20, 0x22	; 34
     2a8:	5e e3       	ldi	r21, 0x3E	; 62
     2aa:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     2ae:	9b 01       	movw	r18, r22
     2b0:	ac 01       	movw	r20, r24
     2b2:	69 81       	ldd	r22, Y+1	; 0x01
     2b4:	7a 81       	ldd	r23, Y+2	; 0x02
     2b6:	8b 81       	ldd	r24, Y+3	; 0x03
     2b8:	9c 81       	ldd	r25, Y+4	; 0x04
     2ba:	0e 94 bf 03 	call	0x77e	; 0x77e <__subsf3>
     2be:	4b 01       	movw	r8, r22
     2c0:	5c 01       	movw	r10, r24
     2c2:	6d 81       	ldd	r22, Y+5	; 0x05
     2c4:	7e 81       	ldd	r23, Y+6	; 0x06
     2c6:	8f 81       	ldd	r24, Y+7	; 0x07
     2c8:	98 85       	ldd	r25, Y+8	; 0x08
     2ca:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     2ce:	9b 01       	movw	r18, r22
     2d0:	ac 01       	movw	r20, r24
     2d2:	c5 01       	movw	r24, r10
     2d4:	b4 01       	movw	r22, r8
     2d6:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     2da:	4b 01       	movw	r8, r22
     2dc:	5c 01       	movw	r10, r24
     2de:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     2e2:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     2e6:	07 2e       	mov	r0, r23
     2e8:	00 0c       	add	r0, r0
     2ea:	88 0b       	sbc	r24, r24
     2ec:	99 0b       	sbc	r25, r25
     2ee:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     2f2:	9b 01       	movw	r18, r22
     2f4:	ac 01       	movw	r20, r24
     2f6:	c5 01       	movw	r24, r10
     2f8:	b4 01       	movw	r22, r8
     2fa:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     2fe:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     302:	dc 01       	movw	r26, r24
     304:	cb 01       	movw	r24, r22
     306:	bc 01       	movw	r22, r24
     308:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     30c:	48 01       	movw	r8, r16
     30e:	11 0f       	add	r17, r17
     310:	aa 08       	sbc	r10, r10
     312:	bb 08       	sbc	r11, r11
     314:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     318:	68 19       	sub	r22, r8
     31a:	79 09       	sbc	r23, r9
     31c:	8a 09       	sbc	r24, r10
     31e:	9b 09       	sbc	r25, r11
     320:	0e 94 67 04 	call	0x8ce	; 0x8ce <__floatunsisf>
     324:	6b 01       	movw	r12, r22
     326:	7c 01       	movw	r14, r24
     328:	20 e0       	ldi	r18, 0x00	; 0
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	40 e2       	ldi	r20, 0x20	; 32
     32e:	51 e4       	ldi	r21, 0x41	; 65
     330:	c3 01       	movw	r24, r6
     332:	b2 01       	movw	r22, r4
     334:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     338:	9b 01       	movw	r18, r22
     33a:	ac 01       	movw	r20, r24
     33c:	c7 01       	movw	r24, r14
     33e:	b6 01       	movw	r22, r12
     340:	0e 94 2c 04 	call	0x858	; 0x858 <__cmpsf2>
     344:	88 23       	and	r24, r24
     346:	34 f3       	brlt	.-52     	; 0x314 <motorControl+0x23c>
		
		case 'B':
		
		setSpeed = speed - speedCurrent;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     348:	2a e0       	ldi	r18, 0x0A	; 10
     34a:	37 ed       	ldi	r19, 0xD7	; 215
     34c:	43 e2       	ldi	r20, 0x23	; 35
     34e:	5c e3       	ldi	r21, 0x3C	; 60
     350:	69 81       	ldd	r22, Y+1	; 0x01
     352:	7a 81       	ldd	r23, Y+2	; 0x02
     354:	8b 81       	ldd	r24, Y+3	; 0x03
     356:	9c 81       	ldd	r25, Y+4	; 0x04
     358:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     35c:	69 83       	std	Y+1, r22	; 0x01
     35e:	7a 83       	std	Y+2, r23	; 0x02
     360:	8b 83       	std	Y+3, r24	; 0x03
     362:	9c 83       	std	Y+4, r25	; 0x04
     364:	a9 85       	ldd	r26, Y+9	; 0x09
     366:	ba 85       	ldd	r27, Y+10	; 0x0a
     368:	11 97       	sbiw	r26, 0x01	; 1
     36a:	ba 87       	std	Y+10, r27	; 0x0a
     36c:	a9 87       	std	Y+9, r26	; 0x09
     36e:	ab 2b       	or	r26, r27
     370:	09 f0       	breq	.+2      	; 0x374 <motorControl+0x29c>
     372:	88 cf       	rjmp	.-240    	; 0x284 <motorControl+0x1ac>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrent = speed;
     374:	30 92 3a 01 	sts	0x013A, r3	; 0x80013a <speedCurrent+0x1>
     378:	20 92 39 01 	sts	0x0139, r2	; 0x800139 <speedCurrent>
		break;
     37c:	b0 c1       	rjmp	.+864    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>

		case 'R':
		
		setSpeedRight = speed + speedCurrentRight;
     37e:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <speedCurrentRight>
     382:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     386:	82 0d       	add	r24, r2
     388:	93 1d       	adc	r25, r3
		setSpeedLeft = speed - speedCurrentLeft;
     38a:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <speedCurrentLeft>
     38e:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     392:	a1 01       	movw	r20, r2
     394:	42 1b       	sub	r20, r18
     396:	53 0b       	sbc	r21, r19
     398:	9a 01       	movw	r18, r20
     39a:	05 e6       	ldi	r16, 0x65	; 101
     39c:	10 e0       	ldi	r17, 0x00	; 0
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     39e:	19 82       	std	Y+1, r1	; 0x01
     3a0:	1a 82       	std	Y+2, r1	; 0x02
     3a2:	1b 82       	std	Y+3, r1	; 0x03
     3a4:	1c 82       	std	Y+4, r1	; 0x04
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     3a6:	ac 01       	movw	r20, r24
     3a8:	99 0f       	add	r25, r25
     3aa:	66 0b       	sbc	r22, r22
     3ac:	77 0b       	sbc	r23, r23
     3ae:	4d 87       	std	Y+13, r20	; 0x0d
     3b0:	5e 87       	std	Y+14, r21	; 0x0e
     3b2:	6f 87       	std	Y+15, r22	; 0x0f
     3b4:	78 8b       	std	Y+16, r23	; 0x10
     3b6:	b9 01       	movw	r22, r18
     3b8:	33 0f       	add	r19, r19
     3ba:	88 0b       	sbc	r24, r24
     3bc:	99 0b       	sbc	r25, r25
     3be:	69 8b       	std	Y+17, r22	; 0x11
     3c0:	7a 8b       	std	Y+18, r23	; 0x12
     3c2:	8b 8b       	std	Y+19, r24	; 0x13
     3c4:	9c 8b       	std	Y+20, r25	; 0x14
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     3c6:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     3ca:	7e 8b       	std	Y+22, r23	; 0x16
     3cc:	6d 8b       	std	Y+21, r22	; 0x15
			
			motorRightSpeed = speedCurrent + (speedCurrentRight - (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
     3ce:	60 91 39 01 	lds	r22, 0x0139	; 0x800139 <speedCurrent>
     3d2:	70 91 3a 01 	lds	r23, 0x013A	; 0x80013a <speedCurrent+0x1>
     3d6:	07 2e       	mov	r0, r23
     3d8:	00 0c       	add	r0, r0
     3da:	88 0b       	sbc	r24, r24
     3dc:	99 0b       	sbc	r25, r25
     3de:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     3e2:	6d 83       	std	Y+5, r22	; 0x05
     3e4:	7e 83       	std	Y+6, r23	; 0x06
     3e6:	8f 83       	std	Y+7, r24	; 0x07
     3e8:	98 87       	std	Y+8, r25	; 0x08
     3ea:	2b ed       	ldi	r18, 0xDB	; 219
     3ec:	3f e0       	ldi	r19, 0x0F	; 15
     3ee:	49 ec       	ldi	r20, 0xC9	; 201
     3f0:	50 e4       	ldi	r21, 0x40	; 64
     3f2:	69 81       	ldd	r22, Y+1	; 0x01
     3f4:	7a 81       	ldd	r23, Y+2	; 0x02
     3f6:	8b 81       	ldd	r24, Y+3	; 0x03
     3f8:	9c 81       	ldd	r25, Y+4	; 0x04
     3fa:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     3fe:	0e 94 86 05 	call	0xb0c	; 0xb0c <sin>
     402:	23 e8       	ldi	r18, 0x83	; 131
     404:	39 ef       	ldi	r19, 0xF9	; 249
     406:	42 e2       	ldi	r20, 0x22	; 34
     408:	5e e3       	ldi	r21, 0x3E	; 62
     40a:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     40e:	29 81       	ldd	r18, Y+1	; 0x01
     410:	3a 81       	ldd	r19, Y+2	; 0x02
     412:	4b 81       	ldd	r20, Y+3	; 0x03
     414:	5c 81       	ldd	r21, Y+4	; 0x04
     416:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     41a:	69 87       	std	Y+9, r22	; 0x09
     41c:	7a 87       	std	Y+10, r23	; 0x0a
     41e:	8b 87       	std	Y+11, r24	; 0x0b
     420:	9c 87       	std	Y+12, r25	; 0x0c
			
			motorLeftSpeed = speedCurrent + (speedCurrentLeft + (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) ) );
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     422:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     426:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     42a:	07 2e       	mov	r0, r23
     42c:	00 0c       	add	r0, r0
     42e:	88 0b       	sbc	r24, r24
     430:	99 0b       	sbc	r25, r25
     432:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     436:	4b 01       	movw	r8, r22
     438:	5c 01       	movw	r10, r24
     43a:	6d 85       	ldd	r22, Y+13	; 0x0d
     43c:	7e 85       	ldd	r23, Y+14	; 0x0e
     43e:	8f 85       	ldd	r24, Y+15	; 0x0f
     440:	98 89       	ldd	r25, Y+16	; 0x10
     442:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     446:	29 85       	ldd	r18, Y+9	; 0x09
     448:	3a 85       	ldd	r19, Y+10	; 0x0a
     44a:	4b 85       	ldd	r20, Y+11	; 0x0b
     44c:	5c 85       	ldd	r21, Y+12	; 0x0c
     44e:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     452:	9b 01       	movw	r18, r22
     454:	ac 01       	movw	r20, r24
     456:	c5 01       	movw	r24, r10
     458:	b4 01       	movw	r22, r8
     45a:	0e 94 bf 03 	call	0x77e	; 0x77e <__subsf3>
     45e:	2d 81       	ldd	r18, Y+5	; 0x05
     460:	3e 81       	ldd	r19, Y+6	; 0x06
     462:	4f 81       	ldd	r20, Y+7	; 0x07
     464:	58 85       	ldd	r21, Y+8	; 0x08
     466:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     46a:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     46e:	4b 01       	movw	r8, r22
     470:	5c 01       	movw	r10, r24
     472:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     476:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     47a:	07 2e       	mov	r0, r23
     47c:	00 0c       	add	r0, r0
     47e:	88 0b       	sbc	r24, r24
     480:	99 0b       	sbc	r25, r25
     482:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     486:	6b 01       	movw	r12, r22
     488:	7c 01       	movw	r14, r24
     48a:	69 89       	ldd	r22, Y+17	; 0x11
     48c:	7a 89       	ldd	r23, Y+18	; 0x12
     48e:	8b 89       	ldd	r24, Y+19	; 0x13
     490:	9c 89       	ldd	r25, Y+20	; 0x14
     492:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     496:	29 85       	ldd	r18, Y+9	; 0x09
     498:	3a 85       	ldd	r19, Y+10	; 0x0a
     49a:	4b 85       	ldd	r20, Y+11	; 0x0b
     49c:	5c 85       	ldd	r21, Y+12	; 0x0c
     49e:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     4a2:	9b 01       	movw	r18, r22
     4a4:	ac 01       	movw	r20, r24
     4a6:	c7 01       	movw	r24, r14
     4a8:	b6 01       	movw	r22, r12
     4aa:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     4ae:	2d 81       	ldd	r18, Y+5	; 0x05
     4b0:	3e 81       	ldd	r19, Y+6	; 0x06
     4b2:	4f 81       	ldd	r20, Y+7	; 0x07
     4b4:	58 85       	ldd	r21, Y+8	; 0x08
     4b6:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     4ba:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     4be:	dc 01       	movw	r26, r24
     4c0:	cb 01       	movw	r24, r22
     4c2:	b4 01       	movw	r22, r8
     4c4:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     4c8:	8d 89       	ldd	r24, Y+21	; 0x15
     4ca:	9e 89       	ldd	r25, Y+22	; 0x16
     4cc:	4c 01       	movw	r8, r24
     4ce:	99 0f       	add	r25, r25
     4d0:	aa 08       	sbc	r10, r10
     4d2:	bb 08       	sbc	r11, r11
     4d4:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     4d8:	68 19       	sub	r22, r8
     4da:	79 09       	sbc	r23, r9
     4dc:	8a 09       	sbc	r24, r10
     4de:	9b 09       	sbc	r25, r11
     4e0:	0e 94 67 04 	call	0x8ce	; 0x8ce <__floatunsisf>
     4e4:	6b 01       	movw	r12, r22
     4e6:	7c 01       	movw	r14, r24
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	40 e2       	ldi	r20, 0x20	; 32
     4ee:	51 e4       	ldi	r21, 0x41	; 65
     4f0:	c3 01       	movw	r24, r6
     4f2:	b2 01       	movw	r22, r4
     4f4:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     4f8:	9b 01       	movw	r18, r22
     4fa:	ac 01       	movw	r20, r24
     4fc:	c7 01       	movw	r24, r14
     4fe:	b6 01       	movw	r22, r12
     500:	0e 94 2c 04 	call	0x858	; 0x858 <__cmpsf2>
     504:	88 23       	and	r24, r24
     506:	34 f3       	brlt	.-52     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
		case 'R':
		
		setSpeedRight = speed + speedCurrentRight;
		setSpeedLeft = speed - speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     508:	2a e0       	ldi	r18, 0x0A	; 10
     50a:	37 ed       	ldi	r19, 0xD7	; 215
     50c:	43 e2       	ldi	r20, 0x23	; 35
     50e:	5c e3       	ldi	r21, 0x3C	; 60
     510:	69 81       	ldd	r22, Y+1	; 0x01
     512:	7a 81       	ldd	r23, Y+2	; 0x02
     514:	8b 81       	ldd	r24, Y+3	; 0x03
     516:	9c 81       	ldd	r25, Y+4	; 0x04
     518:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     51c:	69 83       	std	Y+1, r22	; 0x01
     51e:	7a 83       	std	Y+2, r23	; 0x02
     520:	8b 83       	std	Y+3, r24	; 0x03
     522:	9c 83       	std	Y+4, r25	; 0x04
     524:	01 50       	subi	r16, 0x01	; 1
     526:	11 09       	sbc	r17, r1
     528:	09 f0       	breq	.+2      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
     52a:	4d cf       	rjmp	.-358    	; 0x3c6 <motorControl+0x2ee>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = -speed;
     52c:	88 27       	eor	r24, r24
     52e:	99 27       	eor	r25, r25
     530:	82 19       	sub	r24, r2
     532:	93 09       	sbc	r25, r3
     534:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <speedCurrentRight+0x1>
     538:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <speedCurrentRight>
		speedCurrentLeft = speed;
     53c:	30 92 36 01 	sts	0x0136, r3	; 0x800136 <speedCurrentLeft+0x1>
     540:	20 92 35 01 	sts	0x0135, r2	; 0x800135 <speedCurrentLeft>
		
		break;
     544:	cc c0       	rjmp	.+408    	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>

		case 'L':
		
		setSpeedRight = speed - speedCurrentRight;
     546:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <speedCurrentRight>
     54a:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     54e:	91 01       	movw	r18, r2
     550:	28 1b       	sub	r18, r24
     552:	39 0b       	sbc	r19, r25
		setSpeedLeft = speed + speedCurrentLeft;
     554:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <speedCurrentLeft>
     558:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     55c:	82 0d       	add	r24, r2
     55e:	93 1d       	adc	r25, r3
     560:	05 e6       	ldi	r16, 0x65	; 101
     562:	10 e0       	ldi	r17, 0x00	; 0
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     564:	19 82       	std	Y+1, r1	; 0x01
     566:	1a 82       	std	Y+2, r1	; 0x02
     568:	1b 82       	std	Y+3, r1	; 0x03
     56a:	1c 82       	std	Y+4, r1	; 0x04
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     56c:	a9 01       	movw	r20, r18
     56e:	33 0f       	add	r19, r19
     570:	66 0b       	sbc	r22, r22
     572:	77 0b       	sbc	r23, r23
     574:	49 87       	std	Y+9, r20	; 0x09
     576:	5a 87       	std	Y+10, r21	; 0x0a
     578:	6b 87       	std	Y+11, r22	; 0x0b
     57a:	7c 87       	std	Y+12, r23	; 0x0c
     57c:	9c 01       	movw	r18, r24
     57e:	99 0f       	add	r25, r25
     580:	44 0b       	sbc	r20, r20
     582:	55 0b       	sbc	r21, r21
     584:	2d 87       	std	Y+13, r18	; 0x0d
     586:	3e 87       	std	Y+14, r19	; 0x0e
     588:	4f 87       	std	Y+15, r20	; 0x0f
     58a:	58 8b       	std	Y+16, r21	; 0x10
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
			timerStart = get_ms();
     58c:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     590:	7a 8b       	std	Y+18, r23	; 0x12
     592:	69 8b       	std	Y+17, r22	; 0x11
			
			motorRightSpeed = speedCurrentRight + (setSpeedRight * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ) );
     594:	2b ed       	ldi	r18, 0xDB	; 219
     596:	3f e0       	ldi	r19, 0x0F	; 15
     598:	49 ec       	ldi	r20, 0xC9	; 201
     59a:	50 e4       	ldi	r21, 0x40	; 64
     59c:	69 81       	ldd	r22, Y+1	; 0x01
     59e:	7a 81       	ldd	r23, Y+2	; 0x02
     5a0:	8b 81       	ldd	r24, Y+3	; 0x03
     5a2:	9c 81       	ldd	r25, Y+4	; 0x04
     5a4:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     5a8:	0e 94 86 05 	call	0xb0c	; 0xb0c <sin>
     5ac:	23 e8       	ldi	r18, 0x83	; 131
     5ae:	39 ef       	ldi	r19, 0xF9	; 249
     5b0:	42 e2       	ldi	r20, 0x22	; 34
     5b2:	5e e3       	ldi	r21, 0x3E	; 62
     5b4:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     5b8:	29 81       	ldd	r18, Y+1	; 0x01
     5ba:	3a 81       	ldd	r19, Y+2	; 0x02
     5bc:	4b 81       	ldd	r20, Y+3	; 0x03
     5be:	5c 81       	ldd	r21, Y+4	; 0x04
     5c0:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     5c4:	4b 01       	movw	r8, r22
     5c6:	5c 01       	movw	r10, r24
			
			motorLeftSpeed = speedCurrentLeft - (setSpeedLeft * (accelerationCounter + ( ( 1 / ( 2 * M_PI ) ) * sin ( 2 * M_PI * accelerationCounter ) ) ));
			
			set_motors(motorLeftSpeed, motorRightSpeed);
     5c8:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <speedCurrentRight>
     5cc:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <speedCurrentRight+0x1>
     5d0:	07 2e       	mov	r0, r23
     5d2:	00 0c       	add	r0, r0
     5d4:	88 0b       	sbc	r24, r24
     5d6:	99 0b       	sbc	r25, r25
     5d8:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     5dc:	6b 01       	movw	r12, r22
     5de:	7c 01       	movw	r14, r24
     5e0:	69 85       	ldd	r22, Y+9	; 0x09
     5e2:	7a 85       	ldd	r23, Y+10	; 0x0a
     5e4:	8b 85       	ldd	r24, Y+11	; 0x0b
     5e6:	9c 85       	ldd	r25, Y+12	; 0x0c
     5e8:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     5ec:	a5 01       	movw	r20, r10
     5ee:	94 01       	movw	r18, r8
     5f0:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     5f4:	9b 01       	movw	r18, r22
     5f6:	ac 01       	movw	r20, r24
     5f8:	c7 01       	movw	r24, r14
     5fa:	b6 01       	movw	r22, r12
     5fc:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     600:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     604:	6b 01       	movw	r12, r22
     606:	7c 01       	movw	r14, r24
     608:	60 91 35 01 	lds	r22, 0x0135	; 0x800135 <speedCurrentLeft>
     60c:	70 91 36 01 	lds	r23, 0x0136	; 0x800136 <speedCurrentLeft+0x1>
     610:	07 2e       	mov	r0, r23
     612:	00 0c       	add	r0, r0
     614:	88 0b       	sbc	r24, r24
     616:	99 0b       	sbc	r25, r25
     618:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     61c:	6d 83       	std	Y+5, r22	; 0x05
     61e:	7e 83       	std	Y+6, r23	; 0x06
     620:	8f 83       	std	Y+7, r24	; 0x07
     622:	98 87       	std	Y+8, r25	; 0x08
     624:	6d 85       	ldd	r22, Y+13	; 0x0d
     626:	7e 85       	ldd	r23, Y+14	; 0x0e
     628:	8f 85       	ldd	r24, Y+15	; 0x0f
     62a:	98 89       	ldd	r25, Y+16	; 0x10
     62c:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__floatsisf>
     630:	a5 01       	movw	r20, r10
     632:	94 01       	movw	r18, r8
     634:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     638:	9b 01       	movw	r18, r22
     63a:	ac 01       	movw	r20, r24
     63c:	6d 81       	ldd	r22, Y+5	; 0x05
     63e:	7e 81       	ldd	r23, Y+6	; 0x06
     640:	8f 81       	ldd	r24, Y+7	; 0x07
     642:	98 85       	ldd	r25, Y+8	; 0x08
     644:	0e 94 bf 03 	call	0x77e	; 0x77e <__subsf3>
     648:	0e 94 31 04 	call	0x862	; 0x862 <__fixsfsi>
     64c:	dc 01       	movw	r26, r24
     64e:	cb 01       	movw	r24, r22
     650:	b6 01       	movw	r22, r12
     652:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <set_motors>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
     656:	49 89       	ldd	r20, Y+17	; 0x11
     658:	5a 89       	ldd	r21, Y+18	; 0x12
     65a:	6a 01       	movw	r12, r20
     65c:	55 0f       	add	r21, r21
     65e:	ee 08       	sbc	r14, r14
     660:	ff 08       	sbc	r15, r15
     662:	0e 94 65 0a 	call	0x14ca	; 0x14ca <get_ms>
     666:	6c 19       	sub	r22, r12
     668:	7d 09       	sbc	r23, r13
     66a:	8e 09       	sbc	r24, r14
     66c:	9f 09       	sbc	r25, r15
     66e:	0e 94 67 04 	call	0x8ce	; 0x8ce <__floatunsisf>
     672:	4b 01       	movw	r8, r22
     674:	5c 01       	movw	r10, r24
     676:	20 e0       	ldi	r18, 0x00	; 0
     678:	30 e0       	ldi	r19, 0x00	; 0
     67a:	40 e2       	ldi	r20, 0x20	; 32
     67c:	51 e4       	ldi	r21, 0x41	; 65
     67e:	c3 01       	movw	r24, r6
     680:	b2 01       	movw	r22, r4
     682:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     686:	9b 01       	movw	r18, r22
     688:	ac 01       	movw	r20, r24
     68a:	c5 01       	movw	r24, r10
     68c:	b4 01       	movw	r22, r8
     68e:	0e 94 2c 04 	call	0x858	; 0x858 <__cmpsf2>
     692:	88 23       	and	r24, r24
     694:	34 f3       	brlt	.-52     	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
		case 'L':
		
		setSpeedRight = speed - speedCurrentRight;
		setSpeedLeft = speed + speedCurrentLeft;
		
		for (accelerationCounter = 0.0; accelerationCounter < 1.0; accelerationCounter = accelerationCounter + 0.01){
     696:	2a e0       	ldi	r18, 0x0A	; 10
     698:	37 ed       	ldi	r19, 0xD7	; 215
     69a:	43 e2       	ldi	r20, 0x23	; 35
     69c:	5c e3       	ldi	r21, 0x3C	; 60
     69e:	69 81       	ldd	r22, Y+1	; 0x01
     6a0:	7a 81       	ldd	r23, Y+2	; 0x02
     6a2:	8b 81       	ldd	r24, Y+3	; 0x03
     6a4:	9c 81       	ldd	r25, Y+4	; 0x04
     6a6:	0e 94 c0 03 	call	0x780	; 0x780 <__addsf3>
     6aa:	69 83       	std	Y+1, r22	; 0x01
     6ac:	7a 83       	std	Y+2, r23	; 0x02
     6ae:	8b 83       	std	Y+3, r24	; 0x03
     6b0:	9c 83       	std	Y+4, r25	; 0x04
     6b2:	01 50       	subi	r16, 0x01	; 1
     6b4:	11 09       	sbc	r17, r1
     6b6:	09 f0       	breq	.+2      	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
     6b8:	69 cf       	rjmp	.-302    	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>

			while ( (get_ms() - timerStart ) < (aggressionFactor * 10.0) ) {
				//change for optimal acceleration time.
			}
		}
		speedCurrentRight = speed;
     6ba:	30 92 38 01 	sts	0x0138, r3	; 0x800138 <speedCurrentRight+0x1>
     6be:	20 92 37 01 	sts	0x0137, r2	; 0x800137 <speedCurrentRight>
		speedCurrentLeft = -speed;
     6c2:	31 94       	neg	r3
     6c4:	21 94       	neg	r2
     6c6:	31 08       	sbc	r3, r1
     6c8:	30 92 36 01 	sts	0x0136, r3	; 0x800136 <speedCurrentLeft+0x1>
     6cc:	20 92 35 01 	sts	0x0135, r2	; 0x800135 <speedCurrentLeft>
		break;
     6d0:	06 c0       	rjmp	.+12     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
		
		default:
		set_motors(0,0);
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	80 e0       	ldi	r24, 0x00	; 0
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <set_motors>
		break;
	}
}
     6de:	66 96       	adiw	r28, 0x16	; 22
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	1f 91       	pop	r17
     6f0:	0f 91       	pop	r16
     6f2:	ff 90       	pop	r15
     6f4:	ef 90       	pop	r14
     6f6:	df 90       	pop	r13
     6f8:	cf 90       	pop	r12
     6fa:	bf 90       	pop	r11
     6fc:	af 90       	pop	r10
     6fe:	9f 90       	pop	r9
     700:	8f 90       	pop	r8
     702:	7f 90       	pop	r7
     704:	6f 90       	pop	r6
     706:	5f 90       	pop	r5
     708:	4f 90       	pop	r4
     70a:	3f 90       	pop	r3
     70c:	2f 90       	pop	r2
     70e:	08 95       	ret

00000710 <main>:
int speedCurrentRight = 0;
int speedCurrentLeft = 0;

int main(){
	
	motorControl(0,'F', 0.86);
     710:	26 ef       	ldi	r18, 0xF6	; 246
     712:	38 e2       	ldi	r19, 0x28	; 40
     714:	4c e5       	ldi	r20, 0x5C	; 92
     716:	5f e3       	ldi	r21, 0x3F	; 63
     718:	66 e4       	ldi	r22, 0x46	; 70
     71a:	80 e0       	ldi	r24, 0x00	; 0
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0e 94 6c 00 	call	0xd8	; 0xd8 <motorControl>
	delay_ms(150);
     722:	86 e9       	ldi	r24, 0x96	; 150
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	0e 94 2d 0a 	call	0x145a	; 0x145a <delay_ms>
	play_from_program_space(PSTR(">g32>>c32"));
     72a:	80 e9       	ldi	r24, 0x90	; 144
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 2c 09 	call	0x1258	; 0x1258 <play_from_program_space>
	motorControl(60,'R', 0.86);
     732:	26 ef       	ldi	r18, 0xF6	; 246
     734:	38 e2       	ldi	r19, 0x28	; 40
     736:	4c e5       	ldi	r20, 0x5C	; 92
     738:	5f e3       	ldi	r21, 0x3F	; 63
     73a:	62 e5       	ldi	r22, 0x52	; 82
     73c:	8c e3       	ldi	r24, 0x3C	; 60
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	0e 94 6c 00 	call	0xd8	; 0xd8 <motorControl>
	
	motorControl(60, 'F', 0.86);
     744:	26 ef       	ldi	r18, 0xF6	; 246
     746:	38 e2       	ldi	r19, 0x28	; 40
     748:	4c e5       	ldi	r20, 0x5C	; 92
     74a:	5f e3       	ldi	r21, 0x3F	; 63
     74c:	66 e4       	ldi	r22, 0x46	; 70
     74e:	8c e3       	ldi	r24, 0x3C	; 60
     750:	90 e0       	ldi	r25, 0x00	; 0
     752:	0e 94 6c 00 	call	0xd8	; 0xd8 <motorControl>
	delay_ms(150);
     756:	86 e9       	ldi	r24, 0x96	; 150
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	0e 94 2d 0a 	call	0x145a	; 0x145a <delay_ms>
	motorControl(0, 'F', 0.86);
     75e:	26 ef       	ldi	r18, 0xF6	; 246
     760:	38 e2       	ldi	r19, 0x28	; 40
     762:	4c e5       	ldi	r20, 0x5C	; 92
     764:	5f e3       	ldi	r21, 0x3F	; 63
     766:	66 e4       	ldi	r22, 0x46	; 70
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	0e 94 6c 00 	call	0xd8	; 0xd8 <motorControl>
	play_from_program_space(PSTR(">g32>>c32"));
     770:	86 e8       	ldi	r24, 0x86	; 134
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 2c 09 	call	0x1258	; 0x1258 <play_from_program_space>

	return 0;
}
     778:	80 e0       	ldi	r24, 0x00	; 0
     77a:	90 e0       	ldi	r25, 0x00	; 0
     77c:	08 95       	ret

0000077e <__subsf3>:
     77e:	50 58       	subi	r21, 0x80	; 128

00000780 <__addsf3>:
     780:	bb 27       	eor	r27, r27
     782:	aa 27       	eor	r26, r26
     784:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__addsf3x>
     788:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_round>
     78c:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fp_pscA>
     790:	38 f0       	brcs	.+14     	; 0x7a0 <__addsf3+0x20>
     792:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_pscB>
     796:	20 f0       	brcs	.+8      	; 0x7a0 <__addsf3+0x20>
     798:	39 f4       	brne	.+14     	; 0x7a8 <__addsf3+0x28>
     79a:	9f 3f       	cpi	r25, 0xFF	; 255
     79c:	19 f4       	brne	.+6      	; 0x7a4 <__addsf3+0x24>
     79e:	26 f4       	brtc	.+8      	; 0x7a8 <__addsf3+0x28>
     7a0:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_nan>
     7a4:	0e f4       	brtc	.+2      	; 0x7a8 <__addsf3+0x28>
     7a6:	e0 95       	com	r30
     7a8:	e7 fb       	bst	r30, 7
     7aa:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>

000007ae <__addsf3x>:
     7ae:	e9 2f       	mov	r30, r25
     7b0:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_split3>
     7b4:	58 f3       	brcs	.-42     	; 0x78c <__addsf3+0xc>
     7b6:	ba 17       	cp	r27, r26
     7b8:	62 07       	cpc	r22, r18
     7ba:	73 07       	cpc	r23, r19
     7bc:	84 07       	cpc	r24, r20
     7be:	95 07       	cpc	r25, r21
     7c0:	20 f0       	brcs	.+8      	; 0x7ca <__addsf3x+0x1c>
     7c2:	79 f4       	brne	.+30     	; 0x7e2 <__addsf3x+0x34>
     7c4:	a6 f5       	brtc	.+104    	; 0x82e <__addsf3x+0x80>
     7c6:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_zero>
     7ca:	0e f4       	brtc	.+2      	; 0x7ce <__addsf3x+0x20>
     7cc:	e0 95       	com	r30
     7ce:	0b 2e       	mov	r0, r27
     7d0:	ba 2f       	mov	r27, r26
     7d2:	a0 2d       	mov	r26, r0
     7d4:	0b 01       	movw	r0, r22
     7d6:	b9 01       	movw	r22, r18
     7d8:	90 01       	movw	r18, r0
     7da:	0c 01       	movw	r0, r24
     7dc:	ca 01       	movw	r24, r20
     7de:	a0 01       	movw	r20, r0
     7e0:	11 24       	eor	r1, r1
     7e2:	ff 27       	eor	r31, r31
     7e4:	59 1b       	sub	r21, r25
     7e6:	99 f0       	breq	.+38     	; 0x80e <__addsf3x+0x60>
     7e8:	59 3f       	cpi	r21, 0xF9	; 249
     7ea:	50 f4       	brcc	.+20     	; 0x800 <__addsf3x+0x52>
     7ec:	50 3e       	cpi	r21, 0xE0	; 224
     7ee:	68 f1       	brcs	.+90     	; 0x84a <__addsf3x+0x9c>
     7f0:	1a 16       	cp	r1, r26
     7f2:	f0 40       	sbci	r31, 0x00	; 0
     7f4:	a2 2f       	mov	r26, r18
     7f6:	23 2f       	mov	r18, r19
     7f8:	34 2f       	mov	r19, r20
     7fa:	44 27       	eor	r20, r20
     7fc:	58 5f       	subi	r21, 0xF8	; 248
     7fe:	f3 cf       	rjmp	.-26     	; 0x7e6 <__addsf3x+0x38>
     800:	46 95       	lsr	r20
     802:	37 95       	ror	r19
     804:	27 95       	ror	r18
     806:	a7 95       	ror	r26
     808:	f0 40       	sbci	r31, 0x00	; 0
     80a:	53 95       	inc	r21
     80c:	c9 f7       	brne	.-14     	; 0x800 <__addsf3x+0x52>
     80e:	7e f4       	brtc	.+30     	; 0x82e <__addsf3x+0x80>
     810:	1f 16       	cp	r1, r31
     812:	ba 0b       	sbc	r27, r26
     814:	62 0b       	sbc	r22, r18
     816:	73 0b       	sbc	r23, r19
     818:	84 0b       	sbc	r24, r20
     81a:	ba f0       	brmi	.+46     	; 0x84a <__addsf3x+0x9c>
     81c:	91 50       	subi	r25, 0x01	; 1
     81e:	a1 f0       	breq	.+40     	; 0x848 <__addsf3x+0x9a>
     820:	ff 0f       	add	r31, r31
     822:	bb 1f       	adc	r27, r27
     824:	66 1f       	adc	r22, r22
     826:	77 1f       	adc	r23, r23
     828:	88 1f       	adc	r24, r24
     82a:	c2 f7       	brpl	.-16     	; 0x81c <__addsf3x+0x6e>
     82c:	0e c0       	rjmp	.+28     	; 0x84a <__addsf3x+0x9c>
     82e:	ba 0f       	add	r27, r26
     830:	62 1f       	adc	r22, r18
     832:	73 1f       	adc	r23, r19
     834:	84 1f       	adc	r24, r20
     836:	48 f4       	brcc	.+18     	; 0x84a <__addsf3x+0x9c>
     838:	87 95       	ror	r24
     83a:	77 95       	ror	r23
     83c:	67 95       	ror	r22
     83e:	b7 95       	ror	r27
     840:	f7 95       	ror	r31
     842:	9e 3f       	cpi	r25, 0xFE	; 254
     844:	08 f0       	brcs	.+2      	; 0x848 <__addsf3x+0x9a>
     846:	b0 cf       	rjmp	.-160    	; 0x7a8 <__addsf3+0x28>
     848:	93 95       	inc	r25
     84a:	88 0f       	add	r24, r24
     84c:	08 f0       	brcs	.+2      	; 0x850 <__addsf3x+0xa2>
     84e:	99 27       	eor	r25, r25
     850:	ee 0f       	add	r30, r30
     852:	97 95       	ror	r25
     854:	87 95       	ror	r24
     856:	08 95       	ret

00000858 <__cmpsf2>:
     858:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_cmp>
     85c:	08 f4       	brcc	.+2      	; 0x860 <__cmpsf2+0x8>
     85e:	81 e0       	ldi	r24, 0x01	; 1
     860:	08 95       	ret

00000862 <__fixsfsi>:
     862:	0e 94 38 04 	call	0x870	; 0x870 <__fixunssfsi>
     866:	68 94       	set
     868:	b1 11       	cpse	r27, r1
     86a:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_szero>
     86e:	08 95       	ret

00000870 <__fixunssfsi>:
     870:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_splitA>
     874:	88 f0       	brcs	.+34     	; 0x898 <__fixunssfsi+0x28>
     876:	9f 57       	subi	r25, 0x7F	; 127
     878:	98 f0       	brcs	.+38     	; 0x8a0 <__fixunssfsi+0x30>
     87a:	b9 2f       	mov	r27, r25
     87c:	99 27       	eor	r25, r25
     87e:	b7 51       	subi	r27, 0x17	; 23
     880:	b0 f0       	brcs	.+44     	; 0x8ae <__fixunssfsi+0x3e>
     882:	e1 f0       	breq	.+56     	; 0x8bc <__fixunssfsi+0x4c>
     884:	66 0f       	add	r22, r22
     886:	77 1f       	adc	r23, r23
     888:	88 1f       	adc	r24, r24
     88a:	99 1f       	adc	r25, r25
     88c:	1a f0       	brmi	.+6      	; 0x894 <__fixunssfsi+0x24>
     88e:	ba 95       	dec	r27
     890:	c9 f7       	brne	.-14     	; 0x884 <__fixunssfsi+0x14>
     892:	14 c0       	rjmp	.+40     	; 0x8bc <__fixunssfsi+0x4c>
     894:	b1 30       	cpi	r27, 0x01	; 1
     896:	91 f0       	breq	.+36     	; 0x8bc <__fixunssfsi+0x4c>
     898:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_zero>
     89c:	b1 e0       	ldi	r27, 0x01	; 1
     89e:	08 95       	ret
     8a0:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_zero>
     8a4:	67 2f       	mov	r22, r23
     8a6:	78 2f       	mov	r23, r24
     8a8:	88 27       	eor	r24, r24
     8aa:	b8 5f       	subi	r27, 0xF8	; 248
     8ac:	39 f0       	breq	.+14     	; 0x8bc <__fixunssfsi+0x4c>
     8ae:	b9 3f       	cpi	r27, 0xF9	; 249
     8b0:	cc f3       	brlt	.-14     	; 0x8a4 <__fixunssfsi+0x34>
     8b2:	86 95       	lsr	r24
     8b4:	77 95       	ror	r23
     8b6:	67 95       	ror	r22
     8b8:	b3 95       	inc	r27
     8ba:	d9 f7       	brne	.-10     	; 0x8b2 <__fixunssfsi+0x42>
     8bc:	3e f4       	brtc	.+14     	; 0x8cc <__fixunssfsi+0x5c>
     8be:	90 95       	com	r25
     8c0:	80 95       	com	r24
     8c2:	70 95       	com	r23
     8c4:	61 95       	neg	r22
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	8f 4f       	sbci	r24, 0xFF	; 255
     8ca:	9f 4f       	sbci	r25, 0xFF	; 255
     8cc:	08 95       	ret

000008ce <__floatunsisf>:
     8ce:	e8 94       	clt
     8d0:	09 c0       	rjmp	.+18     	; 0x8e4 <__floatsisf+0x12>

000008d2 <__floatsisf>:
     8d2:	97 fb       	bst	r25, 7
     8d4:	3e f4       	brtc	.+14     	; 0x8e4 <__floatsisf+0x12>
     8d6:	90 95       	com	r25
     8d8:	80 95       	com	r24
     8da:	70 95       	com	r23
     8dc:	61 95       	neg	r22
     8de:	7f 4f       	sbci	r23, 0xFF	; 255
     8e0:	8f 4f       	sbci	r24, 0xFF	; 255
     8e2:	9f 4f       	sbci	r25, 0xFF	; 255
     8e4:	99 23       	and	r25, r25
     8e6:	a9 f0       	breq	.+42     	; 0x912 <__stack+0x13>
     8e8:	f9 2f       	mov	r31, r25
     8ea:	96 e9       	ldi	r25, 0x96	; 150
     8ec:	bb 27       	eor	r27, r27
     8ee:	93 95       	inc	r25
     8f0:	f6 95       	lsr	r31
     8f2:	87 95       	ror	r24
     8f4:	77 95       	ror	r23
     8f6:	67 95       	ror	r22
     8f8:	b7 95       	ror	r27
     8fa:	f1 11       	cpse	r31, r1
     8fc:	f8 cf       	rjmp	.-16     	; 0x8ee <__floatsisf+0x1c>
     8fe:	fa f4       	brpl	.+62     	; 0x93e <__stack+0x3f>
     900:	bb 0f       	add	r27, r27
     902:	11 f4       	brne	.+4      	; 0x908 <__stack+0x9>
     904:	60 ff       	sbrs	r22, 0
     906:	1b c0       	rjmp	.+54     	; 0x93e <__stack+0x3f>
     908:	6f 5f       	subi	r22, 0xFF	; 255
     90a:	7f 4f       	sbci	r23, 0xFF	; 255
     90c:	8f 4f       	sbci	r24, 0xFF	; 255
     90e:	9f 4f       	sbci	r25, 0xFF	; 255
     910:	16 c0       	rjmp	.+44     	; 0x93e <__stack+0x3f>
     912:	88 23       	and	r24, r24
     914:	11 f0       	breq	.+4      	; 0x91a <__stack+0x1b>
     916:	96 e9       	ldi	r25, 0x96	; 150
     918:	11 c0       	rjmp	.+34     	; 0x93c <__stack+0x3d>
     91a:	77 23       	and	r23, r23
     91c:	21 f0       	breq	.+8      	; 0x926 <__stack+0x27>
     91e:	9e e8       	ldi	r25, 0x8E	; 142
     920:	87 2f       	mov	r24, r23
     922:	76 2f       	mov	r23, r22
     924:	05 c0       	rjmp	.+10     	; 0x930 <__stack+0x31>
     926:	66 23       	and	r22, r22
     928:	71 f0       	breq	.+28     	; 0x946 <__stack+0x47>
     92a:	96 e8       	ldi	r25, 0x86	; 134
     92c:	86 2f       	mov	r24, r22
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	60 e0       	ldi	r22, 0x00	; 0
     932:	2a f0       	brmi	.+10     	; 0x93e <__stack+0x3f>
     934:	9a 95       	dec	r25
     936:	66 0f       	add	r22, r22
     938:	77 1f       	adc	r23, r23
     93a:	88 1f       	adc	r24, r24
     93c:	da f7       	brpl	.-10     	; 0x934 <__stack+0x35>
     93e:	88 0f       	add	r24, r24
     940:	96 95       	lsr	r25
     942:	87 95       	ror	r24
     944:	97 f9       	bld	r25, 7
     946:	08 95       	ret

00000948 <__fp_cmp>:
     948:	99 0f       	add	r25, r25
     94a:	00 08       	sbc	r0, r0
     94c:	55 0f       	add	r21, r21
     94e:	aa 0b       	sbc	r26, r26
     950:	e0 e8       	ldi	r30, 0x80	; 128
     952:	fe ef       	ldi	r31, 0xFE	; 254
     954:	16 16       	cp	r1, r22
     956:	17 06       	cpc	r1, r23
     958:	e8 07       	cpc	r30, r24
     95a:	f9 07       	cpc	r31, r25
     95c:	c0 f0       	brcs	.+48     	; 0x98e <__fp_cmp+0x46>
     95e:	12 16       	cp	r1, r18
     960:	13 06       	cpc	r1, r19
     962:	e4 07       	cpc	r30, r20
     964:	f5 07       	cpc	r31, r21
     966:	98 f0       	brcs	.+38     	; 0x98e <__fp_cmp+0x46>
     968:	62 1b       	sub	r22, r18
     96a:	73 0b       	sbc	r23, r19
     96c:	84 0b       	sbc	r24, r20
     96e:	95 0b       	sbc	r25, r21
     970:	39 f4       	brne	.+14     	; 0x980 <__fp_cmp+0x38>
     972:	0a 26       	eor	r0, r26
     974:	61 f0       	breq	.+24     	; 0x98e <__fp_cmp+0x46>
     976:	23 2b       	or	r18, r19
     978:	24 2b       	or	r18, r20
     97a:	25 2b       	or	r18, r21
     97c:	21 f4       	brne	.+8      	; 0x986 <__fp_cmp+0x3e>
     97e:	08 95       	ret
     980:	0a 26       	eor	r0, r26
     982:	09 f4       	brne	.+2      	; 0x986 <__fp_cmp+0x3e>
     984:	a1 40       	sbci	r26, 0x01	; 1
     986:	a6 95       	lsr	r26
     988:	8f ef       	ldi	r24, 0xFF	; 255
     98a:	81 1d       	adc	r24, r1
     98c:	81 1d       	adc	r24, r1
     98e:	08 95       	ret

00000990 <__fp_inf>:
     990:	97 f9       	bld	r25, 7
     992:	9f 67       	ori	r25, 0x7F	; 127
     994:	80 e8       	ldi	r24, 0x80	; 128
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	60 e0       	ldi	r22, 0x00	; 0
     99a:	08 95       	ret

0000099c <__fp_nan>:
     99c:	9f ef       	ldi	r25, 0xFF	; 255
     99e:	80 ec       	ldi	r24, 0xC0	; 192
     9a0:	08 95       	ret

000009a2 <__fp_pscA>:
     9a2:	00 24       	eor	r0, r0
     9a4:	0a 94       	dec	r0
     9a6:	16 16       	cp	r1, r22
     9a8:	17 06       	cpc	r1, r23
     9aa:	18 06       	cpc	r1, r24
     9ac:	09 06       	cpc	r0, r25
     9ae:	08 95       	ret

000009b0 <__fp_pscB>:
     9b0:	00 24       	eor	r0, r0
     9b2:	0a 94       	dec	r0
     9b4:	12 16       	cp	r1, r18
     9b6:	13 06       	cpc	r1, r19
     9b8:	14 06       	cpc	r1, r20
     9ba:	05 06       	cpc	r0, r21
     9bc:	08 95       	ret

000009be <__fp_round>:
     9be:	09 2e       	mov	r0, r25
     9c0:	03 94       	inc	r0
     9c2:	00 0c       	add	r0, r0
     9c4:	11 f4       	brne	.+4      	; 0x9ca <__fp_round+0xc>
     9c6:	88 23       	and	r24, r24
     9c8:	52 f0       	brmi	.+20     	; 0x9de <__fp_round+0x20>
     9ca:	bb 0f       	add	r27, r27
     9cc:	40 f4       	brcc	.+16     	; 0x9de <__fp_round+0x20>
     9ce:	bf 2b       	or	r27, r31
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__fp_round+0x18>
     9d2:	60 ff       	sbrs	r22, 0
     9d4:	04 c0       	rjmp	.+8      	; 0x9de <__fp_round+0x20>
     9d6:	6f 5f       	subi	r22, 0xFF	; 255
     9d8:	7f 4f       	sbci	r23, 0xFF	; 255
     9da:	8f 4f       	sbci	r24, 0xFF	; 255
     9dc:	9f 4f       	sbci	r25, 0xFF	; 255
     9de:	08 95       	ret

000009e0 <__fp_split3>:
     9e0:	57 fd       	sbrc	r21, 7
     9e2:	90 58       	subi	r25, 0x80	; 128
     9e4:	44 0f       	add	r20, r20
     9e6:	55 1f       	adc	r21, r21
     9e8:	59 f0       	breq	.+22     	; 0xa00 <__fp_splitA+0x10>
     9ea:	5f 3f       	cpi	r21, 0xFF	; 255
     9ec:	71 f0       	breq	.+28     	; 0xa0a <__fp_splitA+0x1a>
     9ee:	47 95       	ror	r20

000009f0 <__fp_splitA>:
     9f0:	88 0f       	add	r24, r24
     9f2:	97 fb       	bst	r25, 7
     9f4:	99 1f       	adc	r25, r25
     9f6:	61 f0       	breq	.+24     	; 0xa10 <__fp_splitA+0x20>
     9f8:	9f 3f       	cpi	r25, 0xFF	; 255
     9fa:	79 f0       	breq	.+30     	; 0xa1a <__fp_splitA+0x2a>
     9fc:	87 95       	ror	r24
     9fe:	08 95       	ret
     a00:	12 16       	cp	r1, r18
     a02:	13 06       	cpc	r1, r19
     a04:	14 06       	cpc	r1, r20
     a06:	55 1f       	adc	r21, r21
     a08:	f2 cf       	rjmp	.-28     	; 0x9ee <__fp_split3+0xe>
     a0a:	46 95       	lsr	r20
     a0c:	f1 df       	rcall	.-30     	; 0x9f0 <__fp_splitA>
     a0e:	08 c0       	rjmp	.+16     	; 0xa20 <__fp_splitA+0x30>
     a10:	16 16       	cp	r1, r22
     a12:	17 06       	cpc	r1, r23
     a14:	18 06       	cpc	r1, r24
     a16:	99 1f       	adc	r25, r25
     a18:	f1 cf       	rjmp	.-30     	; 0x9fc <__fp_splitA+0xc>
     a1a:	86 95       	lsr	r24
     a1c:	71 05       	cpc	r23, r1
     a1e:	61 05       	cpc	r22, r1
     a20:	08 94       	sec
     a22:	08 95       	ret

00000a24 <__fp_zero>:
     a24:	e8 94       	clt

00000a26 <__fp_szero>:
     a26:	bb 27       	eor	r27, r27
     a28:	66 27       	eor	r22, r22
     a2a:	77 27       	eor	r23, r23
     a2c:	cb 01       	movw	r24, r22
     a2e:	97 f9       	bld	r25, 7
     a30:	08 95       	ret

00000a32 <__mulsf3>:
     a32:	0e 94 2c 05 	call	0xa58	; 0xa58 <__mulsf3x>
     a36:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_round>
     a3a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fp_pscA>
     a3e:	38 f0       	brcs	.+14     	; 0xa4e <__mulsf3+0x1c>
     a40:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_pscB>
     a44:	20 f0       	brcs	.+8      	; 0xa4e <__mulsf3+0x1c>
     a46:	95 23       	and	r25, r21
     a48:	11 f0       	breq	.+4      	; 0xa4e <__mulsf3+0x1c>
     a4a:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>
     a4e:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_nan>
     a52:	11 24       	eor	r1, r1
     a54:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_szero>

00000a58 <__mulsf3x>:
     a58:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_split3>
     a5c:	70 f3       	brcs	.-36     	; 0xa3a <__mulsf3+0x8>

00000a5e <__mulsf3_pse>:
     a5e:	95 9f       	mul	r25, r21
     a60:	c1 f3       	breq	.-16     	; 0xa52 <__mulsf3+0x20>
     a62:	95 0f       	add	r25, r21
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	55 1f       	adc	r21, r21
     a68:	62 9f       	mul	r22, r18
     a6a:	f0 01       	movw	r30, r0
     a6c:	72 9f       	mul	r23, r18
     a6e:	bb 27       	eor	r27, r27
     a70:	f0 0d       	add	r31, r0
     a72:	b1 1d       	adc	r27, r1
     a74:	63 9f       	mul	r22, r19
     a76:	aa 27       	eor	r26, r26
     a78:	f0 0d       	add	r31, r0
     a7a:	b1 1d       	adc	r27, r1
     a7c:	aa 1f       	adc	r26, r26
     a7e:	64 9f       	mul	r22, r20
     a80:	66 27       	eor	r22, r22
     a82:	b0 0d       	add	r27, r0
     a84:	a1 1d       	adc	r26, r1
     a86:	66 1f       	adc	r22, r22
     a88:	82 9f       	mul	r24, r18
     a8a:	22 27       	eor	r18, r18
     a8c:	b0 0d       	add	r27, r0
     a8e:	a1 1d       	adc	r26, r1
     a90:	62 1f       	adc	r22, r18
     a92:	73 9f       	mul	r23, r19
     a94:	b0 0d       	add	r27, r0
     a96:	a1 1d       	adc	r26, r1
     a98:	62 1f       	adc	r22, r18
     a9a:	83 9f       	mul	r24, r19
     a9c:	a0 0d       	add	r26, r0
     a9e:	61 1d       	adc	r22, r1
     aa0:	22 1f       	adc	r18, r18
     aa2:	74 9f       	mul	r23, r20
     aa4:	33 27       	eor	r19, r19
     aa6:	a0 0d       	add	r26, r0
     aa8:	61 1d       	adc	r22, r1
     aaa:	23 1f       	adc	r18, r19
     aac:	84 9f       	mul	r24, r20
     aae:	60 0d       	add	r22, r0
     ab0:	21 1d       	adc	r18, r1
     ab2:	82 2f       	mov	r24, r18
     ab4:	76 2f       	mov	r23, r22
     ab6:	6a 2f       	mov	r22, r26
     ab8:	11 24       	eor	r1, r1
     aba:	9f 57       	subi	r25, 0x7F	; 127
     abc:	50 40       	sbci	r21, 0x00	; 0
     abe:	9a f0       	brmi	.+38     	; 0xae6 <__mulsf3_pse+0x88>
     ac0:	f1 f0       	breq	.+60     	; 0xafe <__mulsf3_pse+0xa0>
     ac2:	88 23       	and	r24, r24
     ac4:	4a f0       	brmi	.+18     	; 0xad8 <__mulsf3_pse+0x7a>
     ac6:	ee 0f       	add	r30, r30
     ac8:	ff 1f       	adc	r31, r31
     aca:	bb 1f       	adc	r27, r27
     acc:	66 1f       	adc	r22, r22
     ace:	77 1f       	adc	r23, r23
     ad0:	88 1f       	adc	r24, r24
     ad2:	91 50       	subi	r25, 0x01	; 1
     ad4:	50 40       	sbci	r21, 0x00	; 0
     ad6:	a9 f7       	brne	.-22     	; 0xac2 <__mulsf3_pse+0x64>
     ad8:	9e 3f       	cpi	r25, 0xFE	; 254
     ada:	51 05       	cpc	r21, r1
     adc:	80 f0       	brcs	.+32     	; 0xafe <__mulsf3_pse+0xa0>
     ade:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>
     ae2:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_szero>
     ae6:	5f 3f       	cpi	r21, 0xFF	; 255
     ae8:	e4 f3       	brlt	.-8      	; 0xae2 <__mulsf3_pse+0x84>
     aea:	98 3e       	cpi	r25, 0xE8	; 232
     aec:	d4 f3       	brlt	.-12     	; 0xae2 <__mulsf3_pse+0x84>
     aee:	86 95       	lsr	r24
     af0:	77 95       	ror	r23
     af2:	67 95       	ror	r22
     af4:	b7 95       	ror	r27
     af6:	f7 95       	ror	r31
     af8:	e7 95       	ror	r30
     afa:	9f 5f       	subi	r25, 0xFF	; 255
     afc:	c1 f7       	brne	.-16     	; 0xaee <__mulsf3_pse+0x90>
     afe:	fe 2b       	or	r31, r30
     b00:	88 0f       	add	r24, r24
     b02:	91 1d       	adc	r25, r1
     b04:	96 95       	lsr	r25
     b06:	87 95       	ror	r24
     b08:	97 f9       	bld	r25, 7
     b0a:	08 95       	ret

00000b0c <sin>:
     b0c:	9f 93       	push	r25
     b0e:	0e 94 90 05 	call	0xb20	; 0xb20 <__fp_rempio2>
     b12:	0f 90       	pop	r0
     b14:	07 fc       	sbrc	r0, 7
     b16:	ee 5f       	subi	r30, 0xFE	; 254
     b18:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__fp_sinus>
     b1c:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_nan>

00000b20 <__fp_rempio2>:
     b20:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_splitA>
     b24:	d8 f3       	brcs	.-10     	; 0xb1c <sin+0x10>
     b26:	e8 94       	clt
     b28:	e0 e0       	ldi	r30, 0x00	; 0
     b2a:	bb 27       	eor	r27, r27
     b2c:	9f 57       	subi	r25, 0x7F	; 127
     b2e:	f0 f0       	brcs	.+60     	; 0xb6c <__fp_rempio2+0x4c>
     b30:	2a ed       	ldi	r18, 0xDA	; 218
     b32:	3f e0       	ldi	r19, 0x0F	; 15
     b34:	49 ec       	ldi	r20, 0xC9	; 201
     b36:	06 c0       	rjmp	.+12     	; 0xb44 <__fp_rempio2+0x24>
     b38:	ee 0f       	add	r30, r30
     b3a:	bb 0f       	add	r27, r27
     b3c:	66 1f       	adc	r22, r22
     b3e:	77 1f       	adc	r23, r23
     b40:	88 1f       	adc	r24, r24
     b42:	28 f0       	brcs	.+10     	; 0xb4e <__fp_rempio2+0x2e>
     b44:	b2 3a       	cpi	r27, 0xA2	; 162
     b46:	62 07       	cpc	r22, r18
     b48:	73 07       	cpc	r23, r19
     b4a:	84 07       	cpc	r24, r20
     b4c:	28 f0       	brcs	.+10     	; 0xb58 <__fp_rempio2+0x38>
     b4e:	b2 5a       	subi	r27, 0xA2	; 162
     b50:	62 0b       	sbc	r22, r18
     b52:	73 0b       	sbc	r23, r19
     b54:	84 0b       	sbc	r24, r20
     b56:	e3 95       	inc	r30
     b58:	9a 95       	dec	r25
     b5a:	72 f7       	brpl	.-36     	; 0xb38 <__fp_rempio2+0x18>
     b5c:	80 38       	cpi	r24, 0x80	; 128
     b5e:	30 f4       	brcc	.+12     	; 0xb6c <__fp_rempio2+0x4c>
     b60:	9a 95       	dec	r25
     b62:	bb 0f       	add	r27, r27
     b64:	66 1f       	adc	r22, r22
     b66:	77 1f       	adc	r23, r23
     b68:	88 1f       	adc	r24, r24
     b6a:	d2 f7       	brpl	.-12     	; 0xb60 <__fp_rempio2+0x40>
     b6c:	90 48       	sbci	r25, 0x80	; 128
     b6e:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_mpack_finite>

00000b72 <__fp_sinus>:
     b72:	ef 93       	push	r30
     b74:	e0 ff       	sbrs	r30, 0
     b76:	07 c0       	rjmp	.+14     	; 0xb86 <__fp_sinus+0x14>
     b78:	a2 ea       	ldi	r26, 0xA2	; 162
     b7a:	2a ed       	ldi	r18, 0xDA	; 218
     b7c:	3f e0       	ldi	r19, 0x0F	; 15
     b7e:	49 ec       	ldi	r20, 0xC9	; 201
     b80:	5f eb       	ldi	r21, 0xBF	; 191
     b82:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__addsf3x>
     b86:	0e 94 df 04 	call	0x9be	; 0x9be <__fp_round>
     b8a:	0f 90       	pop	r0
     b8c:	03 94       	inc	r0
     b8e:	01 fc       	sbrc	r0, 1
     b90:	90 58       	subi	r25, 0x80	; 128
     b92:	e8 e6       	ldi	r30, 0x68	; 104
     b94:	f0 e0       	ldi	r31, 0x00	; 0
     b96:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__fp_powsodd>

00000b9a <__fp_mpack>:
     b9a:	9f 3f       	cpi	r25, 0xFF	; 255
     b9c:	31 f0       	breq	.+12     	; 0xbaa <__fp_mpack_finite+0xc>

00000b9e <__fp_mpack_finite>:
     b9e:	91 50       	subi	r25, 0x01	; 1
     ba0:	20 f4       	brcc	.+8      	; 0xbaa <__fp_mpack_finite+0xc>
     ba2:	87 95       	ror	r24
     ba4:	77 95       	ror	r23
     ba6:	67 95       	ror	r22
     ba8:	b7 95       	ror	r27
     baa:	88 0f       	add	r24, r24
     bac:	91 1d       	adc	r25, r1
     bae:	96 95       	lsr	r25
     bb0:	87 95       	ror	r24
     bb2:	97 f9       	bld	r25, 7
     bb4:	08 95       	ret

00000bb6 <__fp_powsodd>:
     bb6:	9f 93       	push	r25
     bb8:	8f 93       	push	r24
     bba:	7f 93       	push	r23
     bbc:	6f 93       	push	r22
     bbe:	ff 93       	push	r31
     bc0:	ef 93       	push	r30
     bc2:	9b 01       	movw	r18, r22
     bc4:	ac 01       	movw	r20, r24
     bc6:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
     bca:	ef 91       	pop	r30
     bcc:	ff 91       	pop	r31
     bce:	0e 94 ef 05 	call	0xbde	; 0xbde <__fp_powser>
     bd2:	2f 91       	pop	r18
     bd4:	3f 91       	pop	r19
     bd6:	4f 91       	pop	r20
     bd8:	5f 91       	pop	r21
     bda:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__mulsf3>

00000bde <__fp_powser>:
     bde:	df 93       	push	r29
     be0:	cf 93       	push	r28
     be2:	1f 93       	push	r17
     be4:	0f 93       	push	r16
     be6:	ff 92       	push	r15
     be8:	ef 92       	push	r14
     bea:	df 92       	push	r13
     bec:	7b 01       	movw	r14, r22
     bee:	8c 01       	movw	r16, r24
     bf0:	68 94       	set
     bf2:	06 c0       	rjmp	.+12     	; 0xc00 <__fp_powser+0x22>
     bf4:	da 2e       	mov	r13, r26
     bf6:	ef 01       	movw	r28, r30
     bf8:	0e 94 2c 05 	call	0xa58	; 0xa58 <__mulsf3x>
     bfc:	fe 01       	movw	r30, r28
     bfe:	e8 94       	clt
     c00:	a5 91       	lpm	r26, Z+
     c02:	25 91       	lpm	r18, Z+
     c04:	35 91       	lpm	r19, Z+
     c06:	45 91       	lpm	r20, Z+
     c08:	55 91       	lpm	r21, Z+
     c0a:	a6 f3       	brts	.-24     	; 0xbf4 <__fp_powser+0x16>
     c0c:	ef 01       	movw	r28, r30
     c0e:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__addsf3x>
     c12:	fe 01       	movw	r30, r28
     c14:	97 01       	movw	r18, r14
     c16:	a8 01       	movw	r20, r16
     c18:	da 94       	dec	r13
     c1a:	69 f7       	brne	.-38     	; 0xbf6 <__fp_powser+0x18>
     c1c:	df 90       	pop	r13
     c1e:	ef 90       	pop	r14
     c20:	ff 90       	pop	r15
     c22:	0f 91       	pop	r16
     c24:	1f 91       	pop	r17
     c26:	cf 91       	pop	r28
     c28:	df 91       	pop	r29
     c2a:	08 95       	ret

00000c2c <_ZL16currentCharacterv>:
     c2c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <_ZL17use_program_space>
     c30:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__data_end>
     c34:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__data_end+0x1>
     c38:	99 23       	and	r25, r25
     c3a:	11 f0       	breq	.+4      	; 0xc40 <_ZL16currentCharacterv+0x14>
     c3c:	84 91       	lpm	r24, Z
     c3e:	01 c0       	rjmp	.+2      	; 0xc42 <_ZL16currentCharacterv+0x16>
     c40:	80 81       	ld	r24, Z
     c42:	2f eb       	ldi	r18, 0xBF	; 191
     c44:	28 0f       	add	r18, r24
     c46:	2a 31       	cpi	r18, 0x1A	; 26
     c48:	10 f4       	brcc	.+4      	; 0xc4e <_ZL16currentCharacterv+0x22>
     c4a:	80 5e       	subi	r24, 0xE0	; 224
     c4c:	08 95       	ret
     c4e:	80 32       	cpi	r24, 0x20	; 32
     c50:	49 f4       	brne	.+18     	; 0xc64 <_ZL16currentCharacterv+0x38>
     c52:	9f 01       	movw	r18, r30
     c54:	2f 5f       	subi	r18, 0xFF	; 255
     c56:	3f 4f       	sbci	r19, 0xFF	; 255
     c58:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
     c5c:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
     c60:	ef 2b       	or	r30, r31
     c62:	31 f7       	brne	.-52     	; 0xc30 <_ZL16currentCharacterv+0x4>
     c64:	08 95       	ret

00000c66 <_ZL9getNumberv>:
     c66:	1f 93       	push	r17
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
     c70:	c0 e0       	ldi	r28, 0x00	; 0
     c72:	d0 e0       	ldi	r29, 0x00	; 0
     c74:	1a e0       	ldi	r17, 0x0A	; 10
     c76:	90 ed       	ldi	r25, 0xD0	; 208
     c78:	98 0f       	add	r25, r24
     c7a:	9a 30       	cpi	r25, 0x0A	; 10
     c7c:	b8 f4       	brcc	.+46     	; 0xcac <_ZL9getNumberv+0x46>
     c7e:	9e 01       	movw	r18, r28
     c80:	12 9f       	mul	r17, r18
     c82:	e0 01       	movw	r28, r0
     c84:	13 9f       	mul	r17, r19
     c86:	d0 0d       	add	r29, r0
     c88:	11 24       	eor	r1, r1
     c8a:	c8 0f       	add	r28, r24
     c8c:	d1 1d       	adc	r29, r1
     c8e:	87 fd       	sbrc	r24, 7
     c90:	da 95       	dec	r29
     c92:	e0 97       	sbiw	r28, 0x30	; 48
     c94:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
     c98:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
     ca2:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
     ca6:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
     caa:	e5 cf       	rjmp	.-54     	; 0xc76 <_ZL9getNumberv+0x10>
     cac:	ce 01       	movw	r24, r28
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	1f 91       	pop	r17
     cb4:	08 95       	ret

00000cb6 <_ZN15OrangutanBuzzer5init2Ev>:
     cb6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     cba:	83 e2       	ldi	r24, 0x23	; 35
     cbc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     cc0:	81 e1       	ldi	r24, 0x11	; 17
     cc2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     cc6:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
     cca:	80 e1       	ldi	r24, 0x10	; 16
     ccc:	97 e2       	ldi	r25, 0x27	; 39
     cce:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     cd2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     cd6:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     cda:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     cde:	22 9a       	sbi	0x04, 2	; 4
     ce0:	78 94       	sei
     ce2:	08 95       	ret

00000ce4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     ce4:	8f 92       	push	r8
     ce6:	9f 92       	push	r9
     ce8:	af 92       	push	r10
     cea:	bf 92       	push	r11
     cec:	df 92       	push	r13
     cee:	ef 92       	push	r14
     cf0:	ff 92       	push	r15
     cf2:	0f 93       	push	r16
     cf4:	1f 93       	push	r17
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	5c 01       	movw	r10, r24
     cfc:	8b 01       	movw	r16, r22
     cfe:	d4 2e       	mov	r13, r20
     d00:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <buzzerInitialized>
     d04:	81 11       	cpse	r24, r1
     d06:	05 c0       	rjmp	.+10     	; 0xd12 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
     d08:	81 e0       	ldi	r24, 0x01	; 1
     d0a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <buzzerInitialized>
     d0e:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN15OrangutanBuzzer5init2Ev>
     d12:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <buzzerFinished>
     d16:	b7 fe       	sbrs	r11, 7
     d18:	05 c0       	rjmp	.+10     	; 0xd24 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
     d1a:	e8 94       	clt
     d1c:	b7 f8       	bld	r11, 7
     d1e:	2a e0       	ldi	r18, 0x0A	; 10
     d20:	f2 2e       	mov	r15, r18
     d22:	02 c0       	rjmp	.+4      	; 0xd28 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
     d24:	ff 24       	eor	r15, r15
     d26:	f3 94       	inc	r15
     d28:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     d2c:	2e 2d       	mov	r18, r14
     d2e:	28 7f       	andi	r18, 0xF8	; 248
     d30:	e2 2e       	mov	r14, r18
     d32:	48 ec       	ldi	r20, 0xC8	; 200
     d34:	f4 9e       	mul	r15, r20
     d36:	c0 01       	movw	r24, r0
     d38:	11 24       	eor	r1, r1
     d3a:	8a 15       	cp	r24, r10
     d3c:	9b 05       	cpc	r25, r11
     d3e:	e0 f4       	brcc	.+56     	; 0xd78 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
     d40:	e5 01       	movw	r28, r10
     d42:	51 e1       	ldi	r21, 0x11	; 17
     d44:	a5 16       	cp	r10, r21
     d46:	57 e2       	ldi	r21, 0x27	; 39
     d48:	b5 06       	cpc	r11, r21
     d4a:	10 f0       	brcs	.+4      	; 0xd50 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
     d4c:	c0 e1       	ldi	r28, 0x10	; 16
     d4e:	d7 e2       	ldi	r29, 0x27	; 39
     d50:	be 01       	movw	r22, r28
     d52:	76 95       	lsr	r23
     d54:	67 95       	ror	r22
     d56:	80 e0       	ldi	r24, 0x00	; 0
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	60 58       	subi	r22, 0x80	; 128
     d5c:	79 46       	sbci	r23, 0x69	; 105
     d5e:	87 46       	sbci	r24, 0x67	; 103
     d60:	9f 4f       	sbci	r25, 0xFF	; 255
     d62:	4e 01       	movw	r8, r28
     d64:	a1 2c       	mov	r10, r1
     d66:	b1 2c       	mov	r11, r1
     d68:	a5 01       	movw	r20, r10
     d6a:	94 01       	movw	r18, r8
     d6c:	0e 94 88 0a 	call	0x1510	; 0x1510 <__udivmodsi4>
     d70:	59 01       	movw	r10, r18
     d72:	8e 2d       	mov	r24, r14
     d74:	81 60       	ori	r24, 0x01	; 1
     d76:	24 c0       	rjmp	.+72     	; 0xdc0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
     d78:	c8 e2       	ldi	r28, 0x28	; 40
     d7a:	fc 9e       	mul	r15, r28
     d7c:	c0 2d       	mov	r28, r0
     d7e:	11 24       	eor	r1, r1
     d80:	d0 e0       	ldi	r29, 0x00	; 0
     d82:	ca 15       	cp	r28, r10
     d84:	db 05       	cpc	r29, r11
     d86:	08 f4       	brcc	.+2      	; 0xd8a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
     d88:	e5 01       	movw	r28, r10
     d8a:	be 01       	movw	r22, r28
     d8c:	76 95       	lsr	r23
     d8e:	67 95       	ror	r22
     d90:	9e 01       	movw	r18, r28
     d92:	40 e0       	ldi	r20, 0x00	; 0
     d94:	50 e0       	ldi	r21, 0x00	; 0
     d96:	8a e0       	ldi	r24, 0x0A	; 10
     d98:	f8 12       	cpse	r15, r24
     d9a:	07 c0       	rjmp	.+14     	; 0xdaa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	60 5e       	subi	r22, 0xE0	; 224
     da2:	73 44       	sbci	r23, 0x43	; 67
     da4:	81 44       	sbci	r24, 0x41	; 65
     da6:	9f 4f       	sbci	r25, 0xFF	; 255
     da8:	06 c0       	rjmp	.+12     	; 0xdb6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	60 53       	subi	r22, 0x30	; 48
     db0:	7d 4e       	sbci	r23, 0xED	; 237
     db2:	8c 4e       	sbci	r24, 0xEC	; 236
     db4:	9f 4f       	sbci	r25, 0xFF	; 255
     db6:	0e 94 88 0a 	call	0x1510	; 0x1510 <__udivmodsi4>
     dba:	59 01       	movw	r10, r18
     dbc:	8e 2d       	mov	r24, r14
     dbe:	82 60       	ori	r24, 0x02	; 2
     dc0:	88 2e       	mov	r8, r24
     dc2:	2a e0       	ldi	r18, 0x0A	; 10
     dc4:	f2 12       	cpse	r15, r18
     dc6:	07 c0       	rjmp	.+14     	; 0xdd6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
     dc8:	ce 01       	movw	r24, r28
     dca:	05 96       	adiw	r24, 0x05	; 5
     dcc:	6a e0       	ldi	r22, 0x0A	; 10
     dce:	70 e0       	ldi	r23, 0x00	; 0
     dd0:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmodhi4>
     dd4:	eb 01       	movw	r28, r22
     dd6:	c8 3e       	cpi	r28, 0xE8	; 232
     dd8:	43 e0       	ldi	r20, 0x03	; 3
     dda:	d4 07       	cpc	r29, r20
     ddc:	59 f0       	breq	.+22     	; 0xdf4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     dde:	98 01       	movw	r18, r16
     de0:	de 01       	movw	r26, r28
     de2:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__umulhisi3>
     de6:	28 ee       	ldi	r18, 0xE8	; 232
     de8:	33 e0       	ldi	r19, 0x03	; 3
     dea:	40 e0       	ldi	r20, 0x00	; 0
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__divmodsi4>
     df2:	89 01       	movw	r16, r18
     df4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     df8:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     dfc:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     e00:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     e04:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     e08:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     e0c:	4d 2d       	mov	r20, r13
     e0e:	40 31       	cpi	r20, 0x10	; 16
     e10:	08 f0       	brcs	.+2      	; 0xe14 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     e12:	4f e0       	ldi	r20, 0x0F	; 15
     e14:	80 e1       	ldi	r24, 0x10	; 16
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	84 1b       	sub	r24, r20
     e1a:	91 09       	sbc	r25, r1
     e1c:	a9 01       	movw	r20, r18
     e1e:	02 c0       	rjmp	.+4      	; 0xe24 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     e20:	56 95       	lsr	r21
     e22:	47 95       	ror	r20
     e24:	8a 95       	dec	r24
     e26:	e2 f7       	brpl	.-8      	; 0xe20 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     e28:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     e2c:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     e30:	10 93 2a 01 	sts	0x012A, r17	; 0x80012a <_ZL13buzzerTimeout+0x1>
     e34:	00 93 29 01 	sts	0x0129, r16	; 0x800129 <_ZL13buzzerTimeout>
     e38:	86 b3       	in	r24, 0x16	; 22
     e3a:	8f ef       	ldi	r24, 0xFF	; 255
     e3c:	86 bb       	out	0x16, r24	; 22
     e3e:	81 e0       	ldi	r24, 0x01	; 1
     e40:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     e44:	df 91       	pop	r29
     e46:	cf 91       	pop	r28
     e48:	1f 91       	pop	r17
     e4a:	0f 91       	pop	r16
     e4c:	ff 90       	pop	r15
     e4e:	ef 90       	pop	r14
     e50:	df 90       	pop	r13
     e52:	bf 90       	pop	r11
     e54:	af 90       	pop	r10
     e56:	9f 90       	pop	r9
     e58:	8f 90       	pop	r8
     e5a:	08 95       	ret

00000e5c <_ZN15OrangutanBuzzer8playNoteEhjh>:
     e5c:	cf 93       	push	r28
     e5e:	df 93       	push	r29
     e60:	eb 01       	movw	r28, r22
     e62:	8f 3f       	cpi	r24, 0xFF	; 255
     e64:	11 f0       	breq	.+4      	; 0xe6a <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
     e66:	41 11       	cpse	r20, r1
     e68:	05 c0       	rjmp	.+10     	; 0xe74 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
     e6a:	40 e0       	ldi	r20, 0x00	; 0
     e6c:	be 01       	movw	r22, r28
     e6e:	88 ee       	ldi	r24, 0xE8	; 232
     e70:	93 e0       	ldi	r25, 0x03	; 3
     e72:	43 c0       	rjmp	.+134    	; 0xefa <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
     e74:	81 31       	cpi	r24, 0x11	; 17
     e76:	30 f0       	brcs	.+12     	; 0xe84 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
     e78:	50 ef       	ldi	r21, 0xF0	; 240
     e7a:	58 0f       	add	r21, r24
     e7c:	50 36       	cpi	r21, 0x60	; 96
     e7e:	18 f0       	brcs	.+6      	; 0xe86 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     e80:	5f e5       	ldi	r21, 0x5F	; 95
     e82:	01 c0       	rjmp	.+2      	; 0xe86 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     e84:	50 e0       	ldi	r21, 0x00	; 0
     e86:	85 2f       	mov	r24, r21
     e88:	6c e0       	ldi	r22, 0x0C	; 12
     e8a:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <__udivmodqi4>
     e8e:	68 2f       	mov	r22, r24
     e90:	74 ef       	ldi	r23, 0xF4	; 244
     e92:	76 03       	mulsu	r23, r22
     e94:	90 01       	movw	r18, r0
     e96:	11 24       	eor	r1, r1
     e98:	25 0f       	add	r18, r21
     e9a:	31 1d       	adc	r19, r1
     e9c:	2c 30       	cpi	r18, 0x0C	; 12
     e9e:	31 05       	cpc	r19, r1
     ea0:	40 f4       	brcc	.+16     	; 0xeb2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
     ea2:	f9 01       	movw	r30, r18
     ea4:	ee 0f       	add	r30, r30
     ea6:	ff 1f       	adc	r31, r31
     ea8:	e6 5f       	subi	r30, 0xF6	; 246
     eaa:	fe 4f       	sbci	r31, 0xFE	; 254
     eac:	20 81       	ld	r18, Z
     eae:	31 81       	ldd	r19, Z+1	; 0x01
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
     eb2:	20 e0       	ldi	r18, 0x00	; 0
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	87 30       	cpi	r24, 0x07	; 7
     eb8:	81 f0       	breq	.+32     	; 0xeda <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
     eba:	08 2e       	mov	r0, r24
     ebc:	02 c0       	rjmp	.+4      	; 0xec2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
     ebe:	22 0f       	add	r18, r18
     ec0:	33 1f       	adc	r19, r19
     ec2:	0a 94       	dec	r0
     ec4:	e2 f7       	brpl	.-8      	; 0xebe <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     ec6:	82 30       	cpi	r24, 0x02	; 2
     ec8:	28 f0       	brcs	.+10     	; 0xed4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
     eca:	c9 01       	movw	r24, r18
     ecc:	05 96       	adiw	r24, 0x05	; 5
     ece:	6a e0       	ldi	r22, 0x0A	; 10
     ed0:	70 e0       	ldi	r23, 0x00	; 0
     ed2:	0c c0       	rjmp	.+24     	; 0xeec <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
     ed4:	c9 01       	movw	r24, r18
     ed6:	90 58       	subi	r25, 0x80	; 128
     ed8:	0c c0       	rjmp	.+24     	; 0xef2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
     eda:	c9 01       	movw	r24, r18
     edc:	36 e0       	ldi	r19, 0x06	; 6
     ede:	88 0f       	add	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	3a 95       	dec	r19
     ee4:	e1 f7       	brne	.-8      	; 0xede <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
     ee6:	02 96       	adiw	r24, 0x02	; 2
     ee8:	65 e0       	ldi	r22, 0x05	; 5
     eea:	70 e0       	ldi	r23, 0x00	; 0
     eec:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmodhi4>
     ef0:	cb 01       	movw	r24, r22
     ef2:	40 31       	cpi	r20, 0x10	; 16
     ef4:	08 f0       	brcs	.+2      	; 0xef8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     ef6:	4f e0       	ldi	r20, 0x0F	; 15
     ef8:	be 01       	movw	r22, r28
     efa:	0e 94 72 06 	call	0xce4	; 0xce4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     efe:	df 91       	pop	r29
     f00:	cf 91       	pop	r28
     f02:	08 95       	ret

00000f04 <_ZL8nextNotev>:
     f04:	a2 e0       	ldi	r26, 0x02	; 2
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e8 e8       	ldi	r30, 0x88	; 136
     f0a:	f7 e0       	ldi	r31, 0x07	; 7
     f0c:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__prologue_saves__+0x4>
     f10:	90 90 08 01 	lds	r9, 0x0108	; 0x800108 <_ZL6octave>
     f14:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_ZL8staccato>
     f18:	88 23       	and	r24, r24
     f1a:	21 f0       	breq	.+8      	; 0xf24 <_ZL8nextNotev+0x20>
     f1c:	60 91 25 01 	lds	r22, 0x0125	; 0x800125 <_ZL22staccato_rest_duration>
     f20:	61 11       	cpse	r22, r1
     f22:	17 c0       	rjmp	.+46     	; 0xf52 <_ZL8nextNotev+0x4e>
     f24:	77 24       	eor	r7, r7
     f26:	73 94       	inc	r7
     f28:	b0 ec       	ldi	r27, 0xC0	; 192
     f2a:	ab 2e       	mov	r10, r27
     f2c:	bd e5       	ldi	r27, 0x5D	; 93
     f2e:	bb 2e       	mov	r11, r27
     f30:	1a e0       	ldi	r17, 0x0A	; 10
     f32:	61 2e       	mov	r6, r17
     f34:	04 e0       	ldi	r16, 0x04	; 4
     f36:	80 2e       	mov	r8, r16
     f38:	80 ed       	ldi	r24, 0xD0	; 208
     f3a:	c8 2e       	mov	r12, r24
     f3c:	87 e0       	ldi	r24, 0x07	; 7
     f3e:	d8 2e       	mov	r13, r24
     f40:	94 e0       	ldi	r25, 0x04	; 4
     f42:	e9 2e       	mov	r14, r25
     f44:	f1 2c       	mov	r15, r1
     f46:	04 ef       	ldi	r16, 0xF4	; 244
     f48:	11 e0       	ldi	r17, 0x01	; 1
     f4a:	2f e0       	ldi	r18, 0x0F	; 15
     f4c:	42 2e       	mov	r4, r18
     f4e:	51 2c       	mov	r5, r1
     f50:	15 c0       	rjmp	.+42     	; 0xf7c <_ZL8nextNotev+0x78>
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	40 e0       	ldi	r20, 0x00	; 0
     f56:	88 ee       	ldi	r24, 0xE8	; 232
     f58:	93 e0       	ldi	r25, 0x03	; 3
     f5a:	0e 94 72 06 	call	0xce4	; 0xce4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     f5e:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
     f62:	17 c1       	rjmp	.+558    	; 0x1192 <_ZL8nextNotev+0x28e>
     f64:	86 36       	cpi	r24, 0x66	; 102
     f66:	d4 f5       	brge	.+116    	; 0xfdc <_ZL8nextNotev+0xd8>
     f68:	81 36       	cpi	r24, 0x61	; 97
     f6a:	09 f4       	brne	.+2      	; 0xf6e <_ZL8nextNotev+0x6a>
     f6c:	a9 c0       	rjmp	.+338    	; 0x10c0 <_ZL8nextNotev+0x1bc>
     f6e:	7c f5       	brge	.+94     	; 0xfce <_ZL8nextNotev+0xca>
     f70:	8c 33       	cpi	r24, 0x3C	; 60
     f72:	09 f4       	brne	.+2      	; 0xf76 <_ZL8nextNotev+0x72>
     f74:	60 c0       	rjmp	.+192    	; 0x1036 <_ZL8nextNotev+0x132>
     f76:	8e 33       	cpi	r24, 0x3E	; 62
     f78:	81 f4       	brne	.+32     	; 0xf9a <_ZL8nextNotev+0x96>
     f7a:	93 94       	inc	r9
     f7c:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
     f80:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
     f84:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
     f88:	2f 5f       	subi	r18, 0xFF	; 255
     f8a:	3f 4f       	sbci	r19, 0xFF	; 255
     f8c:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
     f90:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
     f94:	85 36       	cpi	r24, 0x65	; 101
     f96:	31 f7       	brne	.-52     	; 0xf64 <_ZL8nextNotev+0x60>
     f98:	52 c0       	rjmp	.+164    	; 0x103e <_ZL8nextNotev+0x13a>
     f9a:	81 32       	cpi	r24, 0x21	; 33
     f9c:	09 f0       	breq	.+2      	; 0xfa0 <_ZL8nextNotev+0x9c>
     f9e:	8b c0       	rjmp	.+278    	; 0x10b6 <_ZL8nextNotev+0x1b2>
     fa0:	80 92 08 01 	sts	0x0108, r8	; 0x800108 <_ZL6octave>
     fa4:	d0 92 07 01 	sts	0x0107, r13	; 0x800107 <_ZL19whole_note_duration+0x1>
     fa8:	c0 92 06 01 	sts	0x0106, r12	; 0x800106 <_ZL19whole_note_duration>
     fac:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <_ZL9note_type+0x1>
     fb0:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <_ZL9note_type>
     fb4:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <_ZL8duration+0x1>
     fb8:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <_ZL8duration>
     fbc:	50 92 01 01 	sts	0x0101, r5	; 0x800101 <__data_start+0x1>
     fc0:	40 92 00 01 	sts	0x0100, r4	; 0x800100 <__data_start>
     fc4:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <_ZL8staccato>
     fc8:	a4 e0       	ldi	r26, 0x04	; 4
     fca:	9a 2e       	mov	r9, r26
     fcc:	d7 cf       	rjmp	.-82     	; 0xf7c <_ZL8nextNotev+0x78>
     fce:	83 36       	cpi	r24, 0x63	; 99
     fd0:	a1 f1       	breq	.+104    	; 0x103a <_ZL8nextNotev+0x136>
     fd2:	0c f4       	brge	.+2      	; 0xfd6 <_ZL8nextNotev+0xd2>
     fd4:	78 c0       	rjmp	.+240    	; 0x10c6 <_ZL8nextNotev+0x1c2>
     fd6:	10 e0       	ldi	r17, 0x00	; 0
     fd8:	82 e0       	ldi	r24, 0x02	; 2
     fda:	77 c0       	rjmp	.+238    	; 0x10ca <_ZL8nextNotev+0x1c6>
     fdc:	8d 36       	cpi	r24, 0x6D	; 109
     fde:	c1 f1       	breq	.+112    	; 0x1050 <_ZL8nextNotev+0x14c>
     fe0:	94 f4       	brge	.+36     	; 0x1006 <_ZL8nextNotev+0x102>
     fe2:	87 36       	cpi	r24, 0x67	; 103
     fe4:	91 f1       	breq	.+100    	; 0x104a <_ZL8nextNotev+0x146>
     fe6:	74 f1       	brlt	.+92     	; 0x1044 <_ZL8nextNotev+0x140>
     fe8:	8c 36       	cpi	r24, 0x6C	; 108
     fea:	09 f0       	breq	.+2      	; 0xfee <_ZL8nextNotev+0xea>
     fec:	64 c0       	rjmp	.+200    	; 0x10b6 <_ZL8nextNotev+0x1b2>
     fee:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZL9getNumberv>
     ff2:	bc 01       	movw	r22, r24
     ff4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_ZL9note_type+0x1>
     ff8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_ZL9note_type>
     ffc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_ZL19whole_note_duration>
    1000:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_ZL19whole_note_duration+0x1>
    1004:	51 c0       	rjmp	.+162    	; 0x10a8 <_ZL8nextNotev+0x1a4>
    1006:	82 37       	cpi	r24, 0x72	; 114
    1008:	c9 f1       	breq	.+114    	; 0x107c <_ZL8nextNotev+0x178>
    100a:	4c f4       	brge	.+18     	; 0x101e <_ZL8nextNotev+0x11a>
    100c:	8f 36       	cpi	r24, 0x6F	; 111
    100e:	09 f0       	breq	.+2      	; 0x1012 <_ZL8nextNotev+0x10e>
    1010:	52 c0       	rjmp	.+164    	; 0x10b6 <_ZL8nextNotev+0x1b2>
    1012:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZL9getNumberv>
    1016:	98 2e       	mov	r9, r24
    1018:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL6octave>
    101c:	af cf       	rjmp	.-162    	; 0xf7c <_ZL8nextNotev+0x78>
    101e:	84 37       	cpi	r24, 0x74	; 116
    1020:	81 f1       	breq	.+96     	; 0x1082 <_ZL8nextNotev+0x17e>
    1022:	86 37       	cpi	r24, 0x76	; 118
    1024:	09 f0       	breq	.+2      	; 0x1028 <_ZL8nextNotev+0x124>
    1026:	47 c0       	rjmp	.+142    	; 0x10b6 <_ZL8nextNotev+0x1b2>
    1028:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZL9getNumberv>
    102c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
    1030:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1034:	a3 cf       	rjmp	.-186    	; 0xf7c <_ZL8nextNotev+0x78>
    1036:	9a 94       	dec	r9
    1038:	a1 cf       	rjmp	.-190    	; 0xf7c <_ZL8nextNotev+0x78>
    103a:	10 e0       	ldi	r17, 0x00	; 0
    103c:	20 c0       	rjmp	.+64     	; 0x107e <_ZL8nextNotev+0x17a>
    103e:	10 e0       	ldi	r17, 0x00	; 0
    1040:	84 e0       	ldi	r24, 0x04	; 4
    1042:	43 c0       	rjmp	.+134    	; 0x10ca <_ZL8nextNotev+0x1c6>
    1044:	10 e0       	ldi	r17, 0x00	; 0
    1046:	85 e0       	ldi	r24, 0x05	; 5
    1048:	40 c0       	rjmp	.+128    	; 0x10ca <_ZL8nextNotev+0x1c6>
    104a:	10 e0       	ldi	r17, 0x00	; 0
    104c:	87 e0       	ldi	r24, 0x07	; 7
    104e:	3d c0       	rjmp	.+122    	; 0x10ca <_ZL8nextNotev+0x1c6>
    1050:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
    1054:	8c 36       	cpi	r24, 0x6C	; 108
    1056:	19 f4       	brne	.+6      	; 0x105e <_ZL8nextNotev+0x15a>
    1058:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <_ZL8staccato>
    105c:	04 c0       	rjmp	.+8      	; 0x1066 <_ZL8nextNotev+0x162>
    105e:	70 92 26 01 	sts	0x0126, r7	; 0x800126 <_ZL8staccato>
    1062:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
    1066:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    106a:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    106e:	2f 5f       	subi	r18, 0xFF	; 255
    1070:	3f 4f       	sbci	r19, 0xFF	; 255
    1072:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    1076:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    107a:	80 cf       	rjmp	.-256    	; 0xf7c <_ZL8nextNotev+0x78>
    107c:	11 e0       	ldi	r17, 0x01	; 1
    107e:	80 e0       	ldi	r24, 0x00	; 0
    1080:	24 c0       	rjmp	.+72     	; 0x10ca <_ZL8nextNotev+0x1c6>
    1082:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZL9getNumberv>
    1086:	bc 01       	movw	r22, r24
    1088:	c5 01       	movw	r24, r10
    108a:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmodhi4>
    108e:	66 9e       	mul	r6, r22
    1090:	c0 01       	movw	r24, r0
    1092:	67 9e       	mul	r6, r23
    1094:	90 0d       	add	r25, r0
    1096:	11 24       	eor	r1, r1
    1098:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL19whole_note_duration+0x1>
    109c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL19whole_note_duration>
    10a0:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL9note_type>
    10a4:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL9note_type+0x1>
    10a8:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmodhi4>
    10ac:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <_ZL8duration+0x1>
    10b0:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <_ZL8duration>
    10b4:	63 cf       	rjmp	.-314    	; 0xf7c <_ZL8nextNotev+0x78>
    10b6:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <__data_end+0x1>
    10ba:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <__data_end>
    10be:	69 c0       	rjmp	.+210    	; 0x1192 <_ZL8nextNotev+0x28e>
    10c0:	10 e0       	ldi	r17, 0x00	; 0
    10c2:	89 e0       	ldi	r24, 0x09	; 9
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <_ZL8nextNotev+0x1c6>
    10c6:	10 e0       	ldi	r17, 0x00	; 0
    10c8:	8b e0       	ldi	r24, 0x0B	; 11
    10ca:	08 2f       	mov	r16, r24
    10cc:	9c e0       	ldi	r25, 0x0C	; 12
    10ce:	99 9e       	mul	r9, r25
    10d0:	00 0d       	add	r16, r0
    10d2:	11 24       	eor	r1, r1
    10d4:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
    10d8:	98 2f       	mov	r25, r24
    10da:	97 7f       	andi	r25, 0xF7	; 247
    10dc:	93 32       	cpi	r25, 0x23	; 35
    10de:	61 f4       	brne	.+24     	; 0x10f8 <_ZL8nextNotev+0x1f4>
    10e0:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    10e4:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    10e8:	2f 5f       	subi	r18, 0xFF	; 255
    10ea:	3f 4f       	sbci	r19, 0xFF	; 255
    10ec:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    10f0:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    10f4:	0f 5f       	subi	r16, 0xFF	; 255
    10f6:	ee cf       	rjmp	.-36     	; 0x10d4 <_ZL8nextNotev+0x1d0>
    10f8:	8d 32       	cpi	r24, 0x2D	; 45
    10fa:	71 f4       	brne	.+28     	; 0x1118 <_ZL8nextNotev+0x214>
    10fc:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    1100:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    1104:	2f 5f       	subi	r18, 0xFF	; 255
    1106:	3f 4f       	sbci	r19, 0xFF	; 255
    1108:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    110c:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    1110:	01 50       	subi	r16, 0x01	; 1
    1112:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
    1116:	f0 cf       	rjmp	.-32     	; 0x10f8 <_ZL8nextNotev+0x1f4>
    1118:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <_ZL8duration>
    111c:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <_ZL8duration+0x1>
    1120:	81 53       	subi	r24, 0x31	; 49
    1122:	88 30       	cpi	r24, 0x08	; 8
    1124:	50 f4       	brcc	.+20     	; 0x113a <_ZL8nextNotev+0x236>
    1126:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <_ZL19whole_note_duration>
    112a:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <_ZL19whole_note_duration+0x1>
    112e:	0e 94 33 06 	call	0xc66	; 0xc66 <_ZL9getNumberv>
    1132:	bc 01       	movw	r22, r24
    1134:	c7 01       	movw	r24, r14
    1136:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmodhi4>
    113a:	7b 01       	movw	r14, r22
    113c:	f6 94       	lsr	r15
    113e:	e7 94       	ror	r14
    1140:	69 83       	std	Y+1, r22	; 0x01
    1142:	7a 83       	std	Y+2, r23	; 0x02
    1144:	0e 94 16 06 	call	0xc2c	; 0xc2c <_ZL16currentCharacterv>
    1148:	69 81       	ldd	r22, Y+1	; 0x01
    114a:	7a 81       	ldd	r23, Y+2	; 0x02
    114c:	8e 32       	cpi	r24, 0x2E	; 46
    114e:	69 f4       	brne	.+26     	; 0x116a <_ZL8nextNotev+0x266>
    1150:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <__data_end>
    1154:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <__data_end+0x1>
    1158:	2f 5f       	subi	r18, 0xFF	; 255
    115a:	3f 4f       	sbci	r19, 0xFF	; 255
    115c:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <__data_end+0x1>
    1160:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <__data_end>
    1164:	6e 0d       	add	r22, r14
    1166:	7f 1d       	adc	r23, r15
    1168:	e9 cf       	rjmp	.-46     	; 0x113c <_ZL8nextNotev+0x238>
    116a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <_ZL8staccato>
    116e:	88 23       	and	r24, r24
    1170:	39 f0       	breq	.+14     	; 0x1180 <_ZL8nextNotev+0x27c>
    1172:	9b 01       	movw	r18, r22
    1174:	36 95       	lsr	r19
    1176:	27 95       	ror	r18
    1178:	20 93 25 01 	sts	0x0125, r18	; 0x800125 <_ZL22staccato_rest_duration>
    117c:	62 1b       	sub	r22, r18
    117e:	71 09       	sbc	r23, r1
    1180:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    1184:	11 23       	and	r17, r17
    1186:	11 f0       	breq	.+4      	; 0x118c <_ZL8nextNotev+0x288>
    1188:	8f ef       	ldi	r24, 0xFF	; 255
    118a:	01 c0       	rjmp	.+2      	; 0x118e <_ZL8nextNotev+0x28a>
    118c:	80 2f       	mov	r24, r16
    118e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <_ZN15OrangutanBuzzer8playNoteEhjh>
    1192:	22 96       	adiw	r28, 0x02	; 2
    1194:	e0 e1       	ldi	r30, 0x10	; 16
    1196:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__epilogue_restores__+0x4>

0000119a <__vector_13>:
    119a:	1f 92       	push	r1
    119c:	0f 92       	push	r0
    119e:	0f b6       	in	r0, 0x3f	; 63
    11a0:	0f 92       	push	r0
    11a2:	11 24       	eor	r1, r1
    11a4:	2f 93       	push	r18
    11a6:	3f 93       	push	r19
    11a8:	4f 93       	push	r20
    11aa:	5f 93       	push	r21
    11ac:	6f 93       	push	r22
    11ae:	7f 93       	push	r23
    11b0:	8f 93       	push	r24
    11b2:	9f 93       	push	r25
    11b4:	af 93       	push	r26
    11b6:	bf 93       	push	r27
    11b8:	ef 93       	push	r30
    11ba:	ff 93       	push	r31
    11bc:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <_ZL13buzzerTimeout>
    11c0:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <_ZL13buzzerTimeout+0x1>
    11c4:	9c 01       	movw	r18, r24
    11c6:	21 50       	subi	r18, 0x01	; 1
    11c8:	31 09       	sbc	r19, r1
    11ca:	30 93 2a 01 	sts	0x012A, r19	; 0x80012a <_ZL13buzzerTimeout+0x1>
    11ce:	20 93 29 01 	sts	0x0129, r18	; 0x800129 <_ZL13buzzerTimeout>
    11d2:	89 2b       	or	r24, r25
    11d4:	11 f5       	brne	.+68     	; 0x121a <__vector_13+0x80>
    11d6:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    11da:	78 94       	sei
    11dc:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11e0:	88 7f       	andi	r24, 0xF8	; 248
    11e2:	81 60       	ori	r24, 0x01	; 1
    11e4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11e8:	80 e1       	ldi	r24, 0x10	; 16
    11ea:	97 e2       	ldi	r25, 0x27	; 39
    11ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    11f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    11f4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    11f8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <buzzerFinished>
    1202:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end>
    1206:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x1>
    120a:	89 2b       	or	r24, r25
    120c:	31 f0       	breq	.+12     	; 0x121a <__vector_13+0x80>
    120e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <_ZL17play_mode_setting>
    1212:	81 11       	cpse	r24, r1
    1214:	02 c0       	rjmp	.+4      	; 0x121a <__vector_13+0x80>
    1216:	0e 94 82 07 	call	0xf04	; 0xf04 <_ZL8nextNotev>
    121a:	ff 91       	pop	r31
    121c:	ef 91       	pop	r30
    121e:	bf 91       	pop	r27
    1220:	af 91       	pop	r26
    1222:	9f 91       	pop	r25
    1224:	8f 91       	pop	r24
    1226:	7f 91       	pop	r23
    1228:	6f 91       	pop	r22
    122a:	5f 91       	pop	r21
    122c:	4f 91       	pop	r20
    122e:	3f 91       	pop	r19
    1230:	2f 91       	pop	r18
    1232:	0f 90       	pop	r0
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	0f 90       	pop	r0
    1238:	1f 90       	pop	r1
    123a:	18 95       	reti

0000123c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    123c:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1240:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <__data_end+0x1>
    1244:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <_ZL17use_program_space>
    124e:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <_ZL22staccato_rest_duration>
    1252:	0e 94 82 07 	call	0xf04	; 0xf04 <_ZL8nextNotev>
    1256:	08 95       	ret

00001258 <play_from_program_space>:
    1258:	0e 94 1e 09 	call	0x123c	; 0x123c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    125c:	08 95       	ret

0000125e <_ZN16OrangutanDigital9setOutputEhh>:
    125e:	88 30       	cpi	r24, 0x08	; 8
    1260:	58 f4       	brcc	.+22     	; 0x1278 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1262:	91 e0       	ldi	r25, 0x01	; 1
    1264:	01 c0       	rjmp	.+2      	; 0x1268 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1266:	99 0f       	add	r25, r25
    1268:	8a 95       	dec	r24
    126a:	ea f7       	brpl	.-6      	; 0x1266 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    126c:	89 2f       	mov	r24, r25
    126e:	aa e2       	ldi	r26, 0x2A	; 42
    1270:	b0 e0       	ldi	r27, 0x00	; 0
    1272:	eb e2       	ldi	r30, 0x2B	; 43
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	21 c0       	rjmp	.+66     	; 0x12ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1278:	8e 30       	cpi	r24, 0x0E	; 14
    127a:	60 f4       	brcc	.+24     	; 0x1294 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    127c:	98 ef       	ldi	r25, 0xF8	; 248
    127e:	98 0f       	add	r25, r24
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	01 c0       	rjmp	.+2      	; 0x1286 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1284:	88 0f       	add	r24, r24
    1286:	9a 95       	dec	r25
    1288:	ea f7       	brpl	.-6      	; 0x1284 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    128a:	a4 e2       	ldi	r26, 0x24	; 36
    128c:	b0 e0       	ldi	r27, 0x00	; 0
    128e:	e5 e2       	ldi	r30, 0x25	; 37
    1290:	f0 e0       	ldi	r31, 0x00	; 0
    1292:	13 c0       	rjmp	.+38     	; 0x12ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1294:	85 31       	cpi	r24, 0x15	; 21
    1296:	60 f4       	brcc	.+24     	; 0x12b0 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1298:	92 ef       	ldi	r25, 0xF2	; 242
    129a:	98 0f       	add	r25, r24
    129c:	81 e0       	ldi	r24, 0x01	; 1
    129e:	01 c0       	rjmp	.+2      	; 0x12a2 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    12a0:	88 0f       	add	r24, r24
    12a2:	9a 95       	dec	r25
    12a4:	ea f7       	brpl	.-6      	; 0x12a0 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    12a6:	a7 e2       	ldi	r26, 0x27	; 39
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	e8 e2       	ldi	r30, 0x28	; 40
    12ac:	f0 e0       	ldi	r31, 0x00	; 0
    12ae:	05 c0       	rjmp	.+10     	; 0x12ba <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	a0 e0       	ldi	r26, 0x00	; 0
    12b4:	b0 e0       	ldi	r27, 0x00	; 0
    12b6:	e0 e0       	ldi	r30, 0x00	; 0
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	6f 3f       	cpi	r22, 0xFF	; 255
    12bc:	19 f4       	brne	.+6      	; 0x12c4 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    12be:	90 81       	ld	r25, Z
    12c0:	98 27       	eor	r25, r24
    12c2:	09 c0       	rjmp	.+18     	; 0x12d6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    12c4:	66 23       	and	r22, r22
    12c6:	19 f0       	breq	.+6      	; 0x12ce <_ZN16OrangutanDigital9setOutputEhh+0x70>
    12c8:	90 81       	ld	r25, Z
    12ca:	98 2b       	or	r25, r24
    12cc:	04 c0       	rjmp	.+8      	; 0x12d6 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    12ce:	20 81       	ld	r18, Z
    12d0:	98 2f       	mov	r25, r24
    12d2:	90 95       	com	r25
    12d4:	92 23       	and	r25, r18
    12d6:	90 83       	st	Z, r25
    12d8:	9c 91       	ld	r25, X
    12da:	98 2b       	or	r25, r24
    12dc:	9c 93       	st	X, r25
    12de:	08 95       	ret

000012e0 <_ZN15OrangutanMotors5init2Ev>:
    12e0:	83 ef       	ldi	r24, 0xF3	; 243
    12e2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    12e6:	84 bd       	out	0x24, r24	; 36
    12e8:	82 e0       	ldi	r24, 0x02	; 2
    12ea:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    12ee:	85 bd       	out	0x25, r24	; 37
    12f0:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    12f4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    12f8:	18 bc       	out	0x28, r1	; 40
    12fa:	17 bc       	out	0x27, r1	; 39
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	86 e0       	ldi	r24, 0x06	; 6
    1300:	0e 94 2f 09 	call	0x125e	; 0x125e <_ZN16OrangutanDigital9setOutputEhh>
    1304:	60 e0       	ldi	r22, 0x00	; 0
    1306:	85 e0       	ldi	r24, 0x05	; 5
    1308:	0e 94 2f 09 	call	0x125e	; 0x125e <_ZN16OrangutanDigital9setOutputEhh>
    130c:	60 e0       	ldi	r22, 0x00	; 0
    130e:	8b e0       	ldi	r24, 0x0B	; 11
    1310:	0e 94 2f 09 	call	0x125e	; 0x125e <_ZN16OrangutanDigital9setOutputEhh>
    1314:	60 e0       	ldi	r22, 0x00	; 0
    1316:	83 e0       	ldi	r24, 0x03	; 3
    1318:	0e 94 2f 09 	call	0x125e	; 0x125e <_ZN16OrangutanDigital9setOutputEhh>
    131c:	08 95       	ret

0000131e <_ZN15OrangutanMotors4initEv>:
    131e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <_ZZN15OrangutanMotors4initEvE11initialized>
    1322:	81 11       	cpse	r24, r1
    1324:	05 c0       	rjmp	.+10     	; 0x1330 <_ZN15OrangutanMotors4initEv+0x12>
    1326:	81 e0       	ldi	r24, 0x01	; 1
    1328:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <_ZZN15OrangutanMotors4initEvE11initialized>
    132c:	0e 94 70 09 	call	0x12e0	; 0x12e0 <_ZN15OrangutanMotors5init2Ev>
    1330:	08 95       	ret

00001332 <_ZN15OrangutanMotors10setM1SpeedEi>:
    1332:	cf 93       	push	r28
    1334:	df 93       	push	r29
    1336:	ec 01       	movw	r28, r24
    1338:	0e 94 8f 09 	call	0x131e	; 0x131e <_ZN15OrangutanMotors4initEv>
    133c:	d7 ff       	sbrs	r29, 7
    133e:	05 c0       	rjmp	.+10     	; 0x134a <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    1340:	d1 95       	neg	r29
    1342:	c1 95       	neg	r28
    1344:	d1 09       	sbc	r29, r1
    1346:	81 e0       	ldi	r24, 0x01	; 1
    1348:	01 c0       	rjmp	.+2      	; 0x134c <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    134a:	80 e0       	ldi	r24, 0x00	; 0
    134c:	cf 3f       	cpi	r28, 0xFF	; 255
    134e:	d1 05       	cpc	r29, r1
    1350:	19 f0       	breq	.+6      	; 0x1358 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1352:	14 f0       	brlt	.+4      	; 0x1358 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1354:	cf ef       	ldi	r28, 0xFF	; 255
    1356:	d0 e0       	ldi	r29, 0x00	; 0
    1358:	88 23       	and	r24, r24
    135a:	19 f0       	breq	.+6      	; 0x1362 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    135c:	18 bc       	out	0x28, r1	; 40
    135e:	c7 bd       	out	0x27, r28	; 39
    1360:	02 c0       	rjmp	.+4      	; 0x1366 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1362:	c8 bd       	out	0x28, r28	; 40
    1364:	17 bc       	out	0x27, r1	; 39
    1366:	df 91       	pop	r29
    1368:	cf 91       	pop	r28
    136a:	08 95       	ret

0000136c <_ZN15OrangutanMotors10setM2SpeedEi>:
    136c:	cf 93       	push	r28
    136e:	df 93       	push	r29
    1370:	ec 01       	movw	r28, r24
    1372:	0e 94 8f 09 	call	0x131e	; 0x131e <_ZN15OrangutanMotors4initEv>
    1376:	d7 ff       	sbrs	r29, 7
    1378:	05 c0       	rjmp	.+10     	; 0x1384 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    137a:	d1 95       	neg	r29
    137c:	c1 95       	neg	r28
    137e:	d1 09       	sbc	r29, r1
    1380:	81 e0       	ldi	r24, 0x01	; 1
    1382:	01 c0       	rjmp	.+2      	; 0x1386 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1384:	80 e0       	ldi	r24, 0x00	; 0
    1386:	cf 3f       	cpi	r28, 0xFF	; 255
    1388:	d1 05       	cpc	r29, r1
    138a:	19 f0       	breq	.+6      	; 0x1392 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    138c:	14 f0       	brlt	.+4      	; 0x1392 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    138e:	cf ef       	ldi	r28, 0xFF	; 255
    1390:	d0 e0       	ldi	r29, 0x00	; 0
    1392:	88 23       	and	r24, r24
    1394:	29 f0       	breq	.+10     	; 0x13a0 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1396:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    139a:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    139e:	04 c0       	rjmp	.+8      	; 0x13a8 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    13a0:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    13a4:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    13a8:	df 91       	pop	r29
    13aa:	cf 91       	pop	r28
    13ac:	08 95       	ret

000013ae <_ZN15OrangutanMotors9setSpeedsEii>:
    13ae:	cf 93       	push	r28
    13b0:	df 93       	push	r29
    13b2:	eb 01       	movw	r28, r22
    13b4:	0e 94 99 09 	call	0x1332	; 0x1332 <_ZN15OrangutanMotors10setM1SpeedEi>
    13b8:	ce 01       	movw	r24, r28
    13ba:	0e 94 b6 09 	call	0x136c	; 0x136c <_ZN15OrangutanMotors10setM2SpeedEi>
    13be:	df 91       	pop	r29
    13c0:	cf 91       	pop	r28
    13c2:	08 95       	ret

000013c4 <set_motors>:
    13c4:	0e 94 d7 09 	call	0x13ae	; 0x13ae <_ZN15OrangutanMotors9setSpeedsEii>
    13c8:	08 95       	ret

000013ca <__vector_9>:
    13ca:	2f 92       	push	r2
    13cc:	8f 93       	push	r24
    13ce:	9f 93       	push	r25
    13d0:	2f b6       	in	r2, 0x3f	; 63
    13d2:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <tickCount+0x1>
    13d6:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <tickCount+0x2>
    13da:	01 96       	adiw	r24, 0x01	; 1
    13dc:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <tickCount+0x1>
    13e0:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <tickCount+0x2>
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <tickCount+0x3>
    13ea:	89 1f       	adc	r24, r25
    13ec:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <tickCount+0x3>
    13f0:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <us_over_10+0x1>
    13f4:	9c 5f       	subi	r25, 0xFC	; 252
    13f6:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <us_over_10+0x1>
    13fa:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <us_over_10>
    13fe:	80 51       	subi	r24, 0x10	; 16
    1400:	97 42       	sbci	r25, 0x27	; 39
    1402:	c0 f0       	brcs	.+48     	; 0x1434 <end>
    1404:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <us_over_10+0x1>
    1408:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <us_over_10>
    140c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <msCounter>
    1410:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <msCounter+0x1>
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <msCounter>
    141a:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <msCounter+0x1>
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <msCounter+0x2>
    1424:	89 1f       	adc	r24, r25
    1426:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <msCounter+0x2>
    142a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <msCounter+0x3>
    142e:	89 1f       	adc	r24, r25
    1430:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <msCounter+0x3>

00001434 <end>:
    1434:	2f be       	out	0x3f, r2	; 63
    1436:	9f 91       	pop	r25
    1438:	8f 91       	pop	r24
    143a:	2f 90       	pop	r2
    143c:	18 95       	reti

0000143e <_ZN13OrangutanTime17delayMillisecondsEj>:
    143e:	28 ee       	ldi	r18, 0xE8	; 232
    1440:	33 e0       	ldi	r19, 0x03	; 3
    1442:	01 97       	sbiw	r24, 0x01	; 1
    1444:	48 f0       	brcs	.+18     	; 0x1458 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1446:	f9 01       	movw	r30, r18
    1448:	6f 93       	push	r22
    144a:	64 e0       	ldi	r22, 0x04	; 4
    144c:	6a 95       	dec	r22
    144e:	f1 f7       	brne	.-4      	; 0x144c <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1450:	6f 91       	pop	r22
    1452:	31 97       	sbiw	r30, 0x01	; 1
    1454:	c9 f7       	brne	.-14     	; 0x1448 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1456:	f5 cf       	rjmp	.-22     	; 0x1442 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1458:	08 95       	ret

0000145a <delay_ms>:
    145a:	0e 94 1f 0a 	call	0x143e	; 0x143e <_ZN13OrangutanTime17delayMillisecondsEj>
    145e:	08 95       	ret

00001460 <_ZN13OrangutanTime5init2Ev>:
    1460:	e0 e7       	ldi	r30, 0x70	; 112
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	8e 7f       	andi	r24, 0xFE	; 254
    1468:	80 83       	st	Z, r24
    146a:	a0 eb       	ldi	r26, 0xB0	; 176
    146c:	b0 e0       	ldi	r27, 0x00	; 0
    146e:	8c 91       	ld	r24, X
    1470:	83 60       	ori	r24, 0x03	; 3
    1472:	8c 93       	st	X, r24
    1474:	a1 eb       	ldi	r26, 0xB1	; 177
    1476:	b0 e0       	ldi	r27, 0x00	; 0
    1478:	8c 91       	ld	r24, X
    147a:	80 7f       	andi	r24, 0xF0	; 240
    147c:	8c 93       	st	X, r24
    147e:	8c 91       	ld	r24, X
    1480:	82 60       	ori	r24, 0x02	; 2
    1482:	8c 93       	st	X, r24
    1484:	b8 9a       	sbi	0x17, 0	; 23
    1486:	80 81       	ld	r24, Z
    1488:	81 60       	ori	r24, 0x01	; 1
    148a:	80 83       	st	Z, r24
    148c:	78 94       	sei
    148e:	08 95       	ret

00001490 <_ZN13OrangutanTime4initEv>:
    1490:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <_ZZN13OrangutanTime4initEvE11initialized>
    1494:	81 11       	cpse	r24, r1
    1496:	05 c0       	rjmp	.+10     	; 0x14a2 <_ZN13OrangutanTime4initEv+0x12>
    1498:	81 e0       	ldi	r24, 0x01	; 1
    149a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <_ZZN13OrangutanTime4initEvE11initialized>
    149e:	0e 94 30 0a 	call	0x1460	; 0x1460 <_ZN13OrangutanTime5init2Ev>
    14a2:	08 95       	ret

000014a4 <_ZN13OrangutanTime2msEv>:
    14a4:	0e 94 48 0a 	call	0x1490	; 0x1490 <_ZN13OrangutanTime4initEv>
    14a8:	e0 e7       	ldi	r30, 0x70	; 112
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	80 81       	ld	r24, Z
    14ae:	8e 7f       	andi	r24, 0xFE	; 254
    14b0:	80 83       	st	Z, r24
    14b2:	60 91 2d 01 	lds	r22, 0x012D	; 0x80012d <msCounter>
    14b6:	70 91 2e 01 	lds	r23, 0x012E	; 0x80012e <msCounter+0x1>
    14ba:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <msCounter+0x2>
    14be:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <msCounter+0x3>
    14c2:	20 81       	ld	r18, Z
    14c4:	21 60       	ori	r18, 0x01	; 1
    14c6:	20 83       	st	Z, r18
    14c8:	08 95       	ret

000014ca <get_ms>:
    14ca:	0e 94 52 0a 	call	0x14a4	; 0x14a4 <_ZN13OrangutanTime2msEv>
    14ce:	08 95       	ret

000014d0 <__udivmodqi4>:
    14d0:	99 1b       	sub	r25, r25
    14d2:	79 e0       	ldi	r23, 0x09	; 9
    14d4:	04 c0       	rjmp	.+8      	; 0x14de <__udivmodqi4_ep>

000014d6 <__udivmodqi4_loop>:
    14d6:	99 1f       	adc	r25, r25
    14d8:	96 17       	cp	r25, r22
    14da:	08 f0       	brcs	.+2      	; 0x14de <__udivmodqi4_ep>
    14dc:	96 1b       	sub	r25, r22

000014de <__udivmodqi4_ep>:
    14de:	88 1f       	adc	r24, r24
    14e0:	7a 95       	dec	r23
    14e2:	c9 f7       	brne	.-14     	; 0x14d6 <__udivmodqi4_loop>
    14e4:	80 95       	com	r24
    14e6:	08 95       	ret

000014e8 <__udivmodhi4>:
    14e8:	aa 1b       	sub	r26, r26
    14ea:	bb 1b       	sub	r27, r27
    14ec:	51 e1       	ldi	r21, 0x11	; 17
    14ee:	07 c0       	rjmp	.+14     	; 0x14fe <__udivmodhi4_ep>

000014f0 <__udivmodhi4_loop>:
    14f0:	aa 1f       	adc	r26, r26
    14f2:	bb 1f       	adc	r27, r27
    14f4:	a6 17       	cp	r26, r22
    14f6:	b7 07       	cpc	r27, r23
    14f8:	10 f0       	brcs	.+4      	; 0x14fe <__udivmodhi4_ep>
    14fa:	a6 1b       	sub	r26, r22
    14fc:	b7 0b       	sbc	r27, r23

000014fe <__udivmodhi4_ep>:
    14fe:	88 1f       	adc	r24, r24
    1500:	99 1f       	adc	r25, r25
    1502:	5a 95       	dec	r21
    1504:	a9 f7       	brne	.-22     	; 0x14f0 <__udivmodhi4_loop>
    1506:	80 95       	com	r24
    1508:	90 95       	com	r25
    150a:	bc 01       	movw	r22, r24
    150c:	cd 01       	movw	r24, r26
    150e:	08 95       	ret

00001510 <__udivmodsi4>:
    1510:	a1 e2       	ldi	r26, 0x21	; 33
    1512:	1a 2e       	mov	r1, r26
    1514:	aa 1b       	sub	r26, r26
    1516:	bb 1b       	sub	r27, r27
    1518:	fd 01       	movw	r30, r26
    151a:	0d c0       	rjmp	.+26     	; 0x1536 <__udivmodsi4_ep>

0000151c <__udivmodsi4_loop>:
    151c:	aa 1f       	adc	r26, r26
    151e:	bb 1f       	adc	r27, r27
    1520:	ee 1f       	adc	r30, r30
    1522:	ff 1f       	adc	r31, r31
    1524:	a2 17       	cp	r26, r18
    1526:	b3 07       	cpc	r27, r19
    1528:	e4 07       	cpc	r30, r20
    152a:	f5 07       	cpc	r31, r21
    152c:	20 f0       	brcs	.+8      	; 0x1536 <__udivmodsi4_ep>
    152e:	a2 1b       	sub	r26, r18
    1530:	b3 0b       	sbc	r27, r19
    1532:	e4 0b       	sbc	r30, r20
    1534:	f5 0b       	sbc	r31, r21

00001536 <__udivmodsi4_ep>:
    1536:	66 1f       	adc	r22, r22
    1538:	77 1f       	adc	r23, r23
    153a:	88 1f       	adc	r24, r24
    153c:	99 1f       	adc	r25, r25
    153e:	1a 94       	dec	r1
    1540:	69 f7       	brne	.-38     	; 0x151c <__udivmodsi4_loop>
    1542:	60 95       	com	r22
    1544:	70 95       	com	r23
    1546:	80 95       	com	r24
    1548:	90 95       	com	r25
    154a:	9b 01       	movw	r18, r22
    154c:	ac 01       	movw	r20, r24
    154e:	bd 01       	movw	r22, r26
    1550:	cf 01       	movw	r24, r30
    1552:	08 95       	ret

00001554 <__divmodsi4>:
    1554:	05 2e       	mov	r0, r21
    1556:	97 fb       	bst	r25, 7
    1558:	1e f4       	brtc	.+6      	; 0x1560 <__divmodsi4+0xc>
    155a:	00 94       	com	r0
    155c:	0e 94 c1 0a 	call	0x1582	; 0x1582 <__negsi2>
    1560:	57 fd       	sbrc	r21, 7
    1562:	07 d0       	rcall	.+14     	; 0x1572 <__divmodsi4_neg2>
    1564:	0e 94 88 0a 	call	0x1510	; 0x1510 <__udivmodsi4>
    1568:	07 fc       	sbrc	r0, 7
    156a:	03 d0       	rcall	.+6      	; 0x1572 <__divmodsi4_neg2>
    156c:	4e f4       	brtc	.+18     	; 0x1580 <__divmodsi4_exit>
    156e:	0c 94 c1 0a 	jmp	0x1582	; 0x1582 <__negsi2>

00001572 <__divmodsi4_neg2>:
    1572:	50 95       	com	r21
    1574:	40 95       	com	r20
    1576:	30 95       	com	r19
    1578:	21 95       	neg	r18
    157a:	3f 4f       	sbci	r19, 0xFF	; 255
    157c:	4f 4f       	sbci	r20, 0xFF	; 255
    157e:	5f 4f       	sbci	r21, 0xFF	; 255

00001580 <__divmodsi4_exit>:
    1580:	08 95       	ret

00001582 <__negsi2>:
    1582:	90 95       	com	r25
    1584:	80 95       	com	r24
    1586:	70 95       	com	r23
    1588:	61 95       	neg	r22
    158a:	7f 4f       	sbci	r23, 0xFF	; 255
    158c:	8f 4f       	sbci	r24, 0xFF	; 255
    158e:	9f 4f       	sbci	r25, 0xFF	; 255
    1590:	08 95       	ret

00001592 <__umulhisi3>:
    1592:	a2 9f       	mul	r26, r18
    1594:	b0 01       	movw	r22, r0
    1596:	b3 9f       	mul	r27, r19
    1598:	c0 01       	movw	r24, r0
    159a:	a3 9f       	mul	r26, r19
    159c:	70 0d       	add	r23, r0
    159e:	81 1d       	adc	r24, r1
    15a0:	11 24       	eor	r1, r1
    15a2:	91 1d       	adc	r25, r1
    15a4:	b2 9f       	mul	r27, r18
    15a6:	70 0d       	add	r23, r0
    15a8:	81 1d       	adc	r24, r1
    15aa:	11 24       	eor	r1, r1
    15ac:	91 1d       	adc	r25, r1
    15ae:	08 95       	ret

000015b0 <__prologue_saves__>:
    15b0:	2f 92       	push	r2
    15b2:	3f 92       	push	r3
    15b4:	4f 92       	push	r4
    15b6:	5f 92       	push	r5
    15b8:	6f 92       	push	r6
    15ba:	7f 92       	push	r7
    15bc:	8f 92       	push	r8
    15be:	9f 92       	push	r9
    15c0:	af 92       	push	r10
    15c2:	bf 92       	push	r11
    15c4:	cf 92       	push	r12
    15c6:	df 92       	push	r13
    15c8:	ef 92       	push	r14
    15ca:	ff 92       	push	r15
    15cc:	0f 93       	push	r16
    15ce:	1f 93       	push	r17
    15d0:	cf 93       	push	r28
    15d2:	df 93       	push	r29
    15d4:	cd b7       	in	r28, 0x3d	; 61
    15d6:	de b7       	in	r29, 0x3e	; 62
    15d8:	ca 1b       	sub	r28, r26
    15da:	db 0b       	sbc	r29, r27
    15dc:	0f b6       	in	r0, 0x3f	; 63
    15de:	f8 94       	cli
    15e0:	de bf       	out	0x3e, r29	; 62
    15e2:	0f be       	out	0x3f, r0	; 63
    15e4:	cd bf       	out	0x3d, r28	; 61
    15e6:	09 94       	ijmp

000015e8 <__epilogue_restores__>:
    15e8:	2a 88       	ldd	r2, Y+18	; 0x12
    15ea:	39 88       	ldd	r3, Y+17	; 0x11
    15ec:	48 88       	ldd	r4, Y+16	; 0x10
    15ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    15f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    15f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    15f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    15f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    15f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    15fa:	b9 84       	ldd	r11, Y+9	; 0x09
    15fc:	c8 84       	ldd	r12, Y+8	; 0x08
    15fe:	df 80       	ldd	r13, Y+7	; 0x07
    1600:	ee 80       	ldd	r14, Y+6	; 0x06
    1602:	fd 80       	ldd	r15, Y+5	; 0x05
    1604:	0c 81       	ldd	r16, Y+4	; 0x04
    1606:	1b 81       	ldd	r17, Y+3	; 0x03
    1608:	aa 81       	ldd	r26, Y+2	; 0x02
    160a:	b9 81       	ldd	r27, Y+1	; 0x01
    160c:	ce 0f       	add	r28, r30
    160e:	d1 1d       	adc	r29, r1
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	f8 94       	cli
    1614:	de bf       	out	0x3e, r29	; 62
    1616:	0f be       	out	0x3f, r0	; 63
    1618:	cd bf       	out	0x3d, r28	; 61
    161a:	ed 01       	movw	r28, r26
    161c:	08 95       	ret

0000161e <_exit>:
    161e:	f8 94       	cli

00001620 <__stop_program>:
    1620:	ff cf       	rjmp	.-2      	; 0x1620 <__stop_program>
